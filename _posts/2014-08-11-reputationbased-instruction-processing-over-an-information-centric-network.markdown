---

title: Reputation-based instruction processing over an information centric network
abstract: A packet-forwarding network node can process a programmable packet based on a reputation value for a name prefix to perform a customized operation on a local resource. The programmable packet can include a name prefix, and a header comprising reputation criteria for the packet's name prefix and one or more resource fields. A resource field can include instructions that perform an operation on a corresponding resource of the network node. When the network node receives the programmable packet, the node determines a reputation value for the name prefix at the local node, and compares this reputation value to the packet's reputation criteria. If the reputation value for the name prefix at the local node satisfies the reputation criteria, the node proceeds to execute the one or more instructions of the respective resource field to perform the operation on the corresponding resource.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09503365&OS=09503365&RS=09503365
owner: PALO ALTO RESEARCH CENTER INCORPORATED
number: 09503365
owner_city: Palo Alto
owner_country: US
publication_date: 20140811
---
The subject matter of this application is related to the subject matter of the following applications 

U.S. patent application Ser. No. 14 066 475 entitled Software defined Named Data Networking by inventors Glenn C. Scott Priya Mahadevan and Marc E. Mosko filed on 29 Oct. 2013 and

U.S. patent application Ser. No. 14 335 806 entitled Reputation based Strategy for Forwarding and Responding to Interests over a Content Centric Network by inventors Priya Mahadevan and Glenn C. Scott filed on 18 Jul. 2014 

This disclosure is generally related to computer networks. More specifically this disclosure is related to a network node that uses reputation values for a name prefix to determine whether to execute instructions included in a packet that perform operations on a resource of the network node.

The proliferation of mobile computing and cellular networks is making digital content more mobile than ever before. People can use their smartphones to generate content to consume content or even to provide Internet access to other computing devices that generate or consume content. Oftentimes a device s network location can change as a person takes this device to a new physical location. This can make it difficult to communicate with this device under a traditional computer network e.g. the Internet when the device s new network location is not known.

To solve this problem information centric network architectures have been designed to facilitate accessing digital content based on its name regardless of the content s physical or network location. Content centric Networking CCN is an example of an Information centric networking ICN architecture. However a typical CCN architecture is limited to forwarding two types of packets Interests and Content Objects. Interests include a name for a piece of named data and serve as a request for the piece of named data but are not ideal for transferring data as they do not include a payload. Content Objects on the other hand typically include a payload and are only forwarded along a network path that has been traversed by an Interest with a matching name and traverse this path in the reverse direction taken by the Interest packet. Content Objects are also only sent as a response to an Interest packet Content Objects are never sent unsolicited in a CCN network.

Unfortunately this typical CCN architecture does not allow custom operations to be performed on certain Interests or Content Objects. CCN network nodes typically process Interests and Content Objects unconditionally and in a pre defined way. Some network nodes may be pre configured to process an Interest by searching through the local cache based on the Interest s structured name or to forward the Interest via an interface or a list of interfaces mapped to its structured name. In either case a system administrator typically configures ahead of time how a network s nodes are to process all Interests and Content Objects that it receives.

One embodiment provides a packet forwarding network node of an Information Centric Network ICN that processes a programmable packet based on a reputation value for a name prefix to perform a customized operation on a local resource. Content Centric Networking CCN is an example of an Information centric networking architecture. During operation the network node can receive a programmable packet that includes a name or a name prefix and includes a header comprising reputation criteria and one or more resource fields. A respective resource field can include one or more instructions that perform an operation on a corresponding resource of the computing device. The network node analyzes the packet to determine reputation criteria for the packet s name prefix and determines a reputation value for the name prefix at the local network device. If the network node determines that the reputation value for the name prefix at the local network node satisfies the reputation criteria the network node proceeds to execute the one or more instructions of the respective resource field to perform the operation on the corresponding resource.

The packet contains a name typically location independent that can be used to forward the packet. The packet can also carry instructions that can be executed to manipulate a network s resources. For example network nodes may process a packet as a data requesting packet e.g. an Interest packet or as a data carrying packet e.g. a Content Object depending on instructions included in the packet. The packet may include a header that includes the instructions that govern how the packet is to be processed. The packet may also include a payload which can carry data similar to a Content Object and or can carry instructions or programs that can be processed by a network device. The instructions from the packet s header or payload can cause the network device to create read update or delete CRUD data at a resource accessible by the network device.

In some embodiments the system can execute instructions included in the packet to perform fundamental CCN operations. In CCN all content is named and each piece of data is bound to a unique name that distinguishes the data from any other piece of data such as other versions of the same data or data from other publishers. This unique name allows a network device to request the data by disseminating an Interest that includes the name or a name prefix and can obtain the data independent from the data s storage location network location application and means of transportation. A description of a CCN architecture is described in U.S. patent application Ser. No. 12 338 175 entitled CONTROLLING THE SPREAD OF INTERESTS AND CONTENT IN A CONTENT CENTRIC NETWORK by inventors Van L. Jacobson and Diana K. Smetters filed 18 Dec. 2008 which is hereby incorporated by reference.

Content Object A single piece of data which is bound to a unique name. Content Objects are persistent which means that a Content Object can move around within a computing device or across different computing devices but does not change. If any component of the Content Object changes the entity that made the change creates a new Content Object that includes the updated content binds the new Content Object to a new unique location independent name.

Unique Names A name in an ICN e.g. CCN is typically location independent and uniquely identifies a Content Object. A data forwarding device can use the name or name prefix to forward a packet toward a network node that generates or stores the Content Object regardless of a network address or physical location for the Content Object. In some embodiments a CCN name may be a hierarchically structured variable length identifier HSVLI . The HSVLI can be divided into several hierarchical components which can be structured in various ways. For example the individual name components parc home ccn and test.txt can be structured in a left oriented prefix major fashion to form the name parc home ccn test.txt. Thus the name parc home ccn can be a parent or prefix of parc home ccn test.txt. Additional components can be used to distinguish between different versions of the content item such as a collaborative document.

Other name structures are also possible. For example in ICN the name can include a non hierarchical identifier such as a hash value that is derived from the Content Object s data e.g. a checksum value and or from elements of the Content Object s name. A description of a hash based name is described in U.S. patent application Ser. No. 13 847 814 entitled ORDERED ELEMENT NAMING FOR NAME BASED PACKET FORWARDING by inventor Ignacio Solis filed 20 Mar. 2013 which is hereby incorporated by reference. A name can also be a flat label. Hereinafter name is used to refer to any name for a piece of data in a name data network such as a hierarchical name or name prefix a flat name a fixed length name an arbitrary length name or a label e.g. a Multiprotocol Label Switching MPLS label .

Interest A packet that indicates a request for a piece of data and includes the name or name prefix for the data. A data consumer can disseminate an Interest across a named data network which CCN routers can propagate toward a storage device e.g. a cache server or a data producer that can provide the a matching Content Object to satisfy the Interest.

In some embodiments the reputation criteria include at least one of a minimum reputation value a maximum reputation value and a range of reputation values.

In some embodiments while determining the reputation value for the name prefix at the local network device the network node can compute a reputation value for a collection of Content Objects associated with the name prefix which have been received or cached by the local network device. The reputation value can include a mean or median reputation value of the collection a highest or lowest reputation value of the collection or a range of reputation values for the collection.

In some embodiments the packet can also include reputation information computed for the name prefix by a neighboring node. The local network node can compute the one or more instructions that cause the network node to determine an interface from which the packet arrived and store the packet s reputation information in association with the name prefix and the interface.

In some embodiments the reputation information can include a reputation value as well as a set of attribute values and weights used to compute the reputation value.

In some embodiments the packet also includes remote reputation information for Content Objects of the name prefix from the local network device. The local network node can execute the packet s instructions that cause the network node to determine whether a reputation value obtained or computed from the remote reputation information is lower than the local reputation value for the name prefix and compute a difference between the local reputation value for the name prefix and the remote computed reputation value. The packet s instructions can also cause the network node to perform a remedial action if the value from the remote reputation information is lower than the local reputation value and the computed difference is greater than a predetermined threshold.

In some embodiments the remedial action can include diagnosing a reason for the difference in reputation values sending a face s reputation information for the name prefix via the face to inform a neighboring node of its reputation value for the name prefix and or adjusting QoS parameters to receive content associated with the name prefix from a face with a highest reputation value.

In some embodiments the resource includes at least one of a forwarding information base FIB a pending interest table PIT a content store CS a processing unit a memory a virtual memory a storage device a network interface and a virtual interface.

In some embodiments the instruction can include at least one of a create instruction for creating a new entry in the resource a read instruction for reading an entry of the resource an update instruction for updating an existing entry of the resource and a delete instruction for deleting an existing entry of the resource.

The following description is presented to enable any person skilled in the art to make and use the embodiments and is provided in the context of a particular application and its requirements. Various modifications to the disclosed embodiments will be readily apparent to those skilled in the art and the general principles defined herein may be applied to other embodiments and applications without departing from the spirit and scope of the present disclosure. Thus the present invention is not limited to the embodiments shown but is to be accorded the widest scope consistent with the principles and features disclosed herein.

Embodiments of the present invention provide a packet forwarding system that solves the problem of performing instructions on a resource based on reputation information for a name prefix that the instructions are to operate on. For example a network node of an information centric network ICN a content centric network CCN or a named data network NDN can compute reputation values for various name prefixes associated with a resource. The resource can include for example a content store CS a forwarding information base FIB a pending Interest table PIT or a face e.g. a virtual interface or physical interface . The node can compute a reputation value for the name prefix at the resource based on a set of attributes and a weight for each attribute. The reputation value can fall within a predetermined range e.g. 0 1 or 0 100 such that higher values indicate a higher trustworthiness for the name prefix at the resource. Also when the node stores a Content Object in a Content Store the node can also store reputation information in association with the Content Object. This reputation information can include the reputation value along with the attributes and weights used to compute the reputation value. A description of reputation information and the methods for computing and using reputation values is described in U.S. Patent Application No. 14 335 806 entitled REPUTATION BASED STRATEGY FOR FORWARDING AND RESPONDING TO INTERESTS OVER A NAMED DATA NETWORK by inventors Priya Mahadevan and Glenn C. Scott filed Jul. 18 2014 which is hereby incorporated by reference.

The network node can receive a packet that includes instructions to perform on a resource and includes reputation criteria that controls whether the instructions are to be performed on the resource. The network node can compute a reputation value for the name prefix at the resource or can access a pre computed reputation value from a lookup table and determines whether to process the packet by comparing the reputation value to the packet s reputation criteria. If the packet s reputation criteria are satisfied the network node determines how to process the packet by obtaining the instructions from the packet itself. A description of programmable packets is described in U.S. patent application Ser. No. 14 066 475 entitled SOFTWARE DEFINED NAMED DATA NETWORKING by inventors Glenn C. Scott Priya Mahadevan and Marc E. Mosko filed 29 Oct. 2013 which is hereby incorporated by reference.

In some embodiments the system can receive a packet that indicates whether the packet is to be processed similar to an Interest or a Content Object or needs to be processed in a custom way. For example the packet can include instructions that read a router s FIB and or create an entry into a PIT to forward the packet in a way similar to an Interest. As another example the packet can include instructions that read a router s PIT to return the packet in a way similar to a Content Object that satisfies the Interest.

The packet can also be used to perform advanced operations on any ICN CCN or NDN architecture that is now known or later developed. For example the packet can include a payload and can include instructions that access a router s FIB to push the packet s payload toward one or more network devices that are associated with a given name prefix.

In some embodiments a system administrator can configure or reconfigure one or more routers across a network by disseminating a packet that includes instructions for deploying the desired changes to the network. The packet can include instructions that configure a router to create update or delete one or more entries in a FIB for example to establish new route paths and or to tear down other route paths. The packet can also include instructions that establish Quality of Service QoS requirements at a router such as to perform traffic shaping on an interface of the router.

Edge nodes and routing nodes can each compute local reputation values for a set of name prefixes or for a combination name prefixes and the face from which they were received. A CCN node can compute a reputation value as a numeric value using a customizable calculation designed to weigh quantifiable factors that could assist the node to meet specific objectives. These factors can be quantified by numeric attributes such as the latency or bandwidth of an interface for a particular name prefix or the success rate for verifying Content Object signatures for a particular name prefix coming from an interface. An attribute is a quantifiable property policy or characteristic that a node can measure to make an informed decision.

A system administrator for a CCN node can assign a weighted value to each attribute so that the computed reputation value achieves a desired objective. The objectives can include for example providing a continuous video streaming experience to a user or to provide authentic data that has not been forged or tampered with. A network node or its system administrator may assign weight values to an interface s attributes based on an Interest s name prefix or based on an objective associated with the name prefix. Hence a name prefix associated with video streams e.g. netflix can be associated with attribute weights to faces that can provide a continuous video streaming experience to users.

Both edge nodes and routing nodes can process packets by executing instructions included in these packets if the local reputation value for the name prefix or for the name prefix face combination satisfies the packet s reputation criteria. For example network can be managed by an Internet service provider ISP and can include an edge node . that provides network access to a plurality of client devices. Network can also include an edge node . that provides network access to a plurality of online services and or that interfaces with a back haul network accessible by a plurality of online services.

Computing environment can also include other network devices that can disseminate packets across network . For example an online service provider can deploy an online service at a content producer that is accessible via network . Content producer can include a server computer or a computer cluster that interfaces with edge node . of network . However routing nodes are best able to route a packet to content producer when routing nodes include a FIB entry that maps the packet s name or name prefix to an optimal local interface that can best reach content producer .

In some embodiments the online service provider can use a network controller to configure and maintain an optimal route path to content producer for a given name prefix. This optimal path can start from an ingress edge node that provides network access to a plurality of client devices and reaches an egress edge node . along a path to content producer .

Network controller can generate a packet that specifies reputation criteria and includes instructions for accessing the FIB to delete any FIB entries for the name prefix whose reputation value is below the reputation criteria. The packet can also include instructions that read the FIB to forward the packet toward content producer via any remaining FIB entries associated with the name prefix.

In some embodiments a network device can generate packets that include the instructions necessary to send or obtain a certain piece of data via any faces that satisfy the reputation criteria. For example client device can generate a packet that contains a name or name prefix for the piece of data includes reputation criteria and also includes instructions for accessing the FIB to obtain a FIB entry that satisfies the reputation criteria. Client device can then disseminate this packet across network to obtain the data from a device of network that has a sufficiently high reputation and can satisfy the packet s request for the data. Routers that receive this packet execute the instructions that read the FIB to obtain a FIB entry for the name prefix that satisfies the reputation criteria and forwards the packet via a face indicated by the FIB entry.

Also in some embodiments client device can push data toward content producer by also attaching the data as a payload in the packet. The packet can specify reputation criteria that are to be used when caching the payload and includes instructions indicating whether the payload is to be cached by a routing node. For example a routing node e.g. edge nodes . and . can include a content store CS to cache payload data from network packets that pass through network e.g. to cache Content Objects . If the routing node detects that a packet includes instructions that perform a write or update operation on a CS resource the routing node can store the packet s payload in the CS if the face from which the node received the packet has a reputation value for the name prefix that satisfies the packet s reputation criteria.

On the other hand the packet can include instructions that delete entries from the CS resource and can include reputation criteria that specify a maximum reputation value for CS entries that are to be deleted. The routing node can search the CS for data associated with the packet s name prefix that satisfies the reputation criteria. If this data exists in the CS the routing node can delete this data from the CS.

In some embodiments data structure may correspond to a Forwarding Information Base FIB that assigns reputation information e.g. a reputation value to each FIB entry. As depicted in there are five example forwarding rule entries in data structure for the FIB. The namespace bbc is mapped to faces A B and C. The name prefix bbc at face C has a reputation value of 65 while the name prefix bbc at either face A or face B has a reputation value of 60 . The FIB entry for name prefix netflix specifies that name prefix netflix is mapped to a face D and that netflix at face D has a reputation value of 50 .

The data structure can also assign a reputation value to a name prefix across all faces. For example data structure does not map the name prefix cnn to any face which is indicated by a number zero in face column . However reputation value column for the cnn entry can specify a reputation value of 60 .

In some other embodiments data structure can correspond to a Content Store that assigns reputation information e.g. a reputation value to each cached Content Object. Column stores the namespace of a cached Content Object and column can specify a face from which the Content Object was cached. Column stores a reputation value computed for the Content Object received via the corresponding face of column based on attribute values for the name prefix and face at the time the Content Object was cached.

Resource fields can include a set of fields for resources of a CCN NDN or ICN architecture such as a FIB resource field . for a Forwarding Information Base a PIT resource field . for a Pending Interest Table and a CS resource field . for a Content Store. For example resource fields . and . may include a write instruction for a PIT and a read instruction for a FIB which causes a forwarding node to process the packet like an Interest if the reputation value for the name prefix satisfies reputation criteria . Also if a network node can satisfy the Interest e.g. by generating or retrieving the requested data the network node can generate another packet that includes the same name for the data but that also includes a set of programmed header fields that send the packet back to the initial packet s source. This new packet can include a PIT resource field . that includes a read instruction for the PIT which causes the forwarding nodes to process the packet like a Content Object. These nodes process PIT resource field . to forward the packet via an interface from which the corresponding request or Interest was received. Further the packet s data payload can also be cached in the CS. In some embodiments the new packet s header can also include any reputation criteria specified in network packet e.g. reputation criteria .

Resource fields can also include one or more fields for any other network device resources now known or later developed. These additional resources can support additional features that are deployed at a network node or can support additional features of a higher level named data networking architecture or information centric networking architecture. For example network nodes can also include a metrics resource that records various metrics for the network node. Name can specify a name prefix for the metrics to collect and a read instruction in a metrics resource field can cause the network node to compile a report of various performance metrics related to the name prefix. If the reputation value for the name prefix satisfies reputation criteria the network node executes the instructions in the resource field to generate a new packet that includes the metrics report and to return the new packet.

As another example a QoS resource can reconfigure routing behavior at a network node based on a packet that includes instructions to execute against the QoS resource. A QoS resource field can include a create or update instruction that enters a traffic shaping configuration into the QoS resource. This traffic shaping configuration can indicate for example a maximum bandwidth for a given name prefix at a given interface. The name prefix can include the root I name prefix to enter the traffic shaping configuration across all name prefixes or can include a specific non root name prefix e.g. bbc headlines to enter a traffic shaping configuration for this name prefix at the given interface. Also a QoS resource field can include a read or delete instruction that reads or removes a traffic shaping configuration for a given interface.

In some embodiments the network node can execute the instructions against the QoS resource if the reputation value for the name prefix satisfies reputation criteria . For example an administrator can issue one QoS configuring packet whose reputation criteria specifies a minimum reputation threshold for entering a first traffic shaping configuration and can issue another QoS configuring packet whose reputation criteria specifies a maximum reputation threshold for entering a second traffic shaping configuration. Hence if the second traffic shaping configuration specifies a lower bandwidth configuration than the first traffic shaping configuration then these two QoS configuring packets can effectively suppress interfaces with a low reputation value for a name prefix while allowing a higher bandwidth to other interfaces with a high reputation value for the name prefix.

In some embodiments each instruction field may include a flag such as a single bit or a group of bits e.g. a byte or a word that indicate whether the corresponding instruction or operation is to be performed. For example an instruction field that includes a binary 1 value is interpreted as indicating or including an instruction associated with the instruction field that the network node is to execute against the corresponding resource. An instruction field that includes a binary 0 value is interpreted as not including the instruction associated with the instruction field or can be interpreted as indicating that the operation associated with the instruction field is not to be performed on the corresponding resource. If the forwarding node determines that an instruction field is set in the packet and that the local reputation value for the name prefix satisfies the reputation criteria the forwarding node can determine one or more instructions that correspond to the instruction field e.g. binary instructions and executes these instructions on the resource to process the packet.

The instruction field can also include an explicit set of instructions that when executed by the forwarding node cause the forwarding node to manipulate or otherwise perform operations on the resource to process the packet. These instructions can include a script e.g. instruction written in an interpreted language or can include a standalone program e.g. binary instructions executed by a processor or a virtual machine . A forwarding node can execute these instructions to perform a CRUD operation in a custom way such as to selectively create update or delete FIB entries to configure how the forwarding node forwards packets.

In some embodiments a packet can also perform a custom create or update operation on a FIB entry to dynamically change routes on the fly as the packet traverses the network toward a target network node associated with the packet s name or name prefix. For example the FIB resource field can include a delete instruction that removes FIB entries for failed links or for interfaces whose reputation value is above or below the reputation criteria and can include a create or update instruction to update the FIB in a way that diverts network traffic away from over utilized interfaces and toward less utilized interfaces.

Parameters can include any additional data necessary for performing the create read update or delete instruction or operation. For example a read instruction field for the FIB resource can include parameters that indicate a number of hops to use when forwarding a packet. As another example a create or update instruction field for a FIB resource or a PIT resource can include parameters that include the data that is to be inserted into an entry of the resource. This can allow a network controller to configure routes across a named data network or information centric network by disseminating packets whose instructions create the necessary entries into FIB and PIT resources across the network.

In some embodiments parameters can also include reputation criteria for the name prefix at the corresponding resource. The reputation criteria specified in parameters of instruction field can override global reputation criteria in the header of the packet. Alternatively the packet can specify the resource specific reputation criteria in parameters without specifying global reputation criteria in the packet s header. This allows a packet to specify reputation criteria that is specific to a resource and can facilitate specifying multiple resource specific attributes when performing operations across multiple resources.

Instructions can include instructions that are to be executed by the network node to perform the operation on the resource. This can allow a network node to perform pre processing tasks before accessing the resource or to perform post processing tasks after accessing the resource.

In some embodiments a resource field may not need to include separate instruction fields for each type of CRUD function that can be performed on a resource. The resource field can include a set of instructions that form a program which operates on one or more resources to achieve a custom task. illustrates an exemplary resource field that includes program instructions that are to be executed by a network node in accordance with an embodiment. Resource field can include a set of instructions that are to be executed by a network node to process a packet and can include data that can be used by instructions .

In some embodiments the system can determine whether the reputation criteria is satisfied locally by computing or obtaining a reputation value for the name prefix at the resource and determining whether the reputation value satisfies the packet s reputation criteria. The system can obtain the reputation value for example by accessing the reputation value from a lookup table. Alternatively the system can compute the reputation value at runtime using up to date reputation information that includes a set of attribute values for the name prefix at the resource and a set of weight values that specify a weight for each attribute. If the reputation criteria are not satisfied locally the system can stop processing the packet or may perform a predetermined remedial action such as to log the packet in a system log or network log.

Recall that each resource field can include instructions to perform on a corresponding resource of the network device. Hence if the reputation criteria is satisfied locally the system analyzes the packet s header to determine one or more resource fields that each corresponds to a resource of the local network node operation and analyzes each resource field to determine the instructions to execute to manipulate the corresponding resource operation . The system also determines whether the instructions are valid operation . For example the system can determine whether the resource exists and is accessible by the local device and can determine whether the instructions can be executed against the resource. Also the system can determine whether the packet has valid access control information that grants the packet permission to execute the instructions against the resource. If the instructions are valid the system processes the packet by executing the instructions against their corresponding resources operation .

If the instruction field s flag is set the system determines one or more instructions that correspond to the instruction field and to the resource operation . Otherwise the system continues to determine whether more instruction fields exist in the resource field operation . If more instruction fields exist the system can return to operation to select another instruction field.

In some embodiments not all packets are allowed to perform certain operations on a resource of a network node such as a network node s FIB PIT or CS. For example a system administrator can be allowed to configure a network by disseminating packets that configure routing information into FIB entries across various packet forwarding nodes. On the other hand a typical client device should not be allowed to build or tear down network paths that the client device does not control. Hence the system should only execute an instruction against a local resource to process a packet if the packet has the required privileges.

The system also analyzes access control information from the packet operation and determines whether the packet has sufficient privileges to execute the instructions against the resource operation . If so the system proceeds to execute the instructions against the corresponding resource operation . Otherwise the system proceeds to determine whether there are more resource fields to process operation . If the header has more resource fields the system returns to operation to select another resource field to process.

In some embodiments network nodes can share reputation information for a name prefix with their neighboring nodes. This reputation information can include a reputation value as well as the attribute values and weights used to compute the reputation value. A network node can determine a reputation value for a local face from reputation information gathered from neighboring nodes. For example the local node can obtain reputation values for a local face from a remote device accessible via the face without having to compute the reputation values locally. Alternatively the node can use the attribute values obtained from a remote device to compute a reputation value that corresponds to a predetermined objective e.g. security or performance . To share the reputation information a system administrator can disseminate a programmable packet that configures network nodes to send their reputation information to their neighbors. This packet can configure a network node to generate a packet that includes the reputation information as well as the instructions to configure the neighbor to share its reputation information with its neighbors.

For example two nodes A and B may each have a face to a node C. Nodes A and B may compute reputation values for a name prefix based on the data packets e.g. CCN Content Objects that have been received via one or more faces. Nodes A and B may also communicate these reputation values for the name prefix along with the attribute values and weights used to compute the reputation values to node C. This reputation information may correspond to an average or median reputation value for all content that falls under the name prefix or may correspond to a minimum or maximum reputation value or a reputation value range for the content.

Node C can receive a packet that specifies the reputation information for the name prefix from nodes A and B. Node C can store the reputation information from node B in association with the name prefix and a face to node B and can store the reputation information from node C in association with the name prefix and a face to node C.

The network node can also determine local reputation information for content accessible from the local network device operation and generates a packet that includes the reputation information as well as the received packet s instructions operation . The network node then determines one or more egress faces operation and forwards the new packet via the one or more egress faces operation .

In some embodiments a network node can also share reputation information for a name prefix face combination with a neighboring node associated with the face. This allows the network node to inform the neighboring node of reputation degradation for a name prefix from its face which allows the neighboring node to isolate and correct the issue that produced a lower reputation. Hence network nodes can become aware of the reputation values that its neighbors have computed for a name prefix from the network node and can perform a remedial action when the neighbors reputation values for the network node do not match the local reputation values for the name prefix.

If the remote reputation value is lower than a local reputation value for the name prefix the network device can determine whether the reputation value is undesirably low. For example the network device can compute a difference between the local reputation value and the remote reputation value operation and determines whether the computed difference is greater than a predetermined threshold operation . If the difference is below the predetermined threshold the network device can perform a remedial action designed to rectify the difference between the remote computed reputation value for the name prefix and the local reputation value operation . The remedial action can include diagnosing a reason for the difference in reputation values informing one or more faces associated with the name prefix of the reputation value to their face and or adjusting QoS parameters to receive content associated with the name prefix from a face with a higher reputation value.

For example node C may have computed a 75 reputation value for content under the name prefix bbc headlines. If a node A reports to node C that the reputation value for a name prefix bbc headlines from a face to node C has dropped from 80 to 40 node C can perform a diagnostics check to determine the reason why the performance value dropped for the name prefix.

Node C may obtain content under the name prefix bbc headlines from a face to a node D. If node C determines that the face to node D has a reputation value of 80 for name prefix bbc headlines node C may investigate whether determine that node C has become compromised or whether a link between node A and node C has been compromised or degraded. However if node C determines that the face to node D has a reputation value of 40 for name prefix bbc headlines node C may decide to receive content for this name prefix from another face e.g. another face with a higher reputation value . Node D can alternatively or additionally inform node D of its low reputation value to allow node D to investigate and rectify its low reputation value for the name prefix.

In some embodiments communication module can receive a packet that includes a header comprising reputation criteria and one or more resource fields that each includes instructions to execute against a corresponding resource. Packet processing module can determine whether a reputation value for the packet s name prefix satisfies the packet s reputation criteria and if so selects a resource field that includes instructions to execute against a corresponding resource.

Instruction determining module can analyze the resource field to determine the one or more instructions that are to be executed and instruction processing module can execute the instructions to manipulate the resource. Security module can determine whether the access control information grants the packet permission to access the resource and if so can configure the instruction processing module to execute the instructions.

Packet forwarding system can include instructions which when executed by computer system can cause computer system to perform methods and or processes described in this disclosure. Specifically packet forwarding system may include instructions for receiving a packet that includes a header comprising reputation criteria and one or more resource fields that each includes instructions to execute against a corresponding resource communication module . Further packet forwarding system can include instructions for determining whether a reputation value for the packet s name prefix satisfies the packet s reputation criteria and if so selecting a resource field that includes instructions to execute against a corresponding resource packet processing module .

Packet forwarding system can also include instructions for analyzing the resource field to determine the one or more instructions that are to be executed instruction determining module and can include instructions for executing the instructions on the resource instruction processing module . Packet forwarding system can also include instructions for determining whether the access control information grants the packet permission to access the resource and for configuring the instruction processing module to execute the commands if the access control information does grant permission to access the resource security module .

Data can include any data that is required as input or that is generated as output by the methods and or processes described in this disclosure. Specifically data can store at least a FIB a PIT a CS and information necessary for performing operations on the FIB the PIT and or the CS.

The data structures and code described in this detailed description are typically stored on a computer readable storage medium which may be any device or medium that can store code and or data for use by a computer system. The computer readable storage medium includes but is not limited to volatile memory non volatile memory magnetic and optical storage devices such as disk drives magnetic tape CDs compact discs DVDs digital versatile discs or digital video discs or other media capable of storing computer readable media now known or later developed.

The methods and processes described in the detailed description section can be embodied as code and or data which can be stored in a computer readable storage medium as described above. When a computer system reads and executes the code and or data stored on the computer readable storage medium the computer system performs the methods and processes embodied as data structures and code and stored within the computer readable storage medium.

Furthermore the methods and processes described above can be included in hardware modules. For example the hardware modules can include but are not limited to application specific integrated circuit ASIC chips field programmable gate arrays FPGAs and other programmable logic devices now known or later developed. When the hardware modules are activated the hardware modules perform the methods and processes included within the hardware modules.

The foregoing descriptions of embodiments of the present invention have been presented for purposes of illustration and description only. They are not intended to be exhaustive or to limit the present invention to the forms disclosed. Accordingly many modifications and variations will be apparent to practitioners skilled in the art. Additionally the above disclosure is not intended to limit the present invention. The scope of the present invention is defined by the appended claims.

