---

title: Methods and apparatus for fault detection
abstract: In some embodiments, a method includes receiving, at a data collection module implemented in at least one of a memory or a processing device, from a processing system, an observation value for a variable. The observation value of the variable is associated with operation of the processing system at a time. The method further includes computing a deviation value of the variable from a baseline value at the time based on the observation value. The method further includes computing a stableness value of the variable at the time based on the baseline value and a variance of the variable during a time period including the time. The method further includes transmitting an indication of the processing system as operating with a fault in response to the deviation value meeting a first criterion and the stableness value meeting a second criterion.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09311210&OS=09311210&RS=09311210
owner: VIVIDCORTEX, INC.
number: 09311210
owner_city: Charlottesville
owner_country: US
publication_date: 20140307
---
This application claims priority to and the benefit of U.S. Provisional Patent Application No. 61 774 201 filed Mar. 7 2013 and entitled Methods and Apparatus for Fault Detection which is incorporated herein by reference in its entirety.

Some embodiments described herein relate generally to systems for observation and in particular to methods and apparatus for observing a system or process such as for detecting anomalies and faults of the system or process in substantially real time.

Some known fault detection systems use predefined static thresholds to detect abnormal behaviors in a system or process. Such known fault detection systems however are typically not applicable to detect anomalies for a dynamic system or process and are unable to detect unknown types of system or process faults. Some other known fault detection systems use dynamic or adaptive thresholds to detect abnormal behaviors. Such known fault detection systems however typically do not distinguish improbable or unusual behavior i.e. abnormality from bad behavior i.e. fault . Moreover such known fault detection systems typically are computationally expensive thus infeasible to operate on a large scale and in substantially real time.

Accordingly a need exists for methods and apparatus that 1 can dynamically and automatically detect anomalies 2 can distinguish faults from abnormal behaviors and 3 are computationally inexpensive and scalable.

In some embodiments a method includes receiving at a data collection module implemented in at least one of a memory or a processing device from a processing system an observation value for a variable. The observation value of the variable is associated with operation of the processing system at a time. The method further includes computing a deviation value of the variable from a baseline value at the time based on the observation value. The method further includes computing a stableness value of the variable at the time based on the baseline value and a variance of the variable during a time period including the time. The method further includes transmitting an indication of the processing system as operating with a fault in response to the deviation value meeting a first criterion and the stableness value meeting a second criterion.

In some embodiments a method includes receiving at a data collection module implemented in at least one of a memory or a processing device from a processing system an observation value for a variable. The observation value of the variable is associated with operation of the processing system at a time. The method further includes computing a deviation value of the variable from a baseline value at the time based on the observation value. The method further includes computing a stableness value of the variable at the time based on the baseline value and a variance of the variable during a time period including the time. The method further includes transmitting an indication of the processing system as operating with a fault in response to the deviation value meeting a first criterion and the stableness value meeting a second criterion.

In some embodiments an apparatus includes a data collection module implemented in at least one of a memory or a processing device. The data collection module is configured to receive from a host device an observation value for a variable. The observation value of the variable is associated with operation of the host device at a time. The apparatus further includes a compute module operatively coupled to the data collection module. The compute module is configured to compute a deviation value of the variable from a baseline value based on the observation value. The apparatus further includes a decision module operatively coupled to the compute module. The decision module is configured to send an indication to a user device that the host device is operating with a fault at the time in response to the observation value meeting a first criterion and the deviation value meeting a second criterion.

In some embodiments a method includes receiving at a data collection module implemented in at least one of a memory or a processing device from a processing system an observation value of a first variable. The observation value of the first variable is associated with an operation of the processing system at a first time within a time period. The method further includes receiving at the data processing module an observation value for a second variable. The observation value of the second variable is associated with an operation of the processing system at a second time within the time period. The method further includes computing a stableness value of the first variable based on a baseline value of the first variable and a variance of the first variable during the time period. The method further includes transmitting an indication that the processing system is operating with a fault in response to the observation value of the first variable meeting a first criterion the observation value of the second variable meeting a second criterion and the stableness value meeting a third criterion.

In some embodiments the operation generates is controlled by and or is otherwise associated with one or more observable parameters variables and or the like. In such embodiments observing the operation can include measuring estimating monitoring analyzing and or receiving a value associated with the variable s . In some embodiments computation can be performed on the received variable value s to further analyze the operation.

As an example in some embodiments the detection device can be configured to detect anomalies of a system or process executed at the host device . The host device can be any device configured to host a system or execute a process that receives demand and responds to the demand in a manner that generates observable characteristics such as for example throughput. The host device can be for example a server a compute device a router a data storage device and or the like. The system or process associated with the host device can include for example computer software stored in and or executed at hardware such as web application database application cache server application queue server application application programming interface API application operating system file system etc. computer hardware such as network appliance storage device e.g. disk drive memory module processing device e.g. computer central processing unit CPU computer graphic processing unit GPU networking device e.g. network interface card etc. and or combinations of computer software and hardware e.g. assembly line automatic manufacturing process . In some embodiments although not shown in the detection device can be operatively coupled to more than one host device or other devices such that the detection device can substantially simultaneously observe e.g. to detect anomalies more than one system and or process according to embodiments described herein.

The detection device can be any device with certain data processing and computing capabilities such as for example a server a workstation a compute device a tablet a mobile device and or the like. As shown in the detection device includes a memory a processor and or other component s not shown in . The memory can be for example a Random Access Memory RAM e.g. a dynamic RAM a static RAM a flash memory a removable memory and or so forth. In some embodiments instructions associated with performing the operations described herein e.g. fault detection can be stored within the memory and executed at the processor . The processor includes a data collection module a compute module a counter module a decision module and or other module s not shown in . The detection device can be operated and controlled by a user such as for example an operator an administrator and or the like.

Each module in the processor can be any combination of hardware based module e.g. a field programmable gate array FPGA an application specific integrated circuit ASIC a digital signal processor DSP software based module e.g. a module of computer code stored in the memory and or executed at the processor and or a combination of hardware and software based modules. Each module in the processor is capable of performing one or more specific functions operations as described herein e.g. associated with a detecting operation as described in further detail with respect to . In some embodiments the modules included and executed in the processor can be for example a process application virtual machine and or some other hardware or software module stored in memory and or executing in hardware . The processor can be any suitable processor configured to run and or execute those modules.

In some embodiments the processor can include more or less modules than those shown in . For example the processor can include more than one compute module to simultaneously perform multiple computing tasks for multiple systems and or processes. In some embodiments the detection device can include more components than those shown in . For example the detection device can include a communication interface e.g. a data port a wireless transceiver and an antenna to enable data transmission between the detection device and the host device . In some embodiments the detection device can include or be coupled to a display device e.g. a printer a monitor a speaker etc. such that an output of the detection device e.g. a detection result can be presented to the user via the display device.

As used herein a module can be for example any assembly and or set of operatively coupled electrical components associated with performing a specific function and can include for example a memory a processor electrical traces optical connectors hardware executing software and or the like. As used herein the singular forms a an and the include plural referents unless the context clearly dictates otherwise. Thus for example the term a compute module is intended to mean a single module or a combination of modules configured to execute computing tasks associated with detecting anomalies of a system or process.

In some embodiments as shown in the detection device can be operatively coupled to the host device via for example a network . The network can be any type of network that can operatively connect and enable data transmission between the detection device and the host device . The network can be for example a wired network an Ethernet local area network LAN etc. a wireless network e.g. a wireless local area network WLAN a Wi Fi network etc. or a combination of wired and wireless networks e.g. the Internet etc. . For example the detection device can be a server placed at a centralized location in a data center and connected via a LAN to multiple host devices similar or identical to the host device that are distributed within the data center. Each host device can host and maintain a system e.g. a file system and or execute a process e.g. a web service . In such a deployment the detection device can monitor the operation of the multiple host devices such as for detecting anomalies in the systems and processes hosted or executed at those host devices. In some other embodiments the detection device can be physically connected to the host device . In yet other embodiments the detecting functionalities of the detection device can be implemented within the host device . For example an exemplary detection process e.g. a detection process shown and described with respect to Example 1 and can be executed stored in a memory and executed at hardware within the host device such that a detection result associated with the system or process of the host device can be generated at the host device and reported to a user.

The operation of the various modules is explained herein with reference to a single variable of a single operation on the host device for simplicity though it is understood that unless explicitly stated otherwise aspects of the modules described herein are extendible to multiple variables to multiple operations and or to multiple devices.

In some embodiments the data collection module can be configured to receive from the host device an observation value for a variable. In some embodiments the observation value of the variable is associated with operation of the host device at a time. In some instances the time can be anytime in the past such that the observation value of the variable is associated with operation of the host device at a past time. In some instances the observation value is received substantially in real time such that the observation value of the variable is associated with current operation of the host device .

While not shown in in some embodiments an agent associated with the detection device can be installed and or execute on the host device . The agent can monitor operational status of the host device and or provide updates on the operational status of the host device to the data collection module .

In some embodiments the compute module is operatively coupled to the data collection module and can be configured to compute a deviation value of the variable from a baseline value based on the observation value. In some embodiments the baseline value is an average value of the variable over any suitable time period or time window. In some embodiments the baseline value is an exponentially weighted moving average EWMA of the variable. In some embodiments the compute module can be configured to set the deviation value of the variable to zero if the standard deviation of the variable is less than or equal to a threshold for the standard deviation. In some embodiments the threshold for the standard deviation is zero.

In some embodiments the deviation value is inversely correlated with a standard deviation of the variable at the time. Similarly stated in such embodiments the deviation value decreases as the standard deviation of the variable at the time increases. In some embodiments the compute module is configured to compute the deviation value by 1 subtracting the baseline value from the observation value and 2 dividing the result by the standard deviation of the variable at the time.

In some embodiments the counter module is operatively coupled to the compute module and is configured to determine that a predetermined number of observations for the variable has been received prior to the time. In such embodiments the compute module can be configured to compute the deviation value of the variable based on the predetermined number of observations being received. In some embodiments the predetermined number of observations is zero. In this manner the predetermined number of observations can be tuned to affect how rapidly after initiating monitoring of the variable the detection device begins evaluating deviation of the variable.

In some embodiments the decision module is operatively coupled to the compute module and can be configured to determine if the observation value meets a criterion sometimes referred to as a first criterion or as a second criterion for the observation value. In some embodiments the compute module updates a previously calculated baseline value to account for the observation value. For example in some embodiments the baseline value is an exponentially weighted moving average EWMA of the variable and the updated baseline value is a EWMA for the variable that reflects the most recent observation i.e. the observation value . In such embodiments the criterion for the observation value can be based on the previously calculated baseline value of the variable or on the updated baseline value of the variable. For example the baseline value can be an EWMA computed by the compute module that includes the observation value. In some embodiments the criterion for the observation value is a threshold and the observation value meets the criterion for the observation value when the observation value is greater than the threshold for the observation value. In other embodiments the observation value meets the criterion for the observation value when the observation value is lesser than or equal to the threshold for the observation value. In yet other embodiments the observation value meets the criterion for the observation value when compared with a last received observation value the observation value crosses the threshold for the observation value.

In some embodiments the decision module can be configured to determine if the deviation value meets a criterion sometimes referred to as a first criterion a second criterion a third criterion a fourth criterion or a fifth criterion for the deviation value. In some embodiments the criterion for the deviation value is a threshold sometimes referred to as a normalcy threshold for the deviation value and the deviation value meets the criterion for the deviation value when the deviation value is greater than the threshold for the deviation value. In other embodiments the deviation value meets the criterion for the deviation value when the deviation value is lesser than or equal to the threshold for the deviation value. In yet other embodiments the deviation value meets the criterion for the deviation value when when compared with a last calculated deviation value the deviation value crosses the threshold for the deviation value.

In some embodiments the decision module can be configured to send an indication to a user device that the host device is operating with a fault at the time in response to the observation value meeting the criterion for the observation value. In some embodiments the decision module can be configured to send an indication to the user device that the host device is operating with a fault at the time in response to the deviation value meeting a criterion for the deviation value. In some embodiments the decision module can be configured to send an indication to a user device that the host device is operating with a fault at the time in response to the observation value meeting the criterion for the observation value and the deviation value meeting the criterion for the deviation value.

In some embodiments the compute module can be further configured to compute a stableness value of the variable at the time based on the baseline value and a variance of the variable during a time period that includes the time. The time period can be any suitable measurement window for the variable. In such embodiments the decision module can be further configured to send an indication that the host device is operating with a fault in response to the observation value meeting the criterion for the observation value the deviation value meeting the criterion for the deviation value and the stableness value meeting a criterion for the stableness value. In some embodiments the criterion for the stableness value is a threshold sometimes referred to as a stability threshold for the stableness value and the stableness value meets the criterion for the stableness value when the stableness value is greater than the threshold for the stableness value. In other embodiments the stableness value meets the criterion for the stableness value when the stableness value is lesser than or equal to the threshold for the stableness value. In yet other embodiments the stableness value meets the criterion for the stableness value when compared with a last calculated stableness value the stableness value crosses the threshold for the stableness value.

In some embodiments the variance of the variable is an exponentially weighted moving variance EWMV of the variable. In some embodiments the stableness value is directly correlated with the variance of the variable. Similarly stated in such embodiments the stableness value increases as the variance of the variable increases. In some embodiments the compute module can be further configured to compute the stableness value by dividing the variance of the variable by the baseline value of the variable.

In some embodiments the variable is a first variable and the time is a first time within the time period. The data collection module can be further configured to receive an observation value for a second variable associated with operation of the host device at a second time within the time period. In some embodiments the compute module can be further configured to compute a deviation value of the second variable from a baseline value of the second variable based on the observation value for the second variable. In some embodiments the decision module can be further configured to send an indication that the host device is operating with a fault at the second time in response to the deviation value of the first variable meeting the first criterion the deviation value of the second variable meeting a second criterion and a stableness value of the first variable meeting a third criterion.

In some embodiments the deviation value can be inversely correlated with a standard deviation of the variable at the time. Similarly stated in such embodiments the deviation value decreases as the standard deviation of the variable at the time increases. In some embodiments computing the deviation value of the variable can include setting the deviation value of the variable to zero if the standard deviation of the variable is less than a threshold. In some embodiments the deviation value of the variable meets the first criterion if the deviation value of the variable is greater than or equal to a normalcy threshold for the variable.

In some embodiments transmitting the indication of the processing system as operating with a fault is further in response to the observation meeting a third criterion defined based on the baseline value. In some embodiments the baseline value is an exponentially weighted moving average EWMA of the variable.

In some embodiments the stableness value is directly correlated with the variance of the variable. Similarly stated in such embodiments the stableness value increases as the variance of the variable increases. In some embodiments the variance of the variable is an exponentially weighted moving variance EWMV of the variable. In some embodiments the stableness value of the variable meets the second criterion if the stableness value is less than a stability threshold.

In some embodiments the variable is a first variable and the method can further include receiving at the data collection module from the processing system an observation value for a second variable associated with operation of the processing system. In some embodiments the method can further include computing a deviation value of the second variable from a baseline value of the second variable at the time based on the observation value for the second variable. In some embodiments the method can further include transmitting an indication of the processing system as operating with a fault in response to the deviation value of the first variable meeting the first criterion the stableness value meeting the second criterion and the deviation value of the second variable meeting a third criterion.

In some embodiments the variable is a first variable and the method can further include receiving at the data collection module from the processing system an observation value for a second variable associated with operation of the processing system. In some embodiments one of the first variable or the second variable is associated with throughput of the processing system and the other of the first variable and the second variable is associated with concurrency of the processing system. In some embodiments the method can further include computing a deviation value of the second variable from a baseline value of the second variable at the time based on the observation value for the second variable. In some embodiments the method can further include transmitting an indication of the processing system as operating with a fault in response to the deviation value of the first variable meeting the first criterion the stableness value meeting the second criterion and the deviation value of the second variable meeting a third criterion.

In some embodiments the method further includes computing a deviation value of the first variable from the baseline value of the first variable at the first time based on the observation value for the first variable. In some embodiments the method further includes computing a deviation value of the second variable from a baseline value of the second variable at the second time based on the observation value for the second variable. In some embodiments transmitting the indication is further in response to the deviation value of the first variable meeting a fourth criterion and the deviation value of the second variable meeting a fifth criterion.

In some embodiments the method further includes computing the stableness value after receiving a predetermined number of observation values of the first variable and after receiving a predetermined number of observation values of the second variable. In some embodiments the stableness value is directly correlated with the variance of the first variable and the stableness value meets the third criterion if the stableness value is less than a stability threshold. In some embodiments any of the first criterion second criterion third criterion fourth criterion fifth criterion disclosed herein can be programmable.

Embodiments disclosed herein can be beneficial for distinguishing between anomalous abnormally behaving systems and faulty systems. As an example in some embodiments a system would be deemed as not faulty if any of the following scenarios occur upon receiving an observation value of throughput of the system 

The data collection module shown in can be configured to perform a data collecting process shown in . Specifically the data collection module can receive from the host device observation data e.g. S S Sn shown in associated with the system or process being monitored. In some embodiments the data collection module can collect the observation data by for example periodically e.g. once per second sending data queries to the host device . In response to the data queries the host device can send requested observation data to the detection device . In some other embodiments the host device can be configured to provide the observation data in a certain manner e.g. periodically when a change in the data pattern is detected and the detection device can passively receive the observation data. For example a server software executed at the host device and associated with a system being monitored can periodically provide observation data to the detection device. In such embodiments the detection device can gather the observation data from the host device without intruding upon the system or process being monitored.

In some embodiments the observation data received from the host device can include observation data on two variables associated with the system or process being monitored throughput and concurrency. The throughput variable can be defined as the number of units of work completed per unit of time within the system or process. For example for a database server a throughput variable can be measured e.g. by an agent at the database server as queries that are handled by the database server per second. For another example for a web server a throughput variable can be measured e.g. by an agent at the web server as requests that are served by the web server per second. The concurrency variable can be defined as the number of units of work executing substantially simultaneously or substantially concurrently within the system or process at a given time. For example for a database server a concurrency variable can be measured e.g. by an agent at the database server as the number of client queries executing within the system or process at a given time. Typically the values of the throughput variable and the concurrency variable change with time. Thus measurements of the values of the two variables can be collected at different times and provided to the detection device as series of observation data for detecting anomalies. Accordingly as used herein a variable can include and or be associated with multiple observation values e.g. an array or list of observation values . Each observation value of a variable can be associated with a measurement or observation of the variable e.g. throughput concurrency etc. at a given time. As described below calculations on a variable can include calculations on the observation values associated with that variable. Thus for example a mean of a variable is the mean of the observation values of that variable.

The counter module shown in can be configured to perform a counting process shown in . Specifically the counter module can maintain and operate one or more counters to record the number of observation data e.g. the throughput variable and or the concurrency variable received in the data collecting process . Such a count result can be used in a decision making process as shown in and described below. In some embodiments the counter module can maintain a counter for each variable being monitored e.g. a first counter for the throughput variable a second counter for the concurrency variable . In some embodiments a counter maintained at the counter module can be reset or modified based on for example a control instruction or a predefined circumstance. For example the counter for the throughput variable can be reset to zero after a fault is detected based on the observation data of the throughput variable. For another example the counter for the concurrency variable can be modified e.g. decreased by one in response to receiving an instruction indicating an outlier observation on the concurrency variable.

The compute module shown in can be configured to perform a computing process shown in . Specifically the compute module can calculate based on the observation data e.g. of the throughput variable and or of the concurrency variable received from the host device intermediate results that can be used in the final decision making process . In some embodiments the intermediate results include a metric representing deviation from normality for the observation data of the throughput variable referred as deviation of throughput herein and a metric representing deviation from normality for the observation data of the concurrency variable referred as deviation of concurrency herein . As described in further detail herein depicts a method for computing a deviation from normality for a variable.

The decision module shown in can be configured to perform the decision making process shown in . Specifically the decision module can make a detection decision based on the intermediate results calculated from the computing process the observation data received in the data collecting process and or the counter values provided from the counting process . In some embodiments a detection decision can include for example a determination on whether a fault occurs in the system or process being monitored e.g. at the host device of . Finally the detection device can present the detection decision to for example a user e.g. the user in such that the user can further examine the system or process.

At a compute module e.g. the compute module in of the detection device can define variables to compute deviation of throughput and deviation of concurrency. To calculate deviation of an observed variable e.g. the throughput variable the concurrency variable the compute module can define 1 a parameter to store a current value of the observed variable e.g. value of the most recently received observation of the variable 2 a mean of the observation data of the observed variable e.g. the Avg Tput and Avg Conc in and 3 a mean of square of the observation date of the variable e.g. the Avg Tput Squared and Avg Conc Squared in . Additionally a counter module e.g. the counter module in of the detection device can maintain a counter for each observed variable and update the counter with each received observation of the variable.

In some embodiments the mean of a variable can be defined as the exponentially weighted moving average EWMA of the observation data of the variable with an average observation age of a predefined number of samples. The predefined number can be for example 20 30 40 or another predefined number. In some embodiments such an average observation age can be calibrated to reflect different degrees of emphasis placed on the recent behavior of the variable. Specifically a shorter average observation age places less weight on the recent behavior of the variable and more weight on the current observation value of the variable e.g. value of the most recently received observation of the variable . Similarly the mean of the square of a variable can be defined as the EWMA of the square of the observation data of the variable with a pre defined average observation age of a predefined number of samples. In other embodiments a mean of a variable or a mean of the square of a variable can be defined in any other suitable method such as arithmetic mean geometric mean harmonic mean etc.

For example in Throughput represents the current value of the throughput variable i.e. the most recently received observed throughput value Concurrency represents the current value of the concurrency variable i.e. the most recently received observed concurrency value Avg Tput represents the mean e.g. EWMA of the throughput variable i.e. the mean of the observation data of the throughput variable for a predefined number of samples Avg Conc represents the mean e.g. EWMA of the concurrency variable i.e. the mean of the observation data of the concurrency variable for a predefined number of samples Avg Tput Squared represents the mean e.g. EWMA of the square of the throughput variable i.e. the mean of the square of the observation data of the throughput variable for a predefined number of samples and Avg Conc Squared represents the mean e.g. EWMA of the square of the concurrency variable i.e. the mean of the observation data of the concurrency variable for a predefined number of samples .

At a data collecting module e.g. the data collecting module in of the detection device can obtain an observation e.g. S S Sn in of the throughput variable and an observation of the concurrency variable. This step is similar to the data collecting process shown and described with respect to .

At the compute module of the detection device can compute deviation of throughput and deviation of concurrency. is a flow chart illustrating a method for computing deviation from normality for a variable e.g. the throughput variable the concurrency variable according to an embodiment. Similar to the method the code representing instructions to perform the method can be stored in a non transitory processor readable medium e.g. the memory in and executed by a processor e.g. the processor in of a detection device e.g. the detection device in . The method can be similar to the computing process shown and described with respect to . Particularly the method can be used to detect anomaly or abnormality in the variable i.e. in a value of the variable . Such an anomaly detection method can be applied to the throughput variable the concurrency variable or any other arbitrary variable that is observable from the system or process being monitored. The code includes code to be executed by the processor to cause the detection device to perform the operations illustrated in and described as follows.

At a data collection module e.g. the data collection module in of the detection device can obtain an observation of the variable. At a counter module e.g. the counter module in of the detection device can update a counter for observations of the variable. For example in some embodiments the counter can be increased by one each time a new observation of the variable is received.

At a compute module e.g. the compute module in of the detection device can update a mean of the variable and a mean of square of the variable. As described above with respect to step of the method the mean of a variable can be defined as for example the EWMA of the observation data of a variable with a pre defined average observation age e.g. 30 samples . Additionally the compute module can set the value of the most recently received observation to the current value of the observed variable.

At the compute module can determine whether the method is initialized or not. In some embodiments the compute module determines whether a certain number as a predefined threshold e.g. of observations of the variable have been collected and processed. Specifically the compute module can check the counter for the number of received observations of the variable and compare the number of the received observations of the variable stored in the counter with the predefined threshold. If the number of the received observations of the variable is less than the predefined threshold the compute module can determine that an insufficient number of observations of the variable have been collected and processed. Thus the method is not initialized and the method returns to step to obtain another observation of the variable as shown in . As a result the steps are iterated repeatedly until a sufficient number of observations of the variable have been collected and processed. If the number of the received observations of the variable is greater than or equal to the predefined threshold the compute module can determine that a sufficient number of observations of the variable have been collected and processed. Thus the method is initialized and can proceed to next step . In some embodiments the threshold for determining the initialization can be calibrated e.g. by a user of the detection device to change the number of samples used for the initialization. Specifically a lower threshold indicates a fewer number of samples for the initialization thus resulting in a quicker detection process.

At the compute module can determine the standard deviation of the variable based on the collected observations of the variable. In some embodiments for example the standard deviation of a variable can be defined as the square root of the exponentially weighted moving variance EWMV of the variable i.e. the EWMV of the observation data for that variable . A EWMV of a variable can be defined as the difference between the mean e.g. EWMA of the variable i.e. the mean of the observation data for that variable and the mean e.g. EWMA of the square of the variable i.e. the mean of the square of the observation data of that variable . In other embodiments the standard deviation of a variable can be computed using any other suitable method. For example in Tput Variance represents the variance e.g. EWMV of the throughput variable Conc Variance represents the variance e.g. EWMV of the concurrency variable Tput StdDev represents the standard deviation of the throughput variable and Conc StdDev represents the standard deviation of the concurrency variable.

At the compute module can determine whether the calculated standard deviation of the variable equals zero. If the calculated standard deviation of the variable equals zero at a result as the deviation from normality for the variable is determined to be zero. Otherwise if the calculated standard deviation of the variable does not equal zero at the compute module can calculate the result by subtracting the mean e.g. EWMA of the variable from the current value of the variable i.e. the value of the most recently received observation of the variable and dividing the result of the subtraction by the calculated standard deviation of the variable a non zero value in this scenario . In the second scenario the result can be a real number ranging from negative infinity to positive infinity except zero.

At the compute module can send the result to for example a decision module e.g. the decision module in of the detection device for further processing. Such a result e.g. a real number ranging from negative infinity to positive infinity including zero can indicate the most recently received observation s deviation from the variable s recent historical behavior of a normalized magnitude. The deviation from normality for the variable e.g. the deviation of throughput or the deviation of concurrency as defined above can be used for many purposes including detecting anomaly and or fault associated with the system or process being monitored. In some embodiments although not shown and described herein the deviation from normality for a variable and or other variables and methods described herein can be used to for example produce a health indicator for a system or process which can be tracked to detect changes in the system or process determine correlations between anomalies in variables trigger data collection at the instant of a fault to support later diagnosis generate a fault signature that can be used to suggest root cause of observed faults based on the root cause of other faults with similar signatures suggest relevant data and variables that may be fruitful to investigate and so on.

Returning to at the deviation of throughput and the deviation of concurrency can be calculated at the compute module using for example the method described above. At the compute module can determine whether the current value of the throughput variable i.e. the value of the most recently received observation of the throughput variable is greater than the mean e.g. EWMA of the throughput variable and or whether the performance of the throughput variable is abnormal as described in further detail herein. If the compute module determines that the current value of the throughput variable e.g. Throughput in is greater than the mean of the throughput variable e.g. Avg Tput in the compute module can interpret such a result as an indication that the system or process being monitored is not producing abnormally low throughput. Thus no anomaly is detected with respect to the throughput variable. Alternatively if the compute module determines that the performance of the throughput variable is not abnormal as defined below the compute module can interpret the result as an indication that no anomaly is detected with respect to the throughput variable. Thus the method returns to step to collect and process next observation of the throughput variable.

In some embodiments an abnormal performance for a variable e.g. the throughput variable the concurrency variable can be defined as the deviation from normality for that variable e.g. the deviation of throughput the deviation of concurrency having an absolute value greater than or equal to a predefined threshold e.g. 2 3 4 etc. . In some embodiments such a predefined threshold on the absolute value of the deviation from normality for a variable can be calibrated e.g. by a user of the detection device to reflect different standards for abnormality and or adjust sensitivity of the method with respect to different variables. Specifically a lower threshold for a variable indicates a lower standard of abnormality easier to satisfy for the variable and higher sensitivity easier to detect abnormality of the method with respect to the variable.

If the compute module determines that the current value of the throughput variable is less than or equal to the mean of the throughput variable and the performance of the throughput variable is abnormal i.e. the absolute value of the deviation of throughput is greater than or equal to the predefined threshold the compute module can interpret the result as an indication that the system or process being monitored is producing abnormally low throughput. For example in Tput LowLim represents a variable e.g. a binary variable a flag that indicates whether the throughput is abnormally low. Then the compute module can proceed to step to determine whether the system or process is experiencing abnormally high concurrency.

At similar to step the compute module can determine whether the current value of the concurrency variable i.e. the value of the most recently received observation of the concurrency variable is less than the mean e.g. EWMA of the concurrency variable and or whether the performance of the concurrency variable is abnormal using the method to determine an abnormal performance of a variable as described above . If the compute module determines that the current value of the concurrency variable e.g. Concurrency in is less than the mean of the concurrency variable e.g. Avg Conc in the compute module can interpret the result as an indication that the system or process being monitored is not experiencing abnormally high concurrency. Thus no anomaly is detected with respect to the concurrency variable. Alternatively if the compute module determines that the performance of the concurrency variable is not abnormal i.e. the absolute value of the deviation of concurrency is less than the predefined threshold the compute module can interpret the result as an indication that no anomaly is detected with respect to the concurrency variable. Thus the method returns to step to collect and process next observation of the concurrency variable.

If the compute module determines that the current value of the concurrency variable is greater than or equal to the mean of the concurrency variable and the performance of the concurrency variable is abnormal i.e. the absolute value of the deviation of concurrency is greater than or equal to the predefined threshold the compute module can interpret the result as an indication that the system or process being monitored is experiencing abnormally high concurrency. For example in Conc HighLim represents a variable e.g. a binary variable a flag that indicates whether the concurrency is abnormally high. Then the compute module proceeds to step to determine whether the system or process has a recent history of stable throughput.

At the compute module can calculate a stableness variable indicating stableness of the throughput variable by dividing the variance e.g. EWMV of the throughput variable by the mean e.g. EWMA of the throughput variable. For example in Tput IOD represents such a stableness variable indicating the stableness of the throughput variable.

At the stableness variable calculated at can be compared with a predefined threshold e.g. 335 . Such a comparison can be performed at the compute module e.g. the compute module in or the decision module e.g. the decision module in of the detection device. If the detection device determines that the stableness variable is greater than the predefined threshold the detection device can interpret the result as an indication that the system or process being monitored does not have a recent history of stable throughput. In other words the system or process is not stable enough to generate a baseline of normal behavior. Thus a fault is not determined in such a scenario. As shown in the method then returns to step to collect and process next observation of the throughput variable. If the detection device determines that the stableness variable is less than or equal to the predefined threshold the detection device can interpret the result as an indication that the system or process being monitored has a recent history of stable throughput. Thus a fault can be detected e.g. at the decision module of the detection device for the system or process being monitored and the detection result can be reported to for example a user e.g. the user in of the detection device. In some embodiments the threshold for determining stability of the throughput can be calibrated e.g. by a user of the detection device to enable by increasing the threshold or suppress by decreasing the threshold fault detection for different variables.

Although described with respect to as the methods being primarily executed at the compute module of the detection device in some other embodiments a portion of the operations in the method or can be performed by other modules e.g. the decision module of the detection device. For example as shown in various data or information associated with the detection process can be provided to the decision module of the detection device where a final decision making process can be executed to generate a detection decision. Specifically the decision module can receive counter values from the counter module observation data e.g. Throughput and Concurrency from the data collection module calculated results e.g. Tput LowLim Conc HighLim and Tput IOD from the compute module and or the like.

In some instances for example a fault of a system or process can be defined based on an accumulation of inventory or backlog in the system or process. A system or process that is requested to perform work can satisfy the demand by completing the work units and generating throughput. If the demand is satisfied quickly the work in process can be low and the backlog or inventory can be correspondingly low. The backlog or inventory can be measured by the concurrency variable as defined above. In some instances such a concurrency variable can be referred to as for example load load average run queue and or the like.

In some instances increasing demand can result in increasing concurrency. Increasing concurrency however does not necessarily indicate a fault in the system or process. For example a well functioning system or process can respond to increased demand with a corresponding increase in throughput. Thus if concurrency increases and throughput also increases correspondingly the system or process can experience increased demand and respond to the increased demand appropriately. In such scenarios abnormal behavior e.g. abnormally high throughput and or concurrency of the system or process can be external to the system or process on which the detection method e.g. the method is applied. Similarly in some instances if throughput and concurrency of the system or process are abnormally low abnormality can exist within a system or process that is generating the demand thus external to the system or process on which the detection method is applied. Additionally in some instances if throughput is abnormally high e.g. above a threshold and concurrency is abnormally low e.g. below a threshold in a system or process the system or process can experience increased demand for abnormally small or short units of work which typically does not constitute a fault within the system or process because the demand can be satisfied quickly.

In some instances if throughput is abnormally low e.g. below a threshold and concurrency is abnormally high e.g. above a threshold in a system or process then the system or process may be unable to complete its backlog by processing units of work in the expected time. Specifically the system or process may fail to respond appropriately to increased demand. Thus an internal fault can exist within the system or process. In some instances a fault of a system or process can be for example a failure in a portion of the system or process e.g. a remote procedure call a disk input output I O operation that is delegated. Additionally the thresholds used above can be configured for example by a user of the detection method to detect the situation of abnormally low throughput and abnormally high concurrency.

In some embodiments not shown the detection device can be configured to employ a multiple approaches to determine whether the host device is operating with fault. In some embodiments at least one of the multiple approaches can be based on observation of one or more variables. In some embodiments at least one of the multiple approaches can be carried out as substantially described herein e.g. executed by the detection device and or by any of the methods .

In some embodiments each approach from the multiple approaches can indicate whether the host device is operating with a fault or not such that multiple indications are obtained. In such embodiments a decision process based on the multiple indications can be used to determine whether the host device is operating with a fault. In some embodiments the decision process can be a consensus a majority vote and or combinations of the multiple indications.

Some embodiments described herein relate to a computer storage product with a non transitory computer readable medium also can be referred to as a non transitory processor readable medium having instructions or computer code thereon for performing various computer implemented operations. The computer readable medium or processor readable medium is non transitory in the sense that it does not include transitory propagating signals per se e.g. a propagating electromagnetic wave carrying information on a transmission medium such as space or a cable . The media and computer code also can be referred to as code may be those designed and constructed for the specific purpose or purposes. Examples of non transitory computer readable media include but are not limited to magnetic storage media such as hard disks floppy disks and magnetic tape optical storage media such as Compact Disc Digital Video Discs CD DVDs Compact Disc Read Only Memories CD ROMs and holographic devices magneto optical storage media such as optical disks carrier wave signal processing modules and hardware devices that are specially configured to store and execute program code such as Application Specific Integrated Circuits ASICs Programmable Logic Devices PLDs Read Only Memory ROM and Random Access Memory RAM devices. Other embodiments described herein relate to a computer program product which can include for example the instructions and or computer code discussed herein.

Examples of computer code include but are not limited to micro code or micro instructions machine instructions such as produced by a compiler code used to produce a web service and files containing higher level instructions that are executed by a computer using an interpreter. For example embodiments may be implemented using Java C .NET or other programming languages e.g. object oriented programming languages and development tools. Additional examples of computer code include but are not limited to control signals encrypted code and compressed code.

While various embodiments have been described above it should be understood that they have been presented by way of example only and not limitation. Where methods and or schematics described above indicate certain events and or flow patterns occurring in certain order the ordering of certain events and or flow patterns may be modified. While the embodiments have been particularly shown and described it will be understood that various changes in form and details may be made.

