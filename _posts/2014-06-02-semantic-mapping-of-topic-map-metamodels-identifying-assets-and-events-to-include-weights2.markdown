---

title: Semantic mapping of topic map meta-models identifying assets and events to include weights
abstract: Determining an impact of an event identified in a first topic map meta-model will have on at least one asset identified in a second topic map meta-model representative of weight. A third topic map meta-model is created which maps at least one asset from the second topic map meta-model to an event from the first topic map meta-model and is comprised of: a topic map representation of assets of the second topic map meta-model and events of the first topic map meta-model, a topic map based index with instance ontology of the first and second topic map meta-models, identification of at least one association between an event identified in the first topic map meta-model and at least one asset identified in the second topic map meta-model; and weight assigned to the at least one association.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09535978&OS=09535978&RS=09535978
owner: International Business Machines Corporation
number: 09535978
owner_city: Armonk
owner_country: US
publication_date: 20140602
---
This is a continuation in part of application Ser. No. 13 433 384 filed Mar. 29 2012 entitled PREDICTING AN EFFECT OF EVENTS ON ASSETS . The aforementioned application is hereby incorporated herein by reference.

The present invention relates to semantic mapping and more specifically to semantic mapping of a first topic map meta model identifying assets to a second topic map meta model identifying events to form a third topic map meta model that represents a semantic mapping of assets to events and assigning weights to the associations between the assets and events in the third topic map meta model in various scopes identified within another topic map meta model and storing the weights in a data structure the weights being indicative of a possible impact of an event on one or more assets.

Manufacturing based companies have enormous investments in assets that are part of the operational processes that drive their business. Optimizing the use of those assets is critical to a company s operational effectiveness and therefore its bottom line.

The equipment or assets that run the manufacturing or production processes are generally connected to servers or controllers to generate operational data that can be used to monitor the manufacturing or production process. Typically companies will collect the operational data and perform operational analysis to provide immediate performance characteristics that can often be represented in dashboards score sheets or reports. Information models can be used to represent how assets are deployed and the relationships between assets such as connections associations or containment. Armed with both the model information and the real time operational data organizations can perform current or future condition analyses on assets and asset groups.

Similarly organizations may use event models to understand relationships between events within their physical infrastructure. These event models may be explicitly defined or they could be implicit in the deployment of business operational processes. These processes could be programmatic rule based or supplied by a knowledge expert. But independent of how they are manifested they represent relationships between events that occur within the operational process. For example the event model would be able to tell a customer what response needs to occur if a critical piece of equipment is operating over a specific threshold for example running too hot or consuming too much power.

According to one embodiment of the present invention a method of assigning a weight to an association between an event and an asset. The method comprising the steps of the computer creating a first topic map meta model that identifies assets and events in a topic map based index with instance ontology based on a topic map meta model that identifies assets and a topic map meta model that identifies events the computer assigning an identification in the first topic map meta model to at least one association between at least one asset of the topic map meta model that identifies assets and at least one event of the topic map meta model that identifies events and the computer creating a second topic map meta model that identifies at least one association between at least one asset and at least one event in a topic map based index and instance ontology with weights assigned to the at least one association in various scopes.

According to another embodiment of the present invention a computer program product for assigning a weight to an association between an event and an asset. The computer program product comprising a computer comprising at least one processor one or more memories one or more computer readable storage media the computer program product comprising a computer readable storage medium having program instructions embodied therewith the program instructions executable by the computer to perform a method comprising creating by the computer a first topic map meta model that identifies assets and events in a topic map based index with instance ontology based on a topic map meta model that identifies assets and a topic map meta model that identifies events assigning by the computer an identification in the first topic map meta model to at least one association between at least one asset of the topic map meta model that identifies assets and at least one event of the topic map meta model that identifies events and creating by the computer a second topic map meta model that identifies at least one association between at least one asset and at least one event in a topic map based index and instance ontology with weights assigned to the at least one association in various scopes.

According to another embodiment of the present invention a computer system for assigning a weight to an association between an event and an asset. The system comprising a computer comprising at least one processor one or more memories one or more computer readable storage media having program instructions executable by the computer to perform the program instructions comprising creating by the computer a first topic map meta model that identifies assets and events in a topic map based index with instance ontology based on a topic map meta model that identifies assets and a topic map meta model that identifies events assigning by the computer an identification in the first topic map meta model to at least one association between at least one asset of the topic map meta model that identifies assets and at least one event of the topic map meta model that identifies events and creating by the computer a second topic map meta model that identifies at least one association between at least one asset and at least one event in a topic map based index and instance ontology with weights assigned to the at least one association in various scopes.

The illustrative embodiments recognize that for effective operations companies want to be able to answer more complicated questions about the operations of their equipment and or assets and the result of various types of events. Examples are questions like What are the implications of this piece of equipment exceeding a threshold to other assets in my enterprise What are implications to assets that are related by proximity direct or indirect physical connection based on configurations that exist now or that could change by operational cycles or time What are the implications to the events that will be triggered by my operational choices to resolve the immediate threshold problem The illustrative embodiments recognize that these questions are critical to a highly effective operational process and span the boundaries typically maintained by asset models and event models individually.

The illustrative embodiments recognize that models such as asset models and event models are deployed in relative isolation and do not provide a semantic understanding between the models. The illustrative embodiments also recognize that simply expanding the model definitions to attempt to include any relationship across the separate models sacrifices the benefits associated with specifically focused models. Illustrative embodiments provide for interaction between individual models so that the collective values of the individual models can be fully leveraged to drive optimal business efficiencies.

The term weight is defined as a quantifiable value assigned to an association between an event and at least one asset. In one embodiment the weight represents a probability or the likelihood that the event will impact the asset s . In another embodiment the weight represents a cost or impact for example a fractional multiplier representing an impact on the life span of the asset s or cost of replacing or repairing the asset based on the impact of the event on the asset.

Referring to network data processing system is a network of computers in which illustrative embodiments may be implemented. Network data processing system contains network which is the medium used to provide communication links between various devices and computers connected together within network data processing system . Network may include connections such as wire wireless communication links or fiber optic cables.

In the depicted example client computer storage unit and server computer connect to network . In other exemplary embodiments network data processing system may include additional client computers storage devices server computers and other devices not shown. Client computer includes a set of internal components and a set of external components further illustrated in . Client computer may be for example a mobile device a cell phone a personal digital assistant a netbook a laptop computer a tablet computer a desktop computer or any other type of computing device. Client computer may contain an interface . Through interface users may view different topic maps as well as a topic map meta model which includes associations between assets and events. Additionally through interface any representation for example graphs of the weights may be displayed on the topic map including associations between assets and events. Interface may accept commands and data entry from a user such as additional events assets or queries. Interface can be for example a command line interface a graphical user interface GUI or a web user interface WUI through which a user can access an asset and event compare program and or a topic map generator program on client computer as shown in or alternatively on server computer . Server computer includes a set of internal components and a set of external components illustrated in .

In the depicted example server computer provides information such as boot files operating system images and applications to client computer . Server computer can compute the information locally or extract the information from other computers on network .

Program code meta models models identifying assets models identifying events models representing semantic mapping of assets to events data structures identifying weights and programs such as topic map generator program and asset and event compare program may be stored on at least one of one or more computer readable tangible storage devices shown in on at least one of one or more portable computer readable tangible storage devices as shown in or on storage unit connected to network or may be downloaded to a computer such as client computer or server computer for use. For example program code meta models models identifying assets models identifying events data structures identifying weights and programs such as topic map generator program and asset and event compare program may be stored on at least one of one or more storage devices on server computer and downloaded to client computer over network for use on client computer . Alternatively server computer can be a web server and the program code meta models models identifying assets models identifying events data structures identifying weights and programs such as topic map generator program and asset and event compare program may be stored on at least one of the one or more storage devices on server computer and accessed on client computer . Topic map generator program and asset and event compare program can be accessed on client computer through interface . In other exemplary embodiments the program code meta models models identifying assets models identifying events data structures identifying weights and programs such as topic map generator program and asset and event compare program may be stored on at least one of one or more computer readable storage devices on client computer or distributed between two or more servers.

In the depicted example network data processing system is the Internet with network representing a worldwide collection of networks and gateways that use the Transmission Control Protocol Internet Protocol TCP IP suite of protocols to communicate with one another. At the heart of the Internet is a backbone of high speed data communication lines between major nodes or host computers consisting of thousands of commercial governmental educational and other computer systems that route data and messages. Of course network data processing system also may be implemented as a number of different types of networks such as for example an intranet local area network LAN or a wide area network WAN . is intended as an example and not as an architectural limitation for the different illustrative embodiments.

Topic map generator program creates a topic map meta model including a topic map based index and instance ontology of a meta model identifying assets and stores the created topic map meta model identifying assets in a repository step . The repository may be repository as shown in . It should be noted that while separate repositories for the different meta models are shown in one repository may be used.

Topic map generator program creates a topic map meta model including a topic map based index and instance ontology for a meta model identifying events and stores the created topic map meta model identifying events in a repository step . The repository may be repository as shown in .

Asset and event compare program creates a topic map meta model that maps assets in the topic map meta model created at step to events in the topic map meta model created at step and stores the topic map meta model that represents the semantic mapping of assets to events in a repository step . The topic map meta model that represents the semantic mapping of assets to events may be created manually by a person with knowledge of how specific events affect assets or by the asset and event compare program . Asset and event compare program can recursively recreate the topic map meta model that represents the semantic mapping of assets to events as new events are generated or additional assets are added. An association between an event and at least one asset in the topic map meta model that represents the semantic mapping of assets to events is herein referred as an impact association meaning that an occurrence of the event may have an impact on the at least one asset.

Asset and event compare program applies an identification to each impact association between at least one asset and an event in the topic meta model that represents the semantic mapping of assets to events step . Each identification of an impact association is preferably unique among the impact associations and may distinguish between impact associations that may occur in different scopes through identifiers. In the topic meta model that represents the semantic mapping of assets to events more than one impact association can be present between assets and events. Each impact association is between an event and at least one asset semantically mapped to the event.

Asset and event compare program creates a topic map meta model of identifications of an impact association between at least one asset and an event in the topic map meta model that represents semantic mapping of assets to events and weights assigned to the impact associations and stores the topic map meta model in a repository step . The weights may be stored in a data structure. The data structure may be a meta model which is part of the topic map meta model of identifications of impact associations.

The weights are in a relationship with the identification applied to the association between at least one asset mapped to an event in the topic meta model that represents the semantic mapping of assets to events. The weights used with the topic map meta model are predefined within the meta model and each represents an impact that an event may have on at least one asset in a specific scope.

Each identification applied to an impact association preferably includes an identifier corresponding to the association an identifier of the topics of the association an identifier of the impact of one of the topics on another topic in the association or the roles the topics play in the association for example impactee vs. impactor an identifier of the scope and an identifier of a weight of the association in the corresponding scope.

Asset and event compare program can also search topic map meta models step . shows the steps associated with searching the topic map meta models of a first embodiment with a query input specifying at least one asset and one event step . The query may further include a scope.

The asset and event compare program can receive the query input from a user through an interface such as interface . Interface may be a topic map interface which may be a representational state transfer REST based interface although other interfaces may be used. A REST interface is preferably used since REST is a standards based Internet protocol and is self documenting in terms of how to do the search for example which domain to search and which topic to search.

In one embodiment the query input includes at least one domain. For example the query input can have the following syntax 

The domain of the query input in this embodiment is the event applied to the overall system to be searched for example the topic map meta model that represents the semantic mapping of assets to events. An example of a query input received at step to retrieve the weight that an event in this case a rain gauge alert has on at least one asset in the overall system to be searched is as follows 

It should be noted that the query input above may be artificially limited by and or within the system being searched for example within a specific city or region. Furthermore the results of the query input may be further defined by the user.

Responsive to receiving this query input asset and event compare program can identify all rain gauges that have alerts within the system e.g. city or region .

Alternatively the query input may include at least one domain and at least one a topic. For example the query input can have the following syntax 

The domain of the query input in this embodiment is the event to apply to the overall system to be searched. The topic of the query input is the asset s that the event may affect. An example of a query input received at step to determine the weight that the event a rain gauge alert see topic map identifying events of has on the asset s WorkEquipment see topic map identifying assets of is as follows 

Responsive to receiving this query input asset and event compare program may return results regarding the weight or impact the rain gauge alert will have on a specific asset the Asset WorkEquipment.

In another embodiment the query input may include at least one domain at least one topic and at least one scope. For example the query input can have the following syntax 

The domain of the query in this embodiment is the event to apply to the overall system to be searched e.g. a rain gauge alert. The topic of the query input is the asset s that the event may affect and the scope is a subset of the overall system. An example of a query input received at step to return the weight of the impact of the event on the asset a rain gauge see topic map identifying events of on a specific asset WorkEquipment see topic map identifying assets of in a determined scope electric grid system is as follows 

The predefined weight of the impact association between the asset and the event in this example WorkEquipment and rain gauge alert may vary depending on the scope as determined in the meta model identifying predefined weights mapped to identification of the impact associations between at least one asset and an event in the topic map meta model that represents semantic mapping of assets to events. For example in a City Operation system a rain gauge alert can indicate that assets will be affected differently. If the asset of WorkEquipment were a storm drain with a rain gauge reading or alert there may be a different weight or impact in the scope of an electrical grid system on the rain gauge reading or alert than in the scope of a water system. For example the rain gauge alert may have a weight that indicates that there will be a small impact on storm drains in the water system. Alternatively the rain gauge alert may have a weight that indicates that there will be a large impact on electrical systems as the storm drain cannot adequately drain the water fast enough and the water may overflow to the electrical system. In this example the two different types of scope would be the water system and the electric grid system each with its own topic map meta model identifying assets. In another embodiment the scope may be time based.

Additionally the search query may include a radix which is the number of degrees from the search topic to be returned. For example a search result based on a query input that contained a radix of 1 would display results directly connected to the search topic. A search result based on a query input that contained a radix of 2 would display results of everything directly connected to the search topic and directly connected to the matters directly connected to the search topic. For example the query input can have the following syntax 

The asset and event compare program then identifies at least one asset mapped to the event from the query in the topic map meta model that semantically maps assets to events created at step step .

Asset and event compare program displays at least a weight associated with an event and the at least one asset to be displayed to the user step .

If there are additional queries step return to step of searching the topic map meta models. If there are no additional queries step the method ends.

In another alternative embodiment the identification or identifier itself of the impact association between the assets and events of the topic map meta model that represents semantic mapping of assets to events and associated with the weights in various scopes may be specifically queried.

The asset and event compare program can receive the query input from a user through an interface such as interface . Interface may be a topic map interface which may be a representational state transfer REST based interface although other interfaces may be used. A REST interface is preferably used since REST is a standards based Internet protocol and is self documenting in terms of how to do the search.

The asset and event compare program obtains from the query input at least an identification of an impact association to search for and where to search e.g. the topic map meta model that includes as assignment of weight to the impact associations step . The asset and event compare program then searches topic map meta model that assigns weights to impact associations in a topic map meta model created at step for all of the weights associated with the identified impact association step .

Asset and event compare program displays all the weights in all the scopes in a relationship with the identified impact association step . It should be noted that in different scopes an impact of an event on at least one asset may be different.

If there are additional queries step return to step of searching the topic map meta models. If there are no additional queries step the method ends.

Stored within the resource description framework RDF repository for example repository are RDF triples of the assigned topics occurrences and attributes of the topic map meta model that assigns weights to impact associations shown in . The topics may provide the actual predefined weights or a link to the actual predefined weights.

Stored within a resource description framework RDF repository for example repository are RDF triples of the assigned topics occurrences and attributes of the topic map meta model that identifies assets . An asset meta model in which topic map meta model that identifies assets is based may be stored within repository or in a separate repository .

From a uniform modeling language UML representation shown in of meta model which identifies assets the RDF triples in Table 1 below represent an association between an Asset WorkEquipment being connected to the other pieces of Asset WorkEquipment. The relationship between Asset WorkEquipment and other pieces of Asset WorkEquipment is the type equipment connects .

Note that for brevity in the following discussion the following RDF namespace prefixes will be used with URLx replacing an actual Uniform Resource Locator designation or other designation of a location on a network 

Therefore for foo asset Workequipment EquipmentConnects Asset WorkEquipment the following RDF triples would be present in the RDF repository for the association between WorkEquipment and Asset WorkEquipment.

Stored within the resource description framework RDF repository for example repository are RDF triples of the assigned topics occurrences and attributes of topic map meta model that identifies events. An event meta model in which a topic map meta model that identifies events is based may be stored within repository or in a separate repository .

From a UML representation shown in of meta model which identifies events the RDF triples in Table 3 below represent an association between a Special EventObject being a type of EventObject. The relationship between Special EventObject and EventObject is the type is a . Therefore for foo specialEventObject is a EventObject the following RDF triples would be present in the RDF repository for the association between Special EventObject and EventObject.

Listener has event listeners for example XEventListener and X . . . Listener which each receive information regarding event objects. An event object for example EventObject or Special EventObject is an object that describes the nature of an event and stores properties and information regarding the event.

Broadcaster is associated with EventObject and Special EventObject as shown by the dashed open arrowed lines. Special EventObject is a type of EventObject as indicated by the solid line and open arrow.

In the portion of the topic map representation shown in the topic of Asset WorkEquipment is located at or has an occurrence at Asset FunctionalLocation shown by a solid line . The topic of Asset WorkEquipment has the attributes or plays the role of equipment and is a Asset PhysicalEntity shown by a dash dot dot line . The topic Asset FunctionalLocation has the attributes or plays the role of location.

The topic map meta model that represents the semantic mapping of assets to events includes a topic map representation of assets of the topic map meta model identifying assets and a topic map representation of events of the topic map meta model identifying events . The dotted line shows which topics impact other topics. The dotted line is present between the asset topics and event topics.

As in the solid line indicates located at and the dash dot dot line indicates is a . Therefore Special EventObject which is an EventObject has an impact on Asset WorkEquipment but does not affect Asset FunctionalLocation or the fact that Asset WorkEquipment is an Asset PhysicalEntity .

Identification ID has a relationship indicated by the dashed line with weight W and the weight W is between the Asset WorkEquipment and the Special EventObject . The amount of impact of the Special EventObject on the Asset WorkEquipment is equivalent to the weight W in a specific scope.

For every impact association between an asset and an event an identification is present both in the topic map meta model that represents the semantic mapping of assets to events and in the topic map meta model in which weights are assigned to impact associations. The identification is unique to the association between the asset and event. As discussed earlier an identification ID would include an identifier corresponding to the association between the asset and the event ID an identifier of the topics of the association T T . . . Tn an identifier of the impact of one of the topics on another topic in the association or the roles the topics play in the association for example impactee vs. impactor R R . . . Rn an identifier of the scope S S . . . Sn and the weight of the association W W . . . Wn . The reference n being equivalent any number greater than zero.

In terms of identification ID would include an identifier number associated with the specific association between Asset WorkEquipment and the Special EventObject for example 10100 which may be stored in a repository for lookup. The identification ID also includes identifiers of the topics of the association and could for example be represented as T and T which may be stored in a repository for lookup. In T would be equivalent to Special EventObject and T would be equivalent to Asset WorkEquipment. The topics T and T would also include information regarding the role in the association for example topic T may be associated with the role R of impactor and topic T may be associated with the role R of the impactee in a specific scope S. It should be noted that in certain scopes the roles of the topics may not be the same. Furthermore in certain scopes the weights may change between the topics in the impacts association.

Therefore based on ID would include the following or make reference to the following identifiers being stored in a repository for example repository 

From this information in an example if the Asset WorkEquipment was a storm drain and the Special EventObject was a rain gauge reading alert the rain gauge reading alert would impact the storm drain 70 percent of the time in the scope of a city water system. The weight may be different regarding the impact that the rain gauge reading alert on the water drain from an electrical grid circuit scope or stand point and another weight for example W could be associated with a different scope scope S.

Each set of internal components also includes a R W drive or interface to read from and write to one or more portable computer readable tangible storage devices such as a CD ROM DVD memory stick magnetic tape magnetic disk optical disk or semiconductor storage device. Topic map generator program and asset and event compare program can be stored on at least one of one or more of the portable computer readable tangible storage devices read via R W drive or interface and loaded into hard drive .

Each set of internal components also includes a network adapter or interface such as a TCP IP adapter card. Topic map generator program and asset and event compare program can be downloaded to client computer and server computer from an external computer via a network for example the Internet a local area network or other wide area network and network adapter or interface . From the network adapter or interface topic map generator program and asset and event compare program are loaded into hard drive . The network may comprise copper wires optical fibers wireless transmission routers firewalls switches gateway computers and or edge servers.

Each of the sets of external components includes a computer display monitor a keyboard and a computer mouse . Each of the sets of internal components also includes device drivers to interface to computer display monitor keyboard and computer mouse . The device drivers R W drive or interface and network adapter or interface comprise hardware and software stored in storage device and or ROM .

Topic map generator program and asset and event compare program can be written in various programming languages including low level high level object oriented or non object oriented languages. Alternatively the functions of topic map generator program and asset and event compare program can be implemented in whole or in part by computer circuits and other hardware not shown .

The present invention may be a system a method and or a computer program product. The computer program product may include a computer readable storage medium or media having computer readable program instructions thereon for causing a processor to carry out aspects of the present invention.

The computer readable storage medium can be a tangible device that can retain and store instructions for use by an instruction execution device. The computer readable storage medium may be for example but is not limited to an electronic storage device a magnetic storage device an optical storage device an electromagnetic storage device a semiconductor storage device or any suitable combination of the foregoing. A non exhaustive list of more specific examples of the computer readable storage medium includes the following a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory a static random access memory SRAM a portable compact disc read only memory CD ROM a digital versatile disk DVD a memory stick a floppy disk a mechanically encoded device such as punch cards or raised structures in a groove having instructions recorded thereon and any suitable combination of the foregoing. A computer readable storage medium as used herein is not to be construed as being transitory signals per se such as radio waves or other freely propagating electromagnetic waves electromagnetic waves propagating through a waveguide or other transmission media e.g. light pulses passing through a fiber optic cable or electrical signals transmitted through a wire.

Computer readable program instructions described herein can be downloaded to respective computing processing devices from a computer readable storage medium or to an external computer or external storage device via a network for example the Internet a local area network a wide area network and or a wireless network. The network may comprise copper transmission cables optical transmission fibers wireless transmission routers firewalls switches gateway computers and or edge servers. A network adapter card or network interface in each computing processing device receives computer readable program instructions from the network and forwards the computer readable program instructions for storage in a computer readable storage medium within the respective computing processing device.

Computer readable program instructions for carrying out operations of the present invention may be assembler instructions instruction set architecture ISA instructions machine instructions machine dependent instructions microcode firmware instructions state setting data or either source code or object code written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The computer readable program instructions may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider . In some embodiments electronic circuitry including for example programmable logic circuitry field programmable gate arrays FPGA or programmable logic arrays PLA may execute the computer readable program instructions by utilizing state information of the computer readable program instructions to personalize the electronic circuitry in order to perform aspects of the present invention.

Aspects of the present invention are described herein with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer readable program instructions.

These computer readable program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks. These computer readable program instructions may also be stored in a computer readable storage medium that can direct a computer a programmable data processing apparatus and or other devices to function in a particular manner such that the computer readable storage medium having instructions stored therein comprises an article of manufacture including instructions which implement aspects of the function act specified in the flowchart and or block diagram block or blocks.

The computer readable program instructions may also be loaded onto a computer other programmable data processing apparatus or other device to cause a series of operational steps to be performed on the computer other programmable apparatus or other device to produce a computer implemented process such that the instructions which execute on the computer other programmable apparatus or other device implement the functions acts specified in the flowchart and or block diagram block or blocks.

The flowchart and block diagrams in the Figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of instructions which comprises one or more executable instructions for implementing the specified logical function s . In some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or carry out combinations of special purpose hardware and computer instructions.

Having thus described the invention of the present application in detail and by reference to embodiments thereof it will be apparent that modifications and variations are possible without departing from the scope of the invention defined in the appended claims.

