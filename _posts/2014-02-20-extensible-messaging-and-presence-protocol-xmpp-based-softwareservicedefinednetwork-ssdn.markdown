---

title: Extensible messaging and presence protocol (XMPP) based software-service-defined-network (SSDN)
abstract: A method for communicating between a plurality of Software-Service-Defined-Networks (SSDNs) comprising transmitting a data packet from a Network Element (NE) in a first SSDN domain to a component in a second SSDN domain by using an Extensible Messaging and Presence Protocol (XMPP), wherein the data packet comprises a destination address indicating an address of a XMPP server in the second domain. Also disclosed is a method of federating a plurality of SSDN domains implemented in a first XMPP server comprising receiving a login message from a first component positioned in a first SSDN domain, and in response to receiving the login message, advertising the first SSDN component to a second XMPP server positioned in a second SSDN domain via a first XMPP message.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09491264&OS=09491264&RS=09491264
owner: Futurewei Technologies, Inc.
number: 09491264
owner_city: Plano
owner_country: US
publication_date: 20140220
---
Software defined networking SDN is a next generation data network in which the control plane is separated from the data plane and implemented in a software application. This architecture allows network administrators to have programmable central control of network traffic without requiring physical access to the network s devices. SDN decouples network control e.g. learning and forwarding decisions from the data plane used to forward network traffic. Decoupling the control plane from the data plane of the network enables the network controller to efficiently control the network traffic through globally optimized traffic engineering and routing which departs from locally optimized shortest path forwarding SPF . SDN may also simplify network operations or even have the capabilities to flatten the network with extended data routing vectors. The extended data routing vectors in SDN can cover network information from multiple Open Systems Interconnection OSI layers e.g. Layer 2 L2 and or Layer L3 for intelligent routing purposes. A basic approach to achieve decoupling of the network control from the network topology and data plane is by applying globally aware and topology decoupled software control at the edges of the network. The assumption is that traditional topology coupled bridging and routing may be re used at the core of the network so that scalability interoperability high availability and extensibility of the conventional networking protocols such as Internet Protocol IP networks can still be maintained.

In one embodiment the disclosure includes a method for communicating between a plurality of Software Service Defined Networks SSDNs comprising transmitting a data packet from a Network Element NE in a first SSDN domain to a component in a second SSDN domain by using an Extensible Messaging and Presence Protocol XMPP wherein the data packet comprises a destination address indicating an address of a XMPP server in the second domain.

In another embodiment the disclosure includes a method of federating a plurality of SSDN domains implemented in a first XMPP server comprising receiving a login message from a first component positioned in a first SSDN domain and in response to receiving the login message advertising the first SSDN component to a second XMPP server positioned in a second SSDN domain via a first XMPP message.

In another embodiment the disclosure includes an apparatus comprising a processor configured to operate as a first component or a portion of a first component in a first SSDN domain and initiate a communication session with a second component positioned in a second SSDN domain via a XMPP jingle message and a transmitter coupled to the processor and configured to transmit the jingle initiate message to the second SSDN component via a SSDN service bus positioned in the first SSDN domain.

These and other features will be more clearly understood from the following detailed description taken in conjunction with the accompanying drawings and claims.

It should be understood at the outset that although an illustrative implementation of one or more embodiments are provided below the disclosed systems and or methods may be implemented using any number of techniques whether currently known or in existence. The disclosure should in no way be limited to the illustrative implementations drawings and techniques illustrated below including the exemplary designs and implementations illustrated and described herein but may be modified within the scope of the appended claims along with their full scope of equivalents.

Disclosed herein is an SSDN that may communicate with other SSDNs using XMPP. An SSDN may be a modified SDN that supports direct communication between network control plane devices e.g. instead of requiring all inter network plane devices communicate via the application plane as discussed in U.S. Non provisional patent application Ser. No. 13 829 076 filed Mar. 14 2013 by Wu Chou et al. and entitled System and Apparatus of a Software Service Defined Network SSDN which is incorporated herein by reference as if reproduced in its entirety. A XMPP server may be positioned at the edge of the SSDNs domain. The XMPP server may be coupled to a XMPP client which may act as an SSDN component and may be connected to an SSDN service bus. Components in the SSDN may communicate with components in other SSDN domains by forwarding messages across the service bus toward the XMPP server and client. Data may be transmitted with destination addresses in XMPP format. For example the data may be addressed to Bus Domain.com Component where Bus is the name of the appropriate SSDN service bus Domain.com is the address of the XMPP server and Component is the address of the destination SSDN component. Using this scheme a XMPP server in the destination SSDN may receive the message and forward the message to the destination SSDN XMPP client which may comprise the destination SSDN service bus address for transmission across the destination service bus to the destination SSDN component. SSDN components and or XMPP servers may employ XMPP and or the XMPP Jingle protocol to advertise the presence of components across SSDN domains initiate sessions between components negotiate component to component communication protocols forward SSDN messages and or terminate communication sessions. XMPP may also be employed to create multi SSDN domain sessions to allow direct and or substantially simultaneous communication between three or more SSDN domain network control layer components. Using XMPP SSDN domains may also support dynamic addition and or removal of network control layer components from ongoing inter domain communication sessions.

The service bus utilities node may comprise data storage and may store various service bus utilities such as utilities facilitating communication and interaction between the OF controllers . The service bus utilities node may facilitate the transfer of various service bus utilities via the NSSL service bus . The NSSL service bus may be a distributed service access layer which may act as a service plane for network control and management. The NSSL service bus may provide a generic network service abstraction layer that may support east west network expansion via service federation. Service federation may be the process through which the NSSL service bus from different autonomous systems AS can share their services. The NSSL service bus may be an architecture that may provide service registration service discovery message addressing message routing and other services for OF controllers OF clients and other service components coupled to the NSSL service bus . In one embodiment the NSSL service bus may be a local NSSL service bus that may be coupled with other local NSSL service buses. In another embodiment the NSSL service bus may represent a global NSSL service bus that comprises one or more local NSSL service buses that spans across multiple networks . The NSSL service bus may comprise processor s logic unit s and or storage unit s .

OF controllers and the OF clients may be coupled to the NSSL service bus via the adaptors . The adaptors may be configured to act as the service interface for the OF controllers and OF clients . By coupling the OF controllers to the adaptors the NSSL service bus may provide load balancing between the OF controllers . The NSSL service bus may also promote communication between the OF controllers such that each OF controller s Network Information Base NIB may comprise the same entries such that routing decisions made by either of the OF controllers are the same. The NSSL service bus may provide the ability to add additional OF controllers as necessary in order to adequately manage and control SSDN network . The NSSL service bus may provide service composition service discovery service management service fail over and load balancing between the OF controllers and between the OF controllers and the OF clients . The NSSL service bus may provide east west network expansion capability through NSSL service bus federation and may provide a consistent service oriented framework.

The OF controllers may be configured to implement control plane functions and to control and manage OF clients . Control plane functions may include route or path determination for data packets traversing the network . More specifically OF controllers may be able to produce routing tables and or flow tables that may define how data packets may be routed within network . OF controller may provide control services to both OF client  and OF client  . Similarly OF controller may also provide control services to both OF client  and OF client  . The OF controller may not perform data plane functions such as forwarding data traffic to a selected destination within network . The OF controllers may deploy network resources to the NSSL as services via the corresponding adaptors . In one embodiment the services may be addressed by service names and may support service mobility migration failover and load balancing.

The OF clients may be clients of the OF controllers such as OF switches. The OF clients may provide data forwarding for network . The OF client may comprise a switch data plane configured to route data through the network . OF clients may be any physical and or virtual network device that receives and transmits data through network . OF clients may comprise switches routers bridges or any other devices compatible with southbound Application Programming Interface API services from the network control plane e.g. network control plane . For example OF clients may be configured according to the OpenFlow protocols as defined in Rev. 1.2 for the OpenFlow specification of the OpenFlow Organization published December 2011 which is incorporated herein as if reproduced in its entirety. Furthermore OF clients may also include network devices that are compliant with other versions of the OpenFlow protocols e.g. Rev. 1.0 and Rev. 1.1 . In one embodiment OF clients may be incompatible with other versions of the OpenFlow protocols. For example one OF client may support the OpenFlow protocol version 1.0 but not later versions while another OF client may support the OpenFlow protocol version 1.2 but not earlier versions.

The OS services node may be a network OS that provides facilities for addressing the OF controllers . The OS services node may be independent of various programming languages. The OS services node may be configured to manage network resources including physical and virtual networks for network applications. For example the OS services node may be implemented to manage data users groups security applications and other networking functions. In one embodiment the OS services node may operate and perform functions in the OSI layer within one or more network devices such as routers switches and servers.

Local service bus may be positioned in SSDN domain and may be coupled to a service bus utilities node and to a NIB . The service bus may be configured to perform functions substantially similar to NSSL service bus . The service bus utilities node may be configured to perform functions substantially similar to the service bus utilities node . The NIB may maintain and provide supporting information for resource utilization and traffic control amongst one or more networks. For instance the NIB may provide multiple methods for the control logic to gain access to network nodes an index of all of the network nodes based on network node identifiers track state information of network nodes network traffic flow information and or data regarding network node features and capabilities. The NIB may store a graph of the forwarding HWs within a network topology instead of storing prefixes to destinations found in routing information bases RIBs or forwarding information bases FIBs . Furthermore the NIB may support logical elements e.g. overlay tunnels within a network.

Local service bus may also be coupled to NOSS component routing services RS component and controller services CS component . The NOSS component may be substantially similar to OS services node . The RS component may be coupled to network nodes within network . The RS component may implement algorithms to forward packets between network nodes e.g. perform data forwarding plane functions . In one embodiment the RS component may forward data traffic as performed by a SDN OpenFlow switch in the data forwarding plane. In one embodiment network nodes within network may be configured as plug and play network nodes. The CS component may be a plurality of controllers coupled together through the service bus . The CS component may implement strategies to control the flow of data packets in network as performed by an SDN controller in the control plane of the SDN.

SSDN domain may comprise a service bus a CS component an RS component a NOSS component and a service bus utilities node which may be substantially similar to service bus CS component an RS component NOSS component and service bus utilities node . SSDN domain may comprise a service bus a CS component an RS component a NOSS component and a service bus utilities node which may be substantially similar to service bus CS component an RS component NOSS component and service bus utilities node . Service buses and may share access to a global NIB which may be substantially similar to NIB and may comprise data related to both SSDN domains and . SSDN domain and SSDN domain may comprise a cached NIB and cached NIB respectively. The cached NIBs and may cache e.g. store data from global NIB for rapid use by components in their respective network domains and . It should be noted that in some embodiments SSDN domains and may each be considered sub networks of an SSDN domain comprising both domains and .

XMPP client and XMPP server may operate to communicate with the other SSDN domains and or via XMPP. XMPP client may receive communications over the service bus and forward any inter domain messages to the XMPP server for transmission via XMPP. XMPP server may also receive messages from the other SSDN domains and or via XMPP and forward such messages to the XMPP client for transmission to other SSDN domain components via the service bus . The federation controller may manage inter domain SSDN federation and or related communications by transmitting and or receiving messages across the service bus to from the XMPP client and the XMPP server . SSDN domain may comprise a federation controller FC a service bus Service Bus a NIB NIB a XMPP client XC and a XMPP server XS which may be substantially similar to federation controller service bus NIB XMPP client and XMPP server respectively. SSDN domain may comprise a federation controller FC a service bus Service Bus a NIB NIB a XMPP client XC and a XMPP server XS which may be substantially similar to federation controller service bus NIB XMPP client and XMPP server respectively.

Accordingly domains and may communicate by transmitting messages between XMPP servers and respectively. Such messages may then be forwarded to XMPP clients and respectively for intra domain transmission to appropriate SSDN components via service bus and respectively. In order to communicate via XMPP network components may receive addresses according to a XMPP Jabbers Identifier JID format so that the components may be uniquely designated in an inter domain XMPP message. For example each XMPP server and may receive a unique domain identifier so that all messages related to a particular domain are routed to the associated XMPP server. The XMPP server and address may be indicated in the form of Y.com where Y indicates the associated XMPP server. In the embodiment of network XMPP servers and have been assigned the example domain identifiers of x1.s1.com x2.s2.com and x3.s3.com respectively.

The XMPP clients and may each serve as an access point to the services buses and respectively for communications received from other domains. Accordingly XMPP clients and may each receive a JID node identifier related to the service bus or respectively to which the associated XMPP client is attached. In the embodiment of network XMPP clients and have been assigned the example JID node identifiers of bus bus and bus respectively. Components in a domain and or may each be designated by a unique JID resource identifier so that messages forwarded over service buses and respectively may be routed to the appropriate component s . In the embodiment of network components FC NIB FC NIB FC and NIB may be designated by the example JID resource identifiers of fc nib fc nib fc and nib respectively. By employing the forgoing addressing scheme a component in a first SSDN domain may transmit a message to a component in a second SSDN domain by encoding the message with a destination address in JID format and forwarding the message over the first domains service bus. The destination address may take the form X Y Z where X indicates the second domains service bus XMPP client Y indicates the second domains XMPP server and Z indicates the second domain component. It should be noted that the identifiers employed herein are only examples and that any identifiers used in conjunction with the form X Y Z may be employed within the scope of the present disclosure.

For example component FC may transmit a message to component FC by employing the destination address bus x3.s3.com fc3. The message may be transmitted from FC over service bus . XMPP client may receive the message determine the message is intended for another domain and may forward the message to XMPP server . Either XMPP server or XMPP client may convert the message to XMPP format on an as needed basis. XMPP server may review the destination address determine the domain address of x3.s3.com indicates XMPP server and may forward the message accordingly. XMPP server may determine that the message is intended for XMPP client based on the node identifier of bus and may forward the message. XMPP client may determine that the message is intended for FC based on the resource identifier of fc. XMPP client may convert the message to a SSDN format as needed and may forward the message across service bus . Service bus may then forward the message to FC . As shown above any component in a SSDN domain and or may transmit an east west message to any component in any other SSDN domain by addressing the packet accordingly and forwarding the message across an attached service bus. By employing the addressing scheme shown above the transmitting component may send a message to a destination component without maintaining an awareness of network addresses of NE s implementing the destination component. Accordingly component implementation may change dynamically in the remote domain without affecting transmissions from the standpoint of the transmitting domain.

Network may also support a XMPP communication session between a plurality of SSDN domains. XMPP communication sessions between two SSDN domains and or may be accomplished by direct communication between the associated XMPP servers and or . XMPP communication sessions between three or more SSDN domains and or may be accomplished by a XMPP Multi User Conference MUC . In a MUC an inter domain message transmitted by a first XMPP server e.g. XMPP server and or may be broadcast to all XMPP servers that have joined the MUC. For example XMPP server may create a MUC with an address muc x1.s1.com. Components in domains and or may broadcast a message to other domains by addressing the message to muc x1.s1.com. Such a message may be received by XMPP server may be transmitted to all other domains in the MUC and may be forwarded to components in domain that have joined the MUC. For example assuming FC FC and FC have joined a MUC FC may transmit a message to muc x1.s1.com which may be broadcast by XMPP server to both XMPP servers and for delivery to FC and FC respectively. As another example FC may transmit a message to muc x1.s1.com which may be received by XMPP server forwarded to FC via service bus and forwarded to FC via XMPP server .

As discussed above XMPP may be employed in an SSDN architecture. Such a combination may allow for a separation of a XMPP federation protocol from control protocols negotiated between federated service components e.g. in different SSDN domains . Federated service buses may be treated in a manner similar to Voice Over IP VOIP endpoints. SSDN components e.g. NIBs may be treated in a manner similar to media resources such as audio codecs. Control protocols components such as Pathlet routers Path Computation Elements PCEs etc. may be treated in manner similar to media transport protocols such as Real Time Transport RTP protocol User Datagram Protocol UDP etc. Further as discussed below XMPP jingle protocol may be employed to connect service components over services buses in different SSDN domains into a common federation session.

The implementation of network may support allow for independence between the SSDN components and and may allow legacy components to communicate without modification. The implementation of network may also increase traffic over the service buses and and increase the need for additional hardware to support the service buses and . The implementation of network may minimize bus and network traffic and allow legacy buses to operate without modification. The implementation of network may also require modification of legacy components and may expose information contained in the components and to the other domain. For example an owner of the first domain may not wish to expose an NIB acting as SSDN component to the second domain in the case that the second domain is owned by a different entity. As such a network may employ the communication schemes of network network or combinations thereof.

It is understood that by programming and or loading executable instructions onto the NE at least one of the processor SSDN federation module downstream ports Tx Rxs memory and or upstream ports are changed transforming the NE in part into a particular machine or apparatus e.g. a multi core forwarding architecture having the novel functionality taught by the present disclosure. It is fundamental to the electrical engineering and software engineering arts that functionality that can be implemented by loading executable software into a computer can be converted to a hardware implementation by well known design rules. Decisions between implementing a concept in software versus hardware typically hinge on considerations of stability of the design and numbers of units to be produced rather than any issues involved in translating from the software domain to the hardware domain. Generally a design that is still subject to frequent change may be preferred to be implemented in software because re spinning a hardware implementation is more expensive than re spinning a software design. Generally a design that is stable that will be produced in large volume may be preferred to be implemented in hardware for example in an ASIC because for large production runs the hardware implementation may be less expensive than the software implementation. Often a design may be developed and tested in a software form and later transformed by well known design rules to an equivalent hardware implementation in an application specific integrated circuit that hardwires the instructions of the software. In the same manner as a machine controlled by a new ASIC is a particular machine or apparatus likewise a computer that has been programmed and or loaded with executable instructions may be viewed as a particular machine or apparatus.

Upon learning of FC FC may determine to initiate a XMPP session with FC. At step FC may transmit a jingle session initiate message to bus2 x2.s2.com fc2. XS may receive the message of step and may forward the message to XS based on the JID domain identifier at step . At step XS may forward the jingle session initiate message to FC via the second domain bus based on the messages node and resource identifiers. FC may determine to accept the session and may transmit a jingle session accept message toward FC at step by addressing the message destination as bus1 x1.s1.com fc1. The message of step may be forwarded by XS to XS at step and forwarded from XS to FC at step . Upon receiving the jingle session accept message of steps and the session may be setup between FC and FC. FC may transmit SSDN messages to FC via XS and XS at steps and . The SSDN messages of steps and may be sent via XML streams and or sent between the SSDN components via other native protocols. While the messaging of steps is unidirectional e.g. from FC to FC it should be noted communication may also be bidirectional e.g. also comprising messages from FC to FC . Upon completion of transmission of the SSDN messages of steps and FC may determine to terminate the communication session. At step FC may transmit a jingle session terminate message FC by addressing the message to bus2 x2.s2.com fc2. The message may be forwarded via the first domain bus and XMPP client to the XS at step to between domains to XS at step and to FC via the second domain XMPP client and service bus at step .

It should also be noted that the jingle initiate message of steps and and the jingle accept message of steps and may be employed to negotiate a protocol for sending SSDN messages outside of XMPP as discussed in network . For example the jingle session initiate message and or the jingle session accept message may include a content add action which may specify other SSDN components and or available protocols for direct communication. The content add action may also be transmitted in other jingle messages during an ongoing Jingle session. As an example the first SSDN domain may comprise a Path Computation Element PCE component configured to perform route calculations across the first SSDN domain. The content add action may be employed to advertise the presence of the PCE to the second SSDN domain and negotiate a direct communication protocol with a PCE component in the second SSDN domain for example PCE Protocol PCEP . The following example code snippet may be added to a jingle message to advertise and or negotiate a communication protocol between PCE components in different SSDN domains 

The federation of method may be static scheduled and or on demand. In other words SSDN domains may maintain a constant communication session begin a communication session at scheduled intervals and or create communication sessions as needed by component s in either domain. SSDN domain components may by dynamically added and or removed from a session via content add content modify and or other actions in jingle messages. The federated components may also use the XMPP jingle messages for performance optimization for example by negotiating interoperable and or native protocols such as Transmission Control Protocol TCP IP etc. XMPP authentication authorization and federation protocols may be employed to provide security for inter domain communications between SSDN components. XMPP may also support real time network monitoring by network administrators controlling the SSDN domains. XMPP may also be employed relatively seamlessly with existing hardware as XMPP may be based on XML. XMPP deployments may also support near real time interactions with large scale connections on the order of millions of concurrent users.

FC may determine to create a MUC to allow SSDN messages to be transmitted to a plurality of other SSDN domains. At step FC may transmit a XMPP create MUC message to XS . The message may be assigned a destination address of muc x1.s1.com and forwarded across the service bus to XS via the XMPP client. Upon receiving the MUC creation message XS may create and or host a MUC and transmit a XMPP success message back to FC at step . At steps and FC may initiate a session with FC in a manner similar to steps and . The XMPP jingle session initiate message of steps and may indicate that responsive messages should be transmitted via the MUC created at steps and by indicating a return address of muc x1.s1.com. FC may respond with a XMPP jingle session accept message at steps and in a manner similar to steps and . The message of steps and may be addressed to the MUC at XS using muc x1.s1.com. At step and XS may add FC to the MUC and forward the accept message to all components on the MUC e.g. FC . XS may add FC to the MUC before or after forwarding the accept message depending on implementation. At step FC may initiate sessions with additional SSDN domains additional SSDN components or combinations thereof in a manner substantially similar to steps and by addressing a jingle session initiate message with a destination address with the appropriate JID of the SSDN component bus and or XMPP server and a source address of the MUC host e.g. muc x1.s1.com .

At steps and FC may transmit SSDN messages to all components on the MUC in a manner similar to steps and . Message may be addressed to the MUC and XS may transmit copies of message to all XMPP servers associated with components on the MUC at steps and . As with method it should be noted that the SSDN messages may be transmitted only from the session initiator e.g. unidirectional and or may also be transmitted from the SSDN domain components joined to the MUC back to the initiator e.g. bidirectional . Once SSDN message transmission is complete FC may determine to cancel the MUC and terminate the session. At step FC may transmit a XMPP cancel message to XS by addressing the message to muc x1.s1.com and forwarding the message over the service bus. XS may receive the message of step cancel the MUC inform all components on the MUC and or associated XMPP servers of the cancellation and transmit a cancellation success message to FC at step .

At least one embodiment is disclosed and variations combinations and or modifications of the embodiment s and or features of the embodiment s made by a person having ordinary skill in the art are within the scope of the disclosure. Alternative embodiments that result from combining integrating and or omitting features of the embodiment s are also within the scope of the disclosure. Where numerical ranges or limitations are expressly stated such express ranges or limitations should be understood to include iterative ranges or limitations of like magnitude falling within the expressly stated ranges or limitations e.g. from about 1 to about 10 includes 2 3 4 etc. greater than 0.10 includes 0.11 0.12 0.13 etc. . For example whenever a numerical range with a lower limit R and an upper limit R is disclosed any number falling within the range is specifically disclosed. In particular the following numbers within the range are specifically disclosed R R k R R wherein k is a variable ranging from 1 percent to 100 percent with a 1 percent increment i.e. k is 1 percent 2 percent 3 percent 4 percent 7 percent . . . 70 percent 71 percent 72 percent . . . 97 percent 96 percent 97 percent 98 percent 99 percent or 100 percent. Moreover any numerical range defined by two R numbers as defined in the above is also specifically disclosed. The use of the term about means 10 of the subsequent number unless otherwise stated. Use of the term optionally with respect to any element of a claim means that the element is required or alternatively the element is not required both alternatives being within the scope of the claim. Use of broader terms such as comprises includes and having should be understood to provide support for narrower terms such as consisting of consisting essentially of and comprised substantially of. Accordingly the scope of protection is not limited by the description set out above but is defined by the claims that follow that scope including all equivalents of the subject matter of the claims. Each and every claim is incorporated as further disclosure into the specification and the claims are embodiment s of the present disclosure. The discussion of a reference in the disclosure is not an admission that it is prior art especially any reference that has a publication date after the priority date of this application. The disclosure of all patents patent applications and publications cited in the disclosure are hereby incorporated by reference to the extent that they provide exemplary procedural or other details supplementary to the disclosure.

While several embodiments have been provided in the present disclosure it should be understood that the disclosed systems and methods might be embodied in many other specific forms without departing from the spirit or scope of the present disclosure. The present examples are to be considered as illustrative and not restrictive and the intention is not to be limited to the details given herein. For example the various elements or components may be combined or integrated in another system or certain features may be omitted or not implemented.

In addition techniques systems subsystems and methods described and illustrated in the various embodiments as discrete or separate may be combined or integrated with other systems modules techniques or methods without departing from the scope of the present disclosure. Other items shown or discussed as coupled or directly coupled or communicating with each other may be indirectly coupled or communicating through some interface device or intermediate component whether electrically mechanically or otherwise. Other examples of changes substitutions and alterations are ascertainable by one skilled in the art and could be made without departing from the spirit and scope disclosed herein.

