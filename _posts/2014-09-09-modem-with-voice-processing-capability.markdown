---

title: Modem with voice processing capability
abstract: A system is configured to facilitate bidirectional voice communication between a number of data and/or telephony devices.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=RE046142&OS=RE046142&RS=RE046142
owner: Broadcom Corporation
number: RE046142
owner_city: Irvine
owner_country: US
publication_date: 20140909
---
The present application is a reissue of U.S. application Ser. No. 13 092 255 filed Apr. 22 2011 now U.S. Pat. No. 8 582 577 which is a continuation of patent U.S. application Ser. No. 09 949 811 filed Sep. 12 2001 now U.S. Pat. No. 7 933 295 which is a continuation in part of patent U.S. application Ser. No. 09 737 175 filed Dec. 13 2000 now U.S. Pat. No. 7 023 868 which is a continuation in part of patent U.S. application Ser. No. 09 548 400 filed Apr. 13 2000 now U.S. Pat. No. 6 765 931. Application U.S. application Ser. No. 09 548 400 claims priority to the benefit of the following provisional applications U.S. Application Ser. No. 60 129 134 filed Apr. 13 1999 U.S. Application Ser. No. 60 136 685 filed May. 28 1999 U.S. Application Ser. No. 60 160 124 filed Oct. 18 1999 U.S. Application Ser. No. 60 170 595 filed Dec. 13 1999 and U.S. Application Ser. No. 60 170 592 filed Dec. 13 1999. Each of these applications is expressly incorporated herein by reference as though fully set forth in full.

The present invention relates generally to telecommunications systems and more particularly to a system for interfacing telephony devices with DOCSIS compatible network

Traditional dial up modems provide online access through the public telephone network at up to 56 Kbps equal to 56 000 bits per second . A cable modem on the other hand provides users with high speed Internet access through a cable television network. Cable modem is capable of providing data rates as high as 56 Mbps and is thus suitable for high speed Internet access digital television such as pay per view and digital telephony.

In one aspect of the present invention a cable modem includes a network port to interface with a cable head end a telephony port to interface with a telephony device a data port to interface with a data terminal and a processor coupled to each of the ports.

In another aspect of the present invention a gateway includes a network port to interface with a cable head end a telephony port to interface to a telephony device a data port to interface to a data terminal a processor coupled to each of the ports and a transceiver disposed between the processor and the network port the transceiver being capable of transmitting and receiving packets of voice signals packets of data signals and a television signal.

In a further aspect of the present invention a method of processing signals includes exchanging voice signals between a cable head end and a telephony device exchanging data signals between the cable head end and a data terminal and receiving a television signal from the cable head end.

In a still further aspect of the present invention a cable modem includes a first network port to interface with a cable head end a second network port to interface with a local area network and a processor coupled to each of the ports.

In a still further aspect of the present invention a gateway includes a first network port to interface with a cable head end a second network port to interface to a local area network a processor coupled to each of the ports and a transceiver disposed between the processor and the first network port the transceiver being capable of transmitting and receiving packets of voice signals packets of data signals and a television signal.

In a still further aspect of the present invention a method of processing signals includes exchanging voice signals between a cable head end and a local area network exchanging data signals between the cable head end and the local area network and receiving a television signal from the cable head end.

In one aspect of the present invention a method of synchronizing data clocked by a first clock to a second clock includes generating a clock error signal as a function of one or more data control flags and fractionally resampling the data as a function of the offset.

In another embodiment of the present invention a synchronization circuit includes an error generation unit that generates a clock error signal as a function of an average far end sampling rate and a near end sampling rate and a sample tracker adapted to receive sampled data packets wherein the sample tracker fractionally resamples the sampled data as a function of the clock error signal.

In a further aspect of the present invention a network gateway adapted to exchange voice signals between a network line at a first clock frequency and a packet based network at a second clock frequency includes a network port to interface with a packet based network a telephony port to interface with a telephony device a processor coupled to each of the ports and a voice synchronizer coupled between the network and telephony ports. The voice synchronizer includes an error generation unit for generating a clock error signal in accordance with the ratio of the first and second clocks and a sample tracker that receives sampled data packets and fractionally resamples the sampled data as a function of the clock error signal.

In an exemplary embodiment of a cable modem system a headend or cable modem termination system CMTS is located at a cable company facility and functions as a modem which services a large number of subscribers. Each subscriber has a cable modem CM . Thus the cable modem termination system must be capable of facilitating bidirectional communication with any desired one of the plurality of cable modems.

As used herein the cable modem termination system CMTS is defined to include that portion of a headend which facilitates communication with a number of cable modems. A typical cable modem termination system includes a burst receiver a continuous transmitter and a medium access control MAC .

The cable modem termination system communicates with the cable modems via a hybrid fiber coaxial HFC network wherein optical fiber provides communication to a number of fiber nodes and each fiber node typically serves approximately 500 to 2 000 subscribers which communicate with the node via coaxial cable. The subscribers communicate with the fiber node via a common or shared coaxial cable.

The HFC network of a cable modem system utilizes a point to multipoint topology to facilitate communication between the cable modem termination system and the cable modems. Frequency domain multiple access FDMA time division multiplexing TDM is used to facilitate communication from the cable modem termination system to each of the cable modems i.e. in the downstream direction. Frequency domain multiple access FDMA time domain multiple access TDMA is used to facilitate communication from each cable modem to the cable modem termination system i.e. in the upstream direction.

The cable modem termination system includes a downstream modulator for transmitting data communications to the cable modems and an upstream demodulator for receiving data communications from the cable modems.

The downstream modulator of the cable modem termination system generally utilizes either 64 QAM or 256 QAM in a frequency band of 54 MHz to 860 MHz to provide a data rate of up to 56 Mbps. Since the upstream channel has a much lower data rate requirement the upstream demodulator may use either QPSK or 16 QAM in a frequency range of 5 MHz to 42 MHz to provide a data rate of up to 10 Mbps.

Similarly each cable modem includes an upstream modulator for transmitting data to the cable modem termination system and a downstream demodulator for receiving data from the cable modem termination system. In the described exemplary embodiment the upstream modulator of each cable modem typically uses either QPSK or 16 QAM within the 5 MHz to 42 MHz bandwidth of the upstream demodulator and the downstream demodulator of each cable modem may use either 64 QAM or 256 QAM in the 54 MHz to 860 MHz bandwidth of the downstream modulator in North America . As those skilled in the art will appreciate other modulation schemes may be used depending on the application.

In order to accomplish TDMA for upstream communication time slots may be assigned to each cable modem within which cable modems may transmit communications to the cable modem termination system. The assignment of such time slots is accomplished by providing a request contention area in the upstream data path within which the cable modems are permitted to contend in order to place a message which requests additional time in the upstream data path for the transmission of their message. The cable modem termination system responds to these requests by assigning time slots to the cable modems making such a request so that as many of the cable modems as possible may transmit their messages to the cable modem termination system utilizing TDMA and so that the transmissions are performed without undesirable collisions.

Because of the use of TDMA the cable modem termination system uses a burst receiver rather than a continuous receiver to receive packets of information from the cable modems via upstream communications. As those skilled in the art will appreciate a continuous receiver may be utilized where generally continuous communications as opposed to burst communications as in the present invention are performed so as to substantially maintain timing synchronization between the cable modem transmitter and the CMTS receiver for proper reception of the communicated information. During continuous communications timing recovery is a more straightforward process since signal acquisition generally only occurs at the initiation of such communications. Thus acquisition is generally only performed in continuous receivers once per continuous transmission and each continuous transmission may be very long.

However the burst communications inherent to TDMA systems entail periodic and frequent reacquisition of the signal. That is during TDMA communications the signal is reacquired for each separate burst transmission being received.

Referring now to a hybrid fiber coaxial HFC network facilitates the transmission of data between a headend which includes at least one cable modem termination system and a number of homes each of which contains a cable modem. Such hybrid fiber coaxial networks are commonly utilized by cable providers to provide Internet access cable television pay per view and the like to subscribers. An exemplary CMTS for use with the present invention is disclosed in commonly owned U.S. patent application Ser. No. 09 574 558 entitled CABLE MODEM APPARATUS AND METHOD filed May 19 2000 the content of which is incorporated fully herein by reference. In this and other embodiments common reference numerals may be used to represent like components.

Approximately 500 homes are in electrical communication with each node of the hybrid fiber coaxial network typically via coaxial cables . Amplifiers facilitate the electrical connection of the more distant homes to the nodes by boosting the electrical signals so as to desirably enhance the signal to noise ratio of such communications and by then transmitting the electrical signals over coaxial cables . Coaxial cable electrically interconnects the homes with the coaxial cables which extend between amplifiers and nodes . Each node is electrically connected to a hub typically via an optical fiber . The hubs are in communication with the headend via optical fibers . Each hub is typically capable of facilitating communication with approximately 20 000 homes .

The optical fibers extending intermediate the headend and each hub define a fiber ring which is typically capable of facilitating communication between approximately 100 000 homes and the headend . The headend may include video servers satellite receivers video modulators telephone switches and or Internet routers as well as the cable modem termination system. The headend communicates via transmission line which may be a T1 or T2 line with the Internet other headends and or any other desired device s or network.

In an exemplary embodiment of the present invention a network gateway may facilitate on line and off line bi directional communication between a number of near end data or telephony devices and far end data termination devices via a cable modem termination system. An exemplary topology is shown in with a network gateway a providing an interface to HFC network a for a telephone a fax machine a and modem a through a subscriber loop interface circuit SLIC . The network gateway a also provides an interface to the a HFC network for a telephone b a fax machine b and a modem b through an audio processor circuit . The described exemplary network gateway a may also couple a local area network LAN and a universal synchronous bus USB access to the HFC network a. The HFC network is coupled to a CMTS line card in the CMTS . The CMTS line card is coupled to a packet based network router to determine whether the communication will be transported via a far end HFC network b a far end PSTN network or the Internet. The packet based network router facilitates communication between the near end data devices and off line far end data terminating devices via a circuit switched networks such as the public switched telephone network PSTN and a PSTN gateway .

In the case of a far end HFC network a network gateway b provides an interface between the far end data termination devices B and the far end HFC network b connected to the CMTS . Data termination devices include by way of example analog and digital phones ethernet phones Internet Protocol phones fax machines data modems cable modems interactive voice response systems PBXs key systems and any other conventional telephony devices known in the art. One of skill in the art will appreciate that the described exemplary network gateway is not limited to a telephony interface to the HFC network but rather may interface with a variety of communication media such as for example asymmetric digital subscriber line ADSL DSL T1 or other networks known in the art. Therefore the described hybrid fiber coaxial network a is by way of example only and not by way of limitation.

An exemplary embodiment of the network gateway is shown schematically in . The described exemplary embodiment is implemented by a highly integrated single chip solution that is compliant with the Data Over Cable Service Interface Specification DOCSIS . DOCSIS was developed to ensure that cable modem equipment built by a variety of manufacturers is compatible as is the case with traditional dial up modems. The described exemplary embodiment can provide integrated functions for communicating with the CMTS. For example a QPSK upstream modulator transmits data to the far end data terminating device and a QAM downstream demodulator receives data from the far end data terminating device via a CMTS.

In an exemplary embodiment of the present invention a power splitter not shown may divide the downstream signal into two approximately half power signals. One of the signals may then be coupled to a subscriber s television via a shutoff relay not shown and the other is coupled to the downstream demodulator. In accordance with an exemplary embodiment a remote cable operator may command the MIPS core to shut off a subscribers access to the cable television signal via the QAM downstream demodulator. In response the MIPS core may issue a command to the shut off relay not shown effectively blocking access to the television signal. In addition the described exemplary embodiment can support multiple inputs in accordance with a variety of protocols. For example a universal serial bus USB transceiver and USB MAC support transparent bi directional IP traffic between devices operating on a USB such as for example a PC workstation server printer or other similar devices and the far end data terminating device. Additionally an I.E.E 802.3 compliant media independent interface MII in conjunction with an Ethernet MAC provide bi directional data exchange between devices such as for example a number of PCs and or Ethernet phones operating on an Ethernet and the far end data terminating device. Further a voice and data processor processes and exchanges voice as well as fax and modem data between packet based networks and telephony devices.

In an exemplary embodiment of the present invention the QAM downstream demodulator may utilize either 64 QAM or 256 QAM in the 54 to 860 MHz bandwidth to interface with the CMTS. The QAM downstream demodulator accepts an analog signal centered at the standard television IF frequencies amplifies and digitizes the signal with an integrated programable gain amplifier and A D converter. The digitized signal is demodulated with recovered clock and carrier timing. Matched filters and then adaptive filters remove multi path propagation effects and narrowband co channel interference. Soft decisions are then passed off to an ITU T J.83 Annex A B C compatible decoder. The integrated decoder performs error correction and forwards the processed received data in either parallel or serial MPEG 2 format to a DOCSIS Media Access Controller MAC .

The DOCSIS MAC may include baseline privacy encryption and decryption as well as robust frame acquisition and multiplexing with MPEG2 TS compliant video and audio streams. The DOCSIS MAC implements the downstream portions of the DOCSIS protocol. The DOCSIS MAC extracts DOCSIS MAC frames from MPEG 2 frames processes MAC headers and filters and processes messages and data.

Downstream data packets and message packets may then be placed in system memory by a SDRAM interface via an internal system bus . The SDRAM interface preferably interfaces to a number of off the shelf SDRAMs which are provided to support the high bandwidth requirements of the Ethernet MAC and other peripherals. In the described exemplary embodiment the SDRAM interface may support multiple combinations of 8 16 or 32 bit wide SDRAMs allowing for external data storage in the range of about 2 to 32 MBytes. The DOCSIS MAC includes a number of direct memory access DMA channels for fast data access to and from the system memory via the internal system bus .

The DOCSIS MAC can also implement the upstream portions of the DOCSIS protocol before transmission by the upstream modulator . The DOCSIS MAC receives data from system memory via a DMA channel requests bandwidth and frames the data for TDMA with other modems on the same upstream frequency.

The upstream modulator provides an interface with the CMTS. The upstream modulator may be configured to operate with numerous modulation schemes including for example QPSK and 16 QAM. In the described exemplary embodiment the upstream modulator supports bursts or continuous data provides forward error correction FEC encoding and pre equalization filters and modulates the data stream and provides a direct 0 65 MHz analog output.

The DOCSIS MAC interfaces with MIPS core via the ISB . An exemplary embodiment of the MIPS core includes a high performance CPU operating at a speed of at least 80 MHz with 32 bit address and data paths. In an exemplary embodiment of the present invention the MIPS core includes two way set associative instruction and data caches on the order of about 4 kbytes each. Further the MIPS core may provide standard EJTAG support with debug mode run control single step and software breakpoint instruction as well as additional optional EJTAG features.

In the described exemplary embodiment the MIPS core controls the upstream modulator and the downstream demodulator via a serial interface that is compatible with a subset of the Motorola M Bus and the Philips IC bus. The interface consists of two signals serial data SDA and serial clock SCL which may control a plurality of devices on a common bus. The addressing of the different devices may be accomplished in accordance with an established protocol on the two wire interface.

The described exemplary embodiment of the network gateway includes a full speed universal serial bus USB transceiver and USB MAC that is compliant with the USB 1.1 specification. The USB MAC and USB transceiver provide two way communication of information to a device operating on a USB such as for example a PC on a USB 1.1 compliant twisted pair. In an exemplary embodiment of the present invention the USB MAC provides concurrent operation of control bulk isochronous and interrupt endpoints. The USB MAC may also support standard USB commands as well as class vendor specific commands. The USB MAC includes integrated RAM that allows flexible configuration of the device. The USB MAC can be arranged for hardware fragmentation of higher layer packets from USB packets with automatic generation and detection of zero length USB packets.

The USB MAC may include DMA channels which are used to communicate received data to the system memory via the internal system bus . Data stored in system memory may then be processed and communicated to the cable modem termination system not shown via the DOCSIS MAC and the upstream modulator . Similarly data received from the cable modem termination system and processed by the downstream demodulator and stored in system memory as higher layer packets can be retrieved by the USB MAC via the ISB and assembled into USB packets with automatic generation of zero length USB packets. USB packets may then be communicated to the external device operating on the USB via the USB transceiver .

In the described exemplary embodiment the media independent interface MII and the Ethernet MAC provide bi directional communication with devices such as for example a personal computer PC operating on an Ethernet. The media independent interface forwards data to and receives information from the Ethernet MAC . The Ethernet MAC can also perform all the physical layer interface PHY functions for 100BASE TX full duplex or half duplex Ethernet as well as 10BBASE T full or half duplex. The Ethernet MAC may also decode the received data in accordance with a variety of standards such as for example 4B5b MLT3 and Manchester decoding. The Ethernet MAC can perform clock and data recovery stream cipher de scrambling and digital adaptive equalization. The Ethernet MAC may include DMA channels which are used for fast data communication of processed data to the system memory via the internal system bus . Processed data stored in system memory may then be communicated to the cable modem termination system not shown via the DOCSIS MAC and the upstream modulator . Similarly data received from the cable modem termination system is processed by the downstream demodulator and stored in system memory as higher layer packets that are retrieved by the Ethernet MAC via the ISB and encoded into Ethernet packets for communication to the external device operating on the Ethernet via the MII . The Ethernet MAC may also perform additional management functions such as link integrity monitoring etc.

Home phone network alliance HPNA protocol allows for 4 32 Mbits sec LAN using existing in home telephone wiring. HPNA controller is a fully integrated MAC PHY device that provides bi directional communication with devices such as for example a HPNA phone computer etc. operating on a HPNA network. The HPNA controller may include DMA channels which are used for fast data communication of processed data to the system memory via the internal system bus . In the described exemplary embodiment the HPNA controller includes a digital PHY having a FDQAM QAM transmitter and receiver coupled between an analog front end and HPNA MAC .

In an exemplary embodiment of the present invention the HPNA PHY uses 4 MBaud QAM modulation and 2 MBaud Frequency Diverse QAM FDQAM with two to eight bits per Baud constellation encoding. The PHY layer payload modulation rate therefore ranges from 4 Mb s to 32 Mb s. The modulation techniques are set forth in U.S. patent application Ser. No. 09 169 552 entitled Frequency Diverse Single Carrier Modulation For Robust Communication Over In Premises Wiring which is incorporated herein by reference. Information is transmitted on the transmission medium channel in bursts. Each burst or physical layer frame consists of PHY layer payload information encapsulated with a PHY preamble header and postamble. The PHY layer payload in each physical frame is that part of the Ethernet link level frame that follows the Ethertype field through the frame check sequence FCS plus a CRC 16 and a pad field for the 4 Mbaud rate. Hereafter payload refers to the PHY layer payload unless otherwise specified.

In the described exemplary embodiment the HPNA MAC is modeled after the carrier sense multiple access with collision detection CSMA CD MAC function of Ethernet IEEE Std 802.3 1998 Edition adapted to the V2 PHY and enhanced with quality of service QoS features. The Carrier Sense Multiple Access Collision Detect CSMA CD media access method is the means by which two or more stations share a common transmission channel. To transmit a station waits defers for a quiet period on the channel that is no other station is transmitting and then sends the intended message modulated as per the PHY characteristics. The transmission deferral is ordered by up to eight priority levels implementing absolute priority among stations contending for access. If after initiating a transmission the message collides with that of another station each transmitting station ceases transmission and resolves the collision by choosing a backoff level and defers to other stations that have chosen a lower backoff level. The distributed algorithm for choosing a backoff level tightly bounds the access latency.

An exemplary HPNA MAC therefore includes carrier sense logic collision detection logic and CSMA CD collision resolution rx frame synchronization logic. Carrier sense logic detects the starting and ending times of a valid frame transmission on the wire. This is used to determine when frames are present on the channel transmission medium as well to detect the presence of a backoff signal in a signal slot. Collision detection logic detects the presence of a valid frame transmission from some other station during an active transmission and for all stations including non transmitting stations detects the received fragment that represents a transmission truncated by a collision. Collision resolution logic implements the distributed algorithm that controls backoff.

In the downstream direction the HPNA controller interfaces with the MIPS core via a bus interface that is couple to the ISB . The HPNA MAC encapsulates messages with a data layer header and start of frame SOF indicator. The HPNA MAC may also add data trailer and end of frame indicators. The MAC header may include a source address SA to identify the node sending the message and may also include a destination address DA to identify the intended recipient or group of recipients. The message with appended headers trailers and indicators is passed to the Physical layer where it is passed on to network transmission medium. In the upstream direction the reverse process occurs wherein the HPNA MAC receives messages from the Physical layer and the HPNA MAC strips off the header and or trailer information and places the message in system memory SDRAM via the ISB for transmission upstream to the CMTS.

In addition to the SDRAM interface the described exemplary embodiment of the network gateway includes an external bus interface EBI that supports connection to flash memory external SRAM or EPROMS . Additionally the EBI may be used to interface the described exemplary network gateway with additional external peripherals. The EBI can provide a 24 bit address bus and a 16 bit bi directional data bus. Separate read and write strobes can be provided along with multiple firmware configurable chip select signals. Each chip select can be fully programmable supporting block sizes between about 4 K bytes and 8 M bytes extended clock cycle access control and 8 or 16 bit selection of peripheral data bus width. In the described embodiment the EBI can support both synchronous and asynchronous transfers. Pseudonymous transfers may be supported through the use of read write strobes to indicate the start and duration of a transfer. The EBI can include DMA access capability to or from the SDRAM interface . The DMA operation may take one or more forms. For example in EBI mode an EBI bridge can act as the DMA controller and perform all pointer and buffer management tasks during DMA operations. In an external mode an external device can act as the DMA controller and the EBI can serve as a simple bridge. In DMA mode the MIPS core can be responsible for DMA setup.

The network gateway may be vulnerable to network breaches due to peripheral devices such as PCs employing windows or network Macintosh computers. Therefore the exemplary embodiment of the gateway includes IP security module that interfaces with the ISB . In the described exemplary embodiment the MIPS core can set up and maintain all security associations. The MIPS core can also filter all IP traffic and route any messages requiring security processing to the security module via the ISB . The IP security module may support single DES CBC and ECB modes triple DES CBC and ECB modes MD 5 and SHA authentication in hardware to provide support for virtual private networks.

The IP security module can implement the basic building blocks of the developing IP Security Standard IPsec . The IP security module may also implement other security schemes that use the same basic two protocol technique as IPsec to provide traffic security. A first protocol IP encapsulating security payload ESP provides private data privacy with encryption and limited traffic flow confidentiality. ESP may also provide connectionless integrity data source authentication and an anti replay service. A second format IP authentication header AH provides connectionless integrity data source authentication and an optical anti replay service. Both protocols may be used to provide access based on the distribution of cryptographic keys and the management of traffic flows. The protocols may be used alone or in combination to satisfy the security requirements of a particular system. In addition the security module can support multiple modes of operation depending on a security association to the traffic carried by a simplex connection. For example transport mode security association between two hosts primarily protects protocols above the IP layer while tunnel mode security association provides security and control to a tunnel of IP packets.

An exemplary security module addresses possible differences in packet format between IPsec and future security applications with a generalized scheme to determine where the authentication encryption algorithms are applied within a data packet. The authentication encryption algorithms consider each packet to consist of three parts a header body and trailer. The appropriate algorithm can be applied using any specified parameters to the body section only.

In encryption mode the security module can add and initialize any necessary headers determine necessary parameters generate the associated control message and add the control and data message. In the authentication mode the control fields of the received data packets are parsed the parameters are determined via a security association lookup table a control message is created and the control and data messages are enqueued.

An exemplary embodiment of the network gateway also includes a DMA controller having a number of channels that enable direct access over the ISB between peripherals and the system memory . With the exception of the security module packets received by the network gateway cause DMA transfers from a peripheral to memory which is referred to as a receive operation. A DMA transfer from memory to a peripheral is referred to as a transmit operation. Programmable features in each channel allow DMA controller to manage maximum ISB burst lengths for each channel enable interrupts halt operation in each channel and save power when certain modules are not operational. The maximum ISB burst length may be programmed independently for each channel preferably up to sixty four 32 bit words.

In the described exemplary embodiment each channel may include maskable interrupts connected to the MIPS core that indicate buffer complete packet complete and or invalid descriptor detected. Busy DMA channels may be stalled or completely disabled by the MIPS core . Source clocks not shown for each channel can be connected to the channels based on the internal peripheral they service. For power reduction these clocks may be turned off and on coincident with the respective peripheral s clock.

The DMA controller can be operable in both non chaining and chaining mode. In the non chaining mode the DMA channel refers to its internal registers for the pertinent information related to a scheduled DMA burst transfer. The DMA controller can set up the buffer start address byte count and status word registers before initiating the DMA channel for each allocated buffer. In the transmit direction the DMA channels can send the specified number of bytes preferably up to 4095 from the specified byte address. In the receive direction the DMA channels can insert data into a specified memory location until a buffer has been completely filled or the end of a packet is detected.

In the chaining mode the system memory can be partitioned as shown in preferably using descriptor rings containing pointers to memory buffers as well as status information for each memory buffer. The MIPS core can write the descriptor pointers while the DMA controller follows by inserting taking data into from the location designated by the descriptor. Upon completion of the transfer of a buffer the DMA controller effectively clears the descriptor by updating the status to indicate that the data has been inserted taken. Specific information may be added to the descriptor to indicate for example the length of data in the block or to specify whether the data is the first or last block of a packet.

In the downstream direction the MIPS core can fill or recognize a data block for a particular DMA channel then write the next unused descriptor in the ring indicating that the block is filled and where the downstream data exists in memory. The DMA controller can follow the DSP write to the descriptor ring sending out data and clearing the descriptor when the transfer is complete. When the DMA controller reads a descriptor that does not contain valid data it can go idle until initiated by the MIPS core.

In the upstream direction the MIPS core allocates memory space for incoming data then writes the descriptor with the start address for that buffer. The DMA controller reads the base address and inserts data until either the buffer is full or an end of packet has been detected. The DMA controller can update the descriptor communicating to the MIPS core that the block is full indicating the length of the data on the block and or asserted first and or last buffer flags.

Referring back to the described exemplary network gateway includes the voice and data processor for processing and transporting voice over packet based networks such as PCs running network on a USB Universal Serial Bus or an asynchronous serial interface Local Area Networks LAN such as Ethernet Wide Area Networks WAN such as Internet Protocol IP Frame Relay FR Asynchronous Transfer Mode ATM Public Digital Cellular Network such as TDMA IS 13x CDMA IS 9x or GSM for terrestrial wireless applications or any other packet based system. The described embodiment of the voice and data processor also supports the exchange of voice as well as fax and modem between a traditional circuit switched network or any number of telephony devices and the CMTS not shown . The voice and data processor may be implemented with a variety of technologies including by way of example embedded communications software that enables transmission of voice over packet based networks.

The embedded communications software is preferably run on a programmable digital signal processor DSP . In an exemplary embodiment the voice and data processor utilizes a ZSP core from LSI Logic Coreware library for mid to high end telecommunications applications. In the described exemplary embodiment the DSP core includes internal instruction RAM and internal data RAM . The voice and data processor interfaces with the internal system bus via a DSP ISB interface and the peripheral bus via the DSP PB interface .

The voice and data processor may include a grant synchronizer that ensures timely delivery of voice signals to the MIPS core for upstream transmission. In addition a PCM interface provides the voice and data processor with an interface to an internal audio processor as well as external audio processing circuits not shown to support constant bit rate CBR services such as telephony. The PCM interface provides multiple PCM channel controllers to support multiple voice channels. In the described exemplary embodiment of the network gateway there are four sets of transmit and receive FIFO registers one for each of the four PCM controllers. However the actual number of channels that may be processed may vary and is limited only by the performance of the DSP. The internal system bus is used to transfer data control and status messages between the voice and data processor and the MIPS core . FIFO registers are preferably used in each direction to store data packets.

The described exemplary embodiment of the gateway includes the internal audio processor with an analog front end that interface the voice and data processor with external subscriber line interface circuits SLICs for bi directional exchange of voice signals. The audio processor may include programmable elements that implement filters and other interface components for a plurality of voice channels.

In the transmit mode the analog front end accepts an analog voice signal and digitizes the signal and forwards the digitized signal to the audio processor . The audio processor decimates the digitized signal and conditions the decimated signal to remove far end echos. As the name implies echo in telephone systems is the return of the talker s voice resulting from the operation of the hybrid with its two four wire conversion. The audio processor can apply a fixed gain attenuation to the conditioned signal and forwards a gain adjusted signal to the voice and data processor via the PCM interface . In the receive mode the audio processor accepts a voice signal from the PCM interface and preferably applies a fixed gain attenuation to the received signal. The gain adjusted signal is then interpolated from 8 kHz to 96 kHz before being D A converted for communication via a SLIC interface to a telephony device.

In the described exemplary embodiment each audio channel can be routed to a PCM port to allow for system level PCM testing. The PCM system tests by way of example may require compliance with ITU G.711 for A law and law encoding decoding.

The described exemplary embodiment of the network gateway further includes integrated peripherals including independent periodic interval timers a dual universal asynchronous receiver transmitter UART that handles asynchronous serial communication a number of internal interrupt sources and a GPIO module that provides multiple individually configurable input output ports. In addition multiple GPIO ports can be provided to drive various light emitting diodes LEDs and to control a number of external SLICs. A peripheral bus bridge can be used to interface the low speed peripheral to the internal system bus .

The DOCSIS downstream demodulator can support 64 256 QAM. Referring to the downstream demodulator accepts an analog IF input signal amplifies and digitizes the input signal with an integrated programable gain amplifier PGA and an A D converter . An on chip gain recovery loop circuit controls the PGA to provide an on chip automatic gain control AGC function. Timing recovery and clock generation includes an on chip voltage controlled oscillator not shown that can be locked to an off chip crystal to control the sampling of the A D converter . The stability of the crystal reference allows for accurate sub sampling of the IF signal to produce a digital data stream centered on a lower IF center frequency.

A digital demodulator demodulates the digitized output a of the A D converter with recovered clock and carrier timing. The digital demodulator includes digital mixers that mix a complex data stream generated by a direct digital frequency synthesizer DDFS with the digitized signal a . The timing recovery loop controls the timing of the DDFS . Matched interpolation filters convert mixer outputs to in phase I and quadrature phase Q baseband signals correctly sampled in both frequency and phase. Dual square root Nyquist filters which may accommodate 11 18 roll off factors filter the I Q baseband signals to reduce inter symbol interference. In addition notch filters may be used to substantially reduce narrowband co channel interference caused by intermodulation products from analog CATV channels. The notch filters preferably place notches in the frequency spectrum at the frequencies of these subcarrier.

The downstream demodulator preferably includes a configurable multi tap decision directed equalizer . In the described exemplary embodiment a 40 tap equalizer is used to remove intersymbol interference generated by worst case coaxial cable channels with multipath spreads of up to 4.5 sec at 5.26 Mbaud. Blind convergence algorithms facilitate equalizer acquisition.

In addition to adaptive equalization the configurable multi tap decision directed equalizer performs phase recovery on the equalized constellation points using a quadrature synthesizer and complex mixer under the control of the carrier recovery loop to track out residual carrier offsets and instantaneous phase offsets such as those caused by tuner microphonics. The output of the adaptive equalizer phase recovery block is coupled to a forward error correction FEC decoder . The FEC decoder can support numerous decoders including ITU T J.83 Annex A B C compatible decoders.

The Annex A C decoder consists of four major functions frame synchronization convolution de interleaving Reed Solomon error correction and de randomization. Hard decisions are preferably input into the frame synchronization block which locks onto the inverted sync bit pattern. The MIPS core sets the characteristics of the frame synchronization acquisition and retention via a CPU interface . Once synchronized data interleaving is removed by the convolution de interleaver. The de interleaver can be based on the Ramsey III approach and can be programmable to provide depths from I 1 204 with J 204 I. An on chip RAM can provide for I 1 12. After de interleaving the data symbols are processed by a Reed Solomon decoder which can correct up to eight symbol errors per RS block. The decoded symbols are then de randomized which substantially undoes the randomization inserted at the modulator. The de randomized output consists of MPEG 2 serial or parallel data packet sync and a data clock.

The Annex B decoder includes five layers trellis decoding de randomization convolution de interleaving Reed Solomon decoding and checksum decoding. The Annex B concatenated coding scheme along with interleaving provides good coding gain to combat Gaston noise while still protecting against burst errors. Soft decisions from the adaptative equalizer are input to the trellis decoder which estimates the maximum likelihood of a sequence. The output sequences are forwarded to a frame synchronization and de randomization block similar to those described for the Annex A C decoders. A Reed Solomon decoder preferably corrects up to three symbol errors per RS block. The checksum decoder accurately identifies block containing uncorrectable errors. The downstream demodulator outputs MPEG 2 serial or parallel data packet sync and a data clock to the DOCSIS MAC.

The downstream demodulator also includes two AGC loops which provide control for both RF and IF variable gain amplifiers GAS . The gain control allocated to each loop may be established via a CPU interface . The RF gain control loop may be closed at the tuner AGC while the IF loop may be completed with either an off chip VGA not shown or preferably with the internal PGA . The power of the internal IF signal is estimated and compared to a programmable threshold. If the estimated power exceeds the threshold the appropriate AGC integrator is incremented by a programmable value. If the estimated power is less than the threshold the appropriate AGC integrator is decremented by a comparable amount. The timing recovery loop may include a timing error discriminant a loop filter and a digital timing recovery block which controls the digital re sampler. The carrier frequency phase recovery and tracking loops are all digital loops which simultaneously offer a wide acquisition range and a large phase noise tracking ability. The loops may use decision directed techniques to estimate the angle and direction for phase frequency compensation. The loops can be filtered by integral plus proportional filters in which the integrator and linear coefficients of the filter are programmable to provide the means for setting the loop bandwidths. The upper bits of the loop filter can control the direct frequency synthesizer providing both accurate frequency generation and fine phase resolution.

In the described exemplary embodiment the downstream demodulator uses an on chip VCO not shown referenced to a single off chip crystal which can provide all required chip clocks. In addition a spare D A demodulator provides a 1 bit pulse width modulated signal which may be used with an off chip RC filter. In addition the downstream demodulator may provide tuner control ports that may be used to program two serially controlled tuner phase locked loop PLL frequency synthesizers.

Referring to the upstream modulator can support QPSK and 16 QAM processing of burst or continuous data signals a received from the DOCSIS MAC. Burst encoding logic includes FIFO registers and a FEC encoder preamble prepend and symbol mapper. The burst FIFO register decouples the input data rate from the transmission data rate and allows data to be input while a burst is being actively transmitted. The FEC encoder processes data stored in the FIFO. The FEC encoder may be a Reed Solomon encoder with data randomization. In the described exemplary embodiment the parallel to serial conversion of bytes entering the randomizer and serial to parallel conversion of bits leaving the randomize may be programmed to be most significant bit MSB or least significant bit LSB first. The encoder may be programmed to correct from zero to ten symbol errors per RS block. The FEC encoder may also be configured to integrate the randomize before or after the RS encoder. A programmable preamble of up to 1024 bits may then be added to the data burst and the completed data burst can then be mapped into 90 degree DQPSK QPSK or 16 QAM.

The output of the burst encoding logic is coupled to a pre equalizer that may be selectively enabled to pre distort the transmitted waveform to offset the effects of intersymbol interference ISI . The data burst is then shaped by square root Nyquist filters . In the described exemplary embodiment the square root Nyquist filters may have a selectable excess bandwidth factor in the range of about 25 to 50 . The maximum passband ripple of these filters is preferably less than about 0.05 dB and the minimum stopband attenuation is preferably greater than about 60 dB. The shaped signals are forwarded to interpolation filter banks which interpolate the signal to the sample rate. The outputs of these filters are then mixed or modulated onto quadrature carriers generated by a digitally tunable frequency synthesizer by mixers . The I and Q components are then combined by summer . The summer outputs a digital waveform carrying a data burst whose spectrum is preferably centered on the desired RF frequency to a D A converter . The D A converter converts the digital shaped output burst to an analog waveform. In the described exemplary embodiment a programmable gain attenuator can be used to provide up to about 25 dB attenuation in incremental steps on the order of about 0.4 dB.

In the described exemplary embodiment the DOCSIS media access controller MAC includes baseline privacy encryption and decryption transmission convergence support a TDM TDMA framer and a scatter gather DMA interface. The transmission convergence sub layer supports robust frame acquisition and multiplexing with MPEG TS compliant video and audio streams. The TDM TDMA preferably handles time synchronization with the cable modem termination system upstream MAP decoding bandwidth request generation and contention resolution. The DOCSIS MAC may be divided into four major functions downstream functions upstream functions DMA interface and miscellaneous control. The downstream functions of the DOCSIS MAC include receiving MPEG frames from the downstream demodulator extracting the DOCSIS MAC frames from the MPEG frames processing the MAC header filtering messages and data processing MAP and SYNC messages decrypting data packets if necessary and providing cyclic redundancy checks CRCs on the MAC payloads.

Referring to an exemplary DOCSIS MAC may include a downstream processor having a physical layer PHY interface that provides the interface to the downstream demodulator not shown . The downstream processor receives the incoming MPEG stream filters on the predefined PID and uses the offset value contained in the MPEG frame to locate and extract the MAC frames. The extracted MAC frames are passed to a MAC header processing block in a message processor and through a rate conversion FIFO not shown to a MAC header processing block in a downstream data encryption security DES processor that provides baseline security by decrypting QAM downstream traffic. The MAC header processing blocks not shown examine the MAC header for type wherein the MAC header processor in the message processor processes only MAC messages while the MAC header processor in the downstream DES processes packets that are not MAC messages.

The incoming MAC header is parsed for the presence of an extended header field. If the extended header field is present the MAC header processor block parses the extended header type length value TLV fields and searches for a baseline privacy header. Once the baseline privacy header has been located the MAC header processor forwards the associated value data to the downstream DES for further parsing and interpretation. With the exception of the baseline privacy extended header all other header types are preferably ignored by the MAC header processor. Both MAC header processing blocks determine the length of the extended header calculate the header check sequence HCS over the MAC header and compare the calculated HCS with that contained in the MAC header. In the described exemplary embodiment if the calculated HCS values do not match the HCS values contained in the MAC header the MAC processor preferably discards the packets and signals the PHY interface requesting re synchronization. Those packets where the calculated HCS values match the values contained in the MAC header the MAC header processor preferably generates control signals to flag the type of packet the beginning of the extended header the beginning of the protocol data unit PDU and the length of the PDU. The MAC header processor routes all PDUs matching the network gateway extended header type to the downstream DES for decryption. The message processor calculates the CRC over the message payload in accordance with the control signals generated by the MAC header processor and supplies data to the downstream DMA controller . There are a number of fault conditions on the DMA interface that require specific action. If an HCS fail is generated by the MAC header processor the DMA is prematurely terminated. If the CRC is correct the message processor preferably examines the type field of the message. The message processor extracts the time stamp from SYNC messages and passes these to a timing regeneration circuit . The timing regeneration circuit provides timing recovery using the time stamp values from the sync messages. In addition the message processor forwards messages that match the upstream channel ID and UCD change count to a MAP processor . The remaining messages with valid CRC are passed to a downstream message DMA through a rate adjustment FIFO not shown . If a FIFO full state is encountered the DMA discards the current packet flushes the FIFO and waits until the next packet arrives.

The downstream DES receives data packets and control signals from the header processor in the downstream processor . The downstream DES determines what type of filtering should be applied to the packet based on information contained in the MAC header. If a packet supports baseline privacy the downstream DES filters the packet based on the service flow identifier SID . The DES preferably decrypts packets using the key corresponding to the SID and even odd key bit in the baseline privacy header. The DOCSIS MAC does not perform decryption on packets that do not contain a baseline privacy header. The DES preferably filters packets based upon the destination address and forwards the filtered packets to a CRC processor not shown which calculates a CRC over the entire PDU payload. If the calculated CRC does not match the value stored in the packet a CRC error flag is set and the packet is marked as erred in the downstream DMA buffer.

The downstream DMA is used to transfer data to system memory not shown . The downstream DMA may have two channels one of which is used to transfer data into system memory the other is used to transfer message packets into memory. The two channels can be substantially identical in function. The downstream DMA can use structures in the memory to control transfer of information. The structures can be established and maintained by firmware. Data can be stored in regions of memory called particles. One structure contains a ring of buffer descriptors with each buffer descriptor describing particles in the shared memory. The DMA can store received downstream data in the particles and update the status and length in the buffer descriptor. The other structure is an additional ring of descriptors used to refer to single packets. Where a packet may be contained in any number of particles described by a like number of buffer descriptors there is only one packet descriptor associated with the packet.

In the described exemplary embodiment the upstream DMA includes a plurality of upstream channels that read upstream packet headers and protocol data units PDUs from system memory. The upstream DMA inserts the HCS CRC and piggyback fields when transferring packets to an upstream DES . The upstream DES examines the extended header to determine if encryption is enabled. If encryption is not enabled the upstream DES forwards the packet to the upstream processor otherwise if encryption is enabled the upstream DES preferably uses the SID and the even odd key bit in the extended header to perform a key lookup. The upstream DES then encrypts the packet and forwards the packet to the upstream processor .

The upstream processor extracts MAP information elements IEs from the MAP FIFO and compares the elements to a next upstream minislot count. If the counts match the upstream processor evaluates the type of slot described by the MAP information element. If the network gateway needs to respond to the information element the upstream processor preferably loads the appropriate physical layer parameters to the upstream modulator see and forwards the appropriate message or data packet. This operation depends on the slot type and status of the network gateway. The upstream processor preferably responds to initial maintenance slots and will ignore all station maintenance slots and requests until the MIPS core see signals that the network gateway has been initially ranged and assigned a SID temporary or permanent . The upstream processor responds to initial maintenance slots by extracting the ranging request message from internal memory that is programmed by the MIPS core. Once the network gateway has been initially ranged the upstream processor responds to station messages requests request data regions and grants and not to initial maintenance messages.

Once ranged the upstream processor monitors the upstream DMA queues. In the described exemplary embodiment there are sixteen independent upstream queues maintained by the upstream DMA . When a packet is ready for transmission the upstream processor randomly selects one of the available requests slots. The upstream processor then waits to receive a grant an acknowledgment grant with length zero or an ACK time past the time it sent its request upstream. If the upstream processor does not receive an acknowledgment or grant before the ACK time has past the upstream processor preferably uses truncated binary exponential back off to select another request slot to resend its request. Once granted the upstream processor signals the upstream DMA to begin extracting the packet from memory and forwarding the packet to the upstream DES for processing as described above. The upstream processor then forwards the packet to the upstream modulator not shown at the appropriate transmission time.

Referring to the integrated Ethernet MAC performs all the physical layer interface functions for 100BASE TX full duplex or half duplex Ethernet on CAT 5 twisted pair and 10BASE T full or half duplex Ethernet on CAT 3 4 or 5 twisted pair. The Ethernet MAC may be coupled directly to the Ethernet network via the media independent interface . In 100BASE TX mode the Ethernet MAC preferably monitors the twisted pair for transitions in the energy level of the received signal. Signals can be qualified using squelch detect circuits. The Ethernet MAC enters and remains in a link fail state when valid signals are not detected on the receive twisted pair. In the link fail state the Ethernet MAC preferably transmits only idle codes. When the Ethernet MAC detects a valid signal for a predetermined period the Ethernet MAC enters a link pass state and the appropriate transmit and receive functions are enabled.

The Ethernet MAC preferably provides the ability to negotiate its mode of operation over the twisted pair link using the auto negotiation mechanisms defined in the IEEE 802.3u specifications the contents of which are incorporated herein by reference as if set forth in full. Auto negotiation should be selectively enabled by the Ethernet MAC. When enabled the Ethernet MAC preferably chooses a mode of operation by advertising its abilities and comparing those abilities to those received from its link partner.

In the described exemplary embodiment the Ethernet MAC can receive a continuous data stream on twisted pair. A 100BASE TX data stream is not always DC balanced because the receive signal must pass through a transformer and therefore the DC offset of the differential receive input may wander. Baseline wander may reduce the noise immunity of the receiver. Wander correction logic can be used to compensate for baseline wander by removing the DC offset from the input signal thereby reducing the receive symbol error rate. Each receive channel of the Ethernet MAC can include an analog to digital converter ADC coupled to the output of the wander correction logic. The ADC output is forwarded to a digital adaptive equalizer that removes interzonal interference created by the transmission channel media. The described exemplary Ethernet MAC combines feed forward equalization and decision feedback equalization to achieve an optimal signal to noise ratio. The digital design increases tolerances to on chip noise and the filter coefficients preferably self adapt to any quality of cable or cable length. The adaptive equalizer can be bypassed in 10BASE TX mode which includes transmit pre equalization capability.

The Ethernet MAC may include a digital clock recovery generator system that creates all internal transmit and receive clocks. The transmit clocks can be synched to a 50 MHz clock input while the receive clocks are locked to the incoming data streams. Clock recovery circuits optimized to MLT3 and Manchester encoding schemes can be included for use with each of three different operating modes. The input data streams can be sampled by the recovered clock from each port and fed synchronously to the respective digital adaptive equalizer.

Following baseline wander correction adaptive equalization and clock recovery a data converter converts the received data stream from MLT3 to NRZ data. The NRZ data is descrambled by a stream cipher de scrambler . A de serializer is coupled to the output of the stream cipher descrambler and de serializes and aligns the data into 5 bit code groups. The 5 bit code groups are decoded into 4 bit data nibbles by a decoder . The start of stream delimiter is replaced with preamble nibbles and the end of stream delimiter and idle codes are replaced with zeros. When an invalid code group is detected in the data stream the Ethernet MAC asserts the MII receive error RXER signal which asserts several error conditions which can be used to improperly terminate the data stream. While RXER is asserted the receive data can be driven with 01 for an invalid data reception and 10 for a false carrier.

The preamble and start of frame delimiter SFD can be initially transmitted over the MII followed by transmission of actual data. If the packet is less than 64 bytes long all zero pad bytes can be appended to the frame. CRC generator automatically generates CRC which is appended if the packet is less than 64 bytes long.

An exemplary network gateway includes a USB 1.1 compliant full speed 12 M b sec device interface. The USB 1.1 specification defines an industry standard USB. The specification describes the bus attributes the protocol definition types of transactions bus management and the programming interface required to design and build systems and peripherals that are compliant with this standard. The USB 1.1 specification is incorporated herein by reference as if set forth in full. The USB can provide a ubiquitous link that can be used across a wide range of PC to telephone interconnects.

The USB interface in the described embodiment supports sixteen configurations four concurrent interfaces per configuration four alternative interfaces per interface and six concurrent endpoints. An endpoint is a uniquely identifiable portion of a USB device that is the termination of a data path between the host e.g. MIPS core and device. Each USB logical device is composed of a collection of independent endpoints. Each logical device has a unique address assigned by the system at device attachment time. Each endpoint on a device is assigned a unique device determined identifier called the endpoint number. Each endpoint has a device determined direction of data flow. The combination of the device address endpoint number and direction allows each endpoint to be uniquely referenced. Each endpoint is a simplex connection that supports data flow in one direction either input from device to host or output from host to device . An endpoint has characteristics that determine the type of transfer service required between the endpoint and the client software.

The USB MAC can support multiple configurations interfaces alternative interfaces and endpoints. The size of the configuration RAM limits the total length of the descriptor sequence. Therefore the size of the configuration RAM may be optimized for integration into various applications that may require more than the described 512 bytes of storage space. There are five descriptors the device descriptor configuration descriptor string descriptor as well as interface and endpoint descriptors. A descriptor sequence contains one device descriptor and one or more configurations interface and endpoint descriptors. The length of a device configuration interface descriptor is nine bytes and the length of an endpoint descriptor is seven bytes. In the described exemplary embodiment string descriptors are not stored in the configuration RAM.

The USB MAC processes all required USB standard device requests in hardware including the clear feature get configuration get descriptor get interface get status set address set configuration set feature and set interface commands. The USB MAC extracts optional and class vendor commands such as for example set descriptor synch frame and get string descriptor and forwards those commands to the MIPS core for processing. Upon receipt of such device requests the USB MAC preferably issues an interrupt to the MIPS core which then extracts the setup command and processes it.

In the described exemplary embodiment of the network gateway there are preferably six physical USB endpoints one bulk RX endpoint one bulk TX endpoint one isochronous RX endpoint one isochronous TX endpoint and one interrupt RX endpoints. An isochronous transfer can provide guaranteed access to USB bandwidth with bounded latency and guaranteed constant data rate through the pipe as long as data is provided to the pipe. The endpoint can be a given configuration and specifies the maximum size data payload that it can transmitted or received. The USB uses this information during configuration to ensure that there is sufficient bus time to accommodate the maximum data payload in each frame. If there is sufficient bus time for the maximum data payload the configuration is established if not the configuration is not established.

The interrupt transfer type endpoint supports those devices that send or receive small amounts of data infrequently but with bounded service periods. An interrupt transfer preferably provides a guaranteed maximum service period for the pipe as well as an attempt to re transfer the data at the next period in the case of occasional delivery failure due to error on the bus. The endpoint description identifies whether a given interrupt pipe s communication flow is into or out of the host.

Bulk transfers can support the exchange of relatively large amounts of data at highly variable times where the transfer can use any available bandwidth. Bulk transfers preferably provide access to the USB on a bandwidth available basis with guaranteed delivery of data but no guarantee of bandwidth or latency. In addition bulk transfers preferably attempt to re transmit in the case of delivery failure. The bulk endpoint specifies the maximum data payload size that the endpoint can accept from or transmit to the bus. This maximum applies to the data payloads of the data packets i.e. the size specified is for the data field of the packet not including other protocol required information. The bulk endpoint is designed to support a maximum data payload size. The bulk endpoint preferably reports in its configuration information the value for its maximum data payload size.

In the described exemplary embodiment the USB does not require that the size of transmitted data payloads be exactly the maximum size i.e. if a data payload is less than the maximum it does not need to be padded to the maximum size. In the described exemplary embodiment of the USB both RX TX bulk endpoints can support a maximum USB packet size of eight sixteen thirty two or sixty four bytes. Both RX TX isochronous endpoints can support a maximum USB packet size of eight sixteen thirty two sixty four one hundred and twenty eight two hundred and fifty six or five hundred and twelve bytes. The control endpoints can support a maximum packet size of thirty two bytes and the interrupt RX endpoint can support a maximum USB packet size of eight bytes.

Both the bulk and isochronous endpoints can support hardware fragmentation of higher layer packets such as Ethernet packets into USB packets in the transmit direction and the reassembly of higher layer packets from USB packets in the receive direction. An end of packet flag can be used to signal when a USB packet is shorter than the maximum packet size defined by the endpoint. In the described exemplary embodiment the USB MAC inserts a zero length packet as an end of packet signal when the length of the higher layer packet is exactly an integer multiple of the maximum USB packet size. The USB MAC supports the generation of zero length packets in the transmit direction and the detection of zero length packets in the receive direction.

The USB MAC may include internal RX and TX RAM for temporary data buffering among the bulk isochronous and control endpoints. The endpoints are then forwarded to system memory. The USB preferably includes four direct memory access DMA channels for fast access to and from system memory through a system bus interface coupled to the ISB. Preferably two DMA channels are used for bulk RX TX endpoints and two are used for isochronous RX TX endpoints.

The Physical layer of the HPNA controller is concerned with transmission and reception of bit stream traffic to and from the transmission medium. An exemplary HPNA PHY includes a FDQAM QAM transmitter and receiver coupled to an analog front. shows in block diagram form the controller aspects of the embodiment while shows the analog front end aspects of the embodiment.

Referring to HPNA controller is a fully integrated MAC PHY that transmits and receives data over an HPNA network. In the described exemplary embodiment HPNA controller includes a bus interface such as a PCI or MSI bus interface for communication in accordance with well known PC based and or peripheral internet appliance architectures. HPNA controller also includes digital PHY having a FDQAM QAM transmitter and receiver interfacing with the HPNA analog front end and MAC . In the described exemplary embodiment HPNA MAC is coupled to bus interface through transmit TX FIFO and receive RX FIFO . HPNA packet data is moved from the RX FIFO to system memory by the ISB via the bus interface . Similarly HPNA data packets are moved from system memory not shown via the ISB and bus interface into the TX FIFO . A transmit state machine initiates transmission of the packet to the MAC PHY when a FIFO watermark is reached or an end of packet is received. Bus interface also has the capability of similarly communicating with other devices such as a v.90 modem through v.90 modem interface and its respective transmit TX FIFO and receive RX FIFO .

Referring to analog front end couples HPNA controller to a transmission medium such as a premises UTP wiring. Analog front end includes digital input output I O circuit for transferring samples to and receiving samples from the HPNA controller. Digital I O includes clock for driving HPNA controller with a 64 MHz 100 ppm clock generated by 64 Mhz crystal .

A transmit path of the analog front end includes digital to analog converter for converting digitally sampled data to an analog signal. The transmit path may further include an automatic gain controller that adjust the gain of the analog signal in accordance with an input received by digital I O . Filter and transmit off switch are coupled to phone line connector such as a UTP wiring RJ11 connector through electronic hybrid for buffering signals and filter transformer electronic protection circuit . The receive path includes analog to digital converter for sending valid sample data variable gain amplifier VGA filter for low pass anti aliasing VGA and is similarly coupled to phone line connector through electronic hybrid and filter transformer electronic protection circuit . Electronic hybrid and filter transformer electronic protection circuit are connected there between by a plurality of transmit and receive lines e.g. TX RX1 RX2 . The operations of the analog front end are well known in the art.

Referring to a transmitter aspect of HPNA PHY is shown in functional block diagram form. Transmitter includes frame processor data scrambler bit to symbol mapper constellation encoder and QAM FDQAM modulator . An exemplary frame format is illustrated in . Frame format consists of low rate header section a variable rate payload section and a low rate trailer . Some parts of the frame are not scrambled as described below. Header includes a preamble PREAMBLE64 that facilitates power estimation and gain control baud frequency offset estimation equalizer training carrier sense and collision detection as is described in more detail below.

Header also includes frame control field . In the described exemplary embodiment frame control field is a 32 bit field defined in the table set forth in . Frame Type FT is an eight bit field that is intended to provide flexibility for defining other frame formats in future versions of the embodiment. Present devices transmit zero in this field and discard any frames with FT other than zero. The FT field is intended to provide a mechanism for forward compatibility allowing extensions to use frame formats differing from the present embodiment. Scrambler initialization SI field is set to the value used to initialize scrambler .

Priority PRI field refers to a media access priority mechanism as described below. The three bit PHY priority value PRI refers to the absolute priority that a particular frame will be assigned when determining media access and is the value used in the MAC embodiment described below. In the described exemplary embodiment the priority value is a field carried in the PHY level frame transmission and is intended to indicate a three bit PHY level priority or class of service indication to the receiver link level processor for managing priority and class of service of the received frame. The priority value is not used by the receiver PHY processor. For stations that do not implement class of service the PRI field is ignored on receive and is set to one for transmission. The described exemplary embodiment may also include a field that is reserved RSVD for future use. In the described exemplary embodiment the RSVD field is ignored by the receiver.

Payload encoding PE field determines the constellation encoding of the payload bits. Header check sequence HCS field is a cyclic redundancy check CRC computed as a function of the 128 bit sequence in transmission order starting with the FT bits and ending with the Ethernet source address SA bits with zeros substituted for the as of yet uncomputed HCS field. The encoding may be defined by the following generating polynomial. G x x x x x x 1

In the described exemplary embodiment the fields covered by the HCS are transmitted at two MBaud and two bits per Baud. Therefore these fields may be received correctly in many cases where the payload is received in error. The HCS may be used in conjunction with soft decision error statistics to determine with high probability whether the header was received correctly. This knowledge may be useful for optimizing the performance of ARQ and or rate negotiation algorithms described below.

Returning to it can be seen that the bit fields starting with the destination address DA field and ending with the FCS field substantially correspond with the fields described in IEEE Std 802.3 and are referred to as a link level Ethernet frame packet . However the bits of a PHY level Ethernet frame have an Ethernet preamble and start frame delimiter SFD bits prepended to the link level frame that are not included in the frames of the present embodiment. It is intended that IEEE assigned Ethernet MAC addresses are used for destination address DA and source address SA .

The Ethernet frame consists of an integer number of octets. Following Ether type field is Ethernet data field FCS field and cyclic redundancy check CRC field . CRC field is a 16 bit cyclic redundancy check computed as a function of the contents of the unscrambled Ethernet frame in transmission order starting with the first bit of the DA field and ending with the last bit of the FCS field. The encoding is defined by the following generating polynomial. G x x x x 1

For four MBaud payloads a variable length PAD field follows CRC field and consists of an integer number of octets. The last octet of the pad field PAD LENGTH specifies the number of zero octets 0x00 preceding PAD LENGTH. In the described exemplary embodiment the value of PAD LENGTH is equal to or greater than the number of zero octets required to ensure that the minimum length of the transmission from the first symbol of the PREAMBLE64 through the last symbol of the end of frame delimiter is 92.5 microseconds. For 2 MBaud payloads there is no PAD field. The PAD field is not present in a compatibility mode frame as described below.

Turning back to scrambler is described in more detail. Scrambler is the frame synchronized scrambler shown in which uses the following generating polynomial. G x x x 1 In the described exemplary embodiment scrambler is bypassed during the preamble bit field and the first 16 bits of Frame Control. Scrambler is initialized and enabled starting with the 17bit of Frame Control field . Scrambler is bypassed after the last bit of the CRC 16 or the last bit of the PAD field if present. The EOF sequence is not scrambled. The use of a pseudo random initial scrambler state results in a more uniform power spectral density PSD measured over multiple similar frames. This eliminates the problem of tones in the PSD from highly correlated successive packets.

Turning again to following scrambler is constellation encoder . Constellation encoder performs bit to symbol mapping. The incoming bits are grouped into N bit symbols where N is the number of bits per baud specified in PE field . Complex symbols from constellation encoder are input to QAM FDQAM Modulator . QAM FDQAM modulator implements Quadrature Amplitude Modulation QAM . shows an example QAM implementation. The carrier frequency and transmit filters are the same for Baud rates of 2 MHz and 4 MHz. Thus a 2 MBaud signal is equivalent to an appropriately scaled 4 MBaud signal in which every other symbol is zero. The QAM FDQAM Modulator used in conjunction with the present invention is described in more detail in the pending application referenced above.

In addition to the frame formatting described above the present invention may provide for a compatibility frame format that is defined for use by HPNA V2 nodes when they are sharing the phone line with HPNA V1 nodes. In this case the V2 transmissions masquerade as valid V1 frames to provide correct carrier sense and collision detection behavior even though V1 nodes are not able to recover the data from the frame. In this format referring to frame starts with a modified V1 AID field followed by a V2 symbol sequence modified to have periodic gaps so that a V1 receiver will detect this signal as a series of pulses. The frame ends with a trailer that includes 4 symbol V2 EOF and a single pulse EOP generated by passing a QPSK symbol through the transmit path.

Referring to transmitter aspect of PHY operating in compatibility mode is shown in functional block diagram form. Transmitter includes framing logic implementing the compatibility mode framing described above. Scrambler is responsive to framing and is identical to scrambler described above in conjunction with . Scrambler is initialized at the same point in the frame control field. Constellation Encoder is coupled to scrambler and is substantially the same as the constellation encoder described above in conjunction with .

In the described exemplary embodiment a modified AID Generator prepends a modified V1 AID to every frame. The modified AID is defined as a V1 AID in which each pulse in the AID is replaced by a pulse defined below. The AID number is one chosen by the sending station and conflicts are resolved by selecting a new AID number. The control word indicates high speed and low power transmission. The use of the AID mechanism for collision detection implies that V2 has the same limitation on the maximum number of nodes as V1 when in compatibility mode. In the described exemplary embodiment the modified AID pulse is generated by passing the first symbol of the PREAMBLE48 through the QAM FDQAM modulator with the same initial modulator phase as the first symbol of the PREAMBLE48. The modified AID pulse may also be used for the JAM sequence.

With regard to the receiver aspects in accordance with the PHY layer protocol reference is made to wherein receiver functionality is shown in block diagram form.

Receiver functionality performs the reverse of that described above for transmitter namely upon receiving a signal from 2 4 wire hybrid and performing front end processing the following occurs QAM FDQAM Demodulator Gap Removal Constellation Decoding De scrambling and De framing as is well known in the art given the above defined transmitter functionality.

Now turning to the MAC Layer the station media access control MAC function as seen at the wire interface is described in more detail. The HPNA V2 MAC is modeled after the carrier sense multiple access with collision detection CSMA CD MAC function of Ethernet IEEE Std 802.3 1998 Edition . In the described exemplary embodiment the HPNA MAC is adapted to the V2 PHY and enhanced with quality of service QoS features.

When in compatibility mode V2 devices transmit either V1 format frames or V2 compatibility format frames depending on the destination station type. The MAC operation in this mode is as specified in IEEE Std 802.3 1998 CSMA CD MAC with BEB collision resolution and no access priority. When in compatibility mode the MAC operation is as specified in IEEE Std. 802.3 1998 clause 4 for a MAC sublayer operating in half duplex mode at speeds of 100 Mb s and below. The timing parameters to be used in Compatibility Mode are in accordance with the V1 PHY Specification Version 1.1. In compatibility mode the MAC times the interframe gap from the de assertion of the carrier sense signal CAR SENS. The timing of CAR SENS relative to the wire interface adheres to the timing specified in HPNA V1 PHY Specification rev 1.1 clause 3.3.

An implementation may have different individual CAR SENS MAC timing parameters provided the overall timing at the wire interface is the same as CAR SENS MAC with the parameters specified. Further in compatibility mode the detection of collisions is as specified in HPNA V1 PHY Specification rev 1.1 clause 2.5.3 with a JAM signal emitted as specified in clause 2.5.4. ACCESS ID values are maintained as specified in clause 2.5.5.

The Carrier Sense Multiple Access Collision Detect CSMA CD media access method is the means by which two or more stations share a common transmission channel. To transmit a station waits defers for a quiet period on the channel that is no other station is transmitting and then sends the intended message modulated as per the PHY characteristics. The transmission deferral is ordered by up to eight priority levels implementing absolute priority among stations contending for access. If after initiating a transmission the message collides with that of another station then each transmitting station ceases transmission and resolves the collision by choosing a backoff level and defers to other stations that have chosen a lower backoff level. The distributed algorithm for choosing a backoff level bounds the access latency.

Referring again to a transceiver functional block diagram of an embodiment of the present invention is shown that includes transmit functionality portion counterpart receive functionality portion V1 compatibility transmit and receive functionality portions MAC functionality portion for both V1 and V2 modes and 2 4 wire hybrid portion . Included in MAC is carrier sense functionality portion collision detection functionality portion and CSMA CD collision resolution rx frame synchronization functionality portion . Carrier Sense detects the starting and ending times of a valid frame transmission on the wire. This is used to determine when frames are present on the channel transmission medium as well as to determine the presence of a backoff signal in a signal slot.

Collision detection detects the presence of a valid frame transmission from some other station during an active transmission and for all stations including non transmitting stations detects the received fragment that represents a transmission truncated by a collision. Collision Resolution implements the distributed algorithm that controls backoff. Although the performance of the blocks in the MAC function are implementation dependent certain minimum performance requirements are needed to ensure interoperability and compatible sharing of the channel and are now described in more detail.

Referring to the time following a transmission TX is divided into a plurality of slots 1 an Interframe Gap IFG 2 three backoff signal slots following collisions and 3 eight priority slots . During these time periods the MAC is synchronized and the slot timing is defined by the rules for valid transmissions as set forth above. After priority slot zero there may be an arbitrarily long period with no transmissions followed by one or more stations attempting transmission. In this latter case the MAC is unsynchronized. In the described exemplary embodiment when MAC timing is synchronized stations commence any transmission no earlier than zero and no later than four microseconds TX ON after a slot origin measured at the transmitter wire interface.

The V2 embodiment can be used for carrying media streams such as video and audio as described in more detail below . To reduce the latency variation in these streams a priority mechanism is implemented to allow higher layers to label outgoing frames with priority to ensure that those frames have preferential access to the channel over lower priority frames. In the described exemplary embodiment transmissions may be delayed to a slot beyond the minimum inter frame gap based on the priority level of the frame waiting to be transmitted.

Referring back to in the described exemplary embodiment slots are numbered in decreasing priority starting at priority seven. Higher priority transmissions commence transmission in earlier slots and acquire the channel without contending with the lower priority traffic. A station s Priority Slot may be based on the PHY priority number associated with the frame ready for transmission TX PRI as determined by the network stack and communicated to the MAC.

Stations waiting for transmission monitor Carrier Sense and defer if CS was true prior to the start of the station s Priority Slot or if beyond Priority Slot zero the station defers if CS was true prior to the start of transmission. Any station ready to transmit at the start of its Priority Slot transmits if CS was false prior to the start of it s Priority Slot without deferring if CS was asserted prior to the start of transmission. See depicting transmission aspects without and with priority access respectively. With priority access video traffic at priority level seven gains access ahead of best effort traffic scheduled at level one. In the described exemplary embodiment the slot timer is restarted if there is some other transmission that acquires the channel while a station is waiting at a lower priority.

The TX PRI value is the priority the MAC uses to schedule transmission and is the value present in the PRI field of the frame header. This value is determined by a higher layer in the network stack. The PRI field is used to transport the priority label from source to destination to assist the destination in managing the receive queue. The 3 bit priority values referred to are PHY priorities . In the described exemplary embodiment PRI 7 has the highest priority PRI 0 has the lowest. There may be a mapping between PHY priorities and the Link Layer LL priority values as delivered to the Link Layer by the Network Layer. This mapping is described herein below with regard to the Link Layer Protocols for V2.

In general the Network layer or Application layer will determine what policy is used to map traffic onto Link Layer priorities. For instance IETF Integrated Services currently defines priority 0 as the default best effort priority and priority 1 as the penalty worse than best effort priority and most implementations will map best effort to PHY PRI 1 and worse than best effort to PHY PRI 0. The PHY priority mechanism is strict priority as opposed to schemes which allocate lower priorities some minimum percentage of network capacity higher priority traffic never defers to lower priority traffic. However in the described exemplary embodiment higher priority traffic will be limited by admission control or other Link Layer policy mechanism to prevent over subscription.

Two or more stations may begin transmitting in the same Priority Slot following the IFG period. All stations monitor the channel to detect the colliding transmissions of other stations. Colliding frame s will be received over a channel with impairments. Passive stations can detect collisions by observing the length of transmission fragment and the validity of the received PREAMBLE64. A Valid CS Frame is guaranteed to have a unique symbol sequence within the first 128 symbols which are transmitted at Base Rate . The Ethernet MAC Source Address SA is used to guarantee uniqueness. That field is scrambled but the scrambled SA SI tuple will be unique. SI is the 4 bit scrambler initialization field as described above. After detecting a collision a station continues to transmit through the Ethertype field followed by an EOF sequence symbol and then ceases transmission.

A collision occurs when two or more stations are active with ready frames and are contending for access to the channel at approximately the same time. Generally collisions are between frames at the same priority level. A distributed collision resolution CR algorithm is run which results in stations becoming ordered into backoff Levels where only one station is at backoff Level zero and can therefore acquire the channel. After the winning station completes its transmission all stations reduce their backoff Level by one if it is greater than zero and the new station s at backoff Level zero attempt transmission. All stations even those with no frame to transmit monitor the activity on the medium.

Also the collision resolution cycle is closed so that stations that did not collide are not allowed to contend for access to the medium until all stations that collided have transmitted one frame successfully or have forgone the right to transmit their waiting frame. Ultimately all stations that were contending for access in the initial collision gain access to the wire and the collision resolution cycle is ended. This results in access latency being tightly bounded. This mechanism differs from binary exponential backoff BEB used in other versions of Ethernet in that the backoff level does not determine the contention slot chosen by a station all stations at a given priority always contend in the slot corresponding to the access priority. Instead stations at non zero Backoff Levels defer contending until stations that are at zero Backoff Level transmit.

The method used is called Distributed Fair Priority Queuing DFPQ as described in U.S. Pat. No. 6 256 317 entitled PACKET SWITCHED MULTIPLE ACCESS NETWORK SYSTEM WITH DISTRIBUTED FAIR PRIORITY QUEUING issued on Jul. 3 2001 the contents of which are expressly incorporated by reference herein. Each station maintains eight backoff level BL counters one for each priority. The backoff level counters are initialized to zero. The priority level of a collision can be inferred from the priority slot where the collision occurs. Consider the case where stations are only contending on one priority. After a collision and an IFG three special backoff signal slots S . . . S are present before the normal sequence of priority contention slots occurs. Signal slots only occur after collisions they do not follow successful transmissions.

Each active station pseudo randomly chooses one of the slots and transmits a backoff signal. More than one station can transmit a backoff signal in the same slot. The active stations transmit backoff signals to indicate ordering information that determines the new backoff levels to be used. All stations even those without a frame ready to transmit monitor collision events and the backoff signal slots to compute the backoff level. If an active station sees a backoff signal in a slot prior to the one it chose it increases its backoff level.

Those stations at backoff level zero ones that are actively contending that saw no backoff signals prior to the one they chose remain at backoff level zero and contend for transmission in the priority slot equal to TX PRI that immediately follows the backoff signal sequence. Eventually only one station remains at backoff level zero and successfully gains access to the channel. Stations waiting to transmit higher priority frames may pre empt the collision resolution by transmitting in a higher priority slot. All stations even those not contending for access to the wire also maintain a maximum backoff level MBL counter per priority which is incremented for each backoff signal seen and decremented when a successful transmission occurs. The MBL is non zero whenever a collision resolution cycle is in progress. When a station first becomes active if MBL is non zero BL is initialized to contents MBL otherwise BL is initialized to zero. This ensures that all currently active stations gain access to the channel before stations can re enter the waiting queue. The BACKOFF20 signal is a symbol sequence consisting of 16 symbols of the preamble sequence TRN transmitted followed by the 4 symbol EOF sequence. Detection of the BACKOFF20 signal s in a backoff signal slot must be possible even if more than one station selects the same slot. Stations implement saturating 4 bit BL and MBL counters. The width of the Signal Slot is 32 microseconds SIG SLOT . Stations implement the MAC function with collision resolution whose behavior matches the procedural model described below.

The procedural model uses a pseudo code modeled after concurrent Pascal. IEEE Std 802.3 1998 Clause 4.2.2 provides an overview of this pseudo code. The code set forth below models three independent concurrent processes Deference Transmitter Receiver which interact through shared variables. The Deference process is driven by the detection of transmissions on the channel and times the boundaries for Signal Slots and Priority Slots. The shared variable current Priority signals the Transmitter process when a transmission slot exists.

HPNA V2 includes a standardized mechanism for Link Layer network control and encapsulation. The link layer provides for the reliable transfer of information across the physical link. It is concerned with sending frames or blocks of data with the necessary synchronization error control and flow control. In the described exemplary embodiment control frames are data link layer frames that are identified by IEEE assigned Ethertype value 0x886c designated for the Assignee of the present application in the Type Length field of the frame and further distinguished by individual subtypes. The link control entities may be implemented in hardware or driver software. Link Control frames are not seen by layer three IP of the network stack and are not bridged between network segments. An exemplary method for implementing Link Control frames is further disclosed in U.S. patent application Ser. No. 09 825 851 entitled METHOD FOR PROVIDING SYNCHRONOUS TRANSFER OF PACKETS BETWEEN ASYNCHRONOUS NETWORK NODES IN A FRAME BASED COMMUNICATION NETWORK filed Apr. 4 2001 the content of which is incorporated herein by reference.

Given the home networking implementation aspects of the present invention described above we now turn to voice implementation aspects associated therewith. The desire to create quality voice over home networking service springs from an initiative with several goals including the reduction of the cost of maintaining carrier networks by switching from a circuit switched to a packet switched model and by allowing voice and data to share a common infrastructure. However to be competitive the quality of voice over home networking calls should at least equal that delivered by today s circuit switched networks. The quality of a voice call is affected by at least two metrics namely audio fidelity and audio delay. Audio fidelity of packetized voice is affected by several parameters such as for example the choice of codec. In general the lower the compression rate in the codec the higher the mean opinion score MOS of the resulting playback and the better the perceived speech quality. Similarly audio quality may be affected by lost samples due to congestion and transmission errors and excessive path latency.

Further the audio quality may also be degraded by frame slips that may occur if the receiving system s clock is not correlated with the transmitter s clock. In this context frame slip means that if samples are taken at slightly higher than at 8 kHz rate and played out at the 8 kHz rate eventually there will be more samples than time to play them out necessitating a drop in samples in order to catch up such droppage being termed frame slip a frame being one sample at 8 kHz.

Audio delay in a VoIP system is determined by the summation of the individual delays that occur within the total communication path for the call. The path includes codec delay packetization delay LAN queuing and transmission delay IP network queuing delay processing and transmission delays far end LAN delay and finally de packetization delay. When this total delay exceeds about 150 msec one way the perceived response time of the party at the other end tends to exceed the normally expected human response time. As a result speakers tend to become impatient and repeat themselves and inadvertently interrupt the other speaker.

With regard to path latency and the jitter in that latency it is not desirable to have packets assembled on one end of the network and leisurely delivered at the other end. Components to latency may include the possibility that someone else is using the network when the network is desired to be used. In addition a collision may also occur on the network. The collision resolution in the worst case may take several msec with a specific probability of resolution. If the probability of resolution is increased the time to complete the collision resolution also increases.

Standard Ethernet protocol might be one choice for a home LAN if it were to be adapted to a home friendly medium such as a phone line or a wireless carrier. The HPNA V1 protocol was built injust this fashion. HPNA V1 protocol is the IEEE 802.3 MAC protocol operating on home phone lines with a novel PHY implementation. However the IEEE 802.3 protocol s collision resolution algorithm delivers very unsatisfactory latency performance when the aggregate network load is moderate to high. One of the most often cited problems arising from high offered load on the IEEE 802.3 protocol is the network capture effect where competing stations take turns at virtual dominance over the network for relatively long periods of time. Overall the network behavior is fair but for short periods of time the network is very unfair.

The HPNA V2 protocol solves the problem of network capture by employing a simple yet tightly bounded collision resolution mechanism which does not rely on a central arbiter to resolve network sharing issues known as DFPQ as described above. The key to the protocol is the employment of a RX based collision detection scheme that allows all network nodes to maintain consistent knowledge of the network condition. Based on the network condition each node can determine whether it may take its turn to transmit a packet. Once a node has transmitted it must wait until all other nodes wishing to transmit have also taken a turn before it can get a new turn.

In accordance with HPNA V2 protocol as multiple nodes contend for the same opportunity to transmit they perform a randomization step which serves to define a transmission ordering among the competing nodes. Because the ordering decision is random and decentralized there is some non zero tail to the time it takes to resolve a non colliding order but the tail is very small in comparison to the behavior of more traditional collision resolution protocols. Thus the DFPQ collision resolution avoids the network capture effect.

However removing the network capture effect is not enough to completely solve the problem of delivering guarantees of limited latency. Because some competing nodes may have relatively time insensitive packets in their queues such as file transfer data or web page data the latency of delivery for the time sensitive VoIP packets could be greatly altered by the varying load of time insensitive packets. Worse yet if there were a large number of non VoIP nodes in the network and each was given a turn over the VoIP nodes then the aggregate of non VoIP traffic could be sufficient to degrade audio quality.

However DFPQ again provides a solution. This time the solution is to allow for multiple instances of the MAC protocol to operate in parallel with one instance for each of 8 different priority levels. Each MAC instance priority level operates with a successively longer inter frame space IFS . Packets from lower levels of priority are only allowed access to the network when no packets exist at higher levels. This mechanism prevents time insensitive traffic from affecting the delivery latency of packets from higher levels of priority. VoIP traffic is assigned to the highest level of priority because it has the tightest performance targets of all network traffic. Therefore VoIP traffic always gets to cut in line ahead of lower priority traffic.

In order to take full advantage of the multiple priority levels of the HPNA V2 protocol a MAC controller includes multiple transmission queues. If only one transmission queue exists then it is possible for the device driver to load a low priority frame into the queue not knowing that a short time later a high priority frame may need to be queued. When the high priority frame does arrive at the device driver this frame must wait until the low priority frame is transmitted by the MAC. The described exemplary embodiment therefore includes a single physical queue under queue management control that allows re ordering of previously queued frames to permit the highest priority frame to appear at the head of the queue.

In qualitative terms the latency of delivery of frames using DFPQ is greatly improved over previous methods. However an additional system latency component exists. This component is due to the lack of coordination of the framing of voice samples at the handset such that a VoIP packet will be sent on the LAN and arrive just in time to utilize the next available upstream transmission slot on the WAN. If such coordination is not performed as much as an additional 10 msec of latency can be added to the upstream path. As an example the DOCSIS network for cable modems allocates a fixed amount of bandwidth to the upstream portion of each voice call. The bandwidth is allocated in periodic intervals that match the framing rate of the VoIP frames.

For example a call utilizing a 10 msec VoIP packet rate will receive a DOCSIS upstream bandwidth allocation allowing it to transmit one frame every 10 msec. The initial timing of the upstream transmission opportunities is random relative to the potential framing of a set of samples at the handset. If the handset creates a VoIP frame and sends it to the cable modem with the arrival just missing an upstream transmission slot then the VoIP frame will have to wait 10 msec to be forwarded to the headend. Previous to arriving at the cable modem the VoIP frame may have already experienced the 5 msec allotted LAN latency.

Referring back to this timing relationship is illustrated where the packet arrival at the cable modem is too late for the current upstream transmission slot resulting in an additional 10 msec of latency for delivery of all VoIP frames in this stream. As can be seen in the illustration the total latency from packetization at the handset to delivery on the DOCSIS network for this example is about 15 msec. However if the packetization at the handset can be synchronized to accommodate the HPNA LAN delivery latency and the cable modem processing delay such that the VoIP frame is ready for transmission on the next upstream slot then the additional 10 msec latency penalty can be avoided. The mechanism for coordinating the handset framing is accomplished through a protocol to communicate the upstream slot timing from the network gateway to the handset. Such coordination is provided via a clock synchronization mechanism between the network gateway and the handset. The clock synchronization mechanism includes a timing circuit within the HPNA MAC controller and an HPNA LAN protocol for the exchange of timing information. Through the exchange of timing information the handset discovers when the next upstream transmission opportunity will occur. It assembles the initial VoIP packet at such a time that accounting for HPNA LAN delivery latency and cable modem processing latency the packet will arrive in time for the next available upstream transmission slot.

In the described exemplary embodiment signaling frames and procedures are defined to permit time synchronization between network gateway and representative HPNA POTS converter as depicted in . In an exemplary embodiment of the present invention the time synchronization procedures enable two types of time synchronization. First an exemplary embodiment of the present invention provides a method for synchronizing the 8 kHz sample rate of the analog voice codec at the handset to a reference clock at the Home gateway. In addition in accordance with an exemplary embodiment the generation of encoded voice packets at the HPNA POTS converter is synchronized to the arrival of the assigned upstream time slot at the Home gateway from the digital carrier network accounting for any processing delays or jitter introduced by HPNA network access. In the DOCSIS PacketCable system this is the arrival of an upstream grant sync for the service flow allocated for the specific voice stream.

Referring to in conjunction with an exemplary network gateway in accordance with the present invention implements a counter timer that is sync locked to the network stratum reference source. The HPNA MAC transmitter in the network gateway implements a function to read and latch the value of the counter timer into Master Timestamp Register at the exact time of transmission of a frame marked with the Latch Timestamp LTS descriptor bit. The HPNA POTS converter implements a counter timer which is subdivided to derive the Codec clock. The HPNA MAC receiver in the HPNA POTS converter implements a function to read and latch the value of the counter timer into Receive Timestamp Register upon the receipt of a frame. Receive Timestamp Register is logically part of the receive status word of each received frame. The timing information is conveyed to the HPNA POTS converter via a pair of messages. The Home gateway periodically transmits a Timestamp Sync TSM frame with the LTS descriptor set then reads and transmits the latched Master Timestamp register value in a subsequent Timestamp Report TRM frame. The HPNA POTS converter reads and saves the Receive Timestamp register values of Timestamp Sync frames and builds a database of corresponding Receive and Master timestamp pairs from the received TSM and TRM frames. The HPNA POTS converter periodically calculates a frequency error R2 R1 M2 M1 1 where Rx equals the receive timestamp value of frame received at time x and Mx equals the master timestamp value in frame received at time x. The frequency error adjustment is then applied to the HPNA POTS converter local codec clock.

An exemplary network gateway implements a function to read and latch the value of the reference counter timer into Grant Timestamp register upon the occurrence of a selected time slot grant sync signal from the upstream network i.e. SID match and Grant sync . The described exemplary network gateway is aware of the mapping of upstream time slot grant to specific HPNA POTS converter and line ID. The HPNA POTS converter implements a timer that generates a local frame sync signal at the expected voice frame rate. This timer is derived from the local codec clock. The relative timing of the upstream grant sync signal is conveyed to the HPNA POTS converter prior to enabling the voice encoder but after the establishment of the upstream service flow. The timing offset is adjusted to account for internal processing cycles needed each by the network gateway and the HPNA POTS converter and allowing for worst case voice frame latency on the HPNA media.

When the network gateway needs to send the time slot grant sync timing information it will latch the grant timestamp value and adjust the value to account for internal processing time to receive and forward voice frames to the upstream network interface. The adjusted grant timestamp is transmitted to the HPNA POTS converter in a Timestamp Report TRM frame. The HPNA POTS converter calculates an absolute time offset from the difference in the Receive and Master timestamp and calculates a future local frame sync time as Frame Sync Grant timestamp offset voice frame period latency where latency HPNA POTS converter internal processing time worst case HPNA media transmit latency. The method by which the Frame Sync adjustment is then applied to the HPNA POTS converter voice encoder is implementation dependent. The network gateway transmits time synchronization frames Timestamp Sync Message and Timestamp Report Message on a periodic rate continuously. Time sync messages are always transmitted in pairs according to the following procedure.

In the described exemplary embodiment the network gateway maintains a Time Sync timer and a sequence number counter SeqNum. Upon expiry of the time sync timer the Home gateway 1 restarts the Time Sync timer with for example a one second period 2 increments SeqNum SeqNum 1 3 formats a Timestamp Sync Message frame with the current value of SeqNum 4 marks the frame with the LTS 1 descriptor and 5 transmits the TSM frame. The Home gateway then 1 reads the value of the Master Timestamp register 2 formats a Timestamp Report Message frame with the current values of SeqNum and Master Timestamp and 3 transmits the TRM frame. Upon the establishment or re establishment of an upstream service flow for a media stream the Home gateway 1 obtains the grant timestamp for the service flow from the Grant Timestamp register 2 adjusts the grant timestamp by a known constant equal to the internal processing time to receive and forward an upstream voice packet 3 formats a Timestamp Report Message frame as above including the additional Grant Timestamp and associated Line ID and Call ID fields and 4 transmits three copies of the TRM frame. TRM frames containing a Grant Timestamp are transmitted immediately without waiting for the Time Sync timer to expire . An HPNA POTS converter derives clock and grant timing information from received Timestamp Sync and Timestamp Report message frames. Frames which are received with a MAC source address SA field that do not match the expected Home gateway are discarded.

In the described exemplary embodiment the HPNA POTS converter maintains an information base of SeqNum Receive timestamp Master timestamp tuples. The most recent two tuples are retained older tuples are discarded. Upon receipt of a Timestamp Sync Message frame the HPNA POTS converter reads the Receive Timestamp receive status word and enters the SeqNum Receive Timestamp tuple into its information base. Upon receipt of a Timestamp Report Message frame the HPNA POTS converter 1 locates the tuple associated with the received sequence number SeqNum from its information base 2 enters the Master timestamp value in the corresponding tuple in the information base 3 calculates a codec clock frequency error where frequency error Rseqnum R seqnum 1 Mseqnum M seqnum 1 1 and 4 adjusts the local clock frequency as necessary. When the HPNA POTS converter receives a Timestamp Report Message frame containing a Grant Timestamp the HPNA POTS converter 1 examines the SeqNum field and discards the message if a duplicate received frame and takes no further action 2 examines the Line ID and Call ID field and discards the message if no match to an existing voice call 3 calculates the time delta to the next local frame sync signal as follows Frame sync time Grant Timestamp Toffset VF KCPU KHPNA where Toffset Receive Timestamp Master Timestamp absolute time offset KCPU a known constant equal to the HPNA POTS converter internal processing time to prepare an upstream voice packet KHPNA a known constant equal to the worst case HPNA media transmission delay and VF voice frame period and 4 adjusts the local frame sync timing as necessary.

In accordance with the present invention a solution to the problem of synchronization of clocks between the Network gateway and the handset in a VoIP network that includes an HPNA LAN as the link between the handset and the Network gateway is provided. The clock in the network gateway is used to synchronize transmissions of upstream packets to the DOCSIS MAC. Upstream transmission times are generally dictated by the DOCSIS head end equipment. In addition for synchronous traffic flows such as VoIP the periodicity of the transmission of packets is directly related to the upstream clock. Furthermore the data samples in the packets are acquired at a rate which is a derivative of the system master clock. Therefore in the described exemplary embodiment the network gateway clock is synchronized to the clock in the cable modem head end. At the VoIP handset a local clock that is related to the head end clock is used to sample the analog voice channel.

As has been described briefly above synchronization between clocks in VoIP handsets and network gateways is necessary for two reasons. First the sample rate of the analog voice signal at the handset should match the transmission rate e.g. 8 kHz that is established for the entire voice transmission path in order to avoid frame slips lost samples or sample gaps which compromise the quality of voice traffic and significantly reduce the throughput of voice band data flows. Second the framing of samples into an RTP voice packet preferably occurs synchronously with the arrival of an upstream grant at the DOCSIS MAC in order to minimize the latency of the upstream path.

Variation in the A D sample clock from a nominal 8 kHz frequency can be modeled as noise in the coded signal. Therefore a poorly tracking sample clock in the handset can cause the handset to fall out of compliance with signal to noise ration SNR of ITU T G.712 that typically govern communication across a PSTN line. The performance limits of G.712 translate directly into a jitter performance objective for the timing synchronization circuit of the HPNA VoIP system. A voice sample loss rate of 0.25 samples lost per minute must be maintained to support a toll quality VoIP call. This requirement translates into a long term average tracking error of 0.52 ppm between the handset and the network gateway. The overall latency that can be experienced by a real time interactive voice call before user reported degradation of call quality occurs has been determined through experimentation to be no more than 150 msec according to ITU T recommendation G.114. Therefore the one way latency limit of 150 msec from ITU T G.114 sets the performance goal for the latency requirement to be met by the HPNA VoIP system. The largest potential customer of the systems to be built using the HPNA LAN for VoIP traffic has stated their desire for the final system to be capable of meeting the G.114 goal.

The network gateways employ a digital phase lock loop DPLL to track the reference clock which is located in the cable modem head end equipment. In the described exemplary embodiment the performance of the DPLL is sufficient to comply with the requirements for digitized voice transmission set forth in ITU T recommendation G.712. ITU T recommendation G.712 gives an SNR of 35 dB to be maintained for PCM signals. This value cannot be met with PCM law encoding beginning with 12 bit linear samples in the presence of more than about 70 dB noise. The analysis done for the voice over DOCSIS case accounting for the A D and D A performance suggests that the output clock used for generating the 8 kHz A D voice sampling clock should have a jitter of 5 ns or less in order to meet these requirements. Any DPLL employed for clock tracking must be able to perform to this level if G.712 criteria are to be met.

As described above the Network gateway DOCSIS clock maintains synchronization with the headend DOCSIS clock through the exchange of ranging messages and SYNC messages with the DOCSIS head end equipment. The timestamp in these messages are inserted and extracted as the messages leave or enter the DOCSIS MAC devices. The synchronization of the Network gateway clock is maintained by a circuit within the DOCSIS MAC called the Timing Regeneration Circuit TRC . The network gateway extracts the timestamp from the SYNC message as the bits are arriving off of the wire. This timestamp is passed to the TRC where a comparison to the local timestamp is made. Any difference is used to adjust a DPLL which controls the local clock frequency of the network gateway. A ranging message is used to determine the time distance between the network gateway and the head end. The local clock is adjusted for this offset. The local clock in the network gateway is used to time network gateway DOCSIS operations such as upstream transmissions.

However network gateway VoIP operations also run synchronously to the DOCSIS head end clock so a product implementation includes two functions which allow for POTS VoIP conversion devices i.e. A D and codec functions to operate in synchronization with the DOCSIS clock. The first VoIP support function of a product implementation is the export of a clock TIC CLK OUT which is a derivative of the local DOCSIS clock. TIC CLK OUT is used to drive the A D sampling of the voice channel. This clock is used in order to insure that the sample rate of the A D is locked in frequency to the DOCSIS clock. By doing this the A D sampling does not get ahead of or behind the DOCSIS grants a situation which would result in lost samples or gaps in the stream of samples. The second VoIP support function of a product implementation is the export of a set of grant signals which indicate the arrival time of an upstream grant which corresponds to the desired framing interval of the collected voice samples. This grant signal indicates the framing boundary for a Voice over IP RTP data packet which is a collection of A D compressed and coded samples. In the described exemplary embodiment the network gateway exports an equivalent of these two functions to an HPNA LAN attached handsets in order to allow the analog portion of the handset to maintain a proper sample rate and to allow a remote DSP to packetize a set of samples in a timely manner to avoid additional path latency.

The HPNA device does not need to duplicate the exact mechanism of the DOCSIS MAC device because the HPNA MAC at the network gateway has direct access to the TICK CLK OUT clock. Therefore a subset of the DOCSIS synchronization mechanism is implemented for the HPNA LAN MAC device. In addition the HPNA LAN MAC mimics both the DOCSIS head end behavior and the DOCSIS CPE behavior. The HPNA LAN MAC device located at the network gateway will provide a timing reference to the HPNA LAN MAC devices located in handsets. The Network gateway s HPNA MAC will mimic the functionality of the head end equipment with respect to clock sourcing. That is there will be a master slave relationship between HPNA MAC s in network gateways and HPNA MACs in handsets the master dictates the current time to the slaves. This relationship only slightly complicates the HPNA MAC time synchronization solution as the same circuit can easily be made to operate in either capacity. The basic solution is similar to the DOCSIS MAC solution. A DPLL is incorporated within the HPNA MAC device. The DPLL is easily provided as a complete circuit Timing Regeneration Circuit . In addition the Smoothed TICK Clock Generator circuit is needed to produce the A D sample clock at the handset side. In addition to the DPLL the HPNA MAC includes a grant timing indication circuit. This circuit is basically a timestamp function that operates whenever a grant is signaled by the network gateway. In practice it is simply a modification to the existing network gateway DPLL circuit. A few registers are added to the HPNA MAC to support the TRC operation and a few more for supporting the Grant Timing Indication circuit.

The transfer of the network gateway HPNA MAC timestamp to the handset HPNA MAC timers is effected as follows. Instead of transferring DOCSIS SYNC like messages with timestamp inserted extracted on the fly the HPNA synchronization mechanism relies on an internal MAC indication of frame movement to latch the current time into a timestamp register. The value in the register is read and then delivered in a subsequent frame to the handset which uses it to adjust its clock.

In the described exemplary embodiment the network gateway HPNA MAC device is set up through a register bit to be a timing master such that only transmit activity is timestamped. In addition only frames marked with the timestamp transmit descriptor bit cause the HPNA MAC timestamp to be latched. Software in the network gateway reads the timestamp following the sending of a frame that had the Timestamp descriptor bit set to TRUE. Software then constructs a TIMESTAMP REPORT message containing the latched timestamp value and queues this frame for HPNA LAN delivery to the broadcast address. The queue latency is unknown and doesn t matter. The strict identity of the frame which generated the timestamping event is unknown and doesn t matter although it is preferable to limit the frames which are timestamped. The mechanism chosen is to timestamp only TX frames that have the LTS descriptor bit set. To limit processing requirements at the receive end the special Timestamp Report Message TRM is defined. Only TRM will need to have timestamp information recorded and delivered from the timing master. Timing slaves will then be able to ignore receive timestamp information from all but TRM packets.

Referring back to the receiver at the handset is configured to act as a timing slave such that only receive activity is timestamped. Each received frame triggers a timestamp to occur at the same relative position within a frame. There is a tradeoff wherein positioning the timestamp sample at an earlier location in the frame up to and including the Type Length field yields a fixed offset from the beginning of the frame and results in the elimination of an offset correction. But the earlier timestamp allows less time for the handset s logic to read the latched timestamp before a new frame possibly overwrites the latched value. A preferred method causes the latched timestamp to be incorporated within the RX status word of each received frame thereby eliminating any race condition. In any case the timestamp for each received frame is stored in memory. Associated with each timestamp is a TRM sequence number. The receiver may eliminate all RX status word timestamp that do not correspond to TRM packets. What remains is a database of TRM sequence numbers and their corresponding RX timestamp. When a TIMESTAMP REPORT message arrives the handset searches its local database for the referenced sequence number and compares the received timestamp with the stored timestamp. The difference between the two values is used to determine the DPLL error.

The handset performs a filtering function on the error adds the DPLL bias value and then writes the resulting value into NCO INC register . In order to maximize the performance of the DPLL it is recommended that TRM packets be sent in pairs. The rate of transmission is suggested at about 1 pair per second. From the DPLL an output can be fed to the pin output that will drive the codec of the handset and ultimately the A D sampling circuit. Initialization of the handset timer is achieved by accepting two TIMESTAMP REPORT messages the second one of which refers to the first. The receiver adopts the error indicated as an OFFSET value. This value is always added to received timestamp in order to calculate DPLL error. The DPLL counter is never modified. Since part of the DPLL loop is performed in software the offset correction can easily be performed there. The network gateway HPNA clock is sampled as DOCSIS upstream grants arrive. The grant arrival time is then communicated to individual handsets through HPNA packets in order to allow the assembly and queuing of RTP voice packets to be scheduled to insure that the packets will arrive at the network gateway just in time for the next upstream grant. Packet assembly overhead queuing latency transmission time and network gateway packet processing time is subtracted from the grant time in order to generate a packet assembly start time that insures that the packet meets the next upstream grant at the network gateway

The mechanics of this operation are as follows. DOCSIS upstream grants are signaled by the network gateway through the GrantRcv 4 0 interface. GrantRcv 4 is used to indicate the arrival of a grant from the head end. GrantRcv 3 0 are used to signal the SID which corresponds to the current grant. Each SID corresponds to a particular connection flow such as an individual call flow. The timing of the arrival of each grant needs to be communicated to the appropriate handset. In order to accomplish this the 5 GrantRcv signals are fed to the network gateway HPNA MAC and the HPNA MAC s internal timestamp value is latched whenever the GrantRcv 4 signal becomes active provided that the GrantRcv 3 0 signals match the value set up in the tscSID register of the HPNA MAC. The MIPS core of the network gateway programs the tscSID register to match the SID corresponding to the call in progress for a given handset. Once the GrantRcv 4 timing is latched in the HPNA MAC the MIPS core reads the latched timestamp and subtracts worst case queuing latency transmission time and network gateway packet processing time. It then sends a GRANT TIMESTAMP message to the appropriate handset. A SID to MAC address mapping exists at the network gateway in order to allow for proper grant timing signaling. This map is constructed and maintained by the MIPS core.

The handset receives the GRANT TIMESTAMP message an extended version of the TIMESTAMP REPORT message . The handset adds N T time units N integer T RTP packet period minus packet assembly processing latency to the timestamp from the message in order to calculate a time that is in the future. It then loads this time into the GRANT TIME register so that the HPNA MAC can produce a grant sync output to the codec at the appropriate time. When the TRC reaches GRANT TIME the GrantRcv 4 signal is asserted for one clock pulse duration and GRANT TIME register is automatically incremented by the value in GRANT PERIOD register . A register bit exists to disable the generation of grant pulses on GrantRcv 4 . A safety bit is used to indicate that the grant time has been indicated in order to prevent the case of a grant time having been passed before it was programmed and hence no grant signals ever being generated. The safety bit would be a register bit that changes from a zero to a one when the grant time is signaled on the output pin and which can only be reset to zero by software. Note that the timing master must switch between transmit and grant arrival timestamp latching operations. The implementation may include either one latch that is switchable between the two functions or two latches to satisfy both requirements. The receive frame timestamp latching operation may share one of the latches mentioned or it may be separate.

There are two other aspects on the receive side for the slave. When the packet comes in every packet creates a signal which samples the current value of the timestamp clock which is running based upon the DPLL. The sampled clock is put into a structure that is associated with the receive packets. Every received packet has clock timestamp associated with it. The software that has the responsibility of identifying the special packets that contain timing information from the master and from those it can look to see what the time it received those packets was and it can see what time the master sent them. The master will have sent a packet that will when it gets sent get a timestamp associated with it. The software goes and reads the timestamp and puts it into a follow up packet. The protocol involves the sending of two packets. The first packet from the master gets a timestamp stored locally and the packet goes out without having a timestamp included in it. It makes it across to the converter. The converter takes a timestamp on the same packet. Both the master and slave have taken a timestamp. However neither knows what the other s timestamp is. The master then reads the timestamp out of the register and puts it into a follow up packet and sends it along. The follow up packet doesn t get timestamped by anybody. The follow up packet arrives at the slave device. The slave device now has the time that the first packet was sent out and the time that the first packet was received. Once that information the slave can then see the difference between them.

The grant timing that is determined from the DOCSIS network is delivered directly to the transceiver for the HPNA. That information is gathered by the timestamp circuit on the master and input to the circuit via Grant 4 timing signal with S GRANT enabling the path. Grant 3 0 allows multiple different grant identifiers one of sixteen to be selected. When the interested in grant identifier sees it s grant that latches the timestamp. Therefore when a grant occurs there is a timestamp associated with the grant at the master. The master then reads that timestamp information puts it into a packet and delivers that packet with the grant timestamp identifiers associated with it to all the nodes. The node associated with that particular grant identifier picks up the information and now it knows when its grant occurred. It will have been able to relate its time to the master s time by looking at the offset between the time it received according to its clock and the master s time.

For example using human time differentials if the master indicates that it sent a packet at 12 00 o clock and the slave indicates that it received the packet at 3 30 am the network gateway knows that the two clocks differ by 3 hours. Therefore when the described exemplary network gateway delivers a grant time to the slave the network gateway adjusts the time by 3 hours to correlate the grant to the local time of the slave. Once it knows the local time of the grant then it adjusts that backwards by the time it needs to assemble the packet and deliver it on the HPNA network. It works backwards to figure out what the latest time is that it should send that packet out of the network.

In the described exemplary embodiment the HPNA slave device puts that time into a GRANT TIME register . In operation when the local time in the slave matches at an exclusive OR comparator an output signal Frame 0 is created that is forwarded to the voice CODEC instructing the voice CODEC to deliver eighty samples. In fact the signal Frame 0 can be sent to any portion of the circuit which is making the actual decision as to when to call a set of 80 samples a frame. In the described exemplary embodiment the circuit also automatically updates the grant time period rate e.g. 10 msec such that when the grant time matches the current local time 10 msec is automatically added to the grant time and 10 msec later another match of the grant time with the current local time and the framing signal will be created again.

The audio processor module provides an interface between the voice and data processor and external subscriber line circuits SLICs . Referring back to the audio processor includes an analog front end that provides bi directional exchange of signals over the voice bandwidth including voice or fax modem data signals modulated with a voice band carrier. In the described exemplary embodiment the analog front end can support four separate voice channels with an analog front end having four pairs of analog to digital converters ADCs and digital to analog converters DACs .

The analog front end may include a common mode voltage level generator that provides an external common mode voltage level. Passive external circuitry coupled with the common mode voltage level generator may be used to establish the DC level of the AC coupled input signals for the ADCs . A voltage reference can be used to provide signals and bias currents for each of the ADC DAC pairs and provide a bias current for the common mode voltage level generator . The reference may be overdriven with an external reference or may be left disconnected externally allowing the internal bandgap to set the reference voltage. A clock generator can be used to divide the 98.304 MHz PLL clock down to 49.152 MHz 24.576 MHz and 12.288 MHz. The clock generator provides a sample clock for the ADC and DAC .

The external analog interface between each channel of the audio analog front end and an external SLIC is shown in . In the described exemplary embodiment of the analog front end resistors a and b convert the current output signal of DAC to avoltage signal. Capacitors a b and c provide low pass filtering to smooth the output signal from DAC . Op amp provides single ended differential conversion and amplification of the DAC output which can then be forwarded to the SLIC . In the transmit direction an RC network at the input of the ADC provides balanced impedances at both ADC input pins and provides attenuation of the transmit signal at the positive input. The balanced impedance interface ensures that power supply and digital substrate noise affect both ADC inputs equally. The ADC samples the difference between the voltages at the inputs so that common noise can be rejected. The passive components fix the ADC input at a constant DC level equal to the common mode level output by the common mode voltage generator . The ADC input varies in direct proportion to the transmit signal from the SLIC .

Referring to in the described exemplary audio processor a voice synchronizer synchronizes the digitizing of the near end voice signal by the ADC to the average timing regeneration circuit clock to ensure voice exchange between the network gateway and CMTS does not introduce jitter due to data underflow or overflow. A decimator downsamples the synchronized output of the voice synchronizer from 96 kHz to a 8 kHz rate.

The decimated signal can be filtered by a 60 Hz high pass filter . The filter reduces the 60 Hz interference induced on the transmit line due to proximity to power lines. The filter provides on the order of about 20 dB attenuation at 60 Hz relative to the transmission path loss at 1004 Hz. The filtered signal can be conditioned by a network echo canceller . The network echo canceller may interface with ITU T G711 G726 G728 and G729 encoders. Double talk logic can provide control functions including voice detection automatic signal level control transmit receive gain switching balance noise level estimation and double talk detection. The adaptive cancellation processes the receive side signal samples through an adaptive model of the hybrid coupling and subtracts the result from the transmit side in difference operator . A high pass filter is coupled to the echo canceller input to match the echo path impulse response.

Programmable gain adjuster applies a fixed gain or attenuation to an output of the difference operator . Gain adjuster can provide programmable gain attenuation adjustments of 20 dB with step size of 1 dB. In addition in the described exemplary embodiment a fixed gain or attenuation adjuster is applied to the gain adjusted signal. A multiplexer coupled to the output of the fixed gain adjuster allows the signal to be routed to a A law law G.711 compatible encoder which is coupled to an external PCM port that allows for external testing of the audio processor module. Multiplexer also forwards the gain adjusted output signal to the voice processor via the DSP interface see .

The described exemplary embodiment of the audio processor includes multiplexer coupled to the data interface in the receive mode. Multiplexer may couple decoded samples to a A law law decoder that is also coupled to an external PCM port to allow for external testing of the audio processor module. The multiplexer may also forward decoded samples from the data interface to a gain adjuster which applies a fixed gain or attenuation to the decoded signal. Programmable gain adjuster compensates for system level gain adjustments and may provide programmable gain attenuation adjustments on the order of about 20 dB with a step size of 0.0006 dB.

The described exemplary audio processor may include a 1 kHz test tone generator that provides a digital representation of a 1004 Hz test tone at a level of 0 dBm. The test tone may be optionally injected into the data stream by summer to debug and verify the audio processor. The test tone may be configurable in both frequency and amplitude although it is preferably limited by the 8 kHz sample rate such that only 0 4 kHz may be allowed.

An interpolator modifies the sample rate from 8 to 96 kHz. The interpolator can be implemented with a FIR filter which may be either minimum phase or linear phase. A minimum phase filter is preferred for voice applications which require low group delay but may tolerate group delay distortion which may be introduced by the minimum phase filter. A linear phase filter is preferred for fax and or modem applications. In addition a metering pulse generator can be used to generate 12 16 kHz metering pulses that are summed with the interpolated signal by summer . The metering pulses allow a user to monitor the cost of the call as it progresses. The rate at which the metering pulse generator transmits the metering pulses varies depending on the rate per minute of the call. The minimum gap between pulses is by way of example on the order of about 100 msec but may be much greater for inexpensive local calls. The amplitude of the metered pulses can be adjustable to accommodate impedance changes during the on hook off hook and ringing states. The interpolated signals are forwarded to a voice synchronizer that synchronizes the far end voice signal to the average timing regeneration circuit clock to ensure voice exchange between the network gateway and CMTS does not introduce jitter due to data underflow or overflow. The synchronized signal is forwarded to DAC for communication to a telephony device via the SLIC not shown .

In embodiments a two stage filtering process may be used to implement both the interpolator and the decimator thereby reducing the required processing power and permitting the same size filter to be utilized for both audio and modem applications.

Furthermore an impedance matching algorithm not shown may be performed for example at 96 kHz to reduce the reflection on the 2 wire interface for different countries that have different load impedance characteristics. In essence the algorithm acts as a Y filter that is used to control the reflection coming off the 2 wire interface.

Power efficiency is often important for telephony applications. Therefore the described exemplary embodiment of the audio processor includes the capability to enter a power saving sleep mode wherein only those functions that are required for wake up are active. All circuits should be capable of reaching active steady state within about a 10 msec activation period.

The described exemplary embodiment of the preferred audio processor further includes a ring generator which synthesizes reference waveforms which are forwarded to the SLIC to ring telephony devices. The ring generator can be used to support sinusoidal trapezoidal and square waves. In addition the ring generator frequency amplitude and DC offset can be configurable.

A block diagram of a preferred ring generator is shown in . The ring generator includes a digital oscillator which generates a sinusoid at a given frequency and amplitude determined by instructions from the MIPS core via the DSP PB interface see . The sample rate of the sinusoid can be by way of example on the order of about 1000 Hz divided down from the 24.576 MHz system clock input . A variable clipper symmetrically clips the sinusoid about zero such that the sinusoid may be converted into either a trapezoid or into a square wave. The MIPS core see can be used to define the thresholds with which the sinusoidal waveform is clipped.

In the described exemplary embodiment a multiplier scales the clipped waveform by applying a signal attenuation defined by the voice processor . Summer provides a configurable DC offset by adding a DC bias as established by the voice processor. The offset may vary from negative full scale to positive full scale. A converter can be used to convert the ring waveform a into a single bit representation. A single pole analog filter may be included on the output of the converter to reduce the quantization noise generated by the converter . The filtered signal is then forwarded to the analog front end for communication to a telephony device via the SLIC.

Referring back to in one embodiment the described exemplary audio processor may include an audio co processor. The audio co processor comprises a programmable engine that augments the processing capability of the voice and data processor by performing various low level or front end signal processing tasks such as for example sample rate conversion or echo cancellation. The described exemplary audio co processor is a highly configurable multiply and accumulate engine controlled by a central processing unit CPU . The CPU preferably includes a restricted set of instructions in program memory. Access to audio co processor memory is preferably optimized for burst access by the multiply and accumulate engine. The audio co processor instruction set preferably incorporates simple load and ALU based instructions to augment the multiply multiply and accumulate and divide macro instructions.

Referring to in an exemplary embodiment of the present invention audio co processor is substantially self contained having a basic asynchronous memory interface for each peripheral coupled to the audio co processor. In the described exemplary embodiment the audio co processor preferably interfaces with four audio channels on the analog front end. However one of skill in the art will appreciate that the total number of memory interfaces may be scaled by duplicating the memory access ports and scaling the memory arbitrator .

In the described exemplary embodiment the host MIPS core see may have access to a limited set of registers to control the enabling and disabling of the audio co processor and clock control. The host may download filter coefficients the audio co processor program etc. to this set of registers. In addition power efficiency is often important for telephony applications. Therefore in the described exemplary embodiment the MIPS core may instruct the audio co processor to activate a power saving sleep mode wherein only those functions that are required to initiate a return to full power operation are active. In the described exemplary embodiment all circuits are capable of reaching active steady state within about a 10 msec activation period.

In addition the audio co processor may also transmit interrupts to the MIPS core and the voice and data processor see . In an exemplary embodiment interfaces for all peripherals other than the host only have access to SRAM . An interface sync may provide pulses that mark important events such as 8 kHz 48 kHz and 96 kHz clock pulses in a voice processing application or enable disable signals for the audio co processor.

Audio co processor CPU operates with a reduced set of instructions. The audio co processor CPU is designed to maximize the number of multiplies that may be performed in real time applications. The audio co processor CPU has minimal exception handling capability with high visibility access to the MIPS core via interrupts shared memory and mailbox registers. The audio co processor CPU preferably includes complex NOOPS for synchronizing with the surrounding system as well as advanced macro instructions such as for example multiply and accumulate DIV ABS and TWOS.

The audio co processor CPU interfaces with a divide unit that provides fixed point divide capability. The divide unit preferably provides auto saturation wherein if the absolute value of divisor dividend is greater than one the divide unit preferably forces the result to either one or negative one. The divide unit preferably provides signed or unsigned 16 bit results with a 16 bit remainder.

The described exemplary audio co processor also includes a highly programmable multiply accumulate datapath . Referring to the multiply and accumulate engine within the multiply accumulate datapath is part of a pipeline that incorporates memory structures controlled by configurable pointer logic. The datapath preferably includes a dual port RAM DPRAM structure and two SRAM structures and . Data exiting the memory structures and streams through the data path to a store block with the end result being fed back into the in line memory structures and . The store block performs 16 bit or 32 bit stores adjusts for 16 bit 16 bit or 32 bit 16 bit multiply and accumulate operations. The store block may also provide rounding and saturation results when needed.

The described exemplary embodiment allows data to flow through the multiply and accumulate engine to produce one multiply result per clock cycle. Pointer controllers and may be programmed to use variable sized ring buffers for functions that require FIFO like data storage. In addition the pointer controllers may also be independently configured for many permutations of increment decrement modes and are preferably capable of zero overhead looping for matrix operations.

The described exemplary embodiment provides configurable connections between the memory structures and and the datapath. In operation the memory structures and may output to any one of the three datapaths via multiplexers and . A signed unsigned multiplier preferably includes shift and add logic to provide real number 16 16 32 32 or 16 32 multiplies of the outputs of multiplexers and . A FIFO may also be installed to carry data for optionally adding an offset to the multiply result.

An exemplary multiply accumulate datapath preferably includes a programmable shifter that provides semi or block floating point capability. The programmable shifter may apply prescaled coefficients to the output of the multiplier or translate the decimal point of the multiplier output to generate multiplies by values greater than one thereby providing the ability to selectively amplify the multiplier output. The datapath preferably includes an accumulator loop having an adder that adds the shifted multiply result to either the current value accumulated in accumulator block or data pipelined from DPRAM through multiplexer . The accumulator preferably includes saturation so that if the accumulator overflows the accumulator defaults to the largest positive or negative number.

Thus the described multiply accumulate datapath may perform a plurality of operations including for example AXB C where A and B are the outputs of memory structures and respectively and C is the output of memory structure . Alternatively the described exemplary multiply accumulate datapath may also support the processing of a plurality of inputs to provide a plurality of accumulated results. For example an exemplary multiply accumulate datapath may perform the following operation 

The audio co processor CPU performs basic processing and memory management tasks programs datapath registers and initiates multiply and accumulate and divide operations. In addition a datapath control pipeline operates independently from the CPU once a command is executed.

In the described exemplary embodiment the audio co processor instruction set incorporates a number of simple load and ALU based instructions to augment the multiply multiply accumulate and divide macro instructions. The audio co processor preferably contains 16 general purpose registers GPRs connected to the ALU with desired modifications to the special purpose registers SPRs being performed either by performing a load immediate instruction or by first modifying a GPR then moving that value into the SPR. In alternate embodiments the GPRs and SPRs may be merged into one register file so that SPRs may share the same load store and ALU instructions with the GPRs.

Table 1 illustrates a set of audio coprocessor Assembly Instructions in accordance with the described exemplary embodiment.

With regard to Table 1 the latency of an instruction is defined as the number of instructions that will execute immediately after a jump or branch command regardless of the jump or branch address location. For instance if a branch instruction is immediately followed in instruction memory by an add instructions the add will execute even if the branch is taken. As further illustrated in Table 1 the execution time for load and store instructions is affected by the fact that in the described exemplary embodiment other interfaces have higher priority for memory accesses than the audio co processor CPU. As a result load and store instructions must wait if memory requests are coincident. As further shown in Table 1 the execution time of a multiply accumulate instruction is affected by the fact that in the described exemplary embodiment where a multiply accumulate instruction has been initiated and then another is ready to execute the CPU will stall until the first multiply accumulate instruction has read its last data value from memory.

Referring to in the described exemplary embodiment the audio processor may perform signal processing functions with the aid of the described audio co processor such as for example sample rate conversion on a plurality of audio channels. An exemplary audio processor may include a decimator that downsamples the digitized output of the analog to digital converter in the analog front end from 96 kHz to a 8 kHz rate. The decimator may be implemented with a FIR filter that may be either minimum phase or linear phase A minimum phase filter is preferred for application such as voice which need low group delay but may tolerate group delay distortion introduced by the minimum phase filter. The linear phase filter is preferred for fax and data modem applications. The decimator may be used to attenuate signals which can not be represented by the lower sampling rate and then drop eleven out of every twelve samples. If a sample is not used at the output there is no need to calculate its value. Therefore the FIR realization of the decimator may be set up so that only the one sample out of twelve that is needed is calculated and then the data set is advanced by twelve samples and the next output is calculated thereby forgoing the intervening eleven samples.

Further in an exemplary embodiment of the present invention the decimator may be dynamically switched between a minimum phase or linear phase implementation in accordance with the information be communicated. In the described exemplary embodiment the voice and data processor see discriminates between voice and data packets. The voice and data processor may then alert the MIPS core when the type of information being received changes from voice to data or vice versa. The MIPS core may then dynamically adjust decimator implementation in accordance with the information being transmitted.

In the described exemplary embodiment the audio processor may perform the previously described processing functions of the 60 Hz high pass filter as well as the network echo canceller . Further the audio processor may also provide double talk not shown control functions such as for example voice detection automatic signal level control transmit receive gain switching balance noise level estimation and double talk detection. The audio processor may further include high pass filter coupled to the echo canceller input to match the echo path impulse response. The audio processor may also perform the functions of the programmable gain adjuster and as well as interpolater that modifies the sample rate from 8 to 96 kHz.

Although a preferred exemplary implementation of an audio processor has been described persons skilled in the art will appreciate that a variety of hardware and or software configurations may be utilized to implement the audio processing algorithms described above. For example the signal processing functions described above in reference to may be performed using a hardware and or software configuration that differs from the embodiments described herein. This invention is not to be limited to the specific arrangements and constructions shown and described. Those skilled in the art will understand that various modifications may be made to the described embodiment.

Digitizing and transmitting voice data via packets in a network system is a common telephony problem. Customarily Pulse Code Modulation PCM techniques digitize a voice signal by sampling an analog voice signal and converting each sample into a digital code which is communicated between compatible receiving and transmitting systems on the near and far ends of the network. In addition in a voice band data mode the exemplary network gateway may transparently exchange data without modification other than packetization between a near end telephony device or circuit switched network and the packet based network. This is typically used for the exchange of fax and modem data when bandwidth concerns are minimal. The problem that arises is that the receiving system s clock may not be correlated with the transmitter s clock. This difference even if minute may cause the sample buffer in the receiving unit to underflow or overflow. In the case of data underflow samples are extracted from a sample buffer faster than samples are written to the buffer so that the system may collapse from data starvation. During data overflow voice signals transmitted from one communication port enter the sample buffer in the receiving unit faster than they are extracted. The resulting overflow of data signals may result in artifacts in a voice call or data in voiceband data mode.

To prevent data signal overflow and underflow it is therefore desirable to synchronize the receiving clock to the incoming data rate. A voice synchronizer may be used for this purpose. Although the voice synchronizer is described in the context of an audio processor system within a network gateway those skilled in the art will appreciate that the voice synchronizer is likewise suitable for various other telephony and telecommunications application.

Referring to network gateway supports the exchange of voice between a hybrid fiber coaxial HFC network and a traditional circuit switched or a packet based network . In an exemplary embodiment telephony device is connected to the PSTN over PSTN telephone gateway . The PSTN telephone gateway may be clocked by a telephony network clock signal a from network clock reference which is also coupled to CMTS such that the PSTN telephone gateway may be synchronized with the CMTS clock for the transfer of PCM voice packets between the CMTS and the PSTN telephone gateway . The telephony network clock reference is preferably a conventional Building Integrated Timing Supply BITS clock. The equipment requirements for interfacing to this clock are known to those skilled in the art and are described in Bellcore document TR NWT 001244 the content of which is incorporated herein by reference as if set forth in full. The CMTS clock is synchronized with the telephony network clock signal b via CMTS clock synchronizer which utilizes headend reference tick clock as described in U.S. patent application Ser. No. 09 501 850 the contents of which is incorporated herein by reference as if set forth in full.

A timebase message generator generates time messages or stamps which provide the network gateway an absolute time reference which is representative of the frequency of the crystal oscillator timing reference not shown of the CMTS which is in turn synchronized to the telephone network clock .

Referring to the network gateway preferably includes a digital tracking loop that provides a substantially stable clock output a . A difference between the time stamps forwarded by the CMTS and the output of a local time reference that is derived from a numerically controlled oscillator is formed by differencing circuit . This difference defines a frequency error value. This frequency error value is filtered by loop averaging filter which prevents undesirable deviations in the frequency error value from affecting the numerically controlled oscillator in a manner which would decrease the stability thereof or cause the numerically controlled oscillator to operate at other than the desired frequency. The loop filter can be configured so as to facilitate the rapid acquisition of the frequency error value despite the frequency error value being large and then to reject comparatively large frequency error values as the digital tracking loop converges i.e. as the output of the local timing reference becomes nearly equal to the absolute time reference thereby causing the frequency error value to approach zero.

Referring to in the downstream direction voice or voiceband data packets are received by the network gateway demodulated and re formatted by the downstream demodulator DOCSIS MAC and forwarded to system memory . The voice data is forwarded to a decoder system not shown within the voice processor . The decoder system preferably provides delay compensation voice decoding DTMF generation call progress tone generation comfort noise generation and lost frame recovery. Processed voice sample are then forwarded to a first voice queue . A voice synchronizer is coupled to the output of the first voice queue . The voice synchronizer re samples the voice frames stored in the first voice queue in accordance with an error signal and forwards re sampled voice signals to a second voice queue so that the rate at which samples are removed from the second voice queue by a DAC matches the rate at which they are inserted into the second voice queue by the voice synchronizer .

In operation each time the clock of the DAC decrements to zero a sample can be removed from the second voice queue and transmitted to the near end telephony device via a subscriber line interface circuit . In the described exemplary embodiment the DAC is preferably driven by sampled DAC clock . In a jitter free system the DAC removes frames from the second voice queue at the exact same rate at which frames are inserted into the first voice queue by the voice processor . However when jitter or other impairments are present voice synchronization is needed because the DAC clock of the receive unit within the network gateway may not be correlated to the far end sample clock that generated the received data. In a data underflow condition in the downstream direction the DAC clock in the network gateway leads the far end sample clock so that if left uncorrected samples would be removed from the second voice queue faster than they are being inserted in the first voice queue so that the system may collapse from data starvation. During a data overflow condition in the downstream direction the DAC clock in the network gateway lags the far end sample clock so that samples are inserted into the voice queue faster than they are removed. The resulting overflow may result in artifacts in a voice call or data in voiceband data mode.

In the described exemplary network gateway in the downstream direction a lost frame recovery engine in the voice and data processor is implemented whereby missing voice is filled with synthesized voice during data underflow conditions using the linear predictive coding model of speech. The voice is modelled using the pitch and spectral information from digital voice samples received prior to the lost packets. Similarly during data overflow the voice and data processor preferably performs frame deletions to substantially eliminate the overflow condition. However in voiceband data mode lost data may not be readily tolerated or recreated. Therefore in voiceband data mode the described exemplary voice synchronizer fractionally decimates the received voice signal a stored in the first voice queue during data overflow and fractionally interpolates the voice samples during data underflow. Although voice synchronization is described in the context of an audio processor for voice and voice band data exchange over network gateway those skilled in the art will appreciate that the techniques described for signal synchronization are likewise suitable for various applications requiring the synchronization of a signal in a system having two uncorrelated clocks. Accordingly the described exemplary embodiment for voice and voiceband data synchronization in a signal processing system is by way of example only and not by way of limitation.

For example referring to a given input voice signal may be represented by a series of samples a i shown with arrow terminations. In the described exemplary embodiment samples a i satisfy Nyquist sampling criteria so that input voice signal may be completely reconstructed from the series of samples a i . Therefore the input voice signal may be over sampled as represented by the dashed lines. For the data underflow case where the receive clock leads the transmit clock the input voice signal a i may be sampled at a slightly higher frequency a i shown with circles so as to substantially eliminate the data underflow condition by generating additional samples as a function of time.

Similarly for the data overflow condition the input voice signal may be downsampled with a slightly lower frequency shown with x terminations so as to substantially eliminate the data overflow condition by generating fewer samples as a function of time. For example if the DAC clock were 96.0000152587890625 kHz and the far end transmit clock as represented by the rate at which samples are written into the first voice queue is 96.0 kHz then the voice synchronizer would preferably generate an additional data sample every 1 0.0000152587890625 65536 samples. Therefore the incoming signal would have to be resampled at the rate of 65536 96 kHz or 6.291456 GHz. Advantageously the described exemplary embodiment generates an error signal as a function of the ratio between the rate at which frames arrive or are placed into the first voice queue and the rate at which frames are removed from the second voice queue so that only those samples that are required to fractionally decimate or interpolate the input voice signal need be computed.

Referring back to in the upstream direction the near end telephony device transmits an analog voice signal to the network gateway via the SLIC . An analog to digital converter converts the incoming analog signal to digital samples with an ADC sample clock . If the TRC clock and the ADC clock are correlated the ADC output is forwarded to the audio processor for decimation echo cancellation and other processing as previously described prior to being forwarded to the encoder system of the voice processor . The voice processor encoder system can provide among other things DTMF and call progress tone detection voice activity detection voice compression and comfort noise estimation. Encoded voice sample are then forwarded to system memory for transmission to the far end telephony device by the upstream modulator and MAC . However if the ADC clock and the TRC clock are uncorrelated voice synchronizer should synchronize the digital voice samples to the TRC clock.

A general block diagram of an exemplary voice synchronizer is shown in . The voice synchronizer preferably includes an error generation unit a sampling rate tracker and a voice queue or FIFO . The error generation unit includes two counters each of which may be clocked by a locally generated reference clock at 24.576 MHz . In the upstream direction the ADC forwards digital samples to the sample rate tracker . With the assumption that the ADC clock and the TRC clock are uncorrelated an ADC 8 kHz clock drives a first counter and a TRC 8 kHz clock drives a second counter . Counter outputs a and a are forwarded to low pass filters that average the output count see . In the described exemplary embodiment the sample rate tracker fractionally decimates or interpolates the incoming signal a in accordance with the ratio of count A to count B. Thus if count A is larger than count B the sample rate tracker up samples the incoming signal a by the ratio count A to count B. Otherwise the sample rate tracker downsamples the incoming signal a by the ratio count A to count B. The sample rate tracker forwards the resampled signal b to the FIFO wherein the samples are assembled into a frame. The assembled frame is then forwarded to an encoder system of the voice and data processor not shown for voice compression such as for example G.729.

Referring to the operation of an exemplary sample rate tracker may be best demonstrated by an example. In it is assumed that the input sample count shown as samples 1 2 3 and 4 is 65537 and the output sample count shown as samples A B C and D is 65536 thereby creating a slight overflow condition. The distance between for example sample 2 and B is equal to 1 65536 of one input sample period. Therefore an incoming 8 kHz signal would have to be resampled at the rate of 65536 8 kHz or 524.288 MHz to generate the additional samples required to eliminate the overflow condition. Referring to in the extreme 65535 zeros would be placed between each individual data sample of the input signal stored in a data buffer. In a typical application eighteen data points would be used to compute the resampling. The number of data points represents a trade between the quality of the conversion and computational complexity. Low pass filter coefficients Coef 1 through Coef 1179648 would be computed which when applied to the samples stored in the buffer yield the resampled signal.

Advantageously the generation of the error signal defined as the output count divided by the input count facilitates the regeneration of the desired resampled output with a reduced number of filter coefficients. For example referring to to compute output B we shift 655357 inputs with 65535 zeros so that sample 65536 is not equal to zero and sample number 65537 is equal to zero. Therefore only eighteen filter coefficients multiply non zero data and only those eighteen coefficients need be calculated for each sample. They are 2 2 65536 2 2 65536 . . . 2 17 65536 . The process is then repeated to compute output sample C. The first 65534 samples are zeros sample number 65536 is non zero and sample 65537 is equal to zero.

Returning to in the downstream direction incoming PCM voice data is forwarded to the sample rate tracker . The voice data may not be synchronized to the local DAC sample clock that converts the received voice samples to an analog format prior to transmission to the near end telephony device. In the downstream direction the first counter is driven by an adjustable frame clock . The speed of the frame clock is negotiated between the network gateway and the CMTS and is assumed to be 10 msec. The frame clock may be generated by the MIPS core or the DSP of the voice processor as a function of frame arrival time. The second counter is preferably driven by a 100 Hz DAC clock that is generated by a clock division counter as shown in . The sample rate tracker preferably fractionally decimates or interpolates the incoming signal a in accordance with the ratio of count A to count B. Thus if count A is larger than count B the sample rate tracker up samples the incoming signal a by the ratio count A to count B. Otherwise the sample rate tracker downsamples the incoming signal a by the ratio count A to count B. The sample rate tracker forwards the resampled signal b to the FIFO second voice queue of . The resampled signal is then converted to an analog signal via a DAC that may use 24.576 MHz DAC clock.

In this embodiment the sample rate tracker fractionally decimates or interpolates the incoming signal a in accordance with the filtered counter output a as compared to . In the case where the TRC clock and the ADC clock are perfectly correlated the counter would output and the incoming signal a would not be resampled. However for the case where the filtered counter output a is greater than the incoming signal is up sampled by the filtered counter output a divided by A . Similarly when filtered counter output a is less than the incoming signal is down sampled by the filtered counter output a divided by A .

Referring to in an alternate voice synchronizer in the downstream direction the MIPS core increments a counter when the network gateway receives a new voice frame from the CMTS not shown . The counter preferably utilizes the DAC 24.576 MHz clock as a reference. The counter output a provides the difference between the frame clock and the DAC clock. A low pass filter again smooths or averages the difference in various frame arrival rates as previously described. The sample rate tracker fractionally decimates or interpolates the incoming signal a in accordance with the output of filtered counter count a as compared to 24576. In the case where the frame arrival clock and the DAC clock are perfectly correlated the counter would output 24576 and the incoming signal would not be resampled. However for the case where the filtered counter output a is greater than the sample tracker up samples the incoming signal by the output a of the low pass filter divided by i.e. A 24576 . Similarly when the filtered counter output a is less than the sample rate tracker down samples the incoming signal by the output a of the low pass filter divided by A .

Referring to an alternate error generation unit utilizes packet control information to generate a far end clock error signal representing the difference between the far end sampling rate and the near end voice playout sampling rate. The clock error signal may then be used to fractionally resample the received data packets . In operation the DSP of the voice processor module may read from and write to data packet control registers within local memory of the DSP to monitor and control the flow of downstream data. For example the DSP may write a packet arrival indication to the packet control register when a downstream packet has arrived and been placed in a jitter buffer. The jitter buffer may be part of the voice processor s local memory or may be external memory accessed via the internal system bus and DSP ISB interface. The voice processor then processes voice samples and forwards the processed samples to the first voice queue . In operation the voice queue writes a packet buffer ready indication to the packet control registers that produces a maskable interrupt that is transmitted to the DSP of the voice processor module. In addition the DSP may write a packet complete indication to the packet control registers indicating that the next packet has been delivered and clearing the packet buffer ready status. The period of the packet complete indication is negotiated between the network gateway and the CMTS and may be for example 10 msec. The packet complete indication is generated by the DSP of the voice processor in accordance with the reference clock locally generated at the network gateway.

In this embodiment the average far end sampling rate may be obtained from the packet arrival control signal and the near end voice playout sampling rate may be obtained from the packet complete control signal. One of skill in the art will appreciate that the present invention may utilize other control signals to obtain the average far end sampling rate and the near end playout rate. In addition the control signals may be generated by for example the MIPS core of the network gateway.

A general block diagram of the alternate downstream voice synchronizer is shown in . In this and other embodiments common reference numerals may be used to represent like components. The voice synchronizer preferably includes an error generation unit the sampling rate tracker and the voice queue or FIFO . The error generation unit includes two counters each of which may be driven by the locally generated TRC clock . The TRC clock may range in frequency from about 8 kHz to 24.576 MHz. However one of skill in the art will appreciate that increasing the frequency of the TRC clock will provide increasingly accurate error estimates. The first and second latches coupled to counters respectively are responsive to packet arrival control signals and packet complete control signals respectively. Latch therefore outputs the count value between successive packet arrival control signals i.e. last count a and current count b and latch outputs the count value between successive packet complete control signals i.e. last count a and current count b . Difference operator is coupled to latch and outputs the difference between the current and the last packet arrival counts i.e. the count between successive packet arrival control signals output by latch . Similarly difference operator a is coupled to latch and outputs the difference between the current and the last packet complete counts i.e. the count between successive packet complete control signals output by latch . Low pass filters and are coupled to difference operators a respectively. The low pass filters and as previously described may be single pole filters that smooth the transitions between different sampling rates.

A difference operator is coupled to the output of low pass filters and and forwards an estimate of the difference between the packet arrival period and packet complete period to the sample rate tracker . The sample rate tracker also receives the incoming PCM voice data. The sample rate tracker fractionally decimates or interpolates the incoming signal a in accordance with the ratio of the packet arrival count and the packet complete count. Thus if in operation the packet arrival count is larger than the packet complete count the sample rate tracker up samples the incoming signal a by the ratio of the packet arrival count to the packet complete count. Otherwise the sample rate tracker downsamples the incoming signal a by the ratio of the packet arrival count to the packet complete count. The sampling rate tracker forwards the resampled signal b to the FIFO . The resampled signal is then converted to an analog signal via a DAC that may use the 24.576 MHz DAC clock.

One of skill in the art will appreciate that the voice synchronizer is not limited to DOCSIS compatible VOIP systems. Rather the present invention may be utilized to synchronize VOIP data in for example digital subscriber line DSL or other packet based networks. Therefore the disclosed network gateway embodiment is by way of example only and not by way of limitation.

Referring to in the analog front end of the audio processor a DAC forwards decoded voice signals to a local telephony device and a ADC receives signals from a local telephony device via a SLIC . The SLIC contains a hybrid that converts from two four wires. Ideally the hybrid gain would be zero to eliminate coupling between the far end and near end transmission paths. However the operation of the hybrid typically results in a frequency dependent gain of less than about one half. Hybrid gain commonly results in a telephony problem known as line echos such as the reflection of the talker s voice at the mismatch created by the two four wire conversion. If there is low end to end delay echo from the far end is equivalent to side tone echo from the near end and therefore not a problem. Side tone gives users feedback as to how loud they are talking and indeed without side tone users tend to talk too loud. However far end echo delays of more than about 10 to 30 msec significantly degrade the voice quality and are a major annoyance to the user. Therefore echo cancellers are typically used to remove far end echo.

Conventionally a reference signal a is input into an adaptive filter that models the transfer characteristics of the dialed telephone line i.e. the hybrid plus the tail circuit which is the telephone line from DAC to ADC so that the unwanted echo may preferably be canceled by subtracting filtered reference signal b from the near end digital input signal a in a difference operator . Typically the adaptive filter converges or adapts only in the absence of near end speech. Therefore near end speech and or noise present on the near end digital input signal a typically referred to as the double talk condition may cause the adaptive filter to diverge. Traditionally echo cancellers utilize energy estimators a b to estimate the energy E of the near end signal a and the energy E of the far end a signal. A typical double talk algorithm then declares near end speech active disabling adaptation of the adaptive filter when the energy of the near end signal is greater than the energy of the far end signal times the hybrid gain H E H E .

A primary disadvantage of conventional approaches which utilize energy estimates is the delay introduced into the detection of near end speech by the energy estimators typically low pass filters that may significantly corrupt the output of difference operator which is typically used as a the feedback error for filter adaptation. The described exemplary echo canceller includes a double talk algorithm that provides rapid detection of near end speech in the presence of far end speech along with a look ahead capability so that the adaptive filter may halt adaptation i.e. freeze the filter taps or coefficients before the near end speech reaches the difference operator.

Although echo cancellation is described in the context of an audio processor for voice exchange via a network gateway those skilled in the art will appreciate that the techniques described for echo cancellation are likewise suitable for various applications requiring the cancellation of reflections or other undesirable signals from a transmission line. Accordingly the described exemplary embodiment for echo cancellation in a signal processing system is by way of example only and not by way of limitation.

Referring to a high pass filter receives a reference signal. The high pass filter matches the echo path impulse response of the Rx data line. The output of the high pass filter is input into the adaptive filter that models the transfer characteristics of the dialed telephone line circuit. The adaptive filter may be a linear transversal filter or other suitable finite impulse response filter. In addition Rx data from the far end a is coupled to double talk logic before the interpolator of the audio processor not shown and the DAC of the analog front end not shown . The double talk logic therefore receives a far end reference signal F n a with an 8 kHz sampling rate. In addition the double talk logic is preferably coupled between the ADC of the analog front end and the decimator of the audio processor not shown . A downsampler performs 12 1 sample decimation of the 96 kHz near end Tx data a and forwards the decimated near end data samples a to the double talk logic at an 8 kHz sample rate.

To minimize delay the downsampler does not low pass filter the near end samples a prior to decimation. Aliasing components which may be created are insignificant in that the output of the downsampler a simply drives the double talk detection logic and is not transmitted to the far end. An energy estimator estimates the background noise level of the decimated near end signal a and forwards the estimated level to the double talk logic . The energy estimator is preferably a low pass filter with a long time constant on the order of about 10 seconds. With a long time constant the energy estimator tends to track the minimum energy level of the decimated near end signal a . Energy estimator estimates the short term energy of the far end TX data F n .

The adaptive filter can be based upon a normalized least mean square algorithm NLMS as described in S. Haykin Adaptive Filter Theory and T. Parsons Voice and Speech Processing the contents of which are incorporated herein by reference as if set forth in full. An error signal a at the output of the difference operator for the filter adaptation may be characterized as follows 

Assuming a block size of four msec or 32 samples at a sampling rate of 8 kHz the short term average energy of the reference signal Eis the sum of the last 32 reference samples so that the convergence gain may be given by 

The 96 kHz near end Tx data samples a are also decimated by a second 12 1 decimator . However decimator does include a low pass filter capability to prevent aliasing of the decimated signal. The decimated output is forwarded to a 60 Hz high pass filter which reduces the 60 Hz interference induced on the transmit line due to proximity to power lines. Filtered output a is input to the difference operator that preferably cancels unwanted echo by subtracting filtered reference signal b from the filter output signal a .

In the described exemplary embodiment the adaptive filter models the transfer characteristics of the hybrid and the tail circuit of the telephone circuit. The tail length supported should preferably be at least 8 msec. The adaptive filter may be a linear transversal filter or other suitable finite impulse response filter. The echo canceller preferably converges or adapts only in the absence of near end speech. Therefore near end speech and or noise present on the input signal a may cause the adaptive filter to diverge. To avoid divergence the adaptive filter can be selectively enabled by the double talk logic . The double talk logic utilizes a sample based algorithm to detect the presence of near end speech without incurring the delays associated with conventional systems in accordance with the following equation Near H Peak F n Background Noise n 

The double talk logic is used to declare near end speech active when the absolute value of the decimated near end signal a is greater than the product of the hybrid gain H and a peak statistic of the far end data samples a summed with the estimated background noise of the transmit data samples. The hybrid gain is generally a constant preferably less than about one half. The background noise for a typical voice channel is on the order of about 70 dBm which is far less than average active speech levels which are typically in the order of about 25 dBm. The background noise estimate is therefore initialized to a value of about 70 dBm and thereafter periodically updated a by the energy estimator . The peak statistic of the far end data samples is defined by the following logic 

where A is a weighting function that is greater than zero and less than or equal to one. The parameter L is the number samples over which the maximum is determined typically in the range of zero to one hundred and twenty eight samples and preferably on the order of about 64 samples. The parameter d is preferably a constant that is also greater than zero and less than or equal to one and preferably on the order of about 0.99. Therefore to determined the peak statistic of the far end the double talk logic applies a weighting factor A to the absolute value of the current sample F n and previous L samples F n L . If the maximum product is greater than the previous peak statistic Peak n 1 then the current peak statistic Peak n is set at the maximum of the product of the weighting factor and far end samples. Otherwise the current peak statistic Peak n is set equal to d times the value of the previous peak statistic Peak n 1 .

In the described exemplary embodiment A L and d are empirically determined to optimize performance and computational load for a given application. For example double logic can more accurately detect near end speech if the maximum is determined over a larger number of samples L. However computational intensity also increases with increasing number of samples L. A and d can be inversely related to the number of sample L so that A and d are smaller for larger number of samples and vice versa.

In the described exemplary embodiment there is a delay associated with the high pass filter and the decimator . The double talk logic which has negligible delays can receive and process near end data samples prior to their arrival at the difference operator . Thus the delay associated with the high pass filter and the second decimator provide a look ahead of M samples allowing the double talk logic to preferably disable adaptation of the adaptive filter M samples before the near end signal reaches the difference operator . The look ahead capability M is the sum of the equivalent delays associated with the high pass filter and the second decimator and is typically two three 8 kHz samples for a ITU T G712 compliant system.

The approach shown in also utilizes a digital hybrid balancer coupled between the interpolator and the decimator . The digital hybrid balancer takes the output of the interpolator and uses it to generate a signal which is summed with the output of the ADC before presentation to the decimator . The digital hybrid balancer operates to reduce echo in the digital domain as opposed to in the analog domain for improved operation of the adaptive echo cancelled.

The approach shown in also utilizes a Y filter coupled between the ADC and the DAC . The Y filter takes the output of the ADC and uses it to generate a signal which is summed with the output of the interpolator before presentation to the DAC . The function of the Y filter is to reduce reflections on the two wire interface.

The relative strength of the near end signal compared to the echo coupled through the hybrid increases with decreasing hybrid gain H so that in the described exemplary embodiment the accuracy of near end voice detection increases with decreasing hybrid gain H . Referring to in another aspect of the present invention a short adaptive filter is integrated into the preferred double talk detection algorithm. The adaptive filter models the transfer characteristics of the dialed telephone line circuit. The adaptive filter may be a linear transversal filter or other suitable finite impulse response filter. An error signal a at the output of difference operator for filter adaptation may be characterized as follows 

Assuming a block size of one msec or 8 samples at a sampling rate of 8 kHz the short term average energy of the reference signal Eis the sum of the last eight samples so that the convergence gain may be given by 

The adaptive filter again filters the far end reference signal a so that the echo level is can be reduced by subtracting filtered reference signal b from the Tx data samples b in a difference operator . The adaptive filter can be reduce line echos about 6 12 dB so as to improve the performance of the double talk logic. In the described exemplary embodiment the output a of the difference operator i.e. Tx data samples with reduced echo is then forwarded to double talk logic which then detects near end speech and selectively enables disables adaptation of the adaptive filter see .

The Internet is a loose association of thousands of networks and millions of computers across the world that are interconnected through communication links. The emergence of Internet Protocol IP as the standard transport protocol for packet based networks has enabled an on line revolution in communications service and applications. Traditional dial up modems provide online access through the public telephone network at up to 56 Kbps equal to 56 000 bits per second . A cable modem on the other hand provides users with high speed Internet access through a cable television network at data rates as high as 56 Mbps. However traditional cable modem service has been limited to data applications so that the realization of diverse communications services at increased data rates requires the development of a common broadband cable access network with integrated voice and data services. Cable Television Laboratories Inc. Cable Labs a membership organization consisting of cable television system operators developed PacketCable 1.0 which defines interface specifications for interoperable equipment capable of providing packet based voice video and other high speed multimedia services over hybrid fiber coax HFC cable systems utilizing the DOCSIS protocol.

The described exemplary network gateway includes a voice and data processor that supports the exchange of voice and data between a traditional circuit switched and a packet based network via a DOCSIS HFC network. The exemplary voice and data processor may be implemented with a programmable DSP software architecture as shown in . This architecture includes a high speed DSP with program memory and data memory . A PCM highway provides the voice and data processor access to the audio processor and optional external audio processing circuits. A grant synchronizer ensures delivery of samples to the network gateway for upstream transmission. The grant synchronizer signals the DSP that a pending grant is about to arrive at the network gateway so as to allow the DSP to synchronize itself to scheduled grants at the network gateway. A host interface transfers data control and status messages between the DSP and the MIPS core .

Notwithstanding many voice applications often require simultaneous support of multiple telephony devices. Conventionally multiple devices could only be supported with additional telephone wires. Recently however multiple POTS service terminations may be multiplexed over a HPNA network utilizing existing in home telephone wiring and communicated to an upstream telephony service. Voice over home networks VOHN may therefore be utilized to reduce the installation costs normally associated with providing simultaneous support of multiple telephony or other network devices. The described exemplary network gateway supports the bidirectional exchange of packetized voice and call signaling between a HPNA local area network and a wide area network such as the Internet. Referring to a network gateway translates between the upstream telephony service and a local HPNA network segment . A remote HPNA media adapter provides a subscriber side interface equivalent to the standard analog phone interface and a network side interface defined by HPNA 2.0. One of skill in the art will appreciate that the partition of functionality between the remote HPNA media adapter and the network gateway may vary. However in the described exemplary embodiment voice compression and decompression algorithms such as for example G.729 are implemented in the media terminal adapter to minimize end end delay and jitter in accordance with packetized voice QOS requirements.

An exemplary network gateway includes an embedded media terminal adapter MTA in compliance with PacketCable 1.0 to support bidirectional exchange of packetized voice or voice band data. An exemplary embedded MTA may be implemented with programmable DSP software architecture to provide a subscriber side interface to a subscriber s telephony device via the voice and data processor or the HPNA MAC PHY and remote HPNA media adapter. The embedded MTA further provides a network side interface to the DOCSIS cable modem. Referring to the preferred embedded MTA includes a host application programming interface HAPI that provides a software messaging interface between the MIPS host and the voice and data processor DSP. The HAPI facilitates the issuing of commands from the MIPS host to the voice and data processor DSP as well the sending of events from the DSP to the MIPS core host. Similarly the MTA further includes a VOHN interface that provides a software messaging interface between the MIPS core host and the remote HPNA media adapter via the HPNA MAC PHY. The VOHN interface also facilitates the issuing of commands from the MIPS host to the remote media adapter as well the sending of events from the remote media adapter to the MIPS core host.

In addition the MTA may provide all signaling and encapsulation elements required to support telephony service over a DOCSIS HFC network including media transport and call signaling via quality service logic . For example gateway control protocol GCP logic receives and mediates call signaling information between the PacketCable network and the PSTN. The GCP logic maintains and controls the overall call state for calls requiring PSTN interconnection. The GCP logic controls the voice and data processor via the MTA and HAPI interface as well as the remote HPNA media adapter via the MTA and VOHN interface by instructing it to create modify and delete connections that support the media stream over the IP network. The GCP logic also instructs the voice and data processor and the remote HPNA mediate adapter to detect and generate events and signals. The GCP logic also exercises attribute control over the voice and data processor and the remote HPNA media adapter providing instructions as to which attributes to apply to a connection such as for example encoding method use of echo cancellation security parameters etc.

The GCP logic also interfaces with an external control element such as for example a call agent or call management server CMS to terminate and generate the call signaling from and to the PacketCable side of the network in accordance with the network based call signaling NCS protocol specification. The PacketCable 1.0 NCS architecture places call state and feature implementation in the centralized CMS and places telephony device controls in the MTA . The MTA passes device events to the CMS and responds to commands issued from the CMS. The CMS is responsible for setting up and tearing down calls providing advanced services such as custom calling features performing call authorization and generating billing event records etc.

For example the CMS instructs the MTA to inform the CMS when a phone goes off hook and seven dual tone multi frequency DTMF digits have been entered. The CMS instructs the MTA to create a connection reserve quality of service QoS resources through the access network for the pending voice connection and to play a locally generated ringback tone. The CMS in turn communicates with a remote CMS or MGC to setup the call. When the CMS detects answer from the far end it instructs the MTA to stop the ringback tone activate the media connection between the MTA and the far end MTA and begin sending and receiving media stream packets.

When a voice channel is successfully established real time transport protocol RTP is used to transport all media streams in a PacketCable compliant network to guarantee interoperability. Real time transport protocol RTP provides end to end delivery services for data with real time characteristics such as interactive audio and video. Those services include payload type identification sequence numbering timestamping and delivery monitoring of the quality of service QoS and conveys to participants statistics such as for example packet and byte counts for the session. RTP resides right above the transport layer. The described exemplary embedded MTA preferably includes RTP logic that converts RTP packets headers to a protocol independent format utilized by the HAPI and VOHN interfaces and vice versa.

The described exemplary embedded MTA preferably includes channel associated signaling CAS logic resident on the MIPS core that interfaces with the subscriber line interface circuits via the GPIO interface see to provide ring generation hookswitch detection and battery voltage control. The CAS logic preferably supports custom calling features such as for example distinctive ringing.

The described exemplary embedded MTA preferably includes MTA device provisioning logic that enables the embedded MTA to register and provide subscriber services over the HFC network . Provisioning logic provides initialization authentication and registration functions. The Provisioning logic also provides attribute definitions required in the MTA configuration file. The provisioning logic includes SNMP logic that exchanges device information and endpoint information between the MTA and an external control element called a provisioning server not shown . The MTA also sends notification to the provisioning server that provisioning has been completed along with a pass fail status using the SNMP protocol.

The Provisioning logic also includes DHCP logic that interfaces with an external dynamic host configuration protocol DHCP server to assign an IP address to the MTA. The DHCP server not shown is a back office network element used during the MTA device provisioning process to dynamically allocate IP addresses and other client configuration information. Further provisioning logic preferably includes domain name server DNS logic which interfaces with an external DNS server not shown to obtain the IP address of a PacketCable server given its fully qualified domain name.

The MTA configuration file is downloaded to the MTA from an external trivial file transfer protocol TFTP server not shown through TFTP logic . The TFTP server is a back office network element used during the MTA device provisioning process to download configuration files to the MTA. An HTTP Server may be used instead of a TFTP server to download configuration files to the MTA.

Each of PacketCable s protocol interfaces is subject to threats that could pose security risks to both the subscriber and service provider. The PacketCable architecture addresses these threats by specifying for each defined protocol interface the underlying security mechanisms such as IPSec that provide the protocol interface with the security services it requires e.g. authentication integrity confidentiality. Security logic is PacketCable compliant and provides end to end encryption of RTP media streams and signaling messages to reduce the threat of unauthorized interception of communications. The security logic preferably provides additional security services such as for example authentication access control integrity confidentiality and non repudiation.

DOCSIS service logic preferably provides the primary interface between the MTA and the DOCSIS cable modem i.e. DOCSIS MAC and modulator demodulator of the network gateway. The DOCIS service logic provides multiple sub interfaces such as for example a control sub interface that manages DOCSIS service flows and associated QoS traffic parameters and classification rules. The DOCIS service logic also provides a synchronization interface that is used to synchronize packet and scheduling prioritization for minimization of latency and jitter with guaranteed minimum constant bit rate scheduling. In addition the DOCSIS service logic is used to request bandwidth and QoS resources related to the bandwidth. The DOCIS cable modem features of the network gateway then negotiate reserve bandwidth guaranteed minimum bit rate etc utilizing DOCSIS 1.1 quality of service feature. Similarly DOCSIS service logic preferably includes a transport interface that is used to process packets in the media stream and perform appropriate per packet QoS processing.

Referring to the GCP logic implements the NCS features of the PacketCable 1.0 specification including protocol transaction management parsing verification and formatting of protocol data units PDUs and other utility functions. The PacketCable protocol typically requires an acknowledgment that a request has been received. Therefore the GCP logic includes transmitter queue that registers all requests sent from the GCP logic to the call management server via a transmitter scheduler and the MTA. A receive router analyzes packets received from the call management server via the MTA call client to determine if the received message is an acknowledgment or a new request. The receiver router forwards new requests to a transaction queue . If the received packet is an acknowledgment of a request previously sent from the GCP logic to the call management server the receive router clears that request by forwarding the acknowledgment a to the transmitter queue . The transmitter queue periodically retransmits buffered requests until an acknowledgment from the call management server is received.

The transaction queue registers the receipt of a given request from the call management server as well as the transmission of an acknowledgment of that request from the GCP logic to the call management server. Further in the described exemplary embodiment the transaction queue detects re transmitted requests from the call management server for which an acknowledgment has already been sent. In addition the transaction queue parses the incoming requests according to the type of requests. The transaction queue routes connection messages to a connection message parser . Connections messages are used to create or terminate a connection. The connection message parser generates and forwards connection controls including connection attributes a to the MTA which are then communicated to the voice and data processor via the HAPI interface or the remote HPNA media adapter via the VOHN interface. The transaction queue routes request notify messages to a request notify message parser . Request notify messages may be signal requests such as play dial tone busy tone etc. or requests to detect events such as for example detect DTMF digits fax tone modem tone etc. The request notify message parser preferably generates and forwards signal requests a to the voice and data processor via the MTA and HAPI interface or the remote HPNA media adapter via the MTA and VOHN interface. The request notify message parser flags event detection requests b to an event filter .

Actual events detected by the voice and data processor and the remote HPNA media adapter such as for example fax tone or channel associated signaling such as for example off hook detected are forwarded to the event filter via the MTA call client. The event filter filters the events and only transmits those detected events that the call management server requested as indicted by flags b communicated to the event filter by the request notify message parser . The event filter preferably forwards detected events of interest to the call management server to a message formatter . The message formatter formats the detected event into the appropriate protocol and forwards the detected event message to transmitter queue which registers the message and will retransmit the message if an acknowledgment is not received in a timely manner via the receive router a . The transmitter queue forwards the message to the transmitter scheduler which bundles outgoing messages and forwards them to the MTA call client not shown for communication to the call management server.

The PacketCable 1.0 specification provides for the use of a digit map which is designed to reduce the number of messages communicated between the call management server and the MTA call agent when a user is dialing a number. For example the dialing of long distance number involves the use often digits i.e. the area code and number which would require ten requests and acknowledgments i.e. one per digit. In the alternative the call management server may provide a digit map to the MTA call client which instruct digit map logic to collect detected digits from the voice and data processor according to a specified format for example ten digits for long distance call. The digit map logic then forwards for example all ten digits to the event filter which filters the digit detection and forwards events of interest to the message parser for communication to the call management server as previously described through transmitter queue and transmitter scheduler .

Event quarantine logic buffers detected events received from the CAS or the remote HPNA media adapter or voice and data processor via the MTA call client for which the event filter has not received a detect event request from the call server manager via the request notify message parser flag b . Responses or the result a of a connection or signal request are forwarded from the MTA call client to a response formatter within the GCP logic that formats the result into the proper protocol. The response formatter then forwards that result to the transmitter scheduler for communication to the call management server via the MTA call client. In addition the response formatter notifies the transaction queue that an acknowledgment has been sent in response to a given request. The transaction queue may then detect the re transmission of a request from the call management server should that acknowledgment be lost or otherwise not received by the call management server. The transaction queue preferably instructs the response formatter to retransmit an acknowledgment when the transaction queue detects the re transmission of a request for which an acknowledgment had been previously sent.

Referring to RTP logic preferably converts RTP packets to the protocol independent packet format utilized by the VOHN interface and the HAPI interface and vice versa. In the described exemplary embodiment the protocol independent packet payload is preferably identical to the RTP packet payload so that the RTP logic need only convert between the RTP headers and the headers used in the independent protocol. In the described exemplary embodiment a RTP shim provides two way exchange of protocol independent packets with the MTA call client . The RTP shim accepts these packets from the MTA call client converts the packet header to a RTP header and forwards the RTP packet to a RTP stack . The RTP stack provides the statistical monitoring function required by the RTP protocol such as for example collecting statistics on the number of bytes sent and received the number of packets lost as well as how much jitter was present. The RTP stack provides two way exchange of RTP packet between the MTA call client and the RTP logic receiving RTP packets from the RTP shim and forwarding them to the MTA call client and vice versa.

Referring to the described exemplary VOHN interface provides a software messaging interface between the MTA call client and the remote HPNA media adapter . The VOHN interface facilitates the issuing of commands from the MIPS core via the MTA call client to the remote HPNA media adapter as well the sending of events from the remote HPNA media adapter to the MTA call client . The VOHN interface may be scalable to support multiple channels as well as multiple media adapters. In addition the VOHN interface is a thread safe environment providing multi threading capability to support multiple channels. Multi threading provides multiple simultaneously executing threads within a single application. The benefit of a multi threaded application is similar to that of a multi tasked operating system the application may perform multiple tasks by using separate threads.

The described exemplary VOHN interface receives commands from and issues responses to the MTA call client . The VOHN interface processes incoming packets to identify the channel that should process the packet as well as other processing parameters such as for example packet type i.e. voice or fax packet length etc. For example VOHN signaling messages are data link layer frames that are identified by a unique IEEE assigned Ethertype value in the frame header. Further in the described exemplary embodiment the frame header may also include one or more payload element fields. Each payload element may be variable length and multiple payload types such as for example voice channel associated signaling etc. may be concatenated in a single frame in any order.

For example in the described exemplary embodiment voice payload fields transfer packetized voice encoded to ITU standards such as for example G.711 a law G.711 u law G.728 or G.729A B E. The size of the frame depends on the vocoder frame rate selected for the media stream normally a multiple of 10 ms. Voice payload fields are transmitted at the selected frame rate while a voice path is established to the line termination. Some vocoder algorithms incorporate voice activity detection VAD and reduce packet rate significantly during periods of silence.

In the described exemplary embodiment voice band data traffic such as for example G.711 u a law data may be treated as a special case. Voice band data is less sensitive to delay but more sensitive to frame loss than voice traffic. Therefore in operation frames containing voice band data contain two payload fields to increase delivery reliability over the HPNA segment. In the described exemplary embodiment the first payload field contains voice samples from the current frame period and a second payload field contains a repeat of the voice samples from the most recent previous frame period.

In the described exemplary embodiment signaling and voice payloads are encoded in frames that are transported as a Link Layer Protocol according to the formats and procedures for HPNA 2.0 Link Layer Framing. The VOHN interface forwards processed messages a to the HPNA MAC layer to provide access to the physical media and transparent transfer of link layer frames between the network gateway and remote HPNA media adapters . In the described exemplary embodiment individual line terminations are identified by single pre defined well known MAC station addresses. Frames destined for a specific line termination are transmitted to the destination MAC address assigned for that line rather than using the unique unicast MAC address of the network gateway or remote media adapter. The line termination or station addresses are actually multicast MAC addresses allowing multiple HPNA media adapters to share the same line termination and thus transmit receive using the same station address. This addressing model permits implementation of distributed conferencing. Further the sender of a communication may be identified from its unique unicast MAC station source address. The MAC layer may also perform error detection on received frames and silently discard frames with errors.

In the described exemplary embodiment frames may be transmitted at one of two rates. For example during static or quiescent periods when no state transitions are occurring frames may be transmitted at a background rate on the order of about one frame every five seconds. However when state information changes frames may be transmitted at a foreground rate of one every 10 msec. In the described exemplary embodiment frames are transmitted at the foreground rate until a quiescent period of at least about 50 msec has elapsed.

The remote HPNA media adapter forwards processed packets such as for example encoded voice packets to the HPNA PHY MAC of the network gateway. The HPNA MAC preferably reformats the response into a VOHN message and forwards the VOHN message to system memory. In addition when a processed packet is written into system memory the MIPS core interrupts a VOHN Task Thread that retrieves the processed VOHN message from the memory. The VOHN Task Thread determines whether the message is an event such as for example a voice or fax packet or a DTMF detection which are forwarded directly to the MTA call client or a response to a command request from the MTA call client. For example the MTA call client may command the remote HPNA media adapter to turn off echo cancellation. Such a command is preferably processed by the VOHN interface into the appropriate link layer format and forwarded to the HPNA MAC PHY . The MAC formats the message in accordance with HPNA V.2 protocol and forwards the command over the HPNA network to the remote HPNA media adapter.

When the command has been complied with the remote HPNA media adapter returns an acknowledgment to the HPNA PHY MAC of the network gateway via the HPNA network. The HPNA MAC formats the response into a VOHN message and forwards it to the VOHN Task thread which then forwards it as a VOHN response to the VOHN interface . The VOHN interface correlates the VOHN responses received from the VOHN Task thread to the corresponding command request that prompted the response and forwards a VOHN response to the MTA call client .

The interaction of an exemplary embedded MTA and remote HPNA media adapter may best be illustrated in the context of a typical voice communication across the DOCSIS HFC network. The table set forth in illustrates the call flow for an outgoing call origination. In this example the network is initially in an idle state. The MTA and CAS of the network gateway transmit a loop current feed LCF state indication to the remote media adapter that returns a loop open or on hook indication. The user initiates a communication by going off hook. The remote HPNA media adapter performs hook switch monitoring on the local subscriber line interface SLIC and relays a loop closed offhook state indication to the network gateway. The CAS logic detects an offhook state and forwards a detection event to the MTA. The MTA call client then instructs the GCP logic to generate an off hook signal. The GCP logic generates an off hook signal which is forwarded to the MTA call client and transmitted out the QoS service logic to the call management server via the DOCSIS MAC and upstream modulator of the network gateway and the CMTS. The call management server typically would transmit a return signal via the CMTS DOCSIS MAC and downstream demodulator of the network gateway to the MTA call client via the QoS service logic. The MTA call client preferably forwards that signal to the GCP logic that decodes the signal typically play dial tone. The GCP logic would then signal the MTA call client to play dial tone. The MTA call client then sends a command to the remote media adapter via the VOHN interface and HPNA MAC PHY to play dial tone. The user then hears a dial tone.

Upon hearing a dial tone a user will then typically dial a number. The remote HPNA media adapter includes a DTMF detector that detects the dialed digits and generates DTMF tone on and tone off events that are forwarded to the MTA call client as events via the HPNA PHY MAC and the VOHN interface. The MTA call client forwards the event to the GCP logic that encodes the dialed digits into a signaling message which is returned to the MTA call client. The MTA call client transmits the signaling message out the QoS service logic to the call management server via the DOCSIS MAC and upstream modulator of the network gateway and the CMTS. The call management server would then instruct a called party MTA to generate a ring to the called number. If the call is answered by going offhook the CAS of the called MTA would detect an offhook condition and signal the call management server. The call management server then instructs the MTA call client via the CMTS and downstream demodulator DOCSIS MAC and QoS service logic of the network gateway to establish a voice connection with a given set of features i.e. use echo cancellation and silence suppression use given coder etc. In addition the MTA call client is given the IP address of the called party to which the RTP voice packets should be sent. The MTA call client forwards the received message to the GCP logic that decodes the received message. The GCP logic generates attribute instructions for the remote HPNA media adapter such as for example encoding method use of echo cancellation security parameters etc. which are communicated to the remote media adapter via the MTA call client the VOHN interface and the HPNA MAC PHY.

Voice packets are then exchanged. For example if the calling party speaks the remote HPNA media adapter would process the voice and forward voice packets to the MTA call client via HPNA PHY MAC and the VOHN interface. The MTA call client forwards those voice packets to the RTP logic that converts the packet from a protocol independent packet format to the RTP format. The RTP voice packets are then returned to the MTA which transmits the RTP voice packet to the CMTS via the QoS service logic and the DOCSIS MAC and upstream demodulator of the network gateway. The voice packets are then routed to the called party. Similarly voice packets from the called party are communicated to the MTA of the call client via the QoS service logic. The MTA call client forwards the RTP voice packets to the RTP logic that converts the packet from the RTP format to the protocol independent packet format. The protocol independent voice packets are returned to the MTA call client that forwards them to the VOHN interface. The remote HPNA media adapter decodes the packets and communicates a digital stream to the called party. Voice exchange would continue in a similar manner until an on hook condition is detected by either the calling or called party. The CAS would then forward an on hook detection event to its respective MTA. The MTA instructs the GCP logic to generate a hook detection signaling message that is returned to the MTA and forwarded to the call management server. The call management server generates a request to each MTA to terminate the voice connection. Each MTA would forward the request to their respective GCP logic that instructs the remote HPNA media adapters to disable their respective voice encoders via the MTA VOHN interface and HPNA MAC PHY.

Telephony calls in the other direction are similarly processed. For example the call management server instructs the MTA called client to ring a dialed number. The MTA called client instructs the GCP logic to generate a command to ring the dialed number. The command is then forwarded to the CAS via the MTA called client. The CAS generates a ring signal and forwards that signal to the VOHN interface for communication across the network to the remote HPNA media adapter. The MTA called client may also instruct the GCP logic to present call ID that preferably generates a command for the remote HPNA media adapter to present caller ID. If the user picks up the phone the CAS would detect an off hook condition and signal an off hook event back to the MTA. The MTA called client then instructs the GCP logic to create an offhook detection signaling message which when created is returned to the MTA and forwarded to the external call management server via the QoS service logic DOCSIS MAC and upstream modulator of the network gateway and the CMTS. A communication channel would again be established with a given set of attributes as previously described.

In the described exemplary embodiment the network gateway transmits CAS and CLASS payload frames to a multicast MAC destination address that is associated with the line termination. In this way ringing and caller ID messages are distributed to each remote HPNA media adapter bound to the line. In the described exemplary embodiment the network gateway is responsible for timing of state transitions on the remote HPNA media adapter loop interface. The network gateway generates ring signal cadence and by timing ringer on and ringer off events and manages ring trip removal. It is responsible for managing the timing between CAS state events and CLASS messages for on hook and off hook CLASS services according to Bellcore GR 30. It is responsible for meeting for the ring trip removal delay requirement. The Proxy Gateway performs hook switch event detection based on the timing of hook switch events reported from the Media Adapter according to Bellcore GR 506. The Proxy Gateway is able to determine off hook on hook and hook flash events and report those events to the upstream telephony service.

In the described exemplary embodiment the network gateway may also transmit test payloads to remote HPNA media adapters to perform loop test and diagnostic functions on the line termination handled by the remote media adapter. For example a ping request payload requests that the receiving media adapter respond with a ping response payload containing the same payload data field as the request. An analog loopback payload requests that the receiving remote media adapter perform an analog loopback i.e. as close to the SLIC interface as possible . In the analog loopback test subsequent voice payloads received should be played out D A conversion and re encoded A D conversion for transmission upstream. A digital loopback payload requests that the receiving remote media adapter perform a digital loopback. Subsequent voice payloads received should be echoed back unchanged for transmission upstream.

Referring to the described exemplary host application programming interface HAPI provides a software messaging interface between the MTA call client and the voice and data processor DSP. The HAPI facilitates the issuing of commands from the MIPS core via the MTA call client to the voice and data processor DSP as well the sending of events from the DSP to the MTA call client . The HAPI interface can be scalable to support multiple channels as well as multiple DSPs. In addition the HAPI interface is a thread safe environment providing multi threading capability to support multiple channels. Multi threading provides multiple simultaneously executing threads within a single application. The benefit of a multi threaded application is similar to that of a multi tasked operating system the application may perform multiple tasks by using separate threads.

In the described exemplary HAPI an application programming interface API receives commands from and issues responses to the MTA call client . The API processes incoming packets adding an additional header word to identify the channel that should process the packet as well as other processing parameters such as for example packet type i.e. voice or fax packet length etc. The API forwards processed API messages a to a physical interface firmware layer that interfaces with the host port of the DSP underlying the voice and data processor so as to isolate the MTA call client software and the signal processing software from the underlying hardware. This methodology allows the software to be ported to various hardware platforms by porting only the hardware interface portions of the HAPI interface to the target hardware. The physical interface formats the message in accordance with the underlying DSP and forwards or transmits the message to the telephony algorithms executing on the DSP.

Similarly the underlying DSP forwards processed packets such as for example encoded voice packets to the physical interface . The physical interface preferably reformats the response into an API message. When a processed packet is forwarded to the physical interface the underlying DSP also interrupts an APITask Thread that retrieves the processed API messages from the physical interface . The APITask Thread determines whether the API message is an event such as for example a voice or fax packet or a DTMF detection which are forwarded directly to the MTA call client a or a response to a command request from the MTA call client. For example the MTA call client may command the voice and data processor to turn off the echo canceller. Such a command is preferably processed by the API interface to add the appropriate header word and forwarded to the physical interface . The physical interface formats the message in accordance with the underlying DSP and issues the command to the underlying voice channel to turn off the echo canceller.

When the command has been complied with a response is returned from the underlying DSP to the physical interface . The physical interface formats the response into an API message and forwards it to the APITask thread which then forwards it as an API response to the API interface . The API interface correlates the API responses received from the APITask thread to the corresponding command request that prompted the response and forwards a HAPI response to the MTA call client .

The operation of an exemplary embedded MTA and the voice and data processor may best be illustrated in the context of a typical voice communication across the DOCSIS HFC network. The user initiates a communication by going off hook. The CAS detects the off hook condition from the SLIC and sends an off hook event to the MTA call client. The MTA call client then instructs the GCP logic to generate a off hook signal. The GCP logic generates an off hook signal which is forwarded to the MTA call client and transmitted out the QoS service logic to the call management server via the DOCSIS MAC and upstream modulator of the network gateway and the CMTS. The call management server typically would transmit a return signal via the CMTS DOCSIS MAC and downstream demodulator of the network gateway to the MTA call client via the QoS service logic. The MTA call client preferably forwards that signal to the GCP logic that decodes the signal typically play dial tone. The GCP logic would then signal the MTA call client to play dial tone. The MTA call client then sends a command to the voice and data processor via the HAPI interface to play dial tone. The user then hears a dial tone.

Upon hearing a dial tone a user will typically dial a number. The voice and data processor includes a DTMF detector which detects the dialed digits and forwards the detected digits to the MTA call client as events via the HAPI interface. The MTA call client forwards the event to the GCP logic that encodes the dialed digits into a signaling message that is returned to the MTA call client. The MTA call client transmits the signaling message out the QoS service logic to the call management server via the DOCSIS MAC and upstream modulator of the network gateway and the CMTS. The call management server would then instruct a called party MTA to generate a ring to the called number. If the called number answers by going off hook the CAS of the called MTA would detect an off hook condition and signal the call management server. The call management server then instructs the MTA call client via the CMTS and downstream demodulator DOCSIS MAC and QoS service logic of the network gateway to establish a voice connection with a given set of features i.e. use echo cancellation and silence suppression use given coder etc. In addition the MTA call client is given the IP address of the called party to which the RTP voice packets should be sent. The MTA call client forwards the received message to the GCP logic that decodes the received message. The GCP logic generates attribute instructions for the voice and data processor such as for example encoding method use of echo cancellation security parameters etc. that are communicated to the voice and data processor via the MTA call client and the HAPI interface.

Voice packets are then exchanged. For example if the calling party speaks the voice and data processor would process the voice and forward voice packets to the MTA call client via the HAPI interface. The MTA call client forwards the voice packet to the RTP logic that converts the packet from a protocol independent packet format to the RTP format. The RTP voice packets are then returned to the MTA which transmits the RTP voice packet to the CMTS via the QoS service logic and the DOCSIS MAC and upstream demodulator of the network gateway. The voice packets are then routed to the called party. Similarly voice packets from the called party are communicated to the MTA of the call client via the QoS service logic. The MTA call client forwards the RTP voice packets to the RTP logic that converts the packet from the RTP format to the protocol independent packet format. The protocol independent voice packets are returned to the MTA call client that forwards them to the voice and data processor via the HAPI interface. The voice and data processor decodes the packets and communicates a digital stream to the called party. Voice exchange would continue in a similar manner until an on hook condition is detected by either the calling or called party. The CAS would then forward an on hook detection event to its respective MTA. The MTA instructs the GCP logic to generate a hook detection signaling message which is returned to the MTA and forwarded to the call management server. The call management server generates a request to play dial tone silence or receiver off hook which is forwarded to the opposite MTA. The MTA would forward the request to the GCP logic which would then instruct the voice and data processor to play dial tone via the MTA and HAPI interface.

Telephony calls in the other direction are similarly processed. For example the call management server instructs the MTA called client to ring a dialed number. The MTA called client instructs the GCP logic to generate a command to ring the dialed number. The command is then forwarded to the CAS via the MTA called client. The CAS generates a ring signal and forwards that signal to the SLIC that then rings the called telephony device. The MTA called client may also instruct the GCP logic to present call ID that preferably generates a command for the voice and data processor to present caller ID. If the user picks up the phone the CAS would detect an off hook condition and signal an off hook event back to the MTA. The MTA called client instructs the GCP logic to create an off hook detection signaling message which when created is returned to the MTA and forwarded to the external call management server via the QoS service logic DOCSIS MAC and upstream modulator of the network gateway and the CMTS. A communication channel would again be established with a given set of attributes as previously described.

Referring to the described exemplary channel associated signaling CAS logic utilizes a foreign exchange office FXO interface to provide exchange of commands and detection of events between the MTA call client and standard commercial analog loop ground start devices such as for example plain old telephone sets POTS group three facsimiles modems answering machine or other similar devices. The CAS logic can operate in switch mode such that ABCD bits are terminated within the CAS logic. The MTA call client interfaces with the CAS logic through high level commands and events . For example if the CAS logic detects a phone going off the hook a detection event is forwarded to the MTA call client which may then notify the call management server as previously described. The MTA call client is also able to issue high level commands to the CAS logic.

For example to ring a phone coupled to the network gateway via the voice and data processor the MTA call client sends a ring generation profile to the CAS logic. The CAS logic reformats the command into raw CAS bits by FXO termination logic to control the external interface via a hardware abstraction layer HAL . The HAL provides a physical interface to the connected SLIC. The HAL formats message signals in accordance with the underlying SLIC and forwards or transmits the message signal to the connected telephony device via the SLIC .

Ringing a telephony device via the HPNA network proceeds similarly wherein raw CAS bits generated by the FXO termination logic are forwarded to the remote HPNA media adapter via the HPNA MAC PHY . Further detected events signaled from the hardware SLIC or the remote HPNA media adapter including on off hook flash hook and potentially pulse dial are returned to the FXO termination logic from the hardware abstraction layer or HPNA MAC PHY respectively as raw CAS bits.

The FXO termination logic preferably verifies the integrity of the detected event and forwards a detected event message to the MTA call client. The FXO termination logic includes a state machine that monitors detected events signaled from the SLIC via the hardware abstraction layer or the HPNA remote media adapter via the HPNA MAC PHY . The FXO termination logic qualifies detected events to determine if a valid on off hook flash hook or pulse dial has been detected. The FXO termination logic analyzes the period of the received signal to determine valid flash hook or pulse dial conditions. Similarly the FXO termination logic includes a state machine that is associated with the ringing of connected phones. When the MTA call client issues a command to ring a connected phone with a pre defined cadence the associated FXO termination state machine will ring the connected phone in accordance with the MTA command.

The described exemplary voice and data processor is preferably implemented with a programmable DSP software architecture see . The programmable DSP is effectively hidden within the embedded communications software layer. The software layer binds all core DSP algorithms together interfaces the DSP hardware to the host and provides low level services such as the allocation of resources to allow higher level software programs to run. An exemplary multi layer software architecture loaded into the program memory for execution on the DSP platform is shown in . The MTA call client provides overall executive control and system management and directly interfaces a DSP server to the host MIPS core see to . The DSP server provides DSP resource management and telecommunications signal processing. Operating below the DSP server layer are a number of physical devices PXD a b c. Each PXD provides an interface between the DSP server and an external telephony device not shown via a hardware abstraction layer HAL .

The DSP server includes a resource manager which receives commands from forwards events to and exchanges data with the MTA call client . An application programming interface API provides a software interface between the user MTA call client and the resource manager . The resource manager manages the internal external program and data memory of the DSP . In addition the resource manager dynamically allocates DSP resources performs command routing as well as other general purpose functions.

The DSP server also includes virtual device drivers VHDs a b c. The VHDs are a collection of software objects that control the operation of and provide the facility for real time signal processing. Each VHD a b c includes an inbound and outbound media queue not shown and a library of signal processing services specific to that VHD a b c. In the described exemplary embodiment each VHD a b c is a complete self contained software module for processing a single channel with a number of different telephony devices. Multiple channel capability can be achieved by adding VHDs to the DSP server . The resource manager dynamically controls the creation and deletion of VHDs and services.

A switchboard in the DSP server dynamically inter connects the PXDs a b c with the VHDs a b c. Each PXD a b c is a collection of software objects which provide signal conditioning for one external telephony device. For example a PXD may provide volume and gain control for signals from a telephony device prior to communication with the switchboard . Multiple telephony functionalities can be supported on a single channel by connecting multiple PXDs one for each telephony device to a single VHD via the switchboard . Connections within the switchboard are managed by the user application layer via a set of API commands to the resource manager . The number of PXDs and VHDs is expandable and limited only by the memory size and the MIPS millions instructions per second of the underlying hardware.

A hardware abstraction layer HAL interfaces directly with the underlying DSP hardware see and exchanges telephony signals between the external telephony devices and the PXDs. The HAL includes basic hardware interface routines including DSP initialization target hardware control codec sampling and hardware control interface routines. The DSP initialization routine is invoked by the user application layer to initiate the initialization of the signal processing system. The DSP initialization sets up the internal registers of the signal processing system for memory organization interrupt handling timer initialization and DSP configuration. Target hardware initialization involves the initialization of all hardware devices and circuits external to the signal processing system. The HAL is a physical firmware layer that isolates the communications software from the underlying hardware. This methodology allows the communications software to be ported to various hardware platforms by porting only the affected portions of the HAL to the target hardware.

The exemplary software architecture described above can be integrated into numerous telecommunications products. In an exemplary embodiment the software architecture is designed to support telephony signals between telephony devices and or circuit switched networks and packet based networks. A network VHD NetVHD is used to provide a single channel of operation and provide the signal processing services for transparently managing voice fax and modem data across a variety of packet based networks. More particularly the NetVHD encodes and packetizes DTMF voice fax and modem data received from various telephony devices and or circuit switched networks and transmits the packets to the user application layer. In addition the Net VHD disassembles DTMF voice fax and modem data from the user application layer decodes the packets into signals and transmits the signals to the circuit switched network or device.

An exemplary embodiment of the NetVHD operating in the described software architecture is shown in . The NetVHD includes four operational modes namely voice mode voiceband data mode fax relay mode and data relay mode . In each operational mode the resource manager invokes various services. For example in the voice mode the resource manager invokes call discrimination packet voice exchange and packet tone exchange . The packet voice exchange may employ numerous voice compression algorithms including among others Linear 128 kbps G.711 u law A law 64 kbps ITU Recommendation G.711 1988 Pulse code modulation PCM of voice frequencies G.726 16 24 32 40 kbps ITU Recommendation G.726 12 90 40 32 24 16 kbit s Adaptive Differential Pulse Code Modulation ADPCM G.729A 8 kbps Annex A 11 96 to ITU Recommendation G.729 Coding of speech at 8 kbit s using conjugate structure algebraic code excited linear prediction CS ACELP Annex A Reduced complexity 8 kbit s CS ACELP speech codec and G.723 5.3 6.3 kbps ITU Recommendation G.723.1 03 96 Dual rate coder for multimedia communications transmitting at 5.3 and 6.3 kbit s . The contents of each of the foregoing ITU Recommendations are incorporated herein by reference as if set forth in full.

The packet voice exchange is common to both the voice mode and the voiceband data mode . In the voiceband data mode the resource manager invokes the packet voice exchange for transparently exchanging data without modification other than packetization between the telephony device or circuit switched network and the packet based network. This is typically used for the exchange of fax and modem data when bandwidth concerns are minimal as an alternative to demodulation and remodulation. During the voiceband data mode the human speech detector service is also invoked by the resource manager. The human speech detector monitors the signal from the near end telephony device for speech. In the event that speech is detected by the human speech detector an event is forwarded to the resource manager which in turn causes the resource manager to terminate the human speech detector service and invoke the appropriate services for the voice mode i.e. the call discriminator the packet tone exchange and the packet voice exchange .

In the fax relay mode the resource manager invokes a packet fax data exchange service. The packet fax exchange may employ various data pumps including among others V.17 which can operate up to 14 400 bits per second V.29 which uses a 1700 Hz carrier that is varied in both phase and amplitude resulting in 16 combinations of 8 phases and 4 amplitudes which can operate up to 9600 bits per second and V.27ter which can operate up to 4800 bits per second. Likewise the resource manager invokes a packet modem data exchange service in the data relay mode . The packet modem data exchange may employ various data pumps including among others V.22bis V.22 with data rates up to 2400 bits per second V.32bis V.32 which enables full duplex transmission at 14 400 bits per second and V.34 which operates up to 33 600 bits per second. The ITU Recommendations setting forth the standards for the foregoing data pumps are incorporated herein by reference as if set forth in full.

In the described exemplary embodiment the user application layer does not need to manage any service directly. The user application layer manages the session using high level commands directed to the NetVHD which in turn directly runs the services. However the user application layer can access more detailed parameters of any service if necessary to change by way of example default functions for any particular application.

In operation the user application layer opens the NetVHD and connects it to the appropriate PXD. The user application then may configure various operational parameters of the NetVHD including among others default voice compression Linear G.711 G.726 G.723.1 G.723.1A G.729A G.729B fax data pump Binary V.17 V.29 V.27ter and modem data pump Binary V.22bis V.32bis V.34 . The user application layer then loads an appropriate signaling service not shown into the NetVHD configures it and sets the NetVHD to the On hook state.

In response to events from the signaling service not shown via a near end telephony device hookswitch or signal packets from the far end the user application will set the NetVHD to the appropriate off hook state typically voice mode. In an exemplary embodiment if the signaling service event is triggered by the near end telephony device the packet tone exchange will generate dial tone. Once a DTMF tone is detected the dial tone is terminated. The DTMF tones are packetized and forwarded to the user application layer for transmission on the packet based network. The packet tone exchange could also play ringing tone back to the near end telephony device when a far end telephony device is being rung and a busy tone if the far end telephony device is unavailable. Other tones may also be supported to indicate all circuits are busy or an invalid sequence of DTMF digits were entered on the near end telephony device.

Once a connection is made between the near end and far end telephony devices the call discriminator is responsible for differentiating between a voice and machine call by detecting the presence of a 2100 Hz. tone as in the case when the telephony device is a fax or a modem a 1100 Hz. tone or V.21 modulated high level data link control HDLC flags as in the case when the telephony device is a fax . If a 1100 Hz. tone or V.21 modulated HDLC flags are detected a calling fax machine is recognized. The NetVHD then terminates the voice mode and invokes the packet fax exchange to process the call. If however 2100 Hz tone is detected the NetVHD terminates voice mode and invokes the packet data exchange.

The packet data exchange service further differentiates between a fax and modem by continuing to monitor the incoming signal for V.21 modulated HDLC flags which if present indicate that a fax connection is in progress. If HDLC flags are detected the NetVHD terminates packet data exchange service and initiates packet fax exchange service. Otherwise the packet data exchange service remains operative. In the absence of an 1100 or 2100 Hz. tone or V.21 modulated HDLC flags the voice mode remains operative.

Voice mode provides signal processing of voice signals. Voice mode enables the transmission of voice over a packet based system such as Voice over IP VoIP H.323 Voice over Frame Relay VOFR FRF 11 Voice Telephony over ATM VTOA or any other proprietary network. The voice mode should also permit voice to be carried over traditional media such as time division multiplex TDM networks and voice storage and playback systems.

The PXDs for the voice mode provide echo cancellation gain and automatic gain control. The network VHD invokes numerous services in the voice mode including call discrimination packet voice exchange and packet tone exchange. These network VHD services operate together to provide 1 an encoder system with DTMF detection call progress tone detection voice activity detection voice compression and comfort noise estimation and 2 a decoder system with delay compensation voice decoding DTMF generation comfort noise generation and lost frame recovery.

The services invoked by the network VHD in the voice mode and the associated PXD are shown schematically in . In the described exemplary embodiment the PXD provides two way communication with a telephone or a circuit switched network such as a PSTN line e.g. DSO carrying a 64 kb s pulse code modulated PCM signal i.e. digital voice samples.

The incoming PCM signal a is initially processed by the PXD to remove far end echos. As the name implies echo in telephone systems is the return of the talker s voice resulting from the operation of the hybrid with its two four wire conversion. If there is low end to end delay echo from the far end is equivalent to side tone echo from the near end and therefore not a problem. Side tone gives users feedback as to how loud they are talking and indeed without side tone users tend to talk too loud. However far end echo delays of more than about 10 to 30 msec significantly degrade the voice quality and are a major annoyance to the user.

An echo canceller is used to remove echos from far end speech present on the incoming PCM signal a before routing the incoming PCM signal a back to the far end user. The echo canceller samples an outgoing PCM signal b from the far end user filters it and combines it with the incoming PCM signal a. Preferably the echo canceller is followed by a non linear processor NLP which may mute the digital voice samples when far end speech is detected in the absence of near end speech. The echo canceller may also inject comfort noise which in the absence of near end speech may be roughly at the same level as the true background noise or at a fixed level.

After echo cancellation the power level of the digital voice samples is normalized by an automatic gain control AGC to ensure that the conversation is of an acceptable loudness. Alternatively the AGC can be performed before the echo canceller however this approach would entail a more complex design because the gain would also have to be applied to the sampled outgoing PCM signal b. In the described exemplary embodiment the AGC is designed to adapt slowly although it should adapt fairly quickly if overflow or clipping is detected. The AGC adaptation should be held fixed if the NLP is activated.

After AGC the digital voice samples are placed in the media queue in the network VHD via the switchboard . In the voice mode the network VHD invokes three services namely call discrimination packet voice exchange and packet tone exchange. The call discriminator analyzes the digital voice samples from the media queue to determine whether a 2100 Hz a 1100 Hz. tone or V.21 modulated HDLC flags are present. As described above with reference to if either tone or HDLC flags are detected the voice mode services are terminated and the appropriate service for fax or modem operation is initiated. In the absence of a 2100 Hz a 1100 Hz. tone or HDLC flags the digital voice samples are coupled to the encoder system which includes a voice encoder a voice activity detector VAD a comfort noise estimator a DTMF detector a call progress tone detector and a packetization engine .

Typical telephone conversations have as much as sixty percent silence or inactive content. Therefore high bandwidth savings can be realized if digital voice samples are suppressed during these periods. The VAD operating under the packet voice exchange is used to accomplish this function. The VAD attempts to detect digital voice samples that do not contain active speech. During periods of inactive speech the comfort noise estimator couples silence identifier SID packets to the packetization engine . The SID packets contain voice parameters that allow the reconstruction of the background noise at the far end.

From a system point of view the VAD may be sensitive to the change in the NLP . For example when the NLP is activated the VAD may immediately declare that voice is inactive. In that instance the VAD may have problems tracking the true background noise level. If the echo canceller generates comfort noise during periods of inactive speech it may have a different spectral characteristic from the true background noise. The VAD may detect a change in noise character when the NLP is activated or deactivated and declare the comfort noise as active speech. For these reasons the VAD should be disabled when the NLP is activated. This is accomplished by a NLP on message a passed from the NLP to the VAD .

The voice encoder operating under the packet voice exchange can be a straight 16 bit PCM encoder or any voice encoder which supports one or more of the standards promulgated by ITU. The encoded digital voice samples are formatted into a voice packet or packets by the packetization engine . These voice packets are formatted according to an applications protocol and output to the host not shown . In the described exemplary packet voice exchange the voice encoder is invoked when digital voice samples with speech are detected by the VAD . Since the packetization interval may be a multiple of an encoding interval both the VAD and the packetization engine preferably cooperate to decide whether or not the voice encoder is invoked. For example if the packetization interval is 10 msec and the encoder interval is 5 msec a frame of digital voice samples is 5 ms then a frame containing active speech should cause the subsequent frame to be placed in the 10 ms packet regardless of the VAD state during that subsequent frame. This interaction can be accomplished by the VAD passing an active flag a to the packetization engine and the packetization engine controlling whether or not the voice encoder is invoked.

In the described exemplary embodiment the VAD is applied after the AGC . This approach provides optimal flexibility because both the VAD and the voice encoder are integrated into some speech compression schemes such as those promulgated in ITU Recommendations G.729 with Annex B VAD March 1996 Coding of Speech at 8 kbits s Using Conjugate Structure Algebraic Code Exited Linear Prediction CS ACELP and G.723.1 with Annex A VAD March 1996 Dual Rate Coder for Multimedia Communications Transmitting at 5.3 and 6.3 kbit s the contents of which is hereby incorporated by reference as through set forth in full herein.

Operating under the packet tone exchange a DTMF detector determines whether or not there is a DTMF signal present at the near end. The DTMF detector also provides a pre detection flag a which indicates whether or not it is likely that the digital voice sample might be a portion of a DTMF signal. If so the pre detection flag a is relayed to the packetization engine instructing it to begin holding voice packets. If the DTMF detector ultimately detects a DTMF signal the voice packets are discarded and the DTMF signal is coupled to the packetization engine . Otherwise the voice packets are ultimately released from the packetization engine to the host not shown . The benefit of this method is that there is only a temporary impact on voice packet delay when a DTMF signal is pre detected in error and not a constant buffering delay. In the described exemplary embodiment the user application layer can adaptively control whether voice packets are held while the pre detection flag a is active.

Similarly a call progress tone detector also operates under the packet tone exchange to determine whether a precise signaling tone is present at the near end. Call progress tones are those which indicate what is happening to dialed phone calls. Conditions like busy line ringing called party bad number and others each have distinctive tone frequencies and cadences assigned them. The call progress tone detector monitors the call progress state and forwards a call progress tone signal to the packetization engine to be packetized and transmitted across the packet based network. The call progress tone detector may also provide information regarding the near end hook status which is relevant to the signal processing tasks. If the hook status is on hook the VAD should preferably mark all frames as inactive DTMF detection should be disabled and SID packets should only be transferred if they are required to keep the connection alive.

The decoding system of the network VHD essentially performs the inverse operation of the encoding system. The decoding system of the network VHD comprises a depacketizing engine a voice queue a DTMF queue a call progress tone queue a voice synchronizer a DTMF synchronizer a precision tone synchronizer a voice decoder a VAD a comfort noise estimator a comfort noise generator a lost packet recovery engine a tone generator and a call progress tone generator .

The depacketizing engine identifies the type of packets received from the host i.e. voice packet DTMF packet call progress tone packet SID packet transforms them into frames which are protocol independent. The depacketizing engine then transfers the voice frames or voice parameters in the case of SID packets into the voice queue transfers the DTMF frames into the DTMF queue and transfers the call progress tones into the call progress tone queue . In this manner the remaining tasks are by and large protocol independent.

A jitter buffer is utilized to compensate for network impairments such as delay jitter caused by packets not arriving at the same time or in the same order in which they were transmitted. In addition the jitter buffer compensates for lost packets that occur on occasion when the network is heavily congested. In the described exemplary embodiment the jitter buffer for voice includes a voice synchronizer that operates in conjunction with a voice queue to provide an isochronous stream of voice frames to the voice decoder .

Sequence numbers embedded into the voice packets at the far end can be used to detect lost packets packets arriving out of order and short silence periods. The voice synchronizer can analyze the sequence numbers enabling the comfort noise generator during short silence periods and performing voice frame repeats via the lost packet recovery engine when voice packets are lost. SID packets can also be used as an indicator of silent periods causing the voice synchronizer to enable the comfort noise generator . Otherwise during far end active speech the voice synchronizer couples voice frames from the voice queue in an isochronous stream to the voice decoder . The voice decoder decodes the voice frames into digital voice samples suitable for transmission on a circuit switched network such as a 64 kb s PCM signal for a PSTN line. The output of the voice decoder or the comfort noise generator or lost packet recovery engine if enabled is written into a media queue for transmission to the PXD .

The comfort noise generator provides background noise to the near end user during silent periods. If the protocol supports SID packets and these are supported for example by VTOA and VoIP the comfort noise estimator at the far end encoding system should transmit SID packets. Then the background noise can be reconstructed by the near end comfort noise generator from the voice parameters in the SID packets buffered in the voice queue . However for some protocols namely FRF 11 the SID packets are optional and other far end users may not support SID packets at all. In these systems the voice synchronizer must continue to operate properly. In the absence of SID packets the voice parameters of the background noise at the far end can be determined by running the VAD at the voice decoder in series with a comfort noise estimator .

Preferably the voice synchronizer is not dependent upon sequence numbers embedded in the voice packet. The voice synchronizer can invoke a number of mechanisms to compensate for delay jitter in these systems. For example the voice synchronizer can assume that the voice queue is in an underflow condition due to excess jitter and perform packet repeats by enabling the lost frame recovery engine . Alternatively the VAD at the voice decoder can be used to estimate whether or not the underflow of the voice queue was due to the onset of a silence period or due to packet loss. In this instance the spectrum and or the energy of the digital voice samples can be estimated and the result a fed back to the voice synchronizer . The voice synchronizer can then invoke the lost packet recovery engine during voice packet losses and the comfort noise generator during silent periods.

When DTMF packets arrive they are depacketized by the depacketizing engine . DTMF frames at the output of the depacketizing engine are written into the DTMF queue . The DTMF synchronizer couples the DTMF frames from the DTMF queue to the tone generator . Much like the voice synchronizer the DTMF synchronizer is employed to provide an isochronous stream of DTMF frames to the tone generator . Generally speaking when DTMF packets are being transferred voice frames should be suppressed. To some extent this is protocol dependent. However the capability to flush the voice queue to ensure that the voice frames do not interfere with DTMF generation is desirable. Essentially old voice frames that may be queued are discarded when DTMF packets arrive. This ensures that there is a significant inter digit gap before DTMF tones are generated. This is achieved by a tone present message a passed between the DTMF queue and the voice synchronizer .

The tone generator converts the DTMF signals into a DTMF tone suitable for a standard digital or analog telephone. The tone generator overwrites the media queue to prevent leakage through the voice path and to ensure that the DTMF tones are not too noisy.

There is also a possibility that DTMF tone may be fed back as an echo into the DTMF detector . To prevent false detection the DTMF detector can be disabled entirely or disabled only for the digit being generated during DTMF tone generation. This is achieved by a tone on message a passed between the tone generator and the DTMF detector . Alternatively the NLP can be activated while generating DTMF tones.

When call progress tone packets arrive they are depacketized by the depacketizing engine . Call progress tone frames at the output of the depacketizing engine are written into the call progress tone queue . The call progress tone synchronizer couples the call progress tone frames from the call progress tone queue to a call progress tone generator . Much like the DTMF synchronizer the call progress tone synchronizer is employed to provide an isochronous stream of call progress tone frames to the call progress tone generator . And much like the DTMF tone generator when call progress tone packets are being transferred voice frames should be suppressed. To some extent this is protocol dependent. However the capability to flush the voice queue to ensure that the voice frames do not interfere with call progress tone generation is desirable. Essentially old voice frames which may be queued are discarded when call progress tone packets arrive to ensure that there is a significant inter digit gap before call progress tones are generated. This is achieved by a tone present message a passed between the call progress tone queue and the voice synchronizer .

The call progress tone generator converts the call progress tone signals into a call progress tone suitable for a standard digital or analog telephone. The call progress tone generator overwrites the media queue to prevent leakage through the voice path and to ensure that the call progress tones are not too noisy.

The outgoing PCM signal in the media queue is coupled to the PXD via the switchboard . The outgoing PCM signal is coupled to an amplifier before being outputted on the PCM output line b.

An exemplary voice signal processor is disclosed U.S. patent application Ser. No. 09 522 185 entitled Voice and Data Exchange Over a Packet Based Network the contents of which is hereby incorporated by reference as though fully set forth herein.

Fax relay mode provides signal processing of fax signals. Fax relay mode enables the transmission of fax signals over a packet based system such as VoIP VoFR FRF 11 VTOA or any other proprietary network. For the purposes of explanation a first fax machine is called a sending fax that is connected to the sending network gateway through a PSTN. The sending network gateway is connected to a CMTS via a HFC network. Additional fax machines may be on line connections coupled to the other end of the CMTS via a network gateway and a HFC network or off line connections coupled to the CMTS for example by a telephone network gateway and a PSTN.

The transfer of fax signals over packet based networks may be accomplished by at least three alternative methods. In the first method fax data signals are exchanged in real time. Typically the sending and receiving fax machines are spoofed to allow transmission delays plus jitter of up to about 1.2 seconds. The second store and forward mode is a non real time method of transferring fax data signals. Typically the fax communication is transacted locally stored into memory and transmitted to the destination fax machine at a subsequent time. The third mode is a combination of store and forward mode with minimal spoofing to provide an approximate emulation of a typical fax connection.

In the fax relay mode the network VHD invokes the packet fax data exchange. The packet fax data exchange provides demodulation and re modulation of fax data signals. This approach results in considerable bandwidth savings since only the underlying unmodulated data signals are transmitted across the packet based network. The packet fax data exchange also provides compensation for network jitter with a jitter buffer similar to that invoked in the packet voice exchange. Additionally the packet fax data exchange compensates for lost data packets with error correction processing. Spoofing may also be provided during various stages of the procedure between the fax machines to keep the connection alive.

The packet fax data exchange is divided into two basic functional units a demodulation system and a re modulation system. In the demodulation system the network VHD couples fax data signals from a circuit switched network or a fax machine to the packet based network. In the re modulation system the network VHD couples fax data signals from the packet network to the switched circuit network or a fax machine directly.

During real time relay of fax data signals over a packet based network the sending and receiving fax machines are spoofed to accommodate network delays plus jitter. Typically the packet fax data exchange can accommodate a total delay of up to about 1.2 seconds. Preferably the packet fax data exchange supports error correction mode ECM relay functionality although a full ECM implementation is typically not required. In addition the packet fax data exchange should preferably preserve the typical call duration required for a fax session over a PSTN ISDN when exchanging fax data signals between two terminals.

The packet fax data exchange for the real time exchange of fax data signals between a circuit switched network and a packet based network is shown schematically in . In this exemplary embodiment a connecting PXD not shown connecting the fax machine to the switch board is transparent although those skilled in the art will appreciate that various signal conditioning algorithms could be programmed into PXD such as echo cancellation and gain.

After the PXD not shown the incoming fax data signal a is coupled to the demodulation system of the packet fax data exchange operating in the network VHD via the switchboard . The incoming fax data signal a is received and buffered in an ingress media queue . A V.21 data pump demodulates incoming T.30 message so that T.30 relay logic can decode the received T.30 messages a. Local T.30 indications b are packetized by a packetization engine and if required translated into T.38 packets via a T.38 shim for transmission to a T.38 compliant remote network gateway not shown across the packet based network. The V.21 data pump is selectively enabled disabled c by the T.30 relay logic in accordance with the reception transmission of the T.30 messages or fax data signals. The V.21 data pump is common to the demodulation and re modulation system. The V.21 data pump communicates T.30 messages such as for example called station tone CED and calling station tone CNG to support fax setup between a local fax device not shown and a remote fax device not shown via the remote network gateway.

The demodulation system further includes a receive fax data pump which demodulates the fax data signals during the data transfer phase. In the described exemplary embodiment the receive fax data pump supports the V.27ter standard for fax data signal transfer at 2400 4800 bps the V.29 standard for fax data signal transfer at 7200 9600 bps as well as the V.17 standard for fax data signal transfer at 7200 9600 12000 14400 bps. The V.34 fax standard once approved may also be supported. The T.30 relay logic enables disables d the receive fax data pump in accordance with the reception of fax data signals or T.30 messages.

If error correction mode ECM is required receive ECM relay logic performs high level data link control HDLC de framing including bit de stuffing and preamble removal on ECM frames contained in the data packets. The resulting fax data signals are then packetized by the packetization engine and communicated across the packet based network. The T.30 relay logic selectively enables disables e the receive ECM relay logic in accordance with the error correction mode of operation.

In the re modulation system if required incoming data packets are first translated from a T.38 packet format to a protocol independent format by the T.38 packet shim . The data packets are then de packetized by a depacketizing engine . The data packets may contain T.30 messages or fax data signals. The T.30 relay logic reformats the remote T.30 indications f and forwards the resulting T.30 indications to the V.21 data pump . The modulated output of the V.21 data pump is forwarded to an egress media queue for transmission in either analog format or after suitable conversion as 64 kbps PCM samples to the local fax device over a circuit switched network such as for example a PSTN line.

De packetized fax data signals are transferred from the depacketizing engine to a jitter buffer . If error correction mode ECM is required transmitting ECM relay logic performs HDLC de framing including bit stuffing and preamble addition on ECM frames. The transmitting ECM relay logic forwards the fax data signals in the appropriate format to a transmit fax data pump which modulates the fax data signals and outputs 8 KHz digital samples to the egress media queue . The T.30 relay logic selectively enables disables g the transmit ECM relay logic in accordance with the error correction mode of operation.

In the described exemplary embodiment the transmit fax data pump supports the V.27ter standard for fax data signal transfer at 2400 4800 bps the V.29 standard for fax data signal transfer at 7200 9600 bps as well as the V.17 standard for fax data signal transfer at 7200 9600 12000 14400 bps. The T.30 relay logic selectively enables disables h the transmit fax data pump in accordance with the transmission of the fax data signals or the T.30 message samples.

If the jitter buffer underflows a buffer low indication a is coupled to spoofing logic . Upon receipt of a buffer low indication during the transmission of a fax data signal the spoofing logic inserts spoofed data at the appropriate place in the fax data signals via the transmit fax data pump until the jitter buffer is filled to a pre determined level at which time the fax data signals are transferred out of the jitter buffer . Similarly during the transmission of T.30 message indications the spoofing logic can insert spoofed data at the appropriate place in the T.30 message samples via the V.21 data pump .

An exemplary fax relay is disclosed U.S. patent application Ser. No. 09 522 185 entitled Voice and Data Exchange Over a Packet Based Network the contents of which has been previously incorporated herein by reference.

Data relay mode provides full duplex signal processing of data signals. Data relay mode enables the transmission of data signals over a packet based system such as VoIP VoFR FRF 11 VTOA or any other proprietary network. The data relay mode should also permit data signals to be carried over traditional media such as TDM. Network gateways support the exchange of data signals other network gateways via a HFC network and CMTS or off line devices via for example a circuit switched network such as the PSTN. For the purposes of explanation the first modem is referred to as a call modem. Far end modems are typically called answer modems.

In data relay mode a local modem connection is established on each end of the packet based network. That is the call modem and the call network gateway establish a local modem connection as does the destination answer modem and its respective answer network gateway. Next data signals are relayed across the packet based network. The call network gateway demodulates the data signal and formats the demodulated data signal for the particular packet based network. The answer network gateway compensates for network impairments and remodulates the encoded data in a format suitable for the destination answer modem. This approach results in considerable bandwidth savings since only the underlying demodulated data signals are transmitted across the packet based network.

In the data relay mode the packet data modem exchange provides demodulation and modulation of data signals. With full duplex capability both modulation and demodulation of data signals can be performed simultaneously. The packet data modem exchange also provides compensation for network jitter with a jitter buffer similar to that invoked in the packet voice exchange. Additionally the packet data modem exchange compensates for system clock jitter between modems with a dynamic phase adjustment and resampling mechanism. Spoofing may also be provided during various stages of the call negotiation procedure between the modems to keep the connection alive.

The packet data modem exchange invoked by the network VHD in the data relay mode is shown schematically in . In the described exemplary embodiment a connecting PXD not shown connecting a modem to the switch board is transparent although those skilled in the art will appreciate that various signal conditioning algorithms could be programmed into the PXD such as filtering echo cancellation and gain.

After the PXD the data signals are coupled to the network VHD via the switchboard . The packet data modem exchange provides two way communication between a circuit switched network and packet based network with two basic functional units a demodulation system and a remodulation system. In the demodulation system the network VHD exchanges data signals from a circuit switched network or a telephony device directly to a packet based network. In the remodulation system the network VHD exchanges data signals from the packet based network to the PSTN line or the telephony device.

In the demodulation system the data signals are received and buffered in an ingress media queue . A data pump receiver demodulates the data signals from the ingress media queue . In the described exemplary embodiment the data pump receiver supports the V.22bis standard for the demodulation of data signals at 1200 2400 bps the V.32bis standard for the demodulation of data signals at 4800 7200 9600 12000 14400 bps as well as the V.34 standard for the demodulation of data signals up to 33600 bps. Moreover the V.90 standard may also be supported. The demodulated data signals are then packetized by a packetization engine and transmitted across the packet based network.

In the remodulation system packets of data signals from the packet based network are first depacketized by a depacketizing engine and stored in a jitter buffer . A data pump transmitter modulates the buffered data signals with a voiceband carrier. The modulated data signals are in turn stored in an egress media queue before being output to the PXD not shown via the switchboard . In the described exemplary embodiment the data pump transmitter supports the V.22bis standard for the transfer of data signals at 1200 2400 bps the V.32bis standard for the transfer of data signals at 4800 7200 9600 12000 14400 bps as well as the V.34 standard for the transfer of data signal up to 33600 bps. Moreover the V.90 standard may also be supported.

During jitter buffer underflow the jitter buffer sends a buffer low indication a to spoofing logic . When the spoofing logic receives the buffer low signal indicating that the jitter buffer is operating below a predetermined threshold level it inserts spoofed data at the appropriate place in the data signal via the data pump transmitter . Spoofing continues until the jitter buffer is filled to the predetermined threshold level at which time data signals are again transferred from the jitter buffer to the data pump transmitter .

End to end clock synchronization logic also monitors the state of the jitter buffer . The clock synchronization logic controls the data transmission rate of the data pump transmitter in correspondence with the state of the jitter buffer . When the jitter buffer is below a predetermined threshold level the clock synchronization logic reduces the transmission rate of the data pump transmitter . Likewise when the jitter buffer is above a predetermined threshold level the clock synchronization logic increases the transmission rate of the data pump transmitter .

Before the transmission of data signals across the packet based network the connection between the two modems must first be negotiated through a handshaking sequence. This entails a two step process. First a call negotiator determines the type of modem i.e. V.22 V.32bis V.34 V.90 etc. connected to each end of the packet based network. Second a rate negotiator negotiates the data signal transmission rate between the two modems.

The call negotiator determines the type of modem connected locally as well as the type of modem connected remotely via the packet based network. In the described exemplary embodiment the call negotiator utilizes V.25 automatic answering procedures and V.8 auto baud software to automatically detect modem capability. The call negotiator receives protocol indication signals a ANSam and V.8 menus from the ingress media queue as well as AA AC and other message indications b from the local modem via a data pump state machine to determine the type of modem in use locally. The call negotiator relays the ANSam answer tones and other indications e from the data pump state machine to the remote modem via a packetization engine . The call negotiator also receives ANSam AA AC and other indications c from a remote modem not shown located on the opposite end of the packet based network via a depacketizing engine . The call negotiator relays ANSam answer tones and other indications d to a local modem not shown via an egress media queue of the modulation system. With the ANSam AA AC and other indications from the local and remote modems the call negotiator can then negotiate a common standard i.e. V.22 V.32bis V.34 V.90 etc. in which the data pumps must communicate with the local modem and the remote modems.

The packet data modem exchange preferably utilizes indication packets as a means for communicating answer tones AA AC and other indication signals across the packet based network. However the packet data modem exchange supports data pumps such as V.22bis and V.32bis which do not include a well defined error recovery mechanism so that the modem connection may be terminated whenever indication packets are lost. Therefore either the packet data modem exchange or the application layer should ensure proper delivery of indication packets when operating in a network environment that does not guarantee packet delivery.

The packet data modem exchange can ensure delivery of the indication packets by periodically retransmitting the indication packet until some expected packets are received. For example in V.32bis relay the call negotiator operating under the packet data modem exchange on the answer network gateway periodically retransmits ANSam answer tones from the answer modem to the call modem until the calling modem connects to the line and transmits carrier state AA.

Alternatively the packetization engine can embed the indication information directly into the packet header. In this approach an alternate packet format is utilized to include the indication information. During modem handshaking indication packets transmitted across the packet based network include the indication information so that the system does not rely on the successful transmission of individual indication packets. Rather if a given packet is lost the next arriving packet contains the indication information in the packet header. Both methods increase the traffic across the network. However it is preferable to periodically retransmit the indication packets because it has less of a detrimental impact on network traffic.

The rate negotiator synchronizes the connection rates at the network gateways. The rate negotiator receives rate control codes a from the local modem via the data pump state machine and rate control codes b from the remote modem via the depacketizing engine . The rate negotiator also forwards the remote rate control codes a received from the remote modem to the local modem via commands sent to the data pump state machine . The rate negotiator forwards the local rate control codes c received from the local modem to the remote modem via the packetization engine . Based on the exchanged rate codes the rate negotiator establishes a common data rate between the calling and answering modems. During the data rate exchange procedure the jitter buffer should be disabled by the rate negotiator to prevent data transmission between the call and answer modems until the data rates are successfully negotiated.

Similarly error control V.42 and data compression V.42bis modes should be synchronized at each end of the packet based network. Error control logic receives local error control messages a from the data pump receiver and forwards those V.14 V.42 negotiation messages d to the remote modem via the packetization engine . In addition error control logic receives remote V.14 V.42 indications b from the depacketizing engine and forwards those V.14 V.42 indications c to the local modem. With the V.14 V.42 indications from the local and remote modems the error control logic can negotiate a common standard to ensure that the network gateways utilize a common error protocol. In addition error control logic communicates the negotiated error control protocol e to the spoofing logic to ensure data mode spoofing is in accordance with the negotiated error control mode.

V.42 is a standard error correction technique using advanced cyclical redundancy checks and the principle of automatic repeat requests ARQ . In accordance with the V.42 standard transmitted data signals are grouped into blocks and cyclical redundancy calculations add error checking words to the transmitted data signal stream. The receiving modem calculates new error check information for the data signal block and compares the calculated information to the received error check information. If the codes match the received data signals are valid and another transfer takes place. If the codes do not match a transmission error has occurred and the receiving modem requests a repeat of the last data block. This repeat cycle continues until the entire data block has been received without error.

Various voiceband data modem standards exist for error correction and data compression. V.42bis and MNP5 are examples of data compression standards. The handshaking sequence for every modem standard is different so that the packet data modem exchange should support numerous data transmission standards as well as numerous error correction and data compression techniques.

An exemplary data relay is disclosed U.S. patent application Ser. No. 09 522 185 entitled Voice and Data Exchange Over a Packet Based Network the contents of which has been previously incorporated herein by reference.

Traditional solutions for Internet and telephony service delivery over HFC networks require the installation of at least two different electronic devices in the subscribers premises. The described exemplary network gateway provides a method for combining the functionality of these electronic devices into a single device that is capable of delivering both services at a reduced cost. For example because the described exemplary network gateway combines many functions on a single device a significant reduction in the number of required inputs outputs I Os may be achieved which dramatically reduces the amount of power consumed.

However coaxial cable in a HFC network may significantly attenuate a transmitted signal. Conventionally amplifiers are spaced along the coaxial cable throughout a HFC network to provide necessary signal enhancement. Other active devices such as for example fiber nodes may also be present in an HFC network. Failure of the primary power source in such a system removes power from these active devices effectively shutting down the HFC network. Such a network failure is unacceptable for voice over cable applications that require strict system availability. For example when lifeline telephony service is delivered the service availability performance is specified to be greater than 99.999 . This availability translates to system outages of less than fifty two minutes per year.

Based on studies of the HFC plant availability the largest single factor contributing to system unavailability is the power source. Therefore standby power systems are typically utilized to provide auxiliary power to active network components as well as to certain customer premise equipment in the event of failure of the primary source of power. Standby power system typically utilize a mix of local power generators and batteries to provide lifeline services during commercial power outages. Following failure of the primary source the standby system delivers power immediately to avoid disruption of service over the CATV network.

However standby power systems that can operate in the face of a commercial power outage requires additional capitol investment for batteries and generators to operate the network when commercial power is not available. The capitol and incremental cost of this power and delivery equipment is largely proportional to the amount of power that must be delivered during the power outage. Therefore to reduce the cost of maintaining a standby power system service providers attempt to minimize the overall power load of equipment coupled to a HFC network.

An exemplary embodiment of the present invention therefore includes a method to manage the power in a population of network gateways for the purpose of minimizing the total aggregate power requirement of the supplemental power source. The specific details of managing a single unit are presented. However one of skill in the art will appreciate that the described exemplary power management technique is not limited to a single network gateway. Rather the described exemplary power management method may be used to manage the power of a plurality of network gateways so as to further reduce the supplemental power requirements of the network.

Given a population of network gateways coupled to an HFC system individual network gateways may operate in any of a plurality of operational states. For example a network gateway may be ready to deliver voice or data service but have no subscriber activity at a particular time i.e. a ready but idle state. Alternatively a network gateway may be delivering data services but no voice services or voice services but no data services. The power consumed by the network gateway when delivering voice services is proportional to the number of telephony circuits in use. In addition the network gateway may also deliver both data and voice service simultaneously. The power consumed in this power state is also dependent upon the number of telephony circuits in use.

The operational states of the network gateway are listed in Table 2 in the order of increasing power consumption such that the simultaneous delivery of voice and data services results in the greatest power consumption. The total power delivered to the network is the sum of the power consumed by each element in the network. In the described exemplary power management system and method it is assumed that at any give time many of the units within a gateway population are in the lowest power active but idle state.

The described exemplary power management solution is transparent to the service management systems that control the operational behavior of the network gateway. However information delivered by these systems may be used to minimize the total power consumed by the network gateway. For example the DOCSIS registration process may identify the active ports used to deliver service to the subscriber. The information that identifies the active ports also identifies by inference which ports are not active. The inactive ports may be placed in a low power state. In addition the DOCSIS protocol specifically requires that the network gateway be available at all times to respond to control messages issued by the CMTS. Further the PacketCable protocol also includes numerous performance standards for responding to control messages. The described exemplary power management method preferably complies with the PacketCable performance requirements.

Referring to the described exemplary power management method models the network gateway as a combination of its component parts. In operation an exemplary power management system may dynamically control the power consumption of each component part of the power management model. The power consumption of the component parts may be modified in accordance with the occurrence of events that change the existing power state of the system and hence each part. The power management behavior of each of the component parts may be described in terms of one or more of the following 

Provisioned Power Management resulting from data sent from the management system. In the described exemplary embodiment the MIPS core may interpret messages such as for example simple network management protocol SNMP messages DOCSIS registration TLVs or other information to derive the appropriate power state for a particular interface. For example in operation the network gateway may receive a message such as for example activate the HPNA interface. Conventionally the message does not provide a direct indication of the appropriate power state for that device. In the described embodiment the MIPS core may interpret this message to determine that a communication for a device coupled to the HPNA interface is forthcoming and that the HPNA interface needs to be in an active or high power state. In this instance if the HPNA interface is inactive the MIPS core may communicate a signal to the HPNA interface to return it to full power. Similarly if an interface is off and not being used the power management system may determine that the interface may be placed into a low power state.

State One of the four previously described power states. In the described exemplary embodiment some power states may have sub states. For example the power level of the voice and data processor the audio processor and the analog front end depend upon the actual number of telephony circuits that are active. For example referring to Table 2 below the hook state of the individual telephony lines coupled to the network gateway four in this embodiment dictate in part at least the power state of the voice and data processor the audio processor and each of the ADC DAC pairs in the analog front end.

Thus if each of the telephony lines coupled to the network gateway are on hook the voice and data processor audio processor and each of the ADC DAC coupled to the individual lines may be in a low power state. However in the described exemplary embodiment the voice and data processor and audio processor are placed into an active state if any one of the lines goes off hook. Similarly the ADC DAC pair coupled to an individual lines is commanded into an active state when its corresponding line goes off hook.

Cyclical Recurring behavior may or may not be dependent on state. For example in the described exemplary embodiment the MIPS core includes the ability to enter a low power state when all listed processing tasks are completed or a low processing load is occurring. This behavior is cyclical or recurring but at an irregular interval or cycle. In the described exemplary embodiment the component part transitions to a low power state each time the cyclical condition exists regardless of external activity.

It should be noted that in embodiments of the present invention management of the system s clock rate may be utilized to implement one or more of the power management techniques described herein. For example since virtually all CMOS semiconductors consume power directly proportional to clock rate the clock rate of each component of a network gateway in accordance with embodiments of the present invention may be adjusted for the performance required. For instance when a phone conversation is initiated the clock rate of the necessary components may be increased to meet the processing demands but when the phone service is terminated the clock rate can be minimized.

In operation the network gateway manages the low power mode or sleep state of the network gateway. The MIPS core monitors the activity of the network gateway peripherals such as for example the USB MAC Ethernet or hook detection circuitry not shown . Activity monitoring procedures vary in accordance with the interface at issue. For example packet interfaces such as Ethernet or USB simply reset a timer each time a packet is received or transmitted via the interface. If the timer expires and remains expired because no packets have arrived the interface is said to be inactive. Traditional telephony interfaces on the other hand are in the active state when the handset is off hook or not in the cradle. If the handset is on hook or in the cradle the interface is in the inactive or idle state.

The CPU and memory component part includes the MIPS core see and its internal CACHE memory and external FLASH and SDRAM memories. In the described exemplary embodiment there is no provisioned behavior for this part i.e. the power requirements for the CPU and memory are based solely on an internal knowledge of the current processing load. However the MIPS core may include one or more clock rates for each of the power states. In operation the lowest clock rate is set in the active but idle clock state and the highest clock rate is set in power state four when the network gateway is simultaneously delivering both data and voice service.

The CPU and memory include an idle process loop that is entered when all processing tasks are completed. In the described exemplary embodiment the CPU and memory component includes a sleep instruction that may be used to place the CPU into a low power state when in the idle process loop. When no tasks are ready to run the CPU is not permitted to poll or monitor continuously at this priority. In the described exemplary embodiment each of the periodically polled functions are scheduled by a timer for execution at the low priority.

Conventional power management techniques typically realize power savings by disabling the tuning and demodulation circuits of the DOCSIS interface . When returning to the full power active state the equipment whose demodulation circuits have been disabled must re synchronize to the CMTS to resume accurate bi directional communications over the HFC network. Therefore applications that have strict latency requirements may not be supported by such conventional systems. In the described exemplary embodiment the forward tuning path and demodulation circuits of the network gateway are disabled in the lowpower state and two way communications are suspended. The described exemplary network gateway utilizes a secondary low power out of band receiver to receive and process asynchronous wake up commands from an out of band generator in the CMTS not shown . In one embodiment the network gateway sets a wake up timer prior to entering the low power state. Expiration of the timer terminates the low power state returning the network gateway to full power active operation. In an exemplary embodiment the duration of the wake up timer may be designed to provide on the order of about a 90 sleep interval and a 10 active interval. A low power sleep interval may be in the range of about 1 4 seconds.

In the described exemplary embodiment network gateway reduces its average power by continuously establishing a low power state. Network gateway returns to an active state when the sleep timer expires. However upon returning to the active state network gateway monitors the downstream traffic for local commands as well as the activity level of locally attached devices. In addition when in sleep state the out of band receiver may communicate interrupts to MIPS core when service is needed.

In operation the MIPS core stores the operating frequency equalization coefficients data rate and modulation format under use by the upstream modulator and demodulation circuits at the time the low power state was initiated. The state information may be used to reduce the time required to reacquire synchronization when the network gateway returns to normal power operation. In the described exemplary embodiment the MIPS core transmits write control register values via the ISB to each peripheral that place the DOCSIS interface into a low power mode. In the described exemplary embodiment the MIPS core deactivates the following downstream demodulator components the AGC carrier loop baud loop and equalizer. Further details of an exemplary method for reducing the power requirements of the DOCSIS interface without introducing significant latency into the system is described in commonly owned co pending U.S. patent Ser. No. 09 654 109 entitled METHOD AND APPARATUS FOR LATENCY REDUCTION IN LOW POWER TWO WAY COMMUNICATIONS EQUIPMENT APPLICATIONS IN HYBRID FIBER COAX PLANTS filed Aug. 31 2000 the content of which is incorporated herein by reference.

In the described exemplary embodiment the Ethernet MAC and PHY and respectively may be provisioned to the OFF state when the subscriber contract does not allow its use. When provisioned to the OFF state the interface and all associated equipment are set to the low power mode without regard for fast recovery. When provisioned to the ON state the interface is available for use for subscriber traffic. In the described exemplary embodiment the Ethernet MAC PHY interface includes an intermediate power state that is entered when a low traffic rate defined as a predetermined traffic threshold or period of inactivity is detected. In one embodiment the MIPS core monitors the activity level of the Ethernet interface and when the traffic level falls below a predetermined threshold commands the Ethernet interface into the intermediate power state. In the described exemplary embodiment the MIPS core transmits write control register values via the ISB to the Ethernet MAC PHY to command it into a low power mode. The interface state may be recovered using the wake on LAN protocol.

In the described exemplary embodiment the HPNA MAC and PHY may be provisioned to the OFF state when the subscriber contract does not allow its use. When provisioned to the OFF state the interface and all associated equipment are set to the low power mode without regard for fast recovery. When provisioned to the ON state the interface is available for use for subscriber traffic. In the described exemplary embodiment the HPNA MAC PHY interface includes an intermediate power state that is entered when a low traffic rate defined as a predetermined traffic threshold or period of inactivity is detected. In the described exemplary embodiment the MIPS core transmits write control register values via the ISB to the HPNA MAC PHY to command it into a low power mode. The interface state may be recovered using the wake on LAN protocol.

In the described exemplary embodiment the USB MAC and transceiver may be provisioned to the OFF state when the subscriber contract does not allow its use. When provisioned to the OFF state the interface and all associated equipment are set to the low power mode without regard for fast recovery. In the described exemplary embodiment the off line times mandated by a particular subscriber contract may be locally stored. When the local clock of the network gateway corresponds to the off line times the MIPS core transmits write control register values via the ISB to the USB MAC and transceiver to command them into a low power mode. When provisioned to the ON State the interface is available to process subscriber traffic. The interface state may be recovered using the wake on LAN protocol.

The described exemplary power management system utilizes multiple methods to control the power consumption of the voice and data processor . For example the clock rate of the voice and data processor may be used to control the power consumption of the voice and data processor. In addition the described exemplary power management system includes means to disable the entire block and establish the minimum operating power mode for the block.

The described exemplary power management system sets the clock rate of the voice and data processor as a function of the Hook State of the phone lines connected to the local SLICs. In the described exemplary embodiment there are four clock rates defined these rates correspond to the number of off hook telephone lines. The slowest rate is defined for one line off hook and the fastest rate is defined for four lines off hook. Further a minimum power state is set when all lines are on hook.

In the described exemplary power management system the DSP clock rate may be further adjusted in accordance with the type of compression algorithm used for each off hook line. The call connection algorithm monitors and tracks the compression algorithm used of each call. The described exemplary power management system may then assign a line weight factor for each off hook line in accordance with the compression algorithm associated with each call. The power management system then sums the line weight factor for each active call to determine the clock rate for the voice and data processor.

For example in the described exemplary power management system there are four DSP clock settings namely full rate half rate quarter rate and zero. In one embodiment the power management system assigns a line weight factor of one to each G.728 channel and a line weight factor of 0.25 for each G.711 channel. In the described exemplary power management system the sum of the line weight factors for all channels rounded to the next whole integer value equals the clock rate. Therefore in the described exemplary embodiment a sum of one is quarter clock rate a sum of two is half clock rate and a sum of three or four is a full clock rate. Thus if there are one two three or four G.711 channels operating simultaneously the sum of the channel weights is rounded to one and the voice and data clock rate is set to quarter rate. If there is one G.728 channel and one G.711 channel the sum is 1.25 rounded to 2 and the clock rate of the voice and data processor is set to half rate. In the described exemplary embodiment all channels are on hook the sum of the weighting factors is zero and the voice and data processor can be disabled maximizing the power savings.

Alternatively the voice and data processor may be run at the maximum clock rate allowing the processor to complete a given task with the same number of instruction but in a shorter period of time. The voice and data processor includes an idle process loop that is entered when all processing tasks are completed. In the described exemplary embodiment the voice and data processor includes a sleep instruction that may be used to place the CPU into a low power state when in the idle process loop. In the described exemplary embodiment when the MIPS core detects the occurrence of an event such as for example a line going off hook the MIPS core issues an interrupt to the voice and data processor to return it to a full power operating state.

The audio processor is a common processing element for any active voice channel. In the described exemplary embodiment the audio processor has two power states namely on and off. In the described exemplary embodiment the audio processor is on when any voice channel is active. The audio processor may be off when all the voice channels are on hook. In one embodiment the audio processor state may follow the state of the voice and data processor module. In this embodiment when the voice and data processor is in the off state the audio processor may also be in the off state. Otherwise the audio processor is in the on state.

In the described exemplary embodiment the MIPS core monitors activity state of the voice and data processor. When all voice channels are inactive the MIPS core transmits write control register values via the ISB to the audio processor commanding it into a low power mode. When the MIPS core detects the occurrence of an event such as for example a line going off hook the MIPS core issues an interrupt to the audio processor to return it to a full power operating state.

In the described exemplary network gateway the analog front end interfaces the voice and data processor with external telephony devices via external SLICs a d . The analog front end includes an ADC DAC a d pair for each voice channel. The ADC DAC pair has two power states namely on and off. In the described exemplary embodiment the ADC DAC pair is active or in the on state when the associated voice channel is active. The ADC DAC pair may be off when the associated voice circuit is in the on hook state or when the associated SLIC is provisioned in the off state.

In the described exemplary embodiment the MIPS core monitors the hook state of each of the local telephony lines. The MIPS core transmits write control register values via the ISB to a particular ADC DAC pair when the associated voice circuit is in the on hook state commanding it into a low power mode. When the MIPS core detects that the associated voice circuit goes off hook the MIPS core issues an interrupt to the particular ADC DAC pair to return it to a full power operating state.

Although a preferred embodiment of the present invention has been described it should not be construed to limit the scope of the appended claims. For example the present invention can be implemented by both a software embodiment or a hardware embodiment. Those skilled in the art will understand that various modifications may be made to the described embodiment. Moreover to those skilled in the various arts the invention itself herein will suggest solutions to other tasks and adaptations for other applications. It is therefore desired that the present embodiments be considered in all respects as illustrative and not restrictive reference being made to the appended claims rather than the foregoing description to indicate the scope of the invention.

