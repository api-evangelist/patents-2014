---

title: System and method for offering a multi-partner delegated platform
abstract: A system and method for offering a delegated platform that includes configuring a partner key of a partner record on a service platform with a partner; creating an account scoped within the partner record; receiving a session authentication request that specifies a partner assertion of a partner authenticated session request of the account; authenticating the session authentication request with the partner key; and rendering an embeddable account portal with a session of the account.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09253254&OS=09253254&RS=09253254
owner: Twilio, Inc.
number: 09253254
owner_city: San Francisco
owner_country: US
publication_date: 20140114
---
This application claims the benefit of U.S. Provisional Application Ser. No. 61 752 123 filed on 14 Jan. 2013 which is incorporated in its entirety by this reference.

This invention relates generally to the API platform field and more specifically to a new and useful system and method for offering a multi partner delegated platform in the API platform field.

Business to developer based companies have found ways to market developer focused products. Developer platforms that provide services and resources through an application programming interface API are widely used by developers and companies building other products. Such developer API platforms require considerable resources and operational commitment to create and maintain. API platforms however can sometimes be limited in the audiences they can target. There are often partners willing to offer the same service but building the infrastructure is often technically challenging a long process and costly. Further users of a potential partner will often have an established relationship with the partner and introducing a new party may be potentially confusing or disruptive to the provided service. Thus there is a need in the API platform field to create a new and useful system and method for offering a multi partner delegated platform. This invention provides such a new and useful system and method.

The following description of preferred embodiments of the invention is not intended to limit the invention to these preferred embodiments but rather to enable any person skilled in the art to make and use this invention.

As shown in a system for provisioning a platform of a preferred embodiment can include a service platform no a partner services API an account portal and a public API of the service platform. The system functions to allow a platform provider to enable partner entities to provide a computing platform based on the platform of the platform provider. In some scenarios this would enable companies to rebrand a platform that leverages the infrastructure and services of an underlying service but offered by provided by or integrated with an outside partner. A partner would be able to create a user portal where users interface with the partner but using the services of the platform provider. Additionally the system can be configured for API integration between the platform user accounts and the service platform no. This can be particularly valuable in enabling a platform to reach a wider audience. In some cases partners may have strategic or entrenched user bases that could greatly benefit from the infrastructure and services provided by the platform provider. A partner utilizing the system can appear to provide the underlying platform services and infrastructure. In one preferred variation the underlying service platform no is transparent to the end user despite the user possibly having direct interactions with components of the service platform such as APIs and admin controls. In an alternative variation the service platform may be exposed to end users but integrated for seamless transitions between components of the partner and components of the service platform no. The system can preferably be used such that a plurality of partner platform relationships may be established as shown in . Additionally the system can operate while the service platform no and or the platform maintains accounts and offerings independent of the partner and service provider relationship. The system further enables the platform to be customized and adjusted so that the platform can be tailored to the design specifications of the partner.

The service platform functions to provide basic service functionality. The service platform can provide any suitable service. Preferably the service platform no includes a public API that facilitates some programmatic service such as telephony application platform data processing service payment service resource hosting platform security service analytics service mapping service and or any suitable programmatic service or platform. In many cases the platform no provides offerings that require considerable investment in infrastructure maintenance development or other factors and in particular the offerings are aligned with industry of other key players that can act as partners. In these cases it may not be feasible to offer the platform as a whitelisted service since there may be an economy of scale or efficiencies or other benefits to having a single platform. In a preferred variation the service platform no is a telephony communication application platform such as the one described in U.S. patent application Ser. No. 12 417 630 filed 2 Apr. 2009 titled SYSTEM AND METHOD FOR PROCESSING TELEPHONY SESSIONS which is hereby incorporated in its entirety by this reference. A telephony or communication based platform can provide routing communication based application execution communication analytics multi modal communication bridging programmatic control of communications and or other suitable telephony or communication features. In one variation a communication service platform can offer application interaction for various modes of communication including PSTN telephony SIP voice communication voice IP client communication video communication screen sharing multimedia synchronous communication text messages e.g. SMS messaging and IP based client messaging media messaging e.g. MMS messaging and IP based client messaging asynchronous messaging and or any suitable form of communication. Such an exemplary service platform can be suitable for integration with large telecommunications company partners. For example phone company ABC may want to offer its subscribers customers the option of using particular features offered by the platform phone company ABC can transparently delegate the features of the platform to the service provider no. In this document the telephony application service platform may be used for exemplary explanation but any suitable service platform may alternatively be used.

The service platform no preferably includes account constructs where platform usage requires authenticating as a user and then accessing or using resources of the service platform. The service platform no is preferably a multi tenant platform where there is a plurality of accounts on the service platform no. Some of these can be accounts scoped to or under a partner account but some accounts can be independently maintained by the service platform provider as shown in . For example platform X can have users sign up and use the platform directly through user facing interfaces of platform X and platform X can simultaneously have users sign up and use the platform through a partner interface where the users may be unaware of the entity offering platform X. In some variations the service platform may be a usage based service where usage is metered and billed appropriately to the account. The service platform no preferably includes an account data record. The account data record preferably stores account information in a database. The account data record additionally stores a relationship to a partner record for any partner associated with the account. Each partner will typically include partner created and controlled accounts which we refer to below as partner accounts or partner user accounts . Any suitable data model architecture can be used to represent the relationship between partner of a partner record and the partner user account. A partner record preferably stores the account customer details of a partner. Each partner account is preferably scoped such that account information is sandboxed and inaccessible by other accounts using the service platform. Partner accounts preferably use the service platform in a manner substantially similar to non partner accounts. However partner accounts can additionally include partner limits. The limits may be applied to all accounts of a partner record or individually set for accounts of the partner record. For example an account of a partner may have certain API features deactivated according to settings of the partner. Similarly partner only features may be enabled for partner accounts. Additionally partner accounts can be authenticated on behalf of a partner. The system can include partner keys that are stored as part of or referenced by a partner record. Partners are preferably vetted and trusted entities. The partner key can be used by the partner to create a digital signature specifying a user i.e. a partner account to authenticate on behalf of a user which functions to enable the partner to manage their own user accounts and sign them in to a user account of the service platform without receiving authentication credentials from the end user.

The partner services API functions to interface with a partner service platform . The partner services API preferably enables partner record and account configuration. A partner services API preferably uses a partner authentication token to authenticate a partner. Through the API a partner can preferably create accounts suspend accounts purchase apps change settings of an account access usage of an account or perform any configuration with the service platform no. A partner can be any suitable entity. Typically a partner will be a company in a related market to the service platform. For example a telephone carrier may act as a partner in the example where the service platform is a telephony application platform. The partner may alternatively be any suitable entity. A partner will typically programmatically use the partner services API according to user interactions with a partner application or platform. The partner typically handles acquiring users customers and users will establish or will have pre existing account relationships with the partner. The partner will additionally manage the user relationship such as handling billing customer support communication and any other aspects of the relationship. A user will typically interface predominantly with the partner and may even be unaware of the use of the underlying service platform. For example a user will go to a website of a partner create an account with the partner and pay any billing fees to the partner. The partner will transparently use the partner service API to create an account for the user within the partner record on the service platform and pay bills of an account to the service platform . The platform API is preferably a subset of API features of an internal service platform API . Within a service platform there can be numerous interactions that are achieved through internal APIs. Some of these interactions such as billing and management of accounts may not be exposed to general users as it relates more to operational features rather than the service offered by the platform however some of these interactions may be opened to partners through the platform API. All or a subset of service level functionality can be provided by the service platform through the partner. The partner API can additionally be restricted limited or filtered to only known machine addresses associated with the partner. For example a set or block of IP addresses may be configured for partner API access for a particular partner. Partner API requests of a partner not from the configured IP addresses may be disregarded or blocked.

In some alternative embodiments the system can additionally include partner service platforms which function to provide the user facing functionality. The partner service platform as described above is preferably a computing application platform service or infrastructure system with networking capability to interface with an outside service platform. A partner service platform can be a telecommunications service a payment service a resource hosting platform a security service an analytics service a mapping service and or any suitable programmatic service or platform. The partner service platform preferably stores a partner key that is used to in communicating verified authentication requests on behalf of users. The partner service platform can include an internal account system which is preferably separate and distinct from an account system of the service platform and possibly other partner service platforms . The partner service platform can stores an association between an account of the partner service platform and the account identifier used to identify a partner user account in the service platform. The partner service platform is preferably additionally configured to follow the authentication steps to authenticate on behalf of a partner user account and further configured to embed an account portal as desired.

The account portal functions to provide users access to account features of a service platform no. An account portal is preferably a service platform configuration interface. Typically the interface is a webpage but may alternatively be application views. On an exemplary telephony application platform an account portal may allow a user to view call analytics configure telephony number applications purchase and remove telephony endpoints view account tokens and or perform any suitable user account related interactions. The account portal is preferably embeddable within a partner portal. A partner portal will typically include the account portal by using an iframe and authenticating account portal access as a partner account. The partner can use the partner key to authenticate as a partner account on behalf of a user of the partner. In this arrangement the account portal functions to provide a configured user interface within the webpage or application of the partner. The account portal may alternatively be embedded by dynamically constructing the account portal view e.g. using a JavaScript to construct the account portal within the webpage of the partner portal. . The account portal may additionally include a customization module that can dynamically customize the account portal interface and interactions according to partner record settings. The customization module functions to allow a partner to tailor the presentation and capabilities of the account portal. In one example a carrier partner may want to limit purchasable telephone endpoints to telephone numbers owned by the carrier. In another example the partner may want to set the presentation of the interface to stylistically match the partner portal the graphical styling logos and layout can be adjusted according to partner settings. Additionally the partner portal can be augmented to integrate resources of the partner. Links in the interface can reference resources of the partner and or content can be pulled or embedded within the account portal . For example the partner may provide a customer support system which can be used as an alternative to the customer support page of the account portal .

The public API of the service platform functions to provide API access to the service platform no. The public API is preferably used by partner accounts in a manner substantially similar to how the public API is used by regular accounts of the service platform. Service platform restrictions of a partner account may be enforced that limit enable or modify particular API requests made through the public API . The public API may additionally include a redirection API. API calls are typically communicated to a URI resource. In directing the API calls to the service platform URI the presence of the service platform will be exposed to a user of a partner. The redirection API is preferably a mirror of the service platform API but using a domain associated with the partner. API calls to the partner redirection API are preferably automatically redirected to the public API of the service platform. In one variation a CNAME DNS record can be modified to redirect API requests addressed to a partner themed resource identifier.

As shown in a method S for provisioning a platform of a preferred embodiment may include configuring a partner key on a service platform for a partner record S creating accounts scoped within the partner record S authenticating an account for access to a service platform account portal S and rendering an embeddable account portal as an account of the partner S. The method can function to enable an authorized impersonation authentication system. In use the method enables a service platform to act as a delegate platform to one or more partners wherein at least a subset of users interface through a partner system. The partner can authenticate a user account which is preferably applied towards service platform access e.g. account portal access . More specifically the method can function to provision service platform functionality to a partner. In other words an embodiment of the method may allow a partner to rebrand grey label or delegate functionality to an underlying service platform. The service platform can allow the partner to manage all customer facing interactions while the service platform provides underlying service functionality and or infrastructure. Preferably the interface between services of the service platform and the partner system are substantially seamless. In one preferred implementation the service platform is transparent and appears to be a first party offering of the partner system. In another implementation the transitioning between the partner system and the service platform is enhanced or automatically bridged to simplify the experience for users. The method is preferably implemented by a system substantially similar to the one described above but any suitable system may alternatively be used. Preferably the method is implemented by service platform provider where the platform includes a public API that facilitates some service such as telephony applications data processing service payment service resource hosting security service analytics service mapping service and or any suitable programmatic service. In a preferred variation the service platform is a telephony communication application platform such as the one described above. But the method may be used in any suitable application of authentication and or service platform provisioning. The method is preferably implemented in coordination with actions of at least one partner service as shown in .

Block S which includes configuring a partner key on a service platform for a partner record functions to setup a partner for managing partner services. A service platform preferably creates a partner record within account data records. A partner record can be initially created when entering a partner relationship with an outside entity i.e. a partner . A partner is preferably a trusted entity and permission to become a partner may be accompanied by various enrollment processes. While multiple partners can be serviced simultaneously through this method self enrollment may not be enabled. Creation of a partner record can be created within the service platform through an administrator interface of the service platform and API request or through any suitable interface. The partner record preferably stores configuration settings of the partner and also accounts of the partner. The partner record is any suitable form of data model to represent settings of a partner and association between the partner and accounts under the partner control. The method can additionally include configuring customization of the service platform scoped to the partner account S. In one variation some parameters can be set with permissions to be controlled by the partner such as by using the partner services API and some parameters can be secured for service platform administrator control. Partner controlled customization parameters can be templating configuration e.g. visual templating of the account portal overriding service platform resources e.g. accessing database records of the partner instead of the service provider overriding interaction flow e.g. linking to partner customer support instead of customer support of the service platform and or any suitable setting visible to the partner as shown in . Partner parameters that may not be exposed to the partner can include exposed partner service API features features exposed to partner user accounts in the public API and or other suitable limits that may be put in place by operators of the service platform. The limits can be on the features exposed to the partner and or the features exposed to users that go through the partner. The settings of the partner record can function to provide a wide variety of customized integration with a partner system.

A partner key is preferably stored in connection with a particular partner record. The partner key is preferably an authentication key that can be used to authenticate the partner when interfacing with the service platform through the API. The partner key is preferably a shared secret cryptographic key and is also known by the partner. The partner key can be generated by the service platform and shared with the partner. Alternatively the partner key can be configured and synchronized between the service platform and the respective partner in any suitable manner. The partner key is preferably used along with a partner service API to authenticate partner service level API requests as described below. The partner key can be used to verify the identity of particular requests as originating from the partner. As the partner is a trusted entity the partner can be granted privilege to vouch for a user and impersonate the user when interacting with an account of the user. The partner service API may be used to interface with a partner account such as by creating a user account deleting a user account updating a user account configuring partner customizations and or performing any suitable partner action. The partner record can additionally include a parameter defining restricted access to the partner service API. A set of IP addresses can be set that defines a white listed set of IPs that can be allowed to access the partner service API through.

Block S which includes creating accounts scoped within the partner record functions to create partner accounts associated with the partner. Accounts within a partner record are records that are controlled and administered by a partner. A partner typically will acquire a new user through a partner website service or other component of partner system. The partner can manage any suitable user account information that is relevant to the partner on a system operated by the partner but the partner preferably additionally creates a partner user account on the service platform for the new user through the partner service API. For example a partner may have an existing user for which they have a user account and related allocated resources. At some point this existing user which exists within the account system of the partner system may be upgraded or enable the capability to use the service platform. The service platform operates with its own account system and accordingly needs an account object to use in connection with the user of the partner. However the partner may want to avoid the user from maintaining a separate and different user account the partner can programmatically create a partner user account through the partner services API where the partner user account is associated with the user. The user may be unaware of the second account within the service platform and may never create a special username and password to access that second account.

An API request to create a new user is preferably authenticated using the partner key. If the authentication validates the partner key then a new account can be created associated with the partner record. If the request is found to be invalid the request is preferably denied. Any suitable approach may be used to authenticate partner level API requests. Any number of accounts may be created associated with the partner record. Additionally creating accounts may include account customization. Account customization may be globally applied to all accounts of a partner or may alternatively or additionally be applied to a specific subset of accounts of a partner record. Account customizations may include platform restrictions. Certain features of a platform may be disallowed or alternatively enabled for an account. In the telephony application platform example an account may be prevented from performing SMS messaging. In another example particular API calls may be allowed disallowed or otherwise restricted for a particular account. Account customizations may alternatively include usage limits e.g. amount of usage . The accounts of a partner record are preferably scoped to remain secure and inaccessible from outside accounts e.g. other partner accounts .

Block S which includes authenticating an account for access to a service platform account portal functions to allow a user to access a service portal through a partner portal. A partner will typically have a user portal or account page from which the user can manage a service apparently provided by the partner. In reality the user is managing a service accessed through a partner but provided by a service platform. An account is preferably authenticated by authenticating a request by the partner. In one embodiment a partner signs an authentication request including the account ID to authenticate. The request is preferably signed with the partner key. The service platform preferably verifies that the request is signed by the partner and that the account ID is a valid account associated with the partner record. The authentication process can rely upon the trusted partner relationship.

In one specific implementation shown in the partner packages key information as an authentication payload which can include a partner secure identifier and an account secure identifier and optionally additional information such as a user secure identifier if accounts have a concept of users or sub accounts a timestamp a nonce and or any suitable parameter. The account secure identifier can previously have been stored in association with the user account in the partner system such as during creation of the account. The partner then signs the authentication payload generating an authentication signature. The authentication payload and signature are transmitted to the service platform where the method comprises through the service platform API the service platform receiving the authentication payload and the authentication signature validating the authentication request made on behalf of partner user account and creating an authenticated session. Validating the authentication request can include generating an authentication signature using the authentication payload and the partner key of the service platform. If the authentication signature matches the received authentication signature then the authentication request can be confirmed as authentic. If the authentication signature generated at the service platform does not match the received authentication signature then the authentication request is denied. Creating an authentication session can result in redirecting the user to an embedded account portal or redirecting a standalone account portal. Redirecting to a standalone account portal can direct the browser to an account portal of the service platform which is preferably un embedded. The account portal can be specifically selected and configured for the partner associated with the account.

A partner may be enabled to authenticate any account associated with a partner record. For example a user authenticates against an account system of the partner and if the authentication is verified at the partner the partner programmatically vouches for the user and uses the partner key to authenticate user login with the service platform. Such authentication can be synchronous to and responsive to user directions and interactions. The authentication process may additionally find application to other fields such as enabling an impersonation authentication process. In other variations the authentication of user made by the platform can be asynchronous to user interactions. This may be used in various situations such as allowing administrators or IT departments to login as a user to troubleshoot a problem without requiring the user to login using account credentials or performing a background process automatically on behalf of the users.

Authentication can additionally include other alternatives and variations. As one additional variation partner authentication can include additional factors of authentication and more specifically a trusted device can be used as a second factor of authentication. During user registration a second factor authentication device identifier can be specified which the service platform or a third party service can use to verify user intent to access the service platform. In an alternative embodiment the partner can create and store generated user credentials and the generated user credentials are then used to authenticate users accessing the service platform.

Block S which includes rendering an embeddable account portal as an account of the partner functions to include an account portal interface within an interface of the partner. An account portal is preferably rendered when a user is attempting to access the administration tools or user interface tools for the functionality provided by the service platform provider. This can be included as a subset of the administration user interface tools offered by the partner. The account portal is preferably rendered specifically for the authenticated account. Account information settings application or data access and other account level access are preferably provided through the account portal. Since the user of the account may only have knowledge of the partner entity the account portal may be embedded within a portal of a partner e.g. website or application interface . The account portal is preferably embedded as an iframe on the partner portal. The account portal may alternatively be embedded by building an interface from a script. For example JavaScript may authenticate access to a portal as an account of the partner and then the DOM objects are programmatically constructed to present the account portal. The account portal may alternatively be embedded using any suitable technique. The partner portal is typically hosted on any suitable server or application of the partner. The account portal is preferably hosted or provided by the service platform. In the telephony application example an account portal may be used for configuring application URI s for telephony numbers purchasing communication endpoints viewing analytics and logs setting billing information and or any suitable account level settings of a telephony application. The partner portal which embeds the account portal can provide additional partner level services. For example if the partner is a telecom company the user may be able to manage their phone internet and or other telecommunications contracts by navigating to a telecommunications applications section in the partner portal the user can access the embedded account portal provided by the service platform. While the account portal is preferably a single object embedded in a single portion multiple account portal components can be used and embedded in various portions of the partner portal. For example a billing account portal widget can be embedded on a billing page of the partner portal alongside other partner related billing a usage account portal widget can be embedded on a usage page of the partner alongside usage within other features of the partner service and a configuration account portal can be presented within a page specific for the platform service.

Rendering an embeddable account portal may additionally include rendering a customized embeddable account portal. One customization option includes feature customization of the portal. Similar to the account customization a portal can have features disabled or enabled. Certain features may not be rendered based on the partner or the partner account. In one example a partner may be a particular telephony carrier. The telephony carrier may only want to sell telephone numbers form a telephone inventory belonging to that telephony carrier. Thus the portal embedded by the telephone carrier preferably only has options to buy telephone numbers that belong to that telephone carrier. Customizing the account portal can include retrieving partner resources and integrating the partner resources into the account portal which functions to embed dynamic information application logic or other resources into the account portal. In the example above the telephone inventory of a partner may be communicated to the service platform through a standardized interface to customize the experience of the account portal as shown in with the available partner options. As another customization variation the partner can set configuration of the account portal e.g. through the partner record such that references in the account portal link to resources of the partner. For example an account portal may include a customer support link and related resources to provide the customer support as shown in . However if a partner wanted to handle his or her own customer support the link to the customer support portion of the account portal can link to the customer support page provided by the partner as shown in . Additionally customization may include visual customization such as styling graphics or layout of components of the embedded portal. Customizations of a portal are preferably set in a partner record or in a partner account record. The customization settings are preferably accessed and used in rendering the account portal. They may alternatively be set through any suitable options included in the mechanism used to embed the portal.

Additionally the method may include accessing public API as a partner account S. Accounts of a partner are preferably provided the same authentication tools used by other accounts of the service platform. An account of a partner is preferably given an account secure identifier SID and an authentication token. The account secure identifier and an authentication token and any additional security tokens or credentials can be communicated through the account portal or other suitable mechanisms. The SID and authentication token may be used by an account to use API resources provided from the service platform. A library or software development kit SDK may be provided to facilitate making use of an API. Providing access to the public API enables for programmatic integration of an account with the service platform as opposed to just the account portal. API requests may be communicated directly to the service provider. The presence of the service provider may alternatively be kept transparent. API requests may be sent to resources in a namespace of the partner but transparently routed or redirected to resources of the service platform. As an API redirection example instead of sending REST API requests to a standard URI of the service platform the REST API request can be sent to a URI seemingly hosted by the partner but that is redirected to the same resource destination of the standard URI of the service platform. As with the customization of the account portal the API offerings can be similarly customized. Some requests may be set to not be allowed for partner accounts a user account created by a partner can have customized permissions with the REST API.

As shown in a method S for using a delegated service platform of a preferred embodiment can include at a partner platform receiving a partner key S selecting a user of the partner platform to add service platform functionality S requesting creation of a service platform account through a partner API S authenticating a service platform session on behalf of the user using the partner key S and directing the user to an account portal S. The method can function to enable a partner platform to partner with an existing service platform and integrate functionality of the service platform into offerings of the host platform. The method is preferably a detailed description of one possible integration of a partner service with a service provider performing the steps above. The partner platform can similarly be described as the host platform since the host platform preferably implements the method S to operate in cooperation with the service platform method S as shown in . As with the above method the method can function to enable an authorized impersonation authentication system with an outside entity i.e. the service platform . A partner service can implement method S any suitable number of times with different service platforms. Method S can be implemented by any suitable entity. Frequently the partner or host will operate in a related field as the service platform but without direct overlap such as in the telecom company example used above. In some cases the host will have a set of features and products offered through a platform and the service platform can be one of many offering. In other variations an entity may want to see an existing user base and branding to promote a duplicate service of the service platform. In another use case an enterprise solution may offer the service platform within an internal enterprise solution.

Block S which includes receiving a partner key functions to transfer a shared cryptographic token between the partner platform and the service platform. The partner key can be transferred to the partner platform in any suitable manner. In one variation the partner key is transferred in an IP communication. In another variation the partner key can be configured through an administrator interface or through any suitable interface. The partner key is preferably shared between the partner platform and the service platform. The partner platform preferably stores the partner key in any suitable location for us when acting on behalf of the users. Additionally the method can include configuring the partner platform for partner services API of the service platform which can include setting designated machines and or ports for accessing the service platform.

Block S which includes selecting a user of the partner platform to add service platform functionality functions to initiate the use of the service platform with a user. A user preferably creates an account with the partner platform or has can have an existing account. According to suitable business logic the partner platform will determine when and which users should be enrolled in the service platform. In one variation all users of a partner platform are enrolled. Accordingly each user can be selected and individually added to the service platform. New users can be selected to be added when they create an account on the partner platform. In another variation the service platform may only be enabled if a user of the partner platform enables the service. For example a user can select an option in a partner portal to begin use of the service platform at which time the user is preferably selected to be added. In another variation only users with particular permissions e.g. users with a particular service plan tier may have the service platform enabled.

Block S which includes requesting creation of a service platform account through a partner API functions to communicate with the service platform to initialize a user for use with the service platform. The request is preferably transmitted from the partner platform or system to the service platform or logged in any suitable manner. The service platform account is an account that exists separate from the user account in the partner platform but a one to one relationship preferably exists between platform accounts on the service platform and user accounts in the partner platform. The request is preferably transmitted over a partner service API in a manner substantially similar to block S. The request is preferably cryptographically secured using the partner key or any suitable authentication mechanism.

Block S which includes authenticating a service platform session on behalf of the user using the partner key functions to authenticate a user accessing the service platform. Block S preferably includes receiving a user request to access a service platform account portal. The account portal preferably requires a session to be authenticated as some partner account. The partner platform preferably signs a request using the partner key on behalf of the user to establish the session authenticated as the user. The user preferably does not have to provide credentials to the service platform the user can sign in to the partner platform using a set of authentication credentials which can be unknown and irrelevant to the service platform and then in response to user being successfully logged in the partner platform can vouch for that user. The authentication is preferably substantially similar to that described above. The partner platform assembles account information that can identify the identity of the partner and the identity of the account. The partner key is used to create a digital signature of the account information payload and then the digital signature and the account payload are transferred to the service platform to be authenticated.

Block S which includes directing the user to an account portal functions to enable user access to the service platform. In a preferred embodiment the account portal is embedded within a portal of the partner i.e. the partner portal . The partner portal can embed the account portal as an iframe. The account portal may alternatively be embedded by building an interface from a script included or retrieved in the partner portal. For example JavaScript may authenticate access to a portal as an account of the partner and then the DOM objects are programmatically constructed to present the account portal. As described above the account portal can alternatively be embedded in a partner portal as one or more widgets. Additionally cross portal messaging can be applied to integrate the interactions of the partner portal with the interactions in the account portal. In an alternative embodiment with less embedded integration the partner portal redirects the user to an account portal distinct from the partner portal. In a browser this can be reflected through the differing domain names between the partner portal and the account portal. Through partner configuration the account portal can be customized and actions and links in the account portal can be configured to link back to the partner platform.

In use the method enables a service platform to act as a delegate platform to one or more partners wherein at least a subset of users interface through a partner system. The partner can authenticate a user account which is preferably applied towards service platform access e.g. account portal access . More specifically the method can function to provision service platform functionality to a partner. In other words an embodiment of the method may allow a partner to rebrand grey label or delegate functionality to an underlying service platform. The service platform can allow the partner to manage all customer facing interactions while the service platform provides the underlying service functionality and or infrastructure. Preferably the interface between services of the service platform and the partner system are substantially seamless. In one preferred implementation the service platform is transparent and appears to be a first party offering of the partner system. In another implementation the transitioning between the partner system and the service platform is enhanced or automatically bridged to simplify the experience for users. The method is preferably implemented by a system substantially similar to the one described above but any suitable system may alternatively be used. Preferably the method is implemented by service platform provider where the platform includes a public API that facilitates some service such as telephony applications data processing service payment service resource hosting security service analytics service mapping service and or any suitable programmatic service. In a preferred variation the service platform is a telephony communication application platform such as the one described above. But the method may be used in any suitable application of authentication and or service platform provisioning.

The system and method of the preferred embodiment and variations thereof can be embodied and or implemented at least in part as a machine configured to receive a computer readable medium storing computer readable instructions. The instructions are preferably executed by computer executable components preferably integrated with the system and one or more portions of the service platform. The computer readable medium can be stored on any suitable computer readable media such as RAMs ROMs flash memory EEPROMs optical devices CD or DVD hard drives floppy drives or any suitable device. The computer executable component is preferably a general or application specific processor but any suitable dedicated hardware or hardware firmware combination device can alternatively or additionally execute the instructions.

Although omitted for conciseness the preferred embodiments include every combination and permutation of the various components of the system and method.

As a person skilled in the art will recognize from the previous detailed description and from the figures and claims modifications and changes can be made to the preferred embodiments of the invention without departing from the scope of this invention defined in the following claims.

