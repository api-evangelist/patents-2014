---

title: Automatic initiation of a collaborative session
abstract: A method includes a conference facilitation server to determine whether a conference initiator has defined a set of conference parameters, storing the set of conference parameters in a database. The server communicates a conference invitation to each of the proposed participants using contact identifiers and designates the proposed participants as a confirmed participants when the proposed participants send conference acknowledgements to the conference server, responsive to the conference invitation to participate in a collaborative session. The server automatically initiates a first attempt to establish communications with each of the confirmed participants at the conference time on the conference date through a conference medium using contact identifiers. If the first attempt to establish communication fails then the server automatically initiates an additional attempt to establish communications with a particular confirmed participant with whom the first attempt has failed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09332045&OS=09332045&RS=09332045
owner: 
number: 09332045
owner_city: 
owner_country: 
publication_date: 20140805
---
This disclosure relates generally to communication and more particularly to automatic initiation of a collaborative session.

A collaborative session may involve a group of participants. For example the group of participants may communicate during the collaborative session through a phone call a videoconference session a group chat a telepresence session a web conference a screen share and or an online collaborative session. An individual may need to publish a phone number and an access code associated with the collaborative session to the group of participants. The phone number and the access code may be static and not change often. Each of the group of participants may need to remember to join the collaborative session on their own.

A particular member of the group of participants may forget about when to join the collaborative session. Objectives for the collaborative session may not be achieved and time may be wasted because other participants may not benefit from the interaction with the particular member during the collaborative session. In addition uninvited participants may join the collaborative session without permission if they acquire the phone number and the access code whether in an unauthorized manner or from participation in a previous session. Sometimes the particular member may need time to search for the phone number and the access code. Therefore they may join the collaborative session late. This may be disruptive and cause others to repeat what has already been said. As a result productivity may suffer and initiating the collaborative session may be a frustrating experience.

In one aspect a method of a conference facilitation server determines using a processor and a memory that a conference initiator has defined a set of conference parameters storing the set of conference parameters in a database. The set of conference parameters includes a conference date a conference time a conference medium and a contact identifier associated with each of a plurality of a proposed participants. The method includes communicating a conference invitation to the proposed participants using the contact identifiers associated with the plurality of proposed participants. The method further includes designating the proposed participants as confirmed participants when the proposed participants send conference acknowledgements to the conference facilitation server responsive to the conference invitation to each of the proposed participants. The confirmed participants are those proposed participants that agree to join a collaborative session. The method processes a collection of participant parameters of the confirmed participants the collection of participant parameters comprising for each confirmed participant a set of contact identifiers and a failover preference.

The method automatically initiates a first attempt to establish communications with the confirmed participants at the conference time on the conference date through the conference medium s using the set of contact identifiers associated with each of the confirmed participants. The method also ensures that the first attempt is made in accordance with a failover preference associated with each confirmed participant and simultaneously makes the first attempt to establish communications with a portion of the confirmed participants in parallel. The method determines whether the first attempt to establish communications with at least one confirmed participant has failed and automatically initiates an additional attempt to establish communications with a particular confirmed participant with whom the first attempt has failed using the set of contact identifiers associated with the particular confirmed participant in accordance with a particular failover preference associated with the particular confirmed participant. The failover preference associated with the particular confirmed participant may specify at least a preferred order in which the set of at least one contact identifier associated with the particular confirmed participant are to be used in making attempts to establish communications.

The conference medium may be a phone call a videoconference session a group chat a telepresence session a web conference a screen share and or an online collaborative session. The failover preference associated with each confirmed participant may further specify that a plurality of the contact identifiers may be used simultaneously while making the first attempt and or the additional attempt.

The set of conference parameters may further includes a classification of each of the proposed participants as mandatory or optional where the conference initiator may be an individual a third party service provider a web application an internet appliance and or a mobile application. A conference may be cancelled if a conference acknowledgement has not been received by the conference time on the conference date from each of the proposed participants classified as mandatory.

The collaborative session may be terminated if communications are yet to be established with all of the confirmed participants classified as mandatory within a maximum waiting time. The communications with all of the confirmed participants classified as mandatory may be established before attempting to establish communications with remaining confirmed participants. The conference parameters may include an entry time limit such that attempts to establish communications with confirmed participants cease once the entry time limit has elapsed. The participants may be denied a permission to initiate communications with the conference.

The method may determine that there is an unexpected loss of communications with a poor signal participant. The method may automatically reestablish communications between the poor signal participant and a remaining confirmed participant based on the determination that there is the unexpected loss of communications with the poor signal participant.

The communications between the poor signal participant and the remaining confirmed participants may automatically reestablished by repeatedly attempting to contact the poor signal participant using the contact identifiers associated with the poor signal participant. A repeated attempt to contact the poor signal participant may be made in accordance with the failover preferences associated with the poor signal participant.

In another aspect a method of a conference facilitation server includes processing a set of conference parameters in a database the set comprising a conference date a conference time a conference medium and a contact identifier of each of a plurality of proposed participants using a processor and a memory. The method includes storing the set of conference parameters in the database the set comprising the conference date the conference time the conference medium and or the contact identifier of each of a plurality of proposed participants. The method sends a conference invitation to each of the proposed participants using contact identifiers. The method further designates the proposed participants as a confirmed participants based on a response of the proposed participants. The confirmed participants are those proposed participants that agree to join a collaborative session in this aspect. The method processes conference acknowledgements from confirmed participants and processes a collection of participant parameters for each of the confirmed participants the collection of participant parameters comprising for each confirmed participant a set of at least one contact identifier and a failover preference. The method initiates a conference communication at the conference time on the conference date through at least one conference medium by automatically making a first attempt to establish communications with each of the confirmed participants using the set of contact identifiers associated with each of the confirmed participants in accordance with the failover preference associated with each confirmed participant. The method determines an attempt to establish communications with at least one confirmed participant has failed and makes additional attempts to establish communications with a particular confirmed participant for whom a previous attempt has failed using the set of contact identifiers associated with the particular confirmed participant in accordance with the failover preference associated with the particular confirmed participant. The failover preference associated with each confirmed participant further specifies a preferred order in which the contact identifiers are to be used in making attempts to establish communications.

In yet another aspect a conference facilitation system includes a conference facilitation server including a processor and a memory configured to process a set of conference parameters. The set of conference parameters comprises a conference date a conference time at least one conference medium and a contact identifier for each of a plurality of proposed participants. The method prepares a conference invitation for each of the proposed participants and processes a conference acknowledgement from one or more confirmed participants. The method processes a collection of participant parameters for each of the confirmed participants. The collection of participant parameters comprises a set of at least one contact identifier and a failover preference where the failover preferences associated with each confirmed participant specifies a preferred order in which the set of at least one contact identifier is to be used in making attempts to establish communications. The method initiates a collaborative session at the conference time on the conference date by automatically triggering a first attempt to establish communications with each of the confirmed participants using the set of contact identifiers associated with each of the confirmed participants in accordance with the failover preferences associated with each confirmed participant. The first attempt to establish communications with at least a portion of the confirmed participants is triggered in parallel.

The method triggers an additional attempt to establish communications with a particular confirmed participant for whom a previous attempt has failed using the set of contact identifiers associated with the particular confirmed participant in accordance with the failover preferences associated with the particular confirmed participant. The database is communicatively coupled with the conference facilitation server to store the set of conference parameters and the collection of participant parameters for each of the confirmed participants. A communication platform is communicatively coupled with the conference facilitation server to instantiate a collaborative session by attempting to establish communications with at least one confirmed participant through the conference mediums and to determine whether an attempt to establish communications has failed.

The methods and systems disclosed herein may be implemented in any means for achieving various aspects and may be executed in a form of a machine readable medium embodying a set of instructions that when executed by a machine cause the machine to perform any of the operations disclosed herein. Other features will be apparent from the accompanying drawings and from the detailed description that follows.

Other features of the present embodiments will be apparent from accompanying drawings and from the detailed description that follows.

In the following description for the purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the various embodiments. It will be evident however to one skilled in the art that the various embodiments may be practiced without these specific details.

The conference facilitation server may be may be a computing system e.g. a laptop a desktop a mobile device and or computer program that manages access to a centralized resource or service in a network . The network may be a telecommunications network that allows computers to exchange data. The conference initiator e.g. an individual A a third party service provider N may be a user or entity that takes an initiative e.g. is resourceful to make a conference happen. The communication devices may be mobile phones landline phones tablet devices and or desktop computing devices associated with each the conference initiator and or plurality of proposed participants. The processor may be a central processor unit CPC that may carry out the instructions of a computer program by performing the basic arithmetical logical and or input output operations of a computing system.

The memory may be physical devices used to store programs sequences of instructions and or data e.g. program state information on a temporary and or permanent basis for use in a computer or other digital electronic device. The set of conference parameters may be a special kind of variable associated with a conference that may be used in a subroutine to refer to one of the pieces of data provided as input to the subroutine. The database may be an organized collection of data.

The plurality of proposed participants may be users that are suggested to participate in the collaborative session. The contact identifier may be a sequence of characters e.g. alphanumeric numeric alpha only etc. used to identify and or refer to a program or an element such as a variable or a set of data within it associated with a contact. The contact identifier may also be a representation of an individual or entity within a particular communication medium or system e.g. email address user name IP address etc. . The conference invitation may be a request inviting participants to a collaborative session. The set of confirmed participants may be participants that have agreed to join a collaborative session. The conference acknowledgement may be an acceptance to join the collaborative session.

The collaborative session may be a semi permanent interactive information interchange also known as a dialogue a conference a conversation and or a meeting between two or more communicating devices and or between a computer and user. The collection of participant parameters may be a gathering of parameters associated with a participant. The first attempt may be an initial effort to set up a collaborative session. The additional attempt may be a subsequent effort to set up a collaborative session. The file server may be a computing system that holds a method of managing files and or folders in the computing system. The file associated with a collaborative session may be a document a folder and or a container having an application or data related to an operation of a computer. The audio recording of a collaborative session may be a sound such as when recorded transmitted and or reproduced. The video recording of a collaborative session may be a recording reproduction and or broadcast of moving visual images.

The transcript of a collaborative session may be a written and or printed version of material originally presented in another medium. The communication platform may be a computing platform that obeys constraints and makes use of facilities. The communication platform may also bridge different communication mediums e.g. bridging a phone call with a video conference etc. The API may be an application programming interface API which specifies how some software components should interact with each other.

The conference facilitation server is communicatively coupled with the communication device A associated with a conference initiator the communication platform a number of additional communication devices e.g. B F associated with each of the plurality of proposed participants through a network . The conference facilitation server may include a processor communicatively coupled with a memory and with a storage device not shown having an application programming interface . The processor and the memory may be communicatively coupled with a file server as illustrated in . The file server may be communicatively coupled with a database as described in . The file server may include a file associated with a collaborative session a video recording of a collaborative session a transcript of a collaborative session and an audio recording of a collaborative session. The database may include a set of conference parameters and a collection of participant parameters .

In accordance with one embodiment at the date and time specified by the conference initiator a first attempt may be made to establish communication between the communication platform and the communication devices associated with each of the plurality of confirmed participants using the contact identifiers associated with each confirmed participant in accordance with their failover preference . Specifically illustrates a first attempt to establish communication between the communication platform and the communication devices associated with confirmed participants A D. As shown the first attempt to establish communication with confirmed participants B D is performed in parallel in accordance with the set of conference parameters and is successful. Furthermore the first attempt to establish communication with confirmed participant B is made by contacting both communication devices associated with that individual through contact identifiers . The first attempt to establish communication with confirmed participant A fails as a result an additional attempt may be automatically made to establish communication with a different communication device using a different contact identifier in accordance with a failover preference associated with confirmed participant A.

As shown upon the successful establishment of communications with confirmed participants a collaborative session is formed. Specifically illustrates that collaborative session is formed between the communication platform and confirmed participants B D through their respective communication devices .

In one embodiment a method of a conference facilitation server determines using a processor and a memory that a conference initiator has defined a set of conference parameters e.g. as shown in storing the set of conference parameters e.g. as shown in in a database . The set of conference parameters e.g. as shown in includes a conference date a conference time a conference medium and a contact identifier associated with each of a plurality of proposed participants . The method includes communicating a conference invitation to the proposed participants e.g. the plurality of proposed participants using the contact identifier associated with the plurality of proposed participants .

The method further includes designating the proposed participants e.g. the plurality of proposed participants as the confirmed participants when the proposed participants e.g. the plurality of proposed participants send conference acknowledgements e.g. the conference acknowledgement of to the conference facilitation server responsive to the conference invitation to each of the proposed participants e.g. the plurality of proposed participants . The confirmed participants are those proposed participants that agree to join a collaborative session . The method processes a collection of participant parameters e.g. as illustrated in of the confirmed participants the collection of participant parameters e.g. as illustrated in comprising for each confirmed participant e.g. such as one of the confirmed participants a set of contact identifiers and a failover preference .

The conference date field may be a day of a month and or year during which the collaborative session is held. The conference time field may be a time of day at which the collaborative session is held. The conference medium s field may be a way in which the collaborative session is broadcasted e.g. via telephone video screencast etc. The conference medium s field may also list the various forms systems and or protocols of communication which a collaborative session may utilize. The contact identifier field may be an alpha numeric and or alphanumeric sequence unique and used towards distinguishing specific conference participants within various conference mediums. The classification field e.g. associated with the plurality of proposed participants of may be groupings of similar proposed participants designated as mandatory or optional. The entry time limit field may be a length of time during which the participant may join the collaborative session. The maximum waiting time field may be a length of time during which a collaborative session may wait for a mandatory participant before being cancelled.

The set of contact identifiers field may be a set of alpha numeric and or alphanumeric sequences unique towards distinguishing a specific confirmed participant. The failover preference field may be a predetermined set of instructions indicating operations to be taken in the case of non connection. The preferred order of contact identifiers field may be a desired order of contact identifiers in which to attempt connection of the confirmed participant. The use all contact identifiers for field may describe a circumstance when all contact identifiers may be used simultaneously. The classification field may be groupings of similar participants as mandatory or optional.

The method automatically initiates a first attempt to establish communications with the confirmed participants at the conference time on the conference date through conference mediums using the set of contact identifiers associated with each of the confirmed participants . The method also ensures that the first attempt is made in accordance with a failover preference associated with each confirmed participant e.g. of confirmed participants and simultaneously makes the first attempt to establish communications with a portion of the confirmed participants in parallel. The method determines whether the first attempt to establish communications with at least one confirmed participant e.g. of confirmed participants has failed and automatically initiates an additional attempt to establish communications with a particular confirmed participant with whom the first attempt has failed using the set of contact identifiers associated with the particular confirmed participant in accordance with a particular failover preference associated with the particular confirmed participant.

The failover preference associated with the particular confirmed participant specifies at least a preferred order e.g. such as one of the failover preferred order of contact identifiers of in which the set of at least one contact identifier associated with the particular confirmed participant are to be used in making attempts to establish communications an order in which contact identifiers are to be performed in making attempts to establish communications. The conference medium may be a phone call a videoconference session a group chat a telepresence session a web conference a screen share and or an online collaborative session . The failover preference associated with each confirmed participant may further specify that a plurality of the contact identifiers may be used simultaneously while making the first attempt and or the additional attempt .

The set of conference parameters e.g. as shown in may further include a classification of each of the proposed participants e.g. the plurality of proposed participants as mandatory or optional. The conference initiator may be an individual a third party service provider a web application an internet appliance and or a mobile application. A collaborative session may be cancelled if a conference acknowledgement has not been received by the conference time on the conference date from each of the proposed participants e.g. the plurality of proposed participants classified as mandatory.

The collaborative session may be terminated if communications are yet to be established with all of the confirmed participants classified as mandatory within a maximum waiting time. The communications with all of the confirmed participants classified as mandatory may be established before attempting to establish communications with remaining confirmed participants . The set of conference parameters include an entry time limit of wherein attempts to establish communications with confirmed participants cease once the entry time limit of has elapsed. The participants may be denied a permission to initiate communications with the conference.

In another embodiment a method of a conference facilitation server includes processing a set of conference parameters e.g. as shown in in a database the set comprising a conference date a conference time a conference medium and a contact identifier of each of a plurality of proposed participants using a processor and a memory . The method includes storing the set of conference parameters e.g. as shown in in the database the set comprising the conference date the conference time the conference medium and or the contact identifier of each of a plurality of proposed participants . The method sends a conference invitation to each of the proposed participants e.g. the plurality of proposed participants using contact identifiers .

The method further designates the proposed participants e.g. the plurality of proposed participants as a confirmed participants based on a response of the proposed participants e.g. the plurality of proposed participants . The confirmed participants are those proposed participants that agree to join a collaborative session in this embodiment. The method processes conference acknowledgements e.g. the conference acknowledgement of from confirmed participants and processes a collection of participant parameters e.g. as illustrated in for each of the confirmed participants the collection of participant parameters e.g. as illustrated in comprising for each confirmed participant a set of at least one contact identifier and a failover preference .

The method initiates a conference communication at a conference time on a conference date through a conference medium by automatically making a first attempt to establish communications with each of the confirmed participants using the set of contact identifiers associated with each of the confirmed participants in accordance with the failover preference associated with each confirmed participant. The method determines that an attempt to establish communications with at least one confirmed participant has failed and makes additional attempts to establish communications with a particular confirmed participant for whom a previous attempt has failed using the set of contact identifiers associated with the particular confirmed participant in accordance with the failover preference associated with the particular confirmed participant. The failover preference associated with each confirmed participant further specifies a preferred order e.g. such as one of the failover preferred order of contact identifiers of in which the contact identifiers are to be used in making attempts to establish communications.

In yet another embodiment a conference facilitation system includes a conference facilitation server including a processor and a memory configured to process a set of conference parameters e.g. as shown in the set comprising a conference date a conference time at least one conference medium and a contact identifier for each of a plurality of proposed participants . The method prepares a conference invitation for each of the proposed participants e.g. the plurality of proposed participants and processes a conference acknowledgement from one or more confirmed participants . The method processes a collection of participant parameters e.g. as illustrated in for each of the confirmed participants the collection comprising a set of at least one contact identifier and a failover preference where the failover preference associated with each confirmed participant specifies a preferred order e.g. such as one of the failover preferred order of contact identifiers of in which the set of at least one contact identifier is to be used in making attempts to establish communications. The method initiates a collaborative session at the conference time on the conference date by automatically triggering a first attempt to establish communications with each of the confirmed participants using the set of contact identifiers associated with each of the confirmed participants in accordance with the failover preference associated with each confirmed participant the first attempt to establish communications with at least a portion of the confirmed participants is triggered in parallel.

The method triggers an additional attempt to establish communications with a particular confirmed participant for whom a previous attempt has failed using the set of contact identifiers associated with the particular confirmed participant in accordance with the failover preference associated with the particular confirmed participant. The database is communicatively coupled with the conference facilitation server to store the set of conference parameters e.g. as shown in and the collection of participant parameters e.g. as illustrated in for each of the confirmed participants . A communication platform communicatively coupled with the conference facilitation server to instantiate a collaborative session by attempting to establish communications with at least one confirmed participant through the conference medium s and to determine whether an attempt to establish communications has failed.

The method may determine there is an unexpected loss of communications with a poor signal participant and may automatically reestablish communications between the poor signal participant and a remaining confirmed participant based on the determination that there is the unexpected loss of communications with the poor signal participant .

The communications between the poor signal participant and the remaining confirmed participants may automatically reestablished by repeatedly attempting to contact the poor signal participant using the contact identifier s associated with the poor signal participant. A repeated attempt to contact the poor signal participant may be made in accordance with the failover preference s associated with the poor signal participant.

This information may then be communicated to the plurality of proposed participants in operation . Particularly in operation the proposed participants e.g. the plurality of proposed participants may send conference acknowledgements e.g. the conference acknowledgement of to the conference facilitation server responsive to the conference invitation . Next in operation the conference facilitation server may designate the conference acknowledging participants as confirmed participants .

In operation the conference facilitation server processes a collection of participant parameters e.g. as illustrated in associated with each of the confirmed participants . Then in operation the conference facilitation server automatically initiates a first attempt to establish communications with each of the confirmed participants . In operation the conference facilitation server determines whether the first attempt to establish communications with at least one confirmed participant has failed. In operation the conference facilitation server automatically initiates an additional attempt to establish communications with a particular confirmed participant with whom the first attempt has failed. Then in operation communication may be established between confirmed participants .

In operation at least some of the proposed participants e.g. the plurality of proposed participants may be designated as confirmed participants when at least some of the proposed participants e.g. the plurality of proposed participants send conference acknowledgements e.g. the conference acknowledgement of to the conference facilitation server responsive to the conference invitation to each of the proposed participants e.g. the plurality of proposed participants . The confirmed participants may be those proposed participants that agree to join a collaborative session . In operation a collection of participant parameters e.g. as illustrated in of each of the confirmed participants may be processed. The collection of participant parameters e.g. as illustrated in e.g. for each confirmed participant may be a set of at least one contact identifier and or a failover preference in operation . The process flow of as illustrated in may be then continued as indicated by circle A into . In a first attempt may be automatically initiated to establish communications with each of the confirmed participants at the conference time on the conference date through at least one conference medium using at least one of the set of contact identifier s associated with each of the confirmed participants in operation .

Then in operation it may be ensured e.g. required preferred that the first attempt may be made in accordance with the failover preference associated with each confirmed participant. Next in operation a first attempt to establish communications with at least a portion of the confirmed participants in parallel may be simultaneously made. If the communication is established as shown in the collaborative session may be established in operation and the process may end. Alternatively if the communication is not established in operation then as additional attempt to establish communications with a particular confirmed participant with whom the first attempt has failed may be automatically initiated in operation .

The computing device may represent various forms of digital computers such as laptops desktops workstations personal digital assistants servers blade servers mainframes and or other appropriate computers. The mobile device may represent various forms of mobile devices such as smartphones camera phones personal digital assistants cellular telephones and other similar mobile devices. The components shown here their connections couples and relationships and their functions are meant to be exemplary only and are not meant to limit the embodiments described and or claimed.

The computing device may include a processor a memory a storage device a high speed interface coupled to the memory and a plurality of high speed expansion ports and a low speed interface coupled to a low speed bus and a storage device . In one embodiment each of the components heretofore may be inter coupled using various buses and may be mounted on a common motherboard and or in other manners as appropriate. The processor may process instructions for execution in the computing device including instructions stored in the memory and or on the storage device to display a graphical information for a GUI on an external input output device such as a display unit coupled to the high speed interface . In other embodiments multiple processors and or multiple buses may be used as appropriate along with multiple memories and or types of memory. Also a plurality of computing devices may be coupled with with each device providing portions of the necessary operations e.g. as a server bank a group of blade servers and or a multi processor system .

The memory may be coupled to the computing device . In one embodiment the memory may be a volatile memory. In another embodiment the memory may be a non volatile memory. The memory may also be another form of computer readable medium such as a magnetic and or an optical disk. The storage device may be capable of providing mass storage for the computing device . In one embodiment the storage device may be comprised of at least one of a floppy disk device a hard disk device an optical disk device a tape device a flash memory and or other similar solid state memory device. In another embodiment the storage device may be an array of the devices in a computer readable medium previously mentioned heretofore computer readable medium such as and or an array of devices including devices in a storage area network and or other configurations.

A computer program may be comprised of instructions that when executed perform one or more methods such as those described above. The instructions may be stored in at least one of the memory the storage device a memory coupled to the processor and or a propagated signal.

The high speed interface may manage bandwidth intensive operations for the computing device while the low speed interface may manage lower bandwidth intensive operations. Such allocation of functions is exemplary only. In one embodiment the high speed interface may be coupled to at least one of the memory the display unit e.g. through a graphics processor and or an accelerator and to the plurality of high speed expansion ports which may accept various expansion cards. In the embodiment the low speed interface may be coupled to at least one of the storage device and the low speed bus . The low speed bus may be comprised of a wired and or wireless communication port e.g. a Universal Serial Bus USB a Bluetooth port an Ethernet port and or a wireless Ethernet port . The low speed bus may also be coupled to at least one of scan unit a printer a keyboard a mouse and a networking device e.g. a switch and or a router through a network adapter.

The computing device may be implemented in a number of different forms as shown in the figure. In one embodiment the computing device may be implemented as a standard server and or a group of such servers. In another embodiment the computing device may be implemented as part of a rack server system . In yet another embodiment the computing device may be implemented as a general computer such as a laptop or desktop computer. Alternatively a component from the computing device may be combined with another component in a mobile device . In one or more embodiments an entire system may be made up of a plurality of computing devices and or a plurality of computing devices coupled to a plurality of mobile devices .

In one embodiment the mobile device may comprise at least one of a mobile compatible processor a mobile compatible memory and an input output device such as a mobile display a communication interface and a transceiver among other components. The mobile device may also be provided with a storage device such as a microdrive or other device to provide additional storage. In one embodiment at least one of the components indicated heretofore are inter coupled using various buses and several of the components may be mounted on a common motherboard.

The mobile compatible processor may execute instructions in the mobile device including instructions stored in the mobile compatible memory . The mobile compatible processor may be implemented as a chipset of chips that include separate and multiple analog and digital processors. The mobile compatible processor may provide for example for coordination of the other components of the mobile device such as control of user interfaces applications run by the mobile device and wireless communication by the mobile device .

The mobile compatible processor may communicate with a user through the control interface and the display interface coupled to a mobile display . In one embodiment the mobile display may be at least one of a Thin Film Transistor Liquid Crystal Display TFT LCD an Organic Light Emitting Diode OLED display and another appropriate display technology. The display interface may comprise appropriate circuitry for driving the mobile display to present graphical and other information to a user. The control interface may receive commands from a user and convert them for submission to the mobile compatible processor . In addition an external interface may be provide in communication with the mobile compatible processor so as to enable near area communication of the mobile device with other devices. External interface may provide for example for wired communication in some embodiments or for wireless communication in other embodiments and multiple interfaces may also be used.

The mobile compatible memory may be coupled to the mobile device . The mobile compatible memory may be implemented as at least one of a volatile memory and a non volatile memory. The expansion memory may also be coupled to the mobile device through the expansion interface which may comprise for example a Single In Line Memory Module SIMM card interface. The expansion memory may provide extra storage space for the mobile device or may also store an application or other information for the mobile device . Specifically the expansion memory may comprise instructions to carry out the processes described above. The expansion memory may also comprise secure information. For example the expansion memory may be provided as a security module for the mobile device and may be programmed with instructions that permit secure use of the mobile device . In addition a secure application may be provided on the SIMM card along with additional information such as placing identifying information on the SIMM card in a non hackable manner.

The mobile compatible memory may comprise at least one of a volatile memory e.g. a flash memory and a non volatile memory e.g. a non volatile random access memory NVRAM . In one embodiment a computer program comprises a set of instructions that when executed perform one or more methods. The set of instructions may be stored on at least one of the mobile compatible memory the expansion memory a memory coupled to the mobile compatible processor and a propagated signal that may be received for example over the transceiver and or the external interface .

The mobile device may communicate wirelessly through the communication interface which may be comprised of a digital signal processing circuitry. The communication interface may provide for communications using various modes and or protocols such as at least one of a Global System for Mobile Communications GSM protocol a Short Message Service SMS protocol an Enhanced Messaging System EMS protocol a Multimedia Messaging Service MMS protocol a Code Division Multiple Access CDMA protocol Time Division Multiple Access TDMA protocol a Personal Digital Cellular PDC protocol a Wideband Code Division Multiple Access WCDMA protocol a CDMA2000 protocol and a General Packet Radio Service GPRS protocol. Such communication may occur for example through the radio frequency transceiver . In addition short range communication may occur such as using a Bluetooth Wi Fi and or other such transceiver. In addition a GPS Global Positioning System receiver module may provide additional navigation related and location related wireless data to the mobile device which may be used as appropriate by a software application running on the mobile device .

The mobile device may also communicate audibly using an audio codec which may receive spoken information from a user and convert it to usable digital information. The audio codec may likewise generate audible sound for a user such as through a speaker e.g. in a handset of the mobile device . Such a sound may comprise a sound from a voice telephone call a recorded sound e.g. a voice message a music files etc. and may also include a sound generated by an application operating on the mobile device .

The mobile device may be implemented in a number of different forms as shown in the figure. In one embodiment the mobile device may be implemented as a smartphone . In another embodiment the mobile device may be implemented as a personal digital assistant PDA . In yet another embodiment the mobile device may be implemented as a tablet device .

A group of employees e.g. participants at the Acme Bread Company in Nashville Tenn. may decide that they need to discuss a crucial quarterly report earning. For this reason they may hold a collaborative session through a phone call a videoconference session a group chat a telepresence session a web conference a screen share and or an online collaborative session . The Chief Financial Officer CFO Bob Jones may not need to publish a phone number and an access code associated with the collaborative session to the group of participants invited to the collaborative session thanks to the various embodiments described in leveraging the conference facilitation server as described in . Security may be assured because of the various embodiments described in because the lack of phone number and the access code means the collaborative session may not be compromised by competitors accessing the collaborative session discussing key financial information that might affect stock price.

Also more invited participants may join the conference on time because their phones and or tablets may automatically ring instead of them having to pick up the phone check their calendars and find out which number and access code to dial thanks to the various embodiments described herein. The collaborative session may proceed smoothly without disruption and without repetition requiring repeating of things already discussed by the CFO Bob Jones because everyone may join the collaborative session when called as opposed to having to manually call in themselves. Therefore productivity may be enhanced at Acme Bread Company and initiating and participating in the collaborative session may be a painless experience. Acme may make its numbers and have the needed privacy to succeed in the competitive wholesale bread business as a result.

It should be appreciated that the various embodiments described herein may be used for a dating service a business conference and or a social conference call. Furthermore the various embodiments described herein may be used by an automated internet of things in which a collaborative session is parameterized by non human internet enabled devices. In other words the conference initiator of may be an IP enabled appliance and or device that automatically initiates and or bridges calls between multiple human participants. As a specific example an internet enabled car may define a set of conference parameters which result in a conference invitation being sent to the car owner and a service center scheduling a time to discuss a recent change in car performance or a bit of scheduled maintenance.

Various embodiments of the systems and techniques described here can be realized in at least one of a digital electronic circuitry an integrated circuitry a specially designed application specific integrated circuits ASICs a piece of computer hardware a firmware a software application and a combination thereof. These various embodiments can include embodiment in one or more computer programs that are executable and or interpretable on a programmable system including at least one programmable processor which may be special or general purpose coupled to receive data and instructions from and to transmit data and instructions to a storage system at least one input device and at least one output device.

These computer programs also known as programs software software applications and or code comprise machine readable instructions for a programmable processor and can be implemented in a high level procedural and or object oriented programming language and or in assembly machine language. As used herein the terms machine readable medium and or computer readable medium refers to any computer program product apparatus and or device e.g. magnetic discs optical disks memory and or Programmable Logic Devices PLDs used to provide machine instructions and or data to a programmable processor including a machine readable medium that receives machine instructions as a machine readable signal. The term machine readable signal refers to any signal used to provide machine instructions and or data to a programmable processor.

To provide for interaction with a user the systems and techniques described here may be implemented on a computing device having a display device e.g. a cathode ray tube CRT and or liquid crystal display LCD monitor for displaying information to the user and a keyboard and a mouse by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well for example feedback provided to the user can be any form of sensory feedback e.g. visual feedback auditory feedback and or tactile feed back and input from the user can be received in any form including acoustic speech and or tactile input.

The systems and techniques described here may be implemented in a computing system that comprises at least one of a back end component e.g. as a data server a middleware component e.g. an application server a front end component e.g. a client computer having a graphical user interface and or a Web browser through which a user can interact with an embodiment of the systems and techniques described here and a combination thereof. The components of the system may also be coupled through a communication network.

The communication network may comprise at least one of a local area network LAN and a wide area network WAN e.g. the Internet . The computing system can comprise at least one of a client and a server. In one embodiment the client and the server are remote from each other and interact through the communication network.

A number of embodiments have been described. Nevertheless it will be understood that various modifications may be made without departing from the spirit and scope of the claimed invention. In addition the logic flows depicted in the figures do not require the particular order shown or sequential order to achieve desirable results. In addition other steps may be provided or steps may be eliminated from the described flows and other components may be added to or removed from the described systems. Accordingly other embodiments are within the scope of the following claims.

It may be appreciated that the various systems methods and apparatus disclosed herein may be embodied in a machine readable medium and or a machine accessible medium compatible with a data processing system e.g. a computer system and or may be performed in any order.

The structures and modules in the figures may be shown as distinct and communicating with only a few specific structures and not others. The structures may be merged with each other may perform overlapping functions and may communicate with other structures not shown to be connected in the figures. Accordingly the specification and or drawings may be regarded in an illustrative rather than a restrictive sense.

