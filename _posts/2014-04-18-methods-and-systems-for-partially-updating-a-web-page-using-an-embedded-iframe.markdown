---

title: Methods and systems for partially updating a web page using an embedded iFrame
abstract: Methods and systems are provided for managing customer service calls using a localhost service operating within a desktop environment. The system includes a web-based application configured to display browser windows including an overlayed or embedded softphone component, and a desk top application which serves a telephony application configured to receive call status information from a CTI adapter. The softphone is supported by an iFrame which exchanges call status information with the desk top application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09467564&OS=09467564&RS=09467564
owner: salesforce.com, inc.
number: 09467564
owner_city: San Francisco
owner_country: US
publication_date: 20140418
---
This application is a continuation of and claims priority to U.S. application Ser. No. 13 604 356 filed Sep. 5 2012 and claims the benefit of U.S. provisional patent application Ser. No. 61 594 209 filed Feb. 2 2012 the entire contents of which are incorporated by reference herein.

Embodiments of the subject matter described herein relate generally to computer systems and applications for customer relationship management and more particularly to a communications architecture for securely updating a web based user interface with telephony information using an embedded iFrame.

Modern software development is evolving away from the client server model toward network based processing systems that provide access to data and services via the Internet or other networks. In contrast to traditional systems that host networked applications on dedicated server hardware a cloud computing model allows applications to be provided over the network as a service supplied by an infrastructure provider. The infrastructure provider typically abstracts the underlying hardware and other resources used to deliver a customer developed application so that the customer no longer needs to operate and support dedicated server hardware. The cloud computing model can often provide substantial cost savings to the customer over the life of the application because the customer no longer needs to provide dedicated network infrastructure electrical and temperature controls physical security and other logistics in support of dedicated server hardware.

Multi tenant cloud based architectures have been developed to improve collaboration integration and community based cooperation between customer tenants without sacrificing data security. Generally speaking multi tenancy refers to a system where a single hardware and software platform simultaneously supports multiple user groups also referred to as organizations or tenants from a common data storage element also referred to as a multi tenant database . The multi tenant design provides a number of advantages over conventional server virtualization systems. First the multi tenant platform operator can often make improvements to the platform based upon collective information from the entire tenant community. Additionally because all users in the multi tenant environment execute applications within a common processing space it is relatively easy to grant or deny access to specific sets of data for any user within the multi tenant platform thereby improving collaboration and integration between applications and the data managed by the various applications. The multi tenant architecture therefore allows convenient and cost effective sharing of similar application features between multiple sets of users.

Robust customer relationship management CRM systems and applications have been developed for use in the multi tenant environment. Presently known CRM applications typically include a web based component and a telephony component. The web based component presents a customer service representative CSR with a dash board style user interface which summarizes information pertaining to an incoming call such as the caller s name title company affiliation location nature and priority of the customer service inquiry incident history and the like.

Embodiments of the subject matter described herein generally relate to a computer telephony integration CTI application for use with a customer relationship management CRM system in the context of a multitenant computing environment.

Turning now to an exemplary multi tenant system includes a server that dynamically creates and supports virtual applications based upon data from a database that may be shared between multiple tenants referred to herein as a multi tenant database. Data and services generated by the virtual applications are provided via a network to any number of client devices as desired. Each virtual application is suitably generated at run time or on demand using a common application platform that securely provides access to the data in the database for each of the various tenants subscribing to the multi tenant system . In accordance with one non limiting example the multi tenant system is implemented in the form of an on demand multi tenant customer relationship management CRM system that can support any number of authenticated users of multiple tenants.

As used herein a tenant or an organization should be understood as referring to a group of one or more users that shares access to common subset of the data within the multi tenant database . In this regard each tenant includes one or more users associated with assigned to or otherwise belonging to that respective tenant. Stated another way each respective user within the multi tenant system is associated with assigned to or otherwise belongs to a particular one of the plurality of tenants supported by the multi tenant system . Tenants may represent companies corporate departments business or legal organizations and or any other entities that maintain data for particular sets of users such as their respective customers within the multi tenant system . Although multiple tenants may share access to the server and the database the particular data and services provided from the server to each tenant can be securely isolated from those provided to other tenants. The multi tenant architecture therefore allows different sets of users to share functionality and hardware resources without necessarily sharing any of the data belonging to or otherwise associated with other tenants.

The multi tenant database may be a repository or other data storage system capable of storing and managing the data associated with any number of tenants. The database may be implemented using conventional database server hardware. In various embodiments the database shares processing hardware with the server . In other embodiments the database is implemented using separate physical and or virtual database server hardware that communicates with the server to perform the various functions described herein. In an exemplary embodiment the database includes a database management system or other equivalent software capable of determining an optimal query plan for retrieving and providing a particular subset of the data to an instance of virtual application in response to a query initiated or otherwise provided by a virtual application as described in greater detail below. The multi tenant database may alternatively be referred to herein as an on demand database in that the multi tenant database provides or is available to provide data at run time to on demand virtual applications generated by the application platform as described in greater detail below.

In practice the data may be organized and formatted in any manner to support the application platform . In various embodiments the data is suitably organized into a relatively small number of large data tables to maintain a semi amorphous heap type format. The data can then be organized as needed for a particular virtual application . In various embodiments conventional data relationships are established using any number of pivot tables that establish indexing uniqueness relationships between entities and or other aspects of conventional database organization as desired. Further data manipulation and report formatting is generally performed at run time using a variety of metadata constructs. Metadata within a universal data directory UDD for example can be used to describe any number of forms reports workflows user access privileges business logic and other constructs that are common to multiple tenants. Tenant specific formatting functions and other constructs may be maintained as tenant specific metadata for each tenant as desired. Rather than forcing the data into an inflexible global structure that is common to all tenants and applications the database is organized to be relatively amorphous with the pivot tables and the metadata providing additional structure on an as needed basis. To that end the application platform suitably uses the pivot tables and or the metadata to generate virtual components of the virtual applications to logically obtain process and present the relatively amorphous data from the database .

The server may be implemented using one or more actual and or virtual computing systems that collectively provide the dynamic application platform for generating the virtual applications . For example the server may be implemented using a cluster of actual and or virtual servers operating in conjunction with each other typically in association with conventional network communications cluster management load balancing and other features as appropriate. The server operates with any sort of conventional processing hardware such as a processor memory input output features and the like. The input output features generally represent the interface s to networks e.g. to the network or any other local area wide area or other network mass storage display devices data entry devices and or the like. The processor may be implemented using any suitable processing system such as one or more processors controllers microprocessors microcontrollers processing cores and or other computing resources spread across any number of distributed or integrated systems including any number of cloud based or other virtual systems. The memory represents any non transitory short or long term storage or other computer readable media capable of storing programming instructions for execution on the processor including any sort of random access memory RAM read only memory ROM flash memory magnetic or optical mass storage and or the like. The computer executable programming instructions when read and executed by the server and or processor cause the server and or processor to create generate or otherwise facilitate the application platform and or virtual applications and perform one or more additional tasks operations functions and or processes described herein. It should be noted that the memory represents one suitable implementation of such computer readable media and alternatively or additionally the server could receive and cooperate with external computer readable media that is realized as a portable or mobile component or platform e.g. a portable hard drive a USB flash drive an optical disc or the like.

The application platform is any sort of software application or other data processing engine that generates the virtual applications that provide data and or services to the client devices . In a typical embodiment the application platform gains access to processing resources communications interfaces and other features of the processing hardware using any sort of conventional or proprietary operating system . The virtual applications are typically generated at run time in response to input received from the client devices . For the illustrated embodiment the application platform includes a bulk data processing engine a query generator a search engine that provides text indexing and other search functionality and a runtime application generator . Each of these features may be implemented as a separate process or other module and many equivalent embodiments could include different and or additional features components or other modules as desired.

The runtime application generator dynamically builds and executes the virtual applications in response to specific requests received from the client devices . The virtual applications are typically constructed in accordance with the tenant specific metadata which describes the particular tables reports interfaces and or other features of the particular application . In various embodiments each virtual application generates dynamic web content that can be served to a browser or other client program associated with its client device as appropriate.

The runtime application generator suitably interacts with the query generator to efficiently obtain multi tenant data from the database as needed in response to input queries initiated or otherwise provided by users of the client devices . In a typical embodiment the query generator considers the identity of the user requesting a particular function along with the user s associated tenant and then builds and executes queries to the database using system wide metadata tenant specific metadata pivot tables and or any other available resources. The query generator in this example therefore maintains security of the common database by ensuring that queries are consistent with access privileges granted to the user and or tenant that initiated the request.

With continued reference to the data processing engine performs bulk processing operations on the data such as uploads or downloads updates online transaction processing and or the like. In many embodiments less urgent bulk processing of the data can be scheduled to occur as processing resources become available thereby giving priority to more urgent data processing by the query generator the search engine the virtual applications etc.

In exemplary embodiments the application platform is utilized to create and or generate data driven virtual applications for the tenants that they support. Such virtual applications may make use of interface features such as custom or tenant specific screens standard or universal screens or the like. Any number of custom and or standard objects may also be available for integration into tenant developed virtual applications . As used herein custom should be understood as meaning that a respective object or application is tenant specific e.g. only available to users associated with a particular tenant in the multi tenant system or user specific e.g. only available to a particular subset of users within the multi tenant system whereas standard or universal applications or objects are available across multiple tenants in the multi tenant system. The data associated with each virtual application is provided to the database as appropriate and stored until it is requested or is otherwise needed along with the metadata that describes the particular features e.g. reports tables functions objects fields formulas code etc. of that particular virtual application . For example a virtual application may include a number of objects accessible to a tenant wherein for each object accessible to the tenant information pertaining to its object type along with values for various fields associated with that respective object type are maintained as metadata in the database . In this regard the object type defines the structure e.g. the formatting functions and other constructs of each respective object and the various fields associated therewith.

Still referring to the data and services provided by the server can be retrieved using any sort of personal computer mobile telephone tablet or other network enabled client device on the network . In an exemplary embodiment the client device includes a display device such as a monitor screen or another conventional electronic display capable of graphically presenting data and or information retrieved from the multi tenant database as described in greater detail below. Typically the user operates a conventional browser application or other client program executed by the client device to contact the server via the network using a networking protocol such as the hypertext transport protocol HTTP or the like. The user typically authenticates his or her identity to the server to obtain a session identifier SessionID that identifies the user in subsequent communications with the server . When the identified user requests access to a virtual application the runtime application generator suitably creates the application at run time based upon the metadata as appropriate. As noted above the virtual application may contain Java ActiveX or other content that can be presented using conventional client software running on the client device other embodiments may simply provide dynamic web or other content that can be presented and viewed by the user as desired. As described in greater detail below the query generator suitably obtains the requested subsets of data from the database as needed to populate the tables reports or other features of the particular virtual application .

In accordance with one embodiment application may be a customer relationship management CRM system of the type which includes a computer telephony integration CTI application often referred to as a softphone . A typical CRM architecture includes an interactive web application and a CTI module which work together to create a seamless browser experience including softphone component. The web application includes a dash board interface for presenting aggregate customer information to a customer service representative CSR and for managing incoming customer service calls the CTI module communicates with the telephony hardware and renders the softphone inside the browser window.

Presently known CTI modules are designed to route an incoming call to a CSR by inserting e.g. overlaying an interactive softphone window into the web page being viewed by the CSR. When an incoming customer service call is received the softphone displays a graphical textual or numeric icon to alert the CSR to answer the call. The CSR may then click on the softphone graphic to answer and service the call. In one such system the CTI component employs Microsoft s ShellDocView utility to select a browser page from an Internet Explorer compliant library and to insert hyper text transfer protocol language HTML and associated functionality directly into the browser page along with a softphone graphic e.g. a softphone window into the IE browser session served up by the web application.

This approach is advantageous in that it has no network delay however it presents a security vulnerability to the extent it injects HTML directly into the web page. Moreover the ShellDocView library is limited in that it is designed to be used only with the Internet Explorer browser.

In accordance with one embodiment of the present disclosure a localhost model is employed meaning that all communication between the CTI application and the web application is local to the CSR desktop. That is while the CRM application executes on the network cloud the desktop does not need to reach out over the Internet or to a local intranet to facilitate communication between the telephony application and the browser windows served up by the web application. In this context the term desktop means the local computer used by the CRS to service the customer service call and can include a traditional desktop computer laptop notebook hand held or any other type of computing device which presents a web based CRM application to the CSR and which includes a telephony component for refreshing the softphone in the context of the browser experience.

Referring now to an exemplary customer relationship management system includes a computer telephony integration executable CTI.exe module a web based softphone application a computing cloud which includes server and database and a customer service representative CSR equipped with a telephony headset and a CSR desktop computer monitor . A customer places a customer service call using a customer telephone and is routed to CSR as described below.

CTI.exe is configured to run locally on the CSR desktop and to serve both the telephony application which interfaces with customer telephone as well as the softphone component which is integrated into the user interface presented to the CSR via monitor . In particular CTI.exe is configured to communicate with the iFrame which supports the softphone component within the web page served by cloud .

Telephony system may be in the form of an enterprise platform a midmarket platform an on demand platform a system integrator platform or a combination or hybrid of the foregoing. Presently known enterprise platform providers include Avaya Cisco Genesys Aspect Siemens Nortel Alcatel Rockwell and NEC . Presently known midmarket platform providers include ShoreTel Interactive Intelligence Ericsson Linksys Vertical 3Com Asterisk and Mitel . Presently known on demand providers include Liveops inContact Contactual Five9 Echopass Teamphone Angel.com and Skype . Presently known system integrators include Syntellect SimpliCTI AMC Technology BCE Elix and ilink .

In an embodiment adapter library includes an adapter for each possible provider of telephony platform . In this way CTI.exe may operate seamlessly with any one of a plurality of telephony systems in a manner which is transparent to the caller and the CSR . That is by selecting the appropriate adapter from the adapter library the look and feel of the browser experience from the perspective of the CSR is consistent across a range of telephony providers.

With continued reference to CTI.exe may be agnostic to the browser that is the look and feel of the CRM application browser experience may also be consistent across a range of browsers such as for example Internet Explorer IE8 Chrome Opera Firefox and Safari to the extent they support HTML5 post message functionality . To accomplish this various embodiments of the desktop application utilize asynchronous Javascript and XML Ajax messaging protocols to embed the softphone graphic via an iFrame into the web page.

Turning now to an embodiment of a customer relationship management CRM architecture includes a telephony module a softphone and CTI infrastructure module an Internet connectivity cloud and a data service module . Data service module may include a web services application programming interface API to facilitate web based communication with telephony module an aggregate customer database and a data server .

Telephony module includes a CTI adapter library a telephony API for communicating with data module through cloud and a browser connector module . Browser connector module is configured to exchange Ajax messages with softphone CTI module to communicate with the iFrame which supports the softphone window in the web page as described in greater detail below.

With continued reference to softphone CTI infrastructure module includes a browser connector local storage which serves a plurality of browser compliant web pages and a browser connector iFrame which uses Ajax protocols or equivalent technology to insert a softphone graphic in the form of an iFrame into the web page as needed for example to alert the CSR of an incoming call . Softphone CTI infrastructure module further uses XML for exchanging customer information with data service module via cloud .

Softphone CTI infrastructure module is implemented as a localhost service and is thus capable of implementing the functions associated with CTI.exe in a desktop environment. That is module retrieves incoming call information and displays the call in an iFrame within a web page without having to reach out beyond the desktop. This reduces or eliminates the network delay associated with most implementations by using cross domain communication allowing real time interaction of both the telephony system and the web application within a seamless browser experience.

A system including a computer telephony integration CTI application. for managing customer service calls on a desktop computer is provided. The application includes a first module which serves a web based application configured to present a user with a browser window having an embedded softphone and a second module which serves a communication application configured to receive message status information from a message adapter and forward the message status information to the softphone wherein the first and second modules may be implemented as a single integrated code base stored in a non transitory computer readable storage medium for execution by the desktop computer.

The first module may be configured to operate in a network domain such as an on demand network computing platform and the second module may be configured to operate in a desk top domain. Communication between the first and second domains is substantially or wholly local to the desktop computer i.e. the application does not need to access the Internet or a local intranet to facilitate interaction between the web application and the telephony application. For example the softphone may function as a pop up window within the web based application operating in the first domain whereas the second module implements the functions of a browser connector for the telephony application in the second domain.

In one embodiment of the system the browser connector is configured to establish communication with an iFrame which supports a softphone window embedded in the browser. In this way both the softphone window which is observable by the user and the hidden iFrame which supports the softphone may be refreshed updated to reflect a change in the status of a message such as a change in call status for example by using a JavaScript message such as an asynchronous JavaScript and XML Ajax protocol.

Upon a change in the status of a customer service call or other message such as the receipt or termination of an incoming call the message adapter e.g. CTI adapter is configured to pass a call status message to the browser connector and the browser connector is configured to update the iFrame to reflect the status change. For example the iFrame may be updated to notify the customer service representative that an incoming call or other message has been received to thereby prompt the customer service representative to answer the call or otherwise process the incoming message.

A customer relationship management CRM system for use with a desktop computer is also provided. The system includes an adapter library having a plurality of messaging adapters including computer telephony integration CTI adapters for a plurality of telephony service providers a browser connector configured to exchange messages with one of the adapters local storage stored within a plurality of CRM browser windows and a web application configured to display the browser windows and to communicate with the browser connector. As a practical matter only one adapter is typically used at one time inasmuch as a particular call service center would likely use a single telephony service provider hence it is appropriate for the telephony providers to develop their own individual adapters to work in conjunction with published CTI specifications.

In an embodiment the adapter s and the CTI application comprise a single integrated code base stored on and executable by the desktop computer. The web application is suitably served by a computing cloud on a network and is configured to present a customer service representative CSR with a user interface e.g. a dash board style graphical user interface GUI which summarizes information pertaining to customer service calls. The information may include one or more of the following the caller s name title company affiliation location nature and priority of the customer service inquiry and the incident history.

Communication between the web application and the browser connector may be controlled by a single integrated set of computer executable instructions residing on and executed by the desktop computer. In this way communication between the browser connector and the web application may be primarily or exclusively local to the desktop computer. Thus for example upon a change in the status of a customer service call the browser connector may update the iFrame to reflect the status change without having to access the Internet or intranet .

Also provided is a method of partially refreshing a user interface associated with a computer telephony integration CTI application running on a desktop computer the method including serving from a network cloud a web based application configured to present a softphone to a user on a computer display monitor serving from the desk top computer a telephony application configured to exchange customer service call information with a CTI adapter and passing call status information from the CTI application to the softphone using an embedded iFrame. The method further includes refreshing the iFrame upon a change of said call status information.

The foregoing description is merely illustrative in nature and is not intended to limit the embodiments of the subject matter or the application and uses of such embodiments. Furthermore there is no intention to be bound by any expressed or implied theory presented in the technical field background or the detailed description. As used herein the word exemplary means serving as an example instance or illustration. Any implementation described herein as exemplary is not necessarily to be construed as preferred or advantageous over other implementations and the exemplary embodiments described herein are not intended to limit the scope or applicability of the subject matter in any way.

For the sake of brevity conventional techniques related to computer programming computer networking database querying database statistics query plan generation XML and other functional aspects of the systems and the individual operating components of the systems may not be described in detail herein. In addition those skilled in the art will appreciate that embodiments may be practiced in conjunction with any number of system and or network architectures data transmission protocols and device configurations and that the system described herein is merely one suitable example. Furthermore certain terminology may be used herein for the purpose of reference only and thus is not intended to be limiting. For example the terms first second and other such numerical terms do not imply a sequence or order unless clearly indicated by the context.

Embodiments of the subject matter may be described herein in terms of functional and or logical block components and with reference to symbolic representations of operations processing tasks and functions that may be performed by various computing components or devices. Such operations tasks and functions are sometimes referred to as being computer executed computerized software implemented or computer implemented. In this regard it should be appreciated that the various block components shown in the figures may be realized by any number of hardware software and or firmware components configured to perform the specified functions. For example an embodiment of a system or a component may employ various integrated circuit components e.g. memory elements digital signal processing elements logic elements look up tables or the like which may carry out a variety of functions under the control of one or more microprocessors or other control devices. In this regard the subject matter described herein can be implemented in the context of any computer implemented system and or in connection with two or more separate and distinct computer implemented systems that cooperate and communicate with one another. That said in exemplary embodiments the subject matter described herein is implemented in conjunction with a virtual customer relationship management CRM application in a multi tenant environment.

While at least one exemplary embodiment has been presented in the foregoing detailed description it should be appreciated that a vast number of variations exist. It should also be appreciated that the exemplary embodiment or embodiments described herein are not intended to limit the scope applicability or configuration of the claimed subject matter in any way. Rather the foregoing detailed description will provide those skilled in the art with a convenient road map for implementing the described embodiment or embodiments. It should be understood that various changes can be made in the function and arrangement of elements without departing from the scope defined by the claims which includes known equivalents and foreseeable equivalents at the time of filing this patent application. Accordingly details of the exemplary embodiments or other limitations described above should not be read into the claims absent a clear intention to the contrary.

