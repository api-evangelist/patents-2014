---

title: Policy-based bandwidth allocation
abstract: In one aspect, a method includes filtering one or more available ports on a data storage system to determine candidate ports based on at least their hardware redundancy information. The data storage system includes one or more data storage volumes. The method also includes allocating one or more ports to the data storage volume from the candidate ports based on parameters to enable communication from a host, using the one or more allocated ports, to the data storage volume through the one or more storage components. The parameters include at least one of a maximum paths parameter, a paths per initiator parameter and a minimum paths parameter.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09521085&OS=09521085&RS=09521085
owner: EMC CORPORATION
number: 09521085
owner_city: Hopkinton
owner_country: US
publication_date: 20140624
---
Computer systems are constantly improving in terms of speed reliability and processing capability. As is known in the art computer systems which process and store large amounts of data typically include a one or more processors in communication with a shared data storage system in which the data is stored. The data storage system may include one or more storage devices usually of a fairly robust nature and useful for storage spanning various temporal requirements e.g. disk drives . The one or more processors perform their respective operations using the storage system. Mass storage systems MSS typically include an array of a plurality of disks with on board intelligence and communications electronics and software for making the data on the disks available.

Companies that sell data storage systems and the like are very concerned with providing customers with an efficient data storage solution that minimizes cost while meeting customer data storage needs. It would be beneficial for such companies to have a way for reducing the complexity of implementing data storage.

In one aspect a method includes filtering one or more available ports on a data storage system to determine candidate ports based on at least their hardware redundancy information. The data storage system includes one or more data storage volumes. The method also includes allocating one or more ports to the data storage volume from the candidate ports based on parameters to enable communication from a host using the one or more allocated ports to the data storage volume through the one or more storage components. The parameters include at least one of a maximum paths parameter a paths per initiator parameter and a minimum paths parameter.

In another aspect an apparatus includes electronic hardware circuitry configured to filter one or more available ports on a data storage system to determine candidate ports based on at least their hardware redundancy information. The data storage system includes one or more data storage volumes. The apparatus also includes electronic hardware circuitry configured to allocate one or more ports to the data storage volume from the candidate ports based on parameters to enable communication from a host using the one or more allocated ports to the data storage volume through the one or more storage components. The parameters include at least one of a maximum paths parameter a paths per initiator parameter and a minimum paths parameter.

In a further aspect an article includes a non transitory computer readable medium that stores computer executable instructions. The instructions cause a machine to filter one or more available ports on a data storage system to determine candidate ports based on at least their hardware redundancy information. The data storage system includes one or more data storage volumes. The instructions also cause a machine to allocate one or more ports to the data storage volume from the candidate ports based on parameters to enable communication from a host using the one or more allocated ports to the data storage volume through the one or more storage components. The parameters include at least one of a maximum paths parameter a paths per initiator parameter and a minimum paths parameter.

Typically provisioning of one or more data services in a data storage system may require a multitude of actions. Generally provisioning of a data service may require an administrator and or a user to manually allocate one or more ports to enable a host to communicate with a data storage volume in a data storage system. Traditionally quickly provisioning ports in a balanced distribution across each component may not have been possible.

In certain embodiments the current disclosure may enable a distributed software control platform that allows enterprise IT departments and cloud service providers to convert heterogeneous storage systems within a data center into one large storage array. In some embodiments the current disclosure may enable exposure of logical storage resources and allow enterprise IT departments and cloud service providers to manage heterogeneous storage environments through a simple robust Representational State Transfer REST API and a command line interface CLI . In at least one embodiment one API and one CLI may be used to connect to all the storage arrays in a data center as if they were one large storage array.

In some embodiments the current disclosure may enable a software platform for multi tenant environments that delivers a single logical cloud scale geo distributed storage system for developers and storage cloud administrators. In certain embodiments the current disclosure may enable an enterprise to adopt hybrid management models in environments where storage infrastructure resides in enterprise data centers but is also hosted by a service provider or a public cloud. In certain embodiments the current disclosure may enable an enterprise to manage hybrid deployments as a single storage array. In further embodiments the current disclosure may enable a data storage system to scale to millions of storage volumes and file shares. In still further embodiments the techniques and implementations described herein may be deployed as a vApp a set of virtual machines.

In certain embodiments the current disclosure may enable data centric cloud infrastructures to be managed efficiently and flexibly through a data management software platform. In some embodiments the current disclosure may simplify the management of complex heterogeneous geo distributed storage resources by exposing the storage systems as logical resources through robust easy to use REST API and CLI interfaces. In most embodiments the current disclosure may provide integrations into cloud stacks such as VMware and OpenStack .

A data service may be a service for receiving processing storing and protecting data. In certain embodiments data services provide the high level data and storage management capabilities of the system.

A storage medium may be any medium that is capable of storing data including but not limited to a storage array a storage cluster a physical disk a virtual disk and a virtual storage system.

A tenant may represent an organization operating within a data storage system. In some embodiments a tenant may be generated in the system for the purposes of security isolation.

A neighborhood may represent a fault domain within a network. In many embodiments a plurality of data centers may be combined to generate a federation. In some embodiments the federation failures may occur that may affect the availability of resources. In certain embodiments the data centers or federation may account for the failures by segmenting the infrastructure into different fault domains. In some embodiments each fault domain may be designed to be isolated from other fault domains while part of the same data center so that each failure within one fault domain does not affect other fault domains.

A transport zone may represent a region of connectivity within a neighborhood. In many embodiments a transport zone may include a network such as a SAN network or an IP network. In various embodiments a transport zone may include addresses such as a World Wide Names WWN that may be in the network for both hosts and storage array ports. In some embodiments addresses for hosts may include initiator addresses and or IP addresses. In certain embodiments a data storage system may be enabled to determine what initiators may be connected to what storage ports by analyzing a transport zone.

An initiator is a hardware interface that connects a host to a Storage Network for the purpose of accessing data stored in the Storage System. In many embodiments an initiator may include a Fiber Channel FC initiator and or an iSCSI initiator. In various embodiments FC initiators may use a WWN address as a unique identifier in a data storage system. In various embodiments a WWN may include a port address and or node address. In certain embodiments an iSCSI initiator may include addresses of type IQN and EUI.

An engine may be a hardware unit within a Symmetrix Array. In various embodiments a VMAX system may include eight engines where each engine may include two directors.

A director may be a hardware unit within a Symmetrix Array on an engine. In some embodiment each director may include one or more ports.

A project may be a resource organization abstraction that maps resources to applications virtual data centers departments or other entities. In some embodiments a user may generate their own projects and may associate multiple resources from different data services with the projects. In most embodiments resources from one project maybe shared between users under the same tenant.

A Class of Service may represent high level capabilities and services that may be generated by administrators through composition of resource attributes and quality of services including level of protection availability access protocol performance and additional storage data services such as versioning snap backup remote replication data reduction encryption and or other data storage services. In many embodiments users or tenants may select from a menu of Class of Service entries when generating a volume.

Generally a data storage array or system may be one or more physical boxes or a cluster of physical boxes. In conventional systems the data storage array or system may have one control path and one or more data paths. In typical systems one or more data paths ports may provide data path access to the storage resources contained within the storage system. Typically the protocols for the data path ports may be fiber channel Internet Protocol IP iSCSI NFS or CIFS. Usually to add more capacity to a data storage array or system more physical disks more inline cards or more CPUs may be added to the data storage array or system. Conventionally the data storage system or array may be a cluster of storage mediums. Typically providing management for large numbers of data storage arrays or systems may be challenging.

Referring to a storage device includes a control path ports and disks and . Control path enables a user to interface with storage device . Control path enables a user to access disks and via the services storage device offers through one or more of ports .

In many embodiments the current disclosure may enable allocation of storage ports for exporting volumes from storage arrays in a data storage system. In various embodiments the current disclosure may eliminate the need for an administrator to manually allocate each storage port. In some embodiments the current disclosure may maximize hardware redundancy between selected allocated paths by applying prioritized filtering of the candidate ports based on their hardware redundancy information. In certain embodiments an arbitrary number of filters may be applied according to importance. For example in an embodiment a higher importance filter may be applied before a lower importance filter. In many embodiments the current disclosure may enable automatic allocation of storage ports in one or more configurations. In various embodiments the current disclosure may enable balanced usage and or allocation of ports from a data storage array. In some embodiments the current disclosure may determine a usage metric that is used to give allocation preference to ports that are less utilized than other ports.

In many embodiments the current disclosure may enable optimized port selection for maximum redundancy which may consider both the data storage system which may include the data storage array and the SAN fabric. In various embodiments the current disclosure may enable load balancing across one or more data storage ports within a data storage system. In certain embodiments the current disclosure may enable a user or administrator to dedicate one or more data storage ports for specific uses such as a specified export group or project.

In many embodiments the current disclosure may enable a port provisioning system to be implemented within a data storage system to enable allocation of storage ports for exporting volumes from storage arrays in a data storage system. In various embodiments the port provisioning system may automatically adapt to a given configuration i.e. a configuration which may include one or more SAN switches one or more directors one or more engines one or more initiators and or one or more ports . In certain embodiments the port provisioning system may automatically adapt to one or more network topologies. In some embodiments a port provisioning system may be enabled to work with odd numbering of hardware such as three directors and may enable cycling through each director before reuse. In certain embodiments the port provisioning system may allocate up to all ports that are available across all switches directors and engines. In other embodiments the port provisioning system may work well with symmetric configurations such as two engines each containing two directors each connected to two SAN Switches.

In many embodiments an automated provisioning system for storage arrays may be needed to pick and or allocate storage ports on a storage array within a data storage system. In various embodiments an automated provisioning system may be enabled to mask one or more ports to an export group such that the ports may be used to access one or more desired storage volumes within the data storage system. In some embodiments zones may be generated on a SAN switch which may allow a host to access storage array ports through the SAN fabric. In many embodiments a storage port selection algorithm may take several considerations into account to optimize high availability provide required bandwidth to the volume s by allocating a proportionate number of ports and to balance the load across the available storage ports.

In various embodiments a data storage system may include one or more internal constructs and hardware to facilitate giving access to one or more volumes to one or more hosts. In certain embodiments the one or more internal constructs and hardware may include switches SAN switches initiators directors engines and or storage ports. In many embodiments a data storage system may include one or more data storage arrays which may be enabled to connect to one or more hosts. In some embodiments one or more data volumes maybe allocated from one or more data storage arrays for one or more hosts. In other embodiments a host may have one or more initiators having one or more ports enabled to connect a data storage volume. In many embodiments a host initiator port may connect to a switch which may enable communication with a data storage volume on a data storage array in a data storage system. In various embodiments each data storage array may enable access to a data storage volume through one or more ports. In some embodiments a data storage array may include one or more engines wherein each engine may include one or more directors. In certain embodiments each director may include one or more ports which may enable access to one or more data volumes on a data storage array within a data storage system. In other embodiments a data storage system may use other constructs and hardware to facilitate communication with data volumes within a data storage system.

In many embodiments a port provisioning system may utilize one or more inputs to determine which ports are selected within a data storage system and allocated to a host. In some embodiments a port provisioning system may receive Tenant Data Administrative Data and or System Calculated Data. In various embodiments Tenant Data may include data pertaining to one or more hosts requesting data services from the data storage system. In some embodiments Tenant Data may include the number of initiators on a host. In certain embodiments Tenant Data may include the port and node name of each host initiator. In an embodiment the node name may include a worldwide name WWN of a node. In some embodiments Tenant Data may include an iSCSI IQN or EUI address of a host initiator. In many embodiments Tenant Data may include a specified Class of Service.

In many embodiments administrative data may include storage port registration status. In various embodiments storage port registration status may specify which storage ports may be used by the data storage system. In certain embodiments administrative data may include whether automated zoning may be enabled. In some embodiments a data storage system may include one or more neighborhoods. In other embodiments the current disclosure may enable a data storage system to automatically generate connectivity when storage volumes are exported or exposed for consumption. In certain embodiments automatic zoning of the SAN fabric i.e. network connectivity of certain components when storage volumes are exported within a neighborhood may be performed.

In many embodiments a data storage system may calculate system data which may be used by the port provisioning system. In various embodiments system data may include and identify relevant transport zones neighborhoods candidate storage ports redundancy groups host connected switches storage connected switches and or initiator target communication ability. In certain embodiments each host initiator may identify a transport zone connected to a data storage system. In various embodiments each transport zone may be equivalent to a fiber channel fabric a VSAN an IP network or other network type. In some embodiments a transport zone may identify a set of potential host initiators and storage ports that may be zoned together enabling communication between them.

In many embodiments each volume within a data storage system may identify and or reside within a neighborhood in the data storage system. In various embodiments a neighborhood may define a data center boundary within a data storage system. In certain embodiments each transport zone may be contained within a specific neighborhood in a data storage system.

In other embodiments each transport zone that may be used may identify a candidate set of storage ports and initiators within each respective transport zone that may be used together. In certain embodiments a data storage system may determine a candidate set of storage ports based on storage ports that a system administrator registered in a given transport zone. In various embodiments one or more data storage volumes may be connected to one or more hosts where the host initiators are in the same transport zone as the storage ports associated with the one or more data storage volumes. In various embodiments a port provisioning system may use a candidate set of storage ports to export one or more data storage volumes to a host through a specified transport zone. In some embodiments a host may be enabled to communicate with multiple transport zones for example a host may have a first initiator in a first transport zone and a second initiator in a second transport zone. In various embodiments a host may be enabled to communicate through two or more transport zones which may enable hardware redundancy when generating data paths from the host to the one or more data storage volumes.

In many embodiments a data storage system may include one or more redundancy groups which may give the data storage system knowledge of hardware redundancy within the data storage system. In various embodiments storage ports on a data storage system may be divided into one or more redundancy groups based on whether each port is implemented by separate hardware components. In some embodiments storage ports in the same redundancy group may share components making these ports more likely to fail together. In other embodiments redundancy groups may group ports by Engine Director slot number used storage port name and or other storage port identifiers. In various embodiments one or more redundancy groups may be used by the port provisioning system to enable allocation of ports in a manner to ensure that a one or more failures within a data storage system may not affect an overall stability and or overall functionality of the data storage system. In other embodiments one or more redundancy groups may be used by the port provisioning system to enable allocation of ports in a manner to ensure that a one or more failures within a data storage system may not affect the ability of a host to access a data storage volume from the data storage system.

In many embodiments system data may include information on switch and communication availability between each host and data volumes allocated for each host. In some embodiments system data may include each switch a host may be connected to. In certain embodiments each host initiator may identify a SAN switch that is directly connected to the host. In other embodiments system data may include each switch a storage port on a storage array may be connected to. In various embodiments each candidate storage port may identify a switch that is directly connected to a storage port on a storage array. In many embodiments system data may include information pertaining to initiator target communication ability. In various embodiments the existence of an initiator name and a target name in the same network or a network s database entries may indicate that the initiator and target may be able to communicate with each other.

In many embodiments the current disclosure may enable a data storage system to allocate one or more ports for a single fiber channel and or iSCSI transport zone using a port provisioning system. In various embodiments if ports for multiple transport zones may be selected a data storage system may use a port provisioning system to analyze each transport zone individually. In some embodiments a port provisioning system may receive one or more inputs to make a determination of an efficient port allocation for a host utilizing data services in a data storage system. In certain embodiments a port provisioning system may use tenant provided data administrator provided data and or system calculated data.

In many embodiments a port provisioning system may use tenant provided data administrator provided data and or system calculated data to facilitate port allocation. In various embodiments a port provisioning system may utilize one or more actions to determine an efficient allocation of ports for a data storage system. In some embodiments a port provisioning system may enable a balanced allocation of storage ports throughout a data storage system. In various embodiments a balanced allocation of storage ports may include a data storage system where each hardware component may allocate a similar number of storage ports across each hardware component. For example in an embodiment a data storage system allocating four ports through two engines would allocate two ports on each engine in the data storage system. In some embodiments a balanced allocation of storage ports may mean an equal or as close to equal distribution of storage ports across each hardware component within the data storage system. In certain embodiments a port provisioning system may be enabled to allocate storage ports based on one or more criteria. In many embodiments a data storage system may include a data storage array including one or more data storage ports. In various embodiments a data storage system may include a data storage array including one or more engines having one or more directors having one or more data storage ports. In many embodiments a port provisioning system may be enabled to generate a balanced allocation of data storage ports based on the configuration of the data storage system. In various embodiments a port provisioning system may be enabled to generate a balanced allocation of data storage ports based on one or more levels of hardware components having data storage ports.

In many embodiments a port provisioning service may determine available storage ports within a data storage system. In certain embodiments a port provisioning system may verify that each available storage port is available through switches connected to a data storage system. In other embodiments if a storage port is not available through a switch connected to a data storage system a port provisioning system may remove the port from the list of available storage ports within the data storage system.

In some embodiments a port provisioning system may be configured to balance ports across each hardware component type within a data storage system. In some embodiments hardware may include one or more switches one or more engines one or more directors or one or more ports. In certain embodiments as a port provisioning system allocates ports the port provisioning system may eliminate each piece of hardware used until all available hardware has been used.

In many embodiments a port provisioning system may utilize one or more algorithms to analyze a data storage system and filter available data storage ports to determine a balanced and or equal usage of ports across a given data storage system. In various embodiments a port provisioning system may query a data system to determine which switches are available and which ports are connected to each available switch. In some embodiments if a port is not currently connected to a switch the port may be eliminated from the list of available ports. In certain embodiments a port provisioning system may keep track of allocated ports allocated engines allocated directors and or allocated switches used while allocating ports to enable port provisioning system to allocate ports to maximize redundancy by utilizing each engine director and or switch rather than allocating each port on a single entity.

In some embodiments a port provisioning system may be enabled to allocate one or more available ports by filtering the available ports to enable a determination of a balanced and or equal distribution of ports across each engine director and or switch. In various embodiments one or more filters may be applied in a precedence order from most important to least important consideration. In certain embodiments the number of filters used may be adjusted. In many embodiments a port provisioning system may use one or more filters where each filter may operate on a data storage system entity such as a VMAX engine VMAX director VNX processor SAN switch and or other data storage system component. In some embodiments each filter may require inputs including a current list of candidate ports the filtering entities that have already been allocated or used and a map from the contextual object that contains entries of an entity based on a key to the set of storage ports hosted by or associated with the entity. In many embodiments as a port provisioning system starts allocating ports each of the filters may have no allocated entities. In some embodiments as the port provisioning system allocates ports the port provisioning system includes the entities from where the port was allocated into its respective filter. In certain embodiments the port provisioning system may continue to allocate ports while continually filtering out available ports using the specified filters. In some embodiments once all entities are contained within each specified filter and no ports are available each filter may be purged and the process repeated until the requested number of ports may be allocated.

Referring to API Service enables external access for Host through API . API Service communicates requests to Data Storage System . API Service enables access to Service Coordinator which enables access to other services and management modules. Through Service Coordinator API Service has access to tenant manager catalog manager metering manager monitoring manager data services meta data service job service authn authz log service messaging eventing port provisioning placement scheduler and BIOS Controller Device . As shown port provisioning allocates data storage ports for data storage volumes allocated from attached data storage. In this embodiment attached data storage includes VNX storage array VMAX storage array Isilon storage array GreenPlum storage array and NetApp storage array .

Referring to an example of a process to initialize a port provisioning system is a process . Port provisioning system gathers inputs for example from data storage system regarding the configuration of the data storage system . Other inputs that may be gathered may include configuration of host . Further inputs that may be gathered include the connectivity of the host to the transport zones determined from the network switches.

Port provisioning system determines availability of ports within data storage system . In many embodiments how many ports are needed from Initiators the distribution of Initiators to Transport Zones and the min path max path and paths per initiator parameters are first determined and then the availability of ports which is influenced by the number of ports needed per transport zone is determined.

In one example the port provisioning system builds initialization structures from the gathered inputs. In many embodiments an initialization structure may include one or more pointers to one or more transport zones. In various embodiments an initialization structure may include a map of the available storage ports where the keys are the port WWPNs or iSCSI address and the value may be the database representation of the storage port s physical structures and characteristics. In some embodiments an initialization structure includes a map of the storage port ids to the storage port structures. In certain embodiments an initialization structure may include a map of engine identifiers to a set of storage port structures that may be contained in that engine. In other embodiments an initialization structure may include a map of the director or port group names to a set of storage port structures representing ports contained in each respective director. In many embodiments an initialization structure may include a map of SAN switch names to a set of Storage Port structures that may be directly connected to the indicated switch. In various embodiments an initialization structure may include a reverse map from storage port structure to the SAN switch name it may be directly connected to. In certain embodiments an initialization structure may contain a set of already allocated engines that may indicate which engines were used in the allocation of ports from previous transport zones. In some embodiments an initialization structure may include a set of already allocated directors that may indicate which directors were used in previous transport zones. In certain embodiments an initialization structure may include a set of already used SAN switches.

The port provisioning system may eliminate some of the available ports to form a list of the candidate ports . For example unconnected ports or ports with a bad status indicator are eliminated from the available ports to form candidate ports. In one particular example port provisioning system uses the initialization structure in determining whether each data storage array port is usable e.g. a port may be usable if a port provisioning system has access to discovered data about the transport zone connectivity of the port and the port is active not malfunctioning and is connected to a SAN switch . In various embodiments a port may not be usable if the port is not active is malfunctioning and or disconnected from the switch or computer system. If a port is unusable port provisioning system eliminates the port from consideration in the allocation algorithm.

From the candidate ports a mapping is generated to determine a usage factor . The usage factor for a port may be determined by a number of initiators mapped or zoned to that port. In one example the usage factor is an integer value indicating the number of initiators using a port. In another example the usage factor may be determined by the number of storage volumes or LUNs that are accessed through that port. Each port may be used to access multiple volumes . In this example the usage factor is an integer value indicating the number of volumes using each port.

In this embodiment port provisioning system initializes internal data sets . In many embodiments a port provisioning system may maintain internal data structures for allocated ports allocated engines allocated directors and allocated switches which may represent ports which have been already allocated the engines which have already been allocated the directors which have already been allocated and the switches which have already been allocated. Initially each data structure is initialized to empty. In this embodiment port provisioning system sets candidate ports which include available storage ports in a transport zone minus any already allocated storage ports or any ports eliminated at processing block .

Referring to an example of a process to provision ports in a data storage system is a process . Port provisioning system initializes by initializing internal representations of data storage system and host . Port provisioning system analyzes internal representations and determines if each requested data path and or storage ports are allocated . If each requested data path and or storage port are allocated port provisioning system ends . If each requested data path and or storage ports are not allocated port provisioning system determines if each candidate port has been allocated . If each candidate port has been allocated port provisioning system ends . In this embodiment if there are one or more candidate ports port provisioning system filters the candidate ports by entity an example of a Filtering algorithm is shown in . As shown port provisioning system filters by engine filters by director and filters by SAN Switch . In this embodiment each filter removes ports from the candidate list which reside on already used entities. In other embodiments port provisioning system may be enabled to filter ports based on one or more different types of entities. In various embodiments entities may include directors engines SAN Switches and or other hardware components with a computer system and or a data storage system.

As shown in port provisioning system selects a port from the remaining ports on the candidate port list and updates internal representations of data storage system and host . For example from the ports remaining in the candidate ports one of the ports with the lowest usage factor is selected to become the newly allocated port. A list of allocated ports is updated to include the newly allocated port. The lists of allocated engines allocated directors and allocated switches are updated to reflect the newly allocated port s director and SAN switch associations so that the filters will use this information when allocating the next port. An update is made to the information in the context structure for already allocated directors and already used SAN switches in case that information is needed in subsequent Transport Zone allocations. By choosing the port with the lowest usage factor the use will be balanced across all the available ports as new allocations are made. Additionally if new ports are installed in the storage system these new ports will be preferred for allocation until their usage is equalized with the existing ports.

In many embodiments updating internal representations may include flagging which ports and or components have been used to enable the generation of each data path from one or more hosts to one or more data volumes. Port provisioning system restarts at processing block until an end is reached.

Referring to an example of a process to filter ports in a port provisioning system is a process . In this example port provisioning system is filtering ports by entity. In this embodiment port provisioning system determines if internal representations are empty for the particular entity being filtered. If internal representations are empty port provisioning system ends filtering . If internal representations are not empty port provisioning system forms a tentative list of candidate ports .

In many embodiments a tentative list of candidate ports may be determined based on which type of entity is being filtered. In some embodiments a port provisioning system may calculate a tentative set of ports from the candidate ports by removing ports that belong to any of the engines in the allocated engines set. In various embodiments a port provisioning a port provisioning system may calculate a tentative set of ports from the candidate ports by removing ports that belong to any of the directors in the allocated directors set. In certain embodiments a port provisioning system may calculate a tentative set of ports from the candidate ports by removing ports that are connected to any of the switches in the allocated switches set.

As shown port provisioning system determines if the tentative candidate ports list is empty . If the tentative candidate ports list is empty port provisioning system clears the current allocated entity set and ends filtering . If the tentative candidate ports list is not empty port provisioning system copies the tentative candidate ports list to the candidate ports list and ends . In this embodiment port provisioning system retains the results of the filtering.

Referring to an example of a process to provision ports to enable a host to communicate with a data storage volume using a port provisioning system is a process . Port provisioning system gets inputs from data storage system regarding configuration host and the availability of ports within data storage system . In this embodiment host requests two data paths to data storage volume . Port provisioning system analyzes inputs to determine available ports . The provisioning ports process is executed for each transport zone through which provisioning system generates a data path. In this embodiment port provisioning system determines that Host has available ports on initiator and on initiator . Port provisioning system determines transport zone and transport zone has available ports. Port provisioning system determines that data storage array has available ports on engine and engine . Port provisioning system uses configuration input to filter available ports to determine a balanced allocation of ports. In this embodiment Port provisioning system allocates available ports to enable host to communicate with data storage volume .

Referring to an example of a process to provision ports to enable a host to communicate with a data storage volume using a port provisioning system is a process . Port provisioning system has been invoked in data storage system where host has two data paths to data volume . As shown port provisioning system gets inputs from data storage system regarding configuration host and the availability of ports within data storage system . In this embodiment host requests three data paths to data storage volume . Port provisioning system determines which ports are available . In this embodiment port provisioning system filters the available ports to determine a balanced allocation of ports. In this embodiment port provisioning system allocates available ports to enable host to communicate with data storage volume .

Process may be used with Policy based allocation parameters defined by a system administrator. In the domain of Storage As A Service SAAS providers administrators typically set up sets of parameters that control the characteristics of storage that end users might provision. These parameter sets are called Virtual Pools and they control various parameters about the storage that is allocated when a Virtual Pool is used by an end user to create Storage. These parameters include what type of storage should be used e.g. SSD drives vs. SCSI drives and rotational speeds redundancy capabilities mirroring providers and number of mirrored copies storage virtualization parameters and so forth. Other parameters control the bandwidth and networking redundancy that would be allocated in Fibre Channel or iSCSI networks these parameters include a maximum paths parameter max paths paths per initiator parameter paths per initiator and a minimum paths parameter min paths .

Max paths defines the maximum number of paths that can be used when exporting a volume to a host and is a measure of the bandwidth provided to the host. Max paths may be used for billing purposes. Max paths allows the administrator to cap the amount bandwidth in terms of the number of array ports that will be used for storage allocated using this Virtual Pool.

Paths per initiator determines the number of paths that will be used for each Host Initiator port that is provisioned which determines the level of redundancy on a per Initiator basis for a Host.

Min paths determines the minimum number of paths that must provisioned for the provisioning to be considered successful which allows the administrator to set a minimum expectation on the redundancy provided for storage allocated using this Virtual Pool.

The bandwidth allocated to a volume or the path redundancy to a volume can be each adjusted after it has already been exported by changing the Virtual Pool association of a volume. For example a volume could be exported originally with a Virtual Pool that had a medium amount of bandwidth allocated but over time if bandwidth requirements increase the volume s Virtual Pool association can be changed to a new Virtual Pool that has a higher amount of bandwidth allocated. This Virtual Pool change will cause additional ports to be allocated provisioned and zoned without disrupting the Host applications. Adjusting a bandwidth may done because of but not limited to reasons such as for example adding more ports will equal to more potential bandwidth and adding more ports will provide more redundancy if the ports come from different hardware entities . In one example a user is enabled to dynamically adjust the number of redundant paths providing access to a volume after it has already been exported by changing a Virtual Pool association of the volume.

When a request is made to export one or more volumes to a Host or Cluster the parameters above are used to control the allocation of ports. For Host exports each Host is treated separately and is allocated its own set of ports. For Cluster exports one allocation is made for the cluster and all the Hosts use the same sets of ports. The three parameters can be used for allocation in the following manner for example. First it is determined which of the host s Initiators are on Networks that are connected or can be routed to the Storage Array. Those are the usable Initiators . The paths per initiator parameter determines how many Storage Ports to provision for each Initiator. For example if the paths per initiator is one then one port is allocated for each Initiator. If paths per initiator is two then two ports are allocated for each Initiator and so forth.

The usable Initiators are split up by the Network they will use to access the Storage Array. Then for each Network that will be used the number of ports to be allocated is calculated. That is paths per initiator is multiplied by the number of usable Initiators in that Network. However if the sum of the ports to be allocated across all Networks exceeds the parameter max paths then instead the number of available paths is split evenly across the Networks if possible and some Initiators are left without port assignments. For example if there are four usable Initiators in two Networks with paths per initiator 2 and max paths 4 then 2 paths are allocated for each of the two Networks and one Initiator is assigned in each of the Networks to use two ports using a total of four ports from the Storage Array.

If paths per initiator times the number of usable Initiators is less than or equal to max paths then the number of ports allocated will be paths per initiator times the number of usable Initiators. Otherwise at most max path ports are allocated.

If the parameter min paths is set a validation is made that a successful allocation must contain at least min paths for each host. Thus min paths may be between 1 and max paths. If a sufficient number of ports to satisfy the min paths parameter are unable to be allocated then the request will fail. This can happen because the host has an insufficient number of usable Initiators or because the Networks used to communicate with the array have too few Storage Ports or because there are too few Storage Ports assigned to the Virtual Array being used.

If a Virtual Pool change request is made to increase the number of paths the current number of paths used on a per host basis for the Export is calculated. Assuming the new value for max paths is higher than the value in the previous Virtual Pool the number of additional Storage Ports that can be allocated is calculated. An attempt is made to assign the number of additional storage ports to any usable Initiators for which ports were not previously allocated.

By using the parameters max paths paths per initiator and min paths as parameters a system administrator can pre provision Virtual Pools representing different service levels and costs. These parameters can include the parameters that determine how many ports will be allocated for exporting using a given Virtual Pool. The administrator can control the redundancy per Initiator as well as the overall amount of redundancy. Also the end user who is provisioning Storage As A Service only needs to pick an appropriate Virtual Pool that delivers a defined Class of Service and does not need to be concerned with the details of the Storage or SAN Networking Provisioning Parameters. Further the bandwidth parameters that are defined in the Virtual Pool are not specific to a particular array type or storage system rather they can be implemented for any Storage System. Moreover the parameters can be changed for existing Volumes by associating the Volume with a different Virtual Pool. This can change the bandwidth allocated to the volume without disrupting Host applications.

Referring to a computer includes a processor a volatile memory a non volatile memory e.g. hard disk and the user interface UI e.g. a graphical user interface a mouse a keyboard a display touch screen and so forth . The non volatile memory stores computer instructions an operating system and data . In one example the computer instructions are executed by the processor out of volatile memory to perform all or part of the processes described herein e.g. processes and .

The processes described herein e.g. processes and are not limited to use with the hardware and software of they may find applicability in any computing or processing environment and with any type of machine or set of machines that is capable of running a computer program. The processes described herein may be implemented in hardware software or a combination of the two. The processes described herein may be implemented in computer programs executed on programmable computers machines that each includes a processor a non transitory machine readable medium or other article of manufacture that is readable by the processor including volatile and non volatile memory and or storage elements at least one input device and one or more output devices. Program code may be applied to data entered using an input device to perform any of the processes described herein and to generate output information.

The system may be implemented at least in part via a computer program product e.g. in a non transitory machine readable storage medium such as for example a non transitory computer readable medium for execution by or to control the operation of data processing apparatus e.g. a programmable processor a computer or multiple computers . Each such program may be implemented in a high level procedural or object oriented programming language to communicate with a computer system. However the programs may be implemented in assembly or machine language. The language may be a compiled or an interpreted language and it may be deployed in any form including as a stand alone program or as a module component subroutine or other unit suitable for use in a computing environment. A computer program may be deployed to be executed on one computer or on multiple computers at one site or distributed across multiple sites and interconnected by a communication network. A computer program may be stored on a non transitory machine readable medium that is readable by a general or special purpose programmable computer for configuring and operating the computer when the non transitory machine readable medium is read by the computer to perform the processes described herein. For example the processes described herein may also be implemented as a non transitory machine readable storage medium configured with a computer program where upon execution instructions in the computer program cause the computer to operate in accordance with the processes. A non transitory machine readable medium may include but is not limited to a hard drive compact disc flash memory non volatile memory volatile memory magnetic diskette and so forth but does not include a transitory signal per se.

The processes described herein are not limited to the specific examples described. For example the processes and are not limited to the specific processing order of respectively. Rather any of the processing blocks of may be re ordered combined or removed performed in parallel or in serial as necessary to achieve the results set forth above.

The processing blocks for example in the processes and associated with implementing the system may be performed by one or more programmable processors executing one or more computer programs to perform the functions of the system. All or part of the system may be implemented as special purpose logic circuitry e.g. an FPGA field programmable gate array and or an ASIC application specific integrated circuit . All or part of the system may be implemented using electronic hardware circuitry that include electronic devices such as for example at least one of a processor a memory a programmable logic device or a logic gate.

Elements of different embodiments described herein may be combined to form other embodiments not specifically set forth above. Other embodiments not specifically described herein are also within the scope of the following claims.

