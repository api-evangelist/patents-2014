---

title: Unauthorized device detection in a heterogeneous network
abstract: Techniques are disclosed for identifying an unauthorized device in a network environment that comprises a plurality of heterogeneous devices. In some embodiments, tests may be performed about a device, using information provided by the device, information about the device obtained from a neighboring device, or information about a placement of the device within a network topology. These tests may be used to determine whether a device is unauthorized for the network.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09654458&OS=09654458&RS=09654458
owner: Amazon Technologies, Inc.
number: 09654458
owner_city: Seattle
owner_country: US
publication_date: 20140923
---
Preventing unauthorized or rogue devices from accessing a company s network is of high importance. One way that this may be achieved is through physical security. Physical access to a datacenter may be restricted to authorized personnel and even within a datacenter particularly sensitive components may be further restricted physically. For instance those computers in a datacenter that handle payment processing may be kept in locked cages where only a subset of those who have access to a datacenter as a whole may open a locked cage.

Additionally where all devices on a computer network are homogenous e.g. they are all the same model of computer from the same manufacturer automated systems may be established to determine whether an unauthorized device is present. For example automated systems may be established to identify any device that differs from the make and model of all of the other otherwise homogenous devices on the network.

Physical security against unauthorized devices connecting to a network and automated systems that identify unauthorized devices in a homogenous environment each have problems. Physical security can be expensive and may not catch all unauthorized devices that are added to a network. Additionally when the size or number of datacenters to be secured grows the number of potential attack points in which to insert an unauthorized device may also grow and it may become impractical to solely rely on physical security against unauthorized devices when those unauthorized devices could be located in so many places.

Then a problem with automated systems that identify unauthorized devices in a homogenous environment is that those systems do just that they identify unauthorized devices only within a homogeneous environment. However many networks and datacenters contain heterogeneous devices. For example workers at the datacenter may use a variety of laptops from a variety of vendors servers may be sourced from a variety of vendors and even networking equipment like switches routers firewalls and load balancers may be sourced from a variety of vendors. So it is typical to have a heterogeneous environment rather than a homogeneous environment and techniques designed specifically to address unauthorized devices in a homogeneous environment may not be applicable to addressing unauthorized devices in a heterogeneous environment.

One possible solution then is to provide for automated systems that identify unauthorized devices in a heterogeneous environment. The present disclosure contains several techniques for doing so and these techniques may be used in concert to more accurately identify unauthorized devices. In some embodiments there may be a management system that maintains a list of authorized devices on the network. A device s MAC address or other identifier may be compared against this list. This management system may also maintain an association between devices and where they should be located on a network e.g. in a production intranet or in a corporate intranet and use this information to determine if an otherwise authorized device is connected to the network in an unauthorized manner.

There may also be more sophisticated techniques to counteract more sophisticated rogue devices. For example some of these techniques may leverage possessing knowledge of the entirety of the network being analyzed e.g. one data center to determine whether there is an unauthorized device e.g. whether two devices report to have the same MAC address where one is spoofing an authorized device s MAC address . Or some of these techniques may leverage information about a device s neighbor to determine whether a rogue device is present. For example two switches may be directly connected with a cable. If this connection is a half duplex connection instead of a full duplex connection this may indicate that a rogue hub has been placed between the two switches since switches usually communicate with each other via a full duplex link and hubs usually utilize a half duplex link.

Other ways that devices may be validated as to whether they are authorized may relate to how they are inserted into a network. For example a rack of devices may contain one switch and then a plurality of server computers that are generally of the same make and model. If the switch has more devices connected to it than there are spots for servers in the rack this may indicate that a rogue device is also connected to the switch. Or where one of the devices differs from its neighbors in the rack though other racks may have different types of devices which may distinguish this technique from techniques for identifying rogue devices in homogeneous environments that may indicate that there is a rogue device in the rack.

In some embodiments that use a management system to maintain a list of authorized devices it may be that there is a delay from when a device is added to a network and when a management system is updated to contain an indication that it is authorized. In these embodiments there is a multi stage process of identifying rogue devices so as to not incorrectly identify a newly added authorized device as a rogue device. For example where a device would otherwise be flagged as a rogue device because there is no entry for it in a management system there may be a delay in doing so that corresponds to allowing for a time involved with adding an indication of the device in the management system. So the device may be flagged at a low level when first encountered e.g. possibly rogue possibly new revisit and then flagged as actually rogue after a time period has elapsed from this first encounter and it is still not identified in the management system.

There are multiple ways that information indicative of a rogue device may be processed and ways that a rogue device may be handled. For example where multiple techniques are used in concert to identify a rogue device each of these techniques may be used to assign a score indicative of whether the first device is rogue and this score may be summed this may be similar to a Bayesian technique for email spam filtering . Where the total score is above a predetermined threshold this may be indicative of the device being rogue. Or where any one of the techniques identifies the device as rogue this may cause the system to identify the device as rogue regardless of whether all other techniques identify the device as authorized.

In some embodiments a device identified as rogue may be flagged and an alert sent to an administrator to further investigate the device. In some embodiments the device may be disconnected from the network e.g. an Internet Protocol IP address assigned to it may be revoked or its neighboring devices may be instructed not to communicate with it or not to communicate along a communications link that the rogue device has access to until an administrator investigates the device.

Turning now to the figures they begin with example environments in which these techniques may be implemented . Then they move to example operating procedures that may be implemented to perform some of these techniques . And they conclude with further detail of example environments in which these techniques may be implemented .

The components of web services platform computer rack A A computer rack B B computer rack N N device analyzer A A device analyzer B B web server and object level storage may be connected to each other via intranet . Intranet may comprise networking equipment such as switches routers firewalls and load balancers. In some embodiments each of these components of web services platform including the networking equipment may be analyzed by device analyzer A A and device analyzer B B to determine if they are authorized to be connected to intranet of web services platform . Techniques for determining whether a device is authorized are depicted in the following figures.

As depicted web services platform is divided into two logical components web services network and production network . In turn as depicted web services network generally comprises a portion of web services platform that offers compute services to users. In turn production network as depicted comprises web server and object level storage and may generally host a web site for web services platform .

Web services network and production network may be considered to be separate intranets within web services platform where communications between the two intranets is generally restricted relative to communications within an intranet. For example each intranet may host a computer that has the same Internet Protocol IP address and so addressing communications between these two computers would involve some degree of Network Address Translation NAT that may not be involved in communications between two computers solely within production network .

Given that web services network and production network may have some degree of isolation from each other it may be that there is a separate device analyzer present in each intranet device analyzer A A for web services network and device analyzer B B for production network . In some embodiments each device analyzer may perform analysis of unauthorized devices for its intranet separately. In other embodiments there may be a central device analyzer that these device analyzers report to. In some embodiments each device analyzer may send information about unauthorized device analysis to object level storage . Turning now to the next figures they describe in more detail techniques that may be used to determine whether a device is unauthorized.

Information about the rack as a whole may be used to determine whether there is a possibly unauthorized device contained within or connected to the rack. For example rack may have a finite amount of space in which to hold computers it may have a set number of slots to hold computers that are the same size as computer A A. So if switch is connected to more computers than there is space for in the rack that may indicate that there is an unauthorized device connected to switch . The amount of devices that may fit into a given space may vary based on the size of the devices. For example a rack that has 10U of space a unit of measurement of device height may have space for 10 1U servers 5 2U servers or some combination thereof.

It may also be that a rack generally comprises computers that are all of the same make and or model. So if there is a computer connected to switch that differs in make and or model from the other computers in rack this may indicate that this different computer is unauthorized. A way to do this may involve an analysis of MAC addresses of the computers in rack . MAC addresses may be issued to computer makers in a known manner so that two computer makers do not give two different computers the same MAC address. So using information on which makers assign which range of MAC addresses this technique may involve determining whether all computers in rack are assigned to a range of MAC addresses that is issued by a single computer maker.

This technique of identifying an unauthorized device based on it being a different make or model of other computers in rack may be distinguished from the techniques for identifying unauthorized devices in a homogeneous environment as discussed above. The homogeneous environment techniques generally look at the entire network e.g. an intranet without regard to placement of a device within that intranet. In contrast here placement affects whether a device should be homogeneous with other devices or not. Two racks placed next to each other and connected to the same switch may contain different types of computers. So here determining an unauthorized device further involves determining which rack that device is physically located in.

Another technique for identifying unauthorized devices in rack may include analyzing the VM instances running on rack e.g. VM instance A A . An unauthorized device may not be limited to a physical device but may also include VM instances. Here each VM instance running on rack may be analyzed and determined if it is accounted for in a management system e.g. there is an entry for that VM instance in a VM instance management system that directs computers in web services platform to start stop or perform other operations on or for VM instances where it is accounted for in a management system that may indicate that the VM instance is authorized . Where it is not accounted for in a management system that may indicate that the VM instance is unauthorized e.g. someone directly started that VM instance on a computer so starting it was not validated by the management system .

In some embodiments the lack of an entry for a VM instance in a management system may indicate that the VM instance is unauthorized. This may be different from the case of physical devices where there may be a delay between when a physical device is connected to the network and when it is identified in a management system. This may be because the management system itself directs the creation of VM instances so a VM instance should not be running unless the management system knows about it and directed its creation.

In other embodiments there may be decentralized creation of a VM instance so there may be a delay between when the VM instance is created and when it is identified in a management system. In these situations the lack of a VM instance being noted in a management system itself may not indicate that the VM instance is unauthorized but determining whether it is unauthorized may involve further investigation such as waiting a predetermined amount of time to see if the VM instance is noted in a management system before determining that it is unauthorized for being absent from the management system. These techniques applied to identifying an unauthorized device based on the characteristics of the rack in which it is contained or otherwise connected to are described in more detail with respect to the operating procedures of .

As depicted in switch A A and switch B B are connected by communications link . Communications link may be a wired Ethernet link between a physical port of each switch. In other embodiments two devices may be connected via a WiFi link a Bluetooth link or another network communications protocol link. In some embodiments each of switch A A and switch B B may have multiple communications ports e.g. multiple physical ports for wired connections or multiple WiFi chips for separate simultaneous WiFi connections . Where that is the case switch A A and switch B B may have multiple connections with each other such as to provide backup in case one connection fails.

Information about the two devices together may provide information about unauthorized devices in addition to determining information about unauthorized devices from one of the two devices alone. For example it may be that switch A A has a connection in half duplex operation. Alone this may be fine because the switch may have a valid reason for being connected to another device via half duplex operation. However if that connection is supposed to be made to switch B B and if it is standard practice in this network for switches to be connected together via a full duplex connection this may indicate that there is an unauthorized device located between the two switches e.g. there may be an unauthorized hub located between the two switches because hubs usually communicate via a half duplex connection .

Therefore while looking at switch A A alone may not provide information to identify a possible unauthorized device looking at switch A A in concert with its neighboring device switch B B and the communications link between the two may provide information to identify a possibly unauthorized device. These applied techniques identifying an unauthorized device based on two devices connected with each other are described in more detail with respect to the operating procedures of .

It may be appreciated that there are embodiments that do not implement all of the operating procedures depicted in and or implement the depicted operating procedures in a different order than is depicted. Regarding the former for example there may be embodiments that operate on a single device and so omit operations and which generally involve enumerating a plurality of devices and traversing this enumeration to analyze each device to determine whether it is abnormal. Regarding embodiments that implement the depicted operating procedures in a different order than is depicted for example there may be embodiments that implement operation of before operation .

The operating procedures of begin with operation and move to operation . Operation depicts enumerating the devices on the network. These devices may comprise a combination of a computing node a virtual machine VM instance a switch a router a hub a firewall device and a load balancer. In some embodiments this may comprise determining the devices on the network from a management system that manages the presence of the devices on a network. In other embodiments an unauthorized device may not be present in the management system and this may comprise determining each device that has been assigned an IP address from an entity on the network that assigns IP addresses and a device may be assigned multiple IP addresses .

Still there may be devices that are not assigned IP addresses such as hubs. So a further step in enumeration may involve traversing the network topology by identifying all neighboring devices of each device where if a device is connected to the network it will be connected to a known device with some number of neighboring devices connecting the two . In some embodiments operation may comprise identifying a plurality of devices in the computer network. In some embodiments operation may also comprise monitoring a plurality of heterogeneous devices connected to the computer network the computer network permitting a plurality of users to connect heterogeneous devices to the computer network. After operation the operating procedures of move to operation .

Operation is reached from operation or from operation where it is determined that there is an additional device in the enumeration of devices determined in operation to test. Operation depicts selecting a device from the enumeration of devices determined in operation . This may comprise maintaining a list of the enumerated devices in a file and traversing the list starting with the first device contained within the file and proceeding until there are no more devices listed as determined in operation . After operation the operating procedures of move to operation .

Operation depicts testing the device selected in operation . In some embodiments testing the device may involve performing the operating procedures of one or more of . In some embodiments operation may comprise analyzing a first device of the plurality of devices to determine whether the first device is authorized to be connected to the network based at least in part on the first device and another of the plurality of devices.

In some embodiments operation may comprise identifying a change to a network configuration relating to a first device of a plurality of heterogeneous devices connected to the computer network and determining whether a second device that has been connected to the computer network is unauthorized to connect to the computer network based at least in part on the identified change to the network configuration of the first device of the plurality of heterogeneous devices connected to the computer network. After operation the operating procedures of move to operation .

Operation depicts determining whether testing the device in operation indicates that the device is unauthorized or otherwise abnormal. For example where multiple of these techniques of the operating procedures of are used each of these techniques may be used to assign a score indicative of whether the first device is unauthorized and a total score may be determined that indicates a likelihood that the device is unauthorized e.g. the device is considered unauthorized when the score is above a predetermined threshold amount . In other embodiments where any one of the techniques identifies the device as rogue this may cause the system to identify the device as rogue regardless of whether all other techniques identify the device as authorized. In some embodiments determining a score may comprise performing a plurality of types of analyses that identify whether a first device is authorized to be connected to the network each type of analysis being performed to determine a score and determining that the first device is unauthorized to connect to the network when a combination of the scores of each type of analysis is above a predetermined threshold value.

Where in operation it is determined that testing the device indicates that the device is unauthorized or otherwise abnormal the operating procedures of move to operation . Instead where in operation it is determined that testing the device indicates that the device is authorized or otherwise normal the operating procedures of move to operation .

Operation is reached from operation where in operation it is determined that testing the device indicates that the device is unauthorized or otherwise abnormal. Operation depicts flagging the device. In some embodiments flagging a device may comprise performing a task based on determining that the device is unauthorized such as sending an indication to an administrator to further investigate the device. In some embodiments the device may be disconnected from the network e.g. an Internet Protocol IP address assigned to it may be revoked or its neighboring devices may be instructed not to communicate with it or to not communicate along a communications link that the rogue device has access to until an administrator investigates the device.

In some embodiments operation may comprise in response to determining that the first device is unauthorized to be connected to the network storing an indication that the first device is unauthorized to be connected to the network. In some embodiments operation may comprise disconnecting the first device from the network and or alerting an administrator of the network that the first device is unauthorized. For instance it may be that the unauthorized device is benign like an Internet connected television and so an alert to an administrator or even a more minor action is appropriate. After operation the operating procedures of move to operation .

Operation is reached from operation or from operation where it is determined that testing the device indicates that the device is authorized or otherwise normal. Operation depicts determining whether there is another device to test. In some embodiments where the devices on the network are enumerated into a list contained within a file such as described with respect to operation this may comprise determining whether there is another device listed there is another device to test or the end of the file or list has been reached there is not another device to test .

Where in operation it is determined that there is another device in the enumeration of devices determined in operation to test the operating procedures of return to operation . Instead where in operation it is determined that there is not another device to test the operating procedures of move to operation where the operating procedures of end. If operation is reached and a particular device that was tested in operation is not flagged as unauthorized or otherwise abnormal this may indicate that the device is considered to be authorized.

The operating procedures of begin with operation and move to operation . Operation depicts determining a Media Access Control MAC address of a device. For instance a device analyzer may send a ping command to a device where the device will respond with its MAC address along with possibly other information . Where a device has more than one MAC address e.g. it has more than one network adapter operation may comprise determining each MAC address for a device. It may be that the device self reports an incorrect MAC address and there are techniques for mitigating against this disclosed herein. After operation the operating procedures of move to operation .

Operation depicts determining whether the MAC address determined in operation is authorized. In some embodiments a management system for the network may maintain a list of authorized devices along with their MAC addresses. In these embodiments operation may comprise determining whether the MAC address or addresses for the device identified in operation is found in this list of MAC addresses of authorized devices. In some embodiments operation may comprise determining whether a MAC address of a first device is stored by a computing node that maintains a list of MAC addresses for authorized devices in the network.

In some embodiments the system may account for a lag between when a device is added to a network and when it may be recognized by the management system. In such embodiments a device analyzer may wait a period of time and then re analyze the device. This may comprise after determining that the MAC address of a first device is not stored by a computing node that maintains the list of MAC addresses for authorized devices in the network waiting a predetermined amount of time and after waiting the predetermined amount of time determining that the first device is unauthorized to be connected to the network where the MAC address of the first device is still not stored by the computing node that maintains the list of MAC addresses for authorized devices in the network. In other embodiments there may be information available about when a device first connects to the network such as a time at which it obtained an IP address and that time may be used as a starting point for determining how long a lag until an authorized device is recognized by the management system should last.

Where it is determined that the device is authorized the operating procedures of move to operation . Instead where it is determined that the device is unauthorized the operating procedures of move to operation .

Operation is reached from operation where it is determined that the MAC address is authorized. Operation depicts determining whether the MAC address has already been seen by device analyzer A A or device analyzer B B. In some embodiments testing the devices of the network for authorization may be performed en masse. As each device is analyzed it may be noted that its corresponding MAC address has been encountered. Where a new device is analyzed and its MAC address has already been noted this may indicate that the MAC address has already been seen. In general MAC addresses are unique so two devices reporting the same MAC address may indicate that one of the devices is spoofing its MAC address possibly because it is unauthorized . In some embodiments operation may comprise determining that the first device is unauthorized to be connected to the network when a MAC address of a first device is the same as a MAC address of a second device of a plurality of devices.

Where it is determined that the MAC address has not already been seen the operating procedures of move to operation . Instead where it is determined that the MAC address has already been seen the operating procedures of move to operation .

Operation is reached from operation where it is determined that the MAC address has not already been seen. Operation depicts determining whether the first device is located in a proper place on the network. For instance a particular device may be authorized for web services network rather than production network but it may be connected to the latter. This would indicate that it is not located in a proper place on the network. In some scenarios this may be relatively benign an administrator for the web services network side of web services platform may have connected his or her laptop to the production network side of web services platform . In other scenarios this may indicate that there is a malicious unauthorized device on the network where the attacker had a flaw in its attack by connecting the device to the wrong intranet within the network.

Where it is determined that the device is located in a proper place on the network this may indicate that the device is authorized according to the tests of the operating procedures of . Then the operating procedures of move to operation where the operating procedures of end. Instead where it is determined that the device is not located in a proper place on the network the operating procedures of move to operation .

Operation is reached from operation where it is determined that the MAC address is unauthorized. Operation depicts flagging the device. In some embodiments operation may be implemented in a similar manner as operation of FIG. . After operation the operating procedures of move to operation where the operating procedures of end.

Operation is reached from operation where it is determined that the MAC address has already been seen. Operation depicts determining a device to flag among the devices that share a MAC address. For example this may comprise further analyzing the devices such as by performing the operating procedures of one or more of to determine which is more likely to be unauthorized or by determining to flag all devices that share a MAC address e.g. storing an indication in a memory that each of the devices is or may be unauthorized to connect to the network . In some embodiments operation may comprise flagging the first device upon determining that it is more likely that the first device is unauthorized to be connected to the network than that the second device is unauthorized to be connected to the network. After operation the operating procedures of move to operation .

Operation depicts flagging the device determined in operation . In some embodiments operation may be implemented in a similar manner as operation of . After operation the operating procedures of move to operation where the operating procedures of end.

Operation is reached from operation where it is determined that the device is not in a proper place on the network. Operation depicts flagging the device. In some embodiments operation may be implemented in a similar manner as operation of . After operation the operating procedures of move to operation where the operating procedures of end.

The operating procedures of begin with operation and move to operation . Operation depicts determining a device s neighbors. In some embodiments this may comprise maintaining a list of devices as they are added to the network to a management system. While this list of devices may not include unauthorized devices as unauthorized devices may not be listed in the management system this approach may still aid in identifying unauthorized devices. This approach may be used to determine if there is a device located between a device and what the management system has listed as that device s neighbor e.g. the management system may say that a device should be connected to a particular switch on a particular communications port of that device and if that is not what is really present that may indicate that there is an unauthorized device present .

In other embodiments this may comprise enumerating the communications ports of a device to determine which devices it is connected to. This may be effectuated for example by executing an agent process on the device that performs this task and reports the results back to the device analyzer. In other embodiments this may involve using a link layer discovery protocol LLDP for a device to determine the device s neighbors. After operation the operating procedures of move to operation .

Operation is reached from operation or from operation where it is determined that there is an additional neighbor to test from the neighbors determined in operation . Operation depicts selecting a neighboring device determined in operation . This may comprise for example maintaining a file that contains a list of the devices determined in operation and selecting the first device in the list that has not already been selected in a previous iteration of operation . After operation the operating procedures of move to operation .

Operation depicts determining if the actual information for the device and its neighbor matches what it should be. This may comprise retrieving information about both the device and its neighbor such as a speed of a connection e.g. 10 gigabits sec 1 gigabit sec 100 megabits sec or a type of connection e.g. half duplex or full duplex and also determining what this information should be. For example if both the device and its neighbor are configured to communicate at 10 Gb sec on the communications ports they are using and the communications link is 1 Gb sec then it is likely that there is an unauthorized device on that communications link between the device and its neighbor.

Similarly if both the device and its neighbor are switches it may be determined that switches usually communicate with each other via a full duplex communications link. And if that communications link is actually at half duplex then that may indicate that there is an unauthorized device on the communications link between the two devices. For example it may be that hubs communicate at half duplex speed so this may indicate that not only is there an unauthorized device but also that this unauthorized device may be a hub. In some embodiments operation may comprise determining a characteristic of an actual type of communications link between a first device and a second device of the plurality of devices differs from a characteristic of a type of communications link that should be present between the first device and the second device. This characteristic may be whether the connection is full duplex or half duplex or a speed of the connection.

In other embodiments where a device s neighbor s MAC address at a previous time is known it may be compared against the neighbor s current MAC address. Where that MAC address has changed that may indicate that the neighbor device is unauthorized or something benign such as the neighbor device s motherboard failed and was replaced .

Where in operation it is determined that the actual information for the device and its neighbor matches what it should be the operating procedures of move to operation . Instead where in operation it is determined that the actual information for the device and its neighbor does not match what it should be the operating procedures of move to operation .

Operation is reached from operation where it is determined that the actual information for the device and its neighbor matches what it should be. Operation depicts determining whether there is an additional neighbor to test from the neighbors determined in operation . Where the set of neighbors is maintained in a list in a file that is traversed in order this may comprise determining whether there is a subsequent entry in the list for another neighbor which would indicate that there is an additional neighbor to test or that the end of the list has been reached which would indicate that there is not an additional neighbor to test .

Where in operation it is determined that there is an additional neighbor to test the operating procedures of return to operation . Instead where in operation it is determined that there is not an additional neighbor to test the operating procedures of move to operation where the operating procedures of end. This may indicate that the device is authorized according to the tests of the operating procedures of .

Operation is reached from operation where it is determined that the actual information for the device and its neighbor does not match what it should be. Operation depicts flagging the device and or its neighbor. In some embodiments this may comprise flagging the device alone flagging the device and its neighbor or indicating that there appears to be a device between the device and its neighbor that is to be flagged. In some embodiments the act of flagging the device may be implemented in a similar manner as operation of . After operation the operating procedures of move to operation where the operating procedures of end.

The operating procedures of begin with operation and move to operation . Operation depicts determining the network topology. In some embodiments the network topology may be predetermined and maintained by a management system as devices are added to or removed from the network. In other embodiments a network mapping process may be effectuated to determine the network topology such as by executing an nmap network mapping process on the network. After operation the operating procedures of move to operation .

Operation depicts determining whether the first device is properly connected to the layers of the network topology. For example the network may comprise an aggregation layer that aggregates sessions entering or leaving the network and may perform roles such as load balancing and providing firewall services. The network may also comprise a core layer which may connect aggregation layers in multiple data centers of a network. In some embodiments it may be determined that a device is or is not connected to the proper layer s in the network topology. For example a switch in a rack may be connected to an aggregation layer which may be interpreted as the switch being properly connected to the layers of the network topology. Or the switch may be connected to a different layer which may be interpreted as the switch being improperly connected to the layers of the network topology. In some embodiments operation may comprise determining whether a first device is connected to a proper layer of a network topology of the network.

Where in operation it is determined that the device is properly connected to the layers of the network topology the operating procedures of move to operation where the operating procedures of end. This may indicate that the device is authorized according to the tests of the operating procedures of . Instead where in operation it is determined that the device is not properly connected to the layers of the network topology the operating procedures of move to operation .

Operation is reached from operation where it is determined that the device is not properly connected to the layers of the network topology. Operation depicts flagging the device. In some embodiments operation may be implemented in a similar manner as operation of . After operation the operating procedures of move to operation where the operating procedures of end.

The operating procedures of begin with operation and move to operation . Operation depicts enumerating the devices in a rack of devices. In some embodiments this may comprise determining each device in the rack that is connected to a switch that handles data communications that enter and exit the rack. After operation the operating procedures of move to operation .

Operation depicts determining whether the number of devices connected to a switch in the rack is greater than a threshold number of devices. For example there may be physical space in a rack to hold a fixed number of devices given the size of a server that goes in the rack. If there are more identified devices for the rack than there is space for devices this may indicate that there is an extra unauthorized device attached to the rack such as to the switch for the rack somehow. In some embodiments operation may comprise determining whether a number of devices connected to a switch of a rack of devices of a plurality of devices is above a predetermined threshold number wherein a first device that is being analyzed is connected to a switch of the rack.

Where in operation it is determined that the number of devices connected to a switch in the rack is not greater than a threshold number of devices the operating procedures of move to operation . Instead where it is determined in operation that the number of devices connected to a switch in the rack is greater than a threshold number of devices the operating procedures of move to operation .

Operation is reached from operation where it is determined that the number of devices connected to a switch in the rack is not greater than a threshold number of devices. Operation depicts determining whether a characteristic of a device in the rack differs from another device in the rack. It may be that in a given network it is common for racks to contain all computers of one type and from one manufacturer though for example a switch in a rack may be from a different manufacturer than the server computers in the rack . Where there is a device in the rack that is of a different make or model from the other devices in the rack this may indicate that this differing device is unauthorized.

A way to determine the type of devices is to evaluate their MAC addresses. Commonly manufacturers will be issued exclusive use of ranges of MAC addresses to assign to computers they build. That way two different manufacturers will not accidentally assign the same MAC address to two different devices. So the MAC addresses of the devices in the rack may be evaluated to determine if they all indicate devices from the same manufacturer. In some embodiments operation may comprise determining whether a type of a first device is the same as the type of a second device of a plurality of devices the first device and the second device being connected to a switch of a rack of devices of the plurality of devices.

Other characteristics to evaluate may involve information about what devices are expected to be in a rack. For example a management system that manages execution of a rack e.g. a management system of web services platform of that manages execution of the devices in computer rack A A may provide device analyzer A A with information about what devices are expected in a rack.

For example this information may indicate that a particular rack should have one type of servers. And where the rack has two other types of servers the presence of these other types of servers may indicate that the other types of servers are not authorized to be connected in that location. Or the management system may provide device analyzer A A with a whitelist range of MAC addresses that may be in a rack. Then where device analyzer A A determines that there is a device in the rack that has a MAC address not contained in the whitelist device analyzer A may flag this device as being unauthorized.

Where in operation it is determined that a characteristic of a device in the rack does not differ from another device in the rack the operating procedures of move to operation . Instead where in operation it is determined that a characteristic of a device in the rack differs from another device in the rack the operating procedures of move to operation .

Operation is reached from operation where it is determined that a characteristic of a device in the rack does not differ from another device in the rack. Operation depicts determining whether each virtual machine VM hosted on the rack is noted in a management system. In contrast to physical devices which may be installed on the network and then noted to a management system the creation of VMs may be regulated by a management system. So for a VM to be created a management system directs that to occur. Where this is the case if an executing VM is not noted in a corresponding management system this may indicate that this VM is unauthorized. This operation may be performed for each VM executing on a physical device in the rack.

Where in operation it is determined that each virtual machine VM hosted on the rack is noted in a management system the operating procedures of move to operation . This may indicate that the devices of the rack are authorized according to the tests of the operating procedures of . Instead where in operation it is determined that a VM hosted on the rack is not noted in a management system the operating procedures of move to operation .

Operation is reached from operation where it is determined in operation that the number of devices connected to a switch in the rack is greater than a threshold number of devices. Operation depicts flagging the rack. In some embodiments operation may be implemented in a similar manner as operation of but for a rack instead of a device because it appears that there is an extra device attached to the rack though which device this is specifically may not yet be identified. After operation the operating procedures of move to operation where the operating procedures of end.

Operation is reached from operation where in operation it is determined that a characteristic of a device in the rack differs from another device in the rack. Operation depicts flagging the device. In some embodiments operation may be implemented in a similar manner as operation of . After operation the operating procedures of move to operation where the operating procedures of end.

Operation is reached from operation where in operation it is determined that a VM hosted on the rack is not noted in a management system. Operation depicts flagging the VM. In some embodiments operation may be implemented in a similar manner as operation of but for a VM rather than a device. After operation the operating procedures of move to operation where the operating procedures of end.

It may be appreciated that the operating environments of may be used to implement aspects of the operating environment of . For example web services platform and its components may be implemented in web services platform of . Likewise Internet of may be wide area network of and device analyzer A A device analyzer B B web server and object level storage may each be customer computing system of and or computer of .

Turning now to details of this figure depicts an example of a suitable computing environment in which embodiments described herein may be implemented. A cloud service provider such as web services platform may configure the illustrated computing environment to host virtual clouds of entities and to enable communication paths between these virtual clouds that may otherwise be isolated. In particular is a system and network diagram that shows an illustrative operating environment that includes a web services platform for implementing virtual clouds and for providing on demand access to compute resources such as virtual machine instances. Web services platform can provide compute resources for executing applications on a permanent or an as needed basis and may be configured as a private network. These compute resources may include various types of resources such as data processing resources data storage resources data communication resources and the like. Each type of compute resource may be general purpose or may be available in a number of specific configurations. For example data processing resources may be available as virtual machine instances. The instances may be configured to execute applications including web servers application servers media servers database servers and the like. Data storage resources may include file storage devices block storage devices and the like.

Each type or configuration of compute resource may be available in different sizes such as large resources consisting of many processors large amounts of memory and or large storage capacity and small resources consisting of fewer processors smaller amounts of memory and or smaller storage capacity. Entities may choose to allocate a number of small processing resources as web servers and or one large processing resource as a database server for example.

The compute resources provided by web services platform may be enabled by one or more datacenters A N which may be referred herein singularly as datacenter or in the plural as datacenters . Datacenters may be facilities that house and operate computer systems and associated components and may include redundant and backup power communications cooling and security systems. Datacenters may be located in a same geographical area such as in a same facility and may be interconnected using private networks such as high speed fiber optic networks controlled and managed by a service provider of web services platform . Datacenters may also be distributed across geographically disparate locations and may be interconnected in part using public networks such as the Internet. One illustrative configuration for datacenter that implements the concepts and technologies disclosed herein is described below with regard to .

Entities of web services platform may access the compute resources provided by datacenters over a wide area network WAN . Although a WAN is illustrated in it should be appreciated that a local area network LAN the Internet or any other networking topology known in the art that connects datacenters to remote entities and other users may be utilized. It should also be appreciated that combinations of such networks may also be utilized.

An entity or other entities that are customers of web services platform may utilize a customer computing system to access the compute resources provided by datacenters . Customer computing system comprises a computer capable of accessing web services platform such as a server computer a desktop or laptop personal computer a tablet computer a wireless telephone a PDA an e reader a game console a set top box or any other computing node.

As is described in greater detail below customer computing system may be utilized to configure aspects of the compute resources provided by web services platform . In this regard web services platform may provide a web interface through which aspects of its operation may be configured through the use of a web browser application program executing on customer computing system . Alternatively a stand alone application program executing on customer computing system may access an application programming interface API not shown exposed by web services platform for performing the configuration operations. Other mechanisms for configuring the operation of web services platform including launching new virtual machine instances on web services platform may also be utilized.

According to embodiments disclosed herein capacities of purchased compute resources provided by web services platform can be scaled in response to demand. In this regard scaling refers to the process of instantiating which may also be referred to herein as launching or creating or terminating which may also be referred to herein as de scaling instances of compute resources in response to demand.

Web services platform may also be configured with a deployment component to assist entities in the deployment of new instances of compute resources. The deployment component may receive a configuration from an entity that may include data describing how new instances should be configured. For example the configuration may specify one or more applications or software components that should be installed in new instances provide scripts and or other types of code to be executed in new instances provide cache warming logic specifying how an application cache should be prepared and other types of information. The deployment component utilizes the entity provided configuration and cache warming logic to launch configure and prime new instances of compute resources.

The example datacenter shown in may include several server computers A N which may be referred herein singularly as server computer or in the plural as server computers for providing compute resources for hosting virtual clouds and for executing applications. Server computers may be standard tower or rack mount server computers configured appropriately for providing the compute resources described above. For instance in one implementation server computers may be configured to provide instances A N of compute resources.

Instances A N which may be referred herein singularly as instance or in the plural as instances may be virtual machine instances. As known in the art a virtual machine instance is an instance of a software implementation of a machine i.e. a computer that executes programs like a physical machine. In the example of virtual machine instances each server may be configured to execute an instance manager capable of executing the instances. Instance manager may be a hypervisor or another type of program configured to enable the execution of multiple instances on a single server for example. As discussed above each of instances may be configured to execute all or a portion of an application.

It should be appreciated that although the embodiments disclosed herein are described primarily in the context of virtual machine instances other types of instances can be utilized with the concepts and technologies disclosed herein. For instance the technologies disclosed herein may be utilized with instances of storage resources instances of data communications resources and with other types of resources. The embodiments disclosed herein may also execute all or a portion of an application directly on a computer system without utilizing virtual machine instances.

Datacenter shown in may also include a server computer reserved for executing software components for managing the operation of datacenter server computers and instances . In particular server computer may execute a management component . As discussed above working between . and an entity of web services platform may utilize customer computing system to access management component to configure various aspects of the operation of web services platform and instances purchased by the entity. For example the entity may purchase instances and make changes to the configuration of the instances. The entity may also specify settings regarding how the purchased instances are to be scaled in response to demand. The entity may also provide requests to launch instances to management component .

As also described briefly above an auto scaling component may scale instances based upon rules defined by an entity of web services platform . For example auto scaling component may allow an entity to specify scale up rules for use in determining when new instances should be instantiated and scale down rules for use in determining when existing instances should be terminated.

As discussed briefly above datacenter may also be configured with a deployment component to assist entities in the deployment of new instances of compute resources. Deployment component may receive a configuration from an entity that includes data describing how new instances should be configured. For example the configuration may specify one or more applications that should be installed in new instances provide scripts and or other types of code to be executed for configuring new instances provide cache warming logic specifying how an application cache should be prepared and other types of information.

Deployment component may utilize the entity provided configuration and cache warming logic to configure prime and launch new instances . The configuration cache warming logic and other information may be specified by an entity using management component or by providing this information directly to deployment component . Other mechanisms may also be utilized to configure the operation of deployment component .

In the example datacenter shown in an appropriate LAN may be utilized to interconnect server computers A N and server computer . LAN may also be connected to WAN illustrated in . It should be appreciated that the network topology illustrated in has been greatly simplified and that many more networks and networking devices may be utilized to interconnect the various computing systems disclosed herein. Appropriate load balancing devices or software modules may also be utilized for balancing a load between each of datacenters A N between each of server computers A N in each datacenter and between instances purchased by each entity of web services platform . These network topologies and devices should be apparent to those skilled in the art.

It should be appreciated that datacenter described in is merely illustrative and that other implementations may be utilized. In particular functionality described herein as being performed by management component auto scaling component and deployment component may be performed by one another may be performed by other components or may be performed by a combination of these or other components. Additionally it should be appreciated that this functionality may be implemented in software hardware or a combination of software and hardware. Other implementations should be apparent to those skilled in the art.

The computer architecture shown in illustrates a conventional server computer workstation desktop computer laptop tablet network appliance PDA e reader digital cellular phone or other computing node and may be utilized to execute any aspects of the computers described herein such as to implement the operating procedures of .

Computer may include a baseboard or motherboard which is a printed circuit board to which a multitude of components or devices may be connected by way of a system bus or other electrical communication paths. One or more central processing units CPUs may operate in conjunction with a chipset . CPUs may be standard programmable processors that perform arithmetic and logical operations necessary for the operation of computer .

CPUs may perform the necessary operations by transitioning from one discrete physical state to the next through the manipulation of switching elements that differentiate between and change these states. Switching elements may generally include electronic circuits that maintain one of two binary states such as flip flops and electronic circuits that provide an output state based on the logical combination of the states of one or more other switching elements such as logic gates. These basic switching elements may be combined to create more complex logic circuits including registers adders subtractors arithmetic logic units floating point units and the like.

Chipset may provide an interface between CPUs and the remainder of the components and devices on the baseboard. Chipset may provide an interface to a random access memory RAM used as the main memory in computer . Chipset may further provide an interface to a computer readable storage medium such as a read only memory ROM or non volatile RAM NVRAM not shown for storing basic routines that may help to start up computer and to transfer information between the various components and devices. ROM or NVRAM may also store other software components necessary for the operation of computer in accordance with the embodiments described herein.

Computer may operate in a networked environment using logical connections to remote computing nodes and computer systems through local area network LAN . Chipset may include functionality for providing network connectivity through a network interface controller NIC such as a gigabit Ethernet adapter. NIC may be capable of connecting the computer to other computing nodes over LAN . It should be appreciated that multiple NICs may be present in computer connecting the computer to other types of networks and remote computer systems.

Computer may be connected to a mass storage device that provides non volatile storage for the computer. Mass storage device may store system programs application programs other program modules and data which have been described in greater detail herein. Mass storage device may be connected to computer through a storage controller connected to chipset . Mass storage device may consist of one or more physical storage units. Storage controller may interface with the physical storage units through a serial attached SCSI SAS interface a serial advanced technology attachment SATA interface a fiber channel FC interface or other type of interface for physically connecting and transferring data between computers and physical storage units.

Computer may store data on mass storage device by transforming the physical state of the physical storage units to reflect the information being stored. The specific transformation of a physical state may depend on various factors and on different implementations of this description. Examples of such factors may include but are not limited to the technology used to implement the physical storage units and whether mass storage device is characterized as primary or secondary storage and the like.

For example computer may store information to mass storage device by issuing instructions through storage controller to alter the magnetic characteristics of a particular location within a magnetic disk drive unit the reflective or refractive characteristics of a particular location in an optical storage unit or the electrical characteristics of a particular capacitor transistor or other discrete component in a solid state storage unit. Other transformations of physical media are possible without departing from the scope and spirit of the present description with the foregoing examples provided only to facilitate this description. Computer may further read information from mass storage device by detecting the physical states or characteristics of one or more particular locations within the physical storage units.

In addition to mass storage device described above computer may have access to other computer readable storage media to store and retrieve information such as program modules data structures or other data. It should be appreciated by those skilled in the art that computer readable storage media can be any available media that provides for the storage of non transitory data and that may be accessed by computer .

By way of example and not limitation computer readable storage media may include volatile and non volatile transitory computer readable storage media and non transitory computer readable storage media and removable and non removable media implemented in any method or technology. Computer readable storage media includes but is not limited to RAM ROM erasable programmable ROM EPROM electrically erasable programmable ROM EEPROM flash memory or other solid state memory technology compact disc ROM CD ROM digital versatile disk DVD high definition DVD HD DVD BLU RAY or other optical storage magnetic cassettes magnetic tape magnetic disk storage other magnetic storage devices or any other medium that can be used to store the desired information in a non transitory fashion.

Mass storage device may store an operating system utilized to control the operation of the computer . According to one embodiment the operating system comprises a version of the LINUX operating system. According to another embodiment the operating system comprises a version of the WINDOWS SERVER operating system from the MICROSOFT Corporation. According to further embodiments the operating system may comprise a version of the UNIX operating system. It should be appreciated that other operating systems may also be utilized. Mass storage device may store other system or application programs and data utilized by computer such as management component and or the other software components described above.

Mass storage device or other computer readable storage media may also be encoded with computer executable instructions which when loaded into computer transforms the computer from a general purpose computing system into a special purpose computer capable of implementing the embodiments described herein. These computer executable instructions transform computer by specifying how CPUs transition between states as described above. Computer may have access to computer readable storage media storing computer executable instructions which when executed by computer may perform operating procedures depicted in .

Computer may also include an input output controller for receiving and processing input from a number of input devices such as a keyboard a mouse a touchpad a touch screen an electronic stylus or other type of input device. Similarly input output controller may provide output to a display such as a computer monitor a flat panel display a digital projector a printer a plotter or other type of output device. It will be appreciated that computer may not include all of the components shown in may include other components that are not explicitly shown in or may utilize an architecture completely different than that shown in .

As described herein a computing node may be a physical computing node such as computer of . A computing node may also be a virtual computing node such as a virtual machine instance or a session hosted by a physical computing node where the computing node is configured to host one or more sessions concurrently.

It should be appreciated that the network topologies illustrated in the figures have been greatly simplified and that many more networks and networking devices may be utilized to interconnect the various computing systems disclosed herein. These network topologies and devices should be apparent to those skilled in the art.

It should also be appreciated that the systems in the figures are merely illustrative and that other implementations might be used. Additionally it should be appreciated that the functionality disclosed herein might be implemented in software hardware or a combination of software and hardware. Other implementations should be apparent to those skilled in the art. It should also be appreciated that a server gateway or other computing node may comprise any combination of hardware or software that can interact and perform the described types of functionality including without limitation desktop or other computers database servers network storage devices and other network devices PDAs tablets cellphones wireless phones pagers electronic organizers Internet appliances television based systems e.g. using set top boxes and or personal digital video recorders and various other consumer products that include appropriate communication capabilities. In addition the functionality provided by the illustrated modules may in some embodiments be combined in fewer modules or distributed in additional modules. Similarly in some embodiments the functionality of some of the illustrated modules may not be provided and or other additional functionality may be available.

Each of the operations processes methods and algorithms described in the preceding sections may be embodied in and fully or partially automated by code modules executed by one or more computers or computer processors. The code modules may be stored on any type of non transitory computer readable medium or computer storage device such as hard drives solid state memory optical disc and or the like. The processes and algorithms may be implemented partially or wholly in application specific circuitry. The results of the disclosed processes and process steps may be stored persistently or otherwise in any type of non transitory computer storage such as e.g. volatile or non volatile storage.

The various features and processes described above may be used independently of one another or may be combined in various ways. All possible combinations and sub combinations are intended to fall within the scope of this disclosure. In addition certain method or process blocks may be omitted in some implementations. The methods and processes described herein are also not limited to any particular sequence and the blocks or states relating thereto can be performed in other sequences that are appropriate. For example described blocks or states may be performed in an order other than that specifically disclosed or multiple blocks or states may be combined in a single block or state. The example blocks or states may be performed in serial in parallel or in some other manner. Blocks or states may be added to or removed from the disclosed example embodiments. The example systems and components described herein may be configured differently than described. For example elements may be added to removed from or rearranged compared to the disclosed example embodiments.

It will also be appreciated that various items are illustrated as being stored in memory or on storage while being used and that these items or portions of thereof may be transferred between memory and other storage devices for purposes of memory management and data integrity. Alternatively in other embodiments some or all of the software modules and or systems may execute in memory on another device and communicate with the illustrated computing systems via inter computer communication. Furthermore in some embodiments some or all of the systems and or modules may be implemented or provided in other ways such as at least partially in firmware and or hardware including but not limited to one or more application specific integrated circuits ASICs standard integrated circuits controllers e.g. by executing appropriate instructions and including microcontrollers and or embedded controllers field programmable gate arrays FPGAs complex programmable logic devices CPLDs etc. Some or all of the modules systems and data structures may also be stored e.g. as software instructions or structured data on a computer readable medium such as a hard disk a memory a network or a portable media article to be read by an appropriate drive or via an appropriate connection. The systems modules and data structures may also be transmitted as generated data signals e.g. as part of a carrier wave or other analog or digital propagated signal on a variety of computer readable transmission media including wireless based and wired cable based media and may take a variety of forms e.g. as part of a single or multiplexed analog signal or as multiple discrete digital packets or frames . Such computer program products may also take other forms in other embodiments. Accordingly the present invention may be practiced with other computer system configurations.

Conditional language used herein such as among others can could might may e.g. and the like unless specifically stated otherwise or otherwise understood within the context as used is generally intended to convey that certain embodiments include while other embodiments do not include certain features elements and or steps. Thus such conditional language is not generally intended to imply that features elements and or steps are in any way required for one or more embodiments or that one or more embodiments necessarily include logic for deciding with or without author input or prompting whether these features elements and or steps are included or are to be performed in any particular embodiment. The terms comprising including having and the like are synonymous and are used inclusively in an open ended fashion and do not exclude additional elements features acts operations and so forth. Also the term or is used in its inclusive sense and not in its exclusive sense so that when used for example to connect a list of elements the term or means one some or all of the elements in the list.

While certain example embodiments have been described these embodiments have been presented by way of example only and are not intended to limit the scope of the inventions disclosed herein. Thus nothing in the foregoing description is intended to imply that any particular feature characteristic step module or block is necessary or indispensable. Indeed the novel methods and systems described herein may be embodied in a variety of other forms furthermore various omissions substitutions and changes in the form of the methods and systems described herein may be made without departing from the spirit of the inventions disclosed herein. The accompanying claims and their equivalents are intended to cover such forms or modifications as would fall within the scope and spirit of certain of the inventions disclosed herein.

