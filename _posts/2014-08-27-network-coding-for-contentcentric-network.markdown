---

title: Network coding for content-centric network
abstract: One embodiment of the present invention provides a system for facilitating network coding in an information centric network. During operation, the system sends, from a content consumer node, one or more interests for a plurality of chunks associated with a content object. A respective interest indicates the corresponding chunk using a hierarchically structured variable length identifier which comprises contiguous name components ordered from a most general level to a most specific level. In response, the system then receives a number of network-coded data packets, wherein a respective data packet corresponds to an independent linear combination of all the chunks for the content object. The system subsequently re-constructs the content object based on the received data packets.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09497282&OS=09497282&RS=09497282
owner: PALO ALTO RESEARCH CENTER INCORPORATED
number: 09497282
owner_city: Palo Alto
owner_country: US
publication_date: 20140827
---
The subject matter of this application is related to the subject matter in the following U.S. Pat. No. 8 243 735 entitled SYSTEM FOR FORWARDING PACKETS WITH HIERARCHICALLY STRUCTURED VARIABLE LENGTH IDENTIFIERS USING AN EXACT MATCH LOOKUP ENGINE by inventors Van L. Jacobson and James D. Thornton filed on 15 Dec. 2009 U.S. Pat. No. 8 160 069 entitled SYSTEM FOR FORWARDING A PACKET WITH A HIERARCHICALLY STRUCTURED VARIABLE LENGTH IDENTIFIER by inventors Van L. Jacobson and James D. Thornton filed 23 Sep. 2009 and U.S. Pat. No. 8 204 060 entitled METHOD AND SYSTEM FOR FACILITATING FORWARDING A PACKET IN A CONTENT CENTRIC NETWORK by inventors Van L. Jacobson and James D. Thornton filed on 17 Dec. 2009 the disclosures of which herein are incorporated by reference in their entirety.

The present disclosure relates generally to facilitating data processing in network. More specifically the present disclosure relates to a system and method for facilitating network coding in content centric networks.

The proliferation of the Internet and e commerce continues to fuel revolutionary changes in the network industry. Today a significant number of information exchanges from online movie viewing to daily news delivery retail sales and instant messaging are conducted online. An increasing number of Internet applications are also becoming mobile. However the current Internet operates on a largely location based addressing scheme. The two most ubiquitous protocols the Internet Protocol IP and Ethernet protocol are both based on location based addresses. That is a consumer of content can only receive the content by explicitly requesting the content from an address e.g. IP address or Ethernet media access control MAC address closely associated with a physical object or location. This restrictive addressing scheme is becoming progressively more inadequate for meeting the ever changing network demands.

Recently content centric network CCN architectures have been proposed in the industry. CCN brings a new approach to content transport. Instead of having network traffic viewed at the application level as end to end conversations over which content travels content is requested or returned based on its unique name and the network is responsible for routing content from the provider to the consumer. Note that content includes data that can be transported in the communication system including any form of data such as text images video and or audio. A consumer and a provider can be a person at a computer or an automated process inside or outside the CCN. A piece of content can refer to the entire content or a respective portion of the content. For example a newspaper article might be represented by multiple pieces of content embodied as data packets. A piece of content can also be associated with metadata describing or augmenting the piece of content with information such as authentication data creation date content owner etc.

In CCN content objects and interests are identified by their names which is typically a hierarchically structured variable length identifier HSVLI . When an interest in a piece of content is received at a CCN node a local content cache is checked to see if the content being requested exists. In certain situations however transporting data through a number of CCN nodes and links can be inefficient when multiple copies of an interest are sent out.

One embodiment of the present invention provides a system for facilitating network coding in an information centric network. During operation the system sends from a content consumer node one or more interests for a plurality of chunks associated with a content object. A respective interest indicates the corresponding chunk using a hierarchically structured variable length identifier which comprises contiguous name components ordered from a most general level to a most specific level. In response the system then receives a number of network coded data packets wherein a respective data packet corresponds to an independent linear combination of all the chunks for the content object. The system subsequently re constructs the content object based on the received data packets.

In a variation on this embodiment re constructing the content object based on the received data packets involves determining that at least one more data packet is needed for re constructing a missing chunk and sending a retry interest which indicates the missing chunk.

In a variation on this embodiment the hierarchically structured variable length identifier includes a component which indicates use of network coding and a number of chunks for the content object.

In a variation on this embodiment the hierarchically structured variable length identifier includes a component which indicates whether the corresponding interest is a retry interest.

In a variation on this embodiment the hierarchically structured variable length identifier includes a component which indicates one or more chunks that have already been re constructed.

One embodiment of the present invention provides a system for facilitating network coding at a switching node in an information centric network. During operation the system receives an interest generated by a content consumer node for a chunk associated with a content object. In response to the chunk being locally available and not having been sent previously to a node from which the interest is received the system sends an independent linear combination of the chunk and one or more other chunks associated with the content object to the node from which the interest is received. In response to the chunk not being locally available the system forwards the interest and subsequently caching an independent linear combination of the chunk and other chunks for the content object when such combination is received in response of the forwarded interest.

In a variation on this embodiment the system receives a linear combination of a plurality of chunks for the content object from another node. The system then determines that the received linear combination of chunks is not independent from a locally cached linear combination of chunks and discards the received linear combination of chunks.

In a variation on this embodiment subsequent to sending the independent linear combination of the chunks the system indicates that the chunk has been sent to the node from which the interest is received.

In a variation on this embodiment the system determines a received interest is a detour interest and in response discards the detour interest

Several information centric networking ICN architectures have been proposed to date as alternatives to the existing Internet architecture to enable efficient access to content and services by name independently of their locations. Meanwhile network coding NC has been shown to improve the throughput of information dissemination in networks subject to multi point communication or connectivity disruption. This is attained by encoding data packets in a way that sources and relays can transmit component wise linear combinations of the data packets rather than the individual data packets themselves such that any relay or intended receiver is able to decode the data packets as long as it receives sufficient independent linear combinations of the data packets.

NC can increase the overall performance of ICN in terms of information dissemination. Few proposals however have been advanced to date on the integration of NC and ICN. Furthermore it is usually assumed that all routers support NC.

Embodiments of the present invention facilitate network coded content centric networking NCCN as an example of how NC can be integrated with ICN approaches seamlessly in order to improve the performance of an ICN without requiring all routers to implement NC. NCCN allows Interests and data packets to be processed by normal CCN or named data networking NDN nodes without NC capability as normal CCN or NDN packets. To realize this compatibility NCCN introduces new Name components that represent information required for the use of NC without any change to the structures of Interest and Data packets. The protocol stack of NCCN is designed with minimal changes to normal CCN or NDN stack. NCCN only adds additional steps prior to the basic forwarding and caching strategies of CCN or NDN to enable the use of NC. This implies that existing forwarding strategies and caching strategies designed for CCN or NDN can be used without modification in NCCN.

In general CCN uses two types of messages Interests and Content Objects. An Interest carries the hierarchically structured variable length identifier HSVLI also called the name of a Content Object and serves as a request for that object. If a network element e.g. router receives multiple interests for the same name it may aggregate those interests. A network element along the path of the Interest with a matching Content Object may cache and return that object satisfying the Interest. The Content Object follows the reverse path of the Interest to the origin s of the Interest. A Content Object contains among other information the same HSVLI the object s payload and cryptographic information used to bind the HSVLI to the payload.

The terms used in the present disclosure are generally defined as follows but their interpretation is not limited to such 

As mentioned before an HSVLI indicates a piece of content is hierarchically structured and includes contiguous components ordered from a most general level to a most specific level. The length of a respective HSVLI is not fixed. In content centric networks unlike a conventional IP network a packet may be identified by an HSVLI. For example abcd bob papers ccn news could be the name of the content and identifies the corresponding packet s i.e. the news article from the ccn collection of papers for a user named Bob at the organization named ABCD. To request a piece of content a node expresses e.g. broadcasts an interest in that content by the content s name. An interest in a piece of content can be a query for the content according to the content s name or identifier. The content if available in the network is routed back to it from any node that stores the content. The routing infrastructure intelligently propagates the interest to the prospective nodes that are likely to have the information and then carries available content back along the path which the interest traversed.

In accordance with an embodiment of the present invention a consumer can generate an Interest in a piece of content and then send that Interest to a node in network . The piece of content can be stored at a node in network by a publisher or content provider who can be located inside or outside the network. For example in the Interest in a piece of content originates at node . If the content is not available at the node the Interest flows to one or more nodes coupled to the first node. For example in the Interest flows interest flow to node which does not have the content available. Next the Interest flows interest flow from node to node which again does not have the content. The Interest then flows interest flow to node which does have the content available. The flow of the content then retraces its path in reverse content flows and until it reaches node where the content is delivered. Other processes such as authentication can be involved in the flow of content.

In network any number of intermediate nodes nodes in the path between a content holder node and the Interest generation node node can participate in caching local copies of the content as it travels across the network. Caching reduces the network load for a second subscriber located in proximity to other subscribers by implicitly sharing access to the locally cached content.

We first introduce definitions and notation that will be used in the description of NCCN. Let Fbe a finite field of order q and F m 0 be an m dimensional vector space over F. Consider that a Content Object is split into multiple chunks k k . . . of equal size. We treat each chunk as an element of a finite field F or a vector in F m 0 . For instance each chunk is regarded as a 1024 dimensional vector over Fwhen the size of each chunk is 1024 bytes. We assume the use of groups of content chunks with fixed size n and assume that intersections between any two groups are empty. We also assume that each group has a unique identifier or number.

We note that the number of seen chunks at the node equals dimV. The information of chunks from a given group that are seen at a node is represented by an n dimensional binary vector. For example in the case where n 4 and the first and second chunks in a group are seen the information of the seen or unseen chunks in the group is given by 1 1 0 0 F.

A key design goal in NCCN is to attain compatibility with the normal CCN or NDN architecture in such a way that incremental deployment from CCN or NDN to NCCN is possible. This means that even if some intermediate nodes in the network are normal CCN or NDN nodes that do not support NCCN they can process NCCN Interest and data packets as normal CCN or NDN packets but the producer and consumer can still communicate using network coding. Conversely NCCN nodes can serve Interest and data packets of normal CCN or NDN traffic with producers and consumers communicating without using network coding.

The design of NCCN involves the way in which content is named forwarded and cached in order to take full advantage of network coding NC in the context of CCN and NDN.

To attain maximum compatibility between CCN NDN and NCCN new name components are defined in NCCN that allow NCCN routers to process Interest packets and data packets taking advantage of NC while CCN or NDN routers can process such packets without NC. The packet formats of Interest and data packets in NCCN are the same as those in CCN.

The approach adopted in NCCN for the dissemination and caching of encoded content chunks implements a table of sent flags at each NCCN node. The table of sent flags at a node shows that each content chunk is regarded as seen or unseen to its downstream nodes. By referring to the sent flags each NCCN node controls how to forward or cache incoming packets prior to executing the basic strategy of CCN or NDN. Using this control method based on sent flags NCCN nodes can disseminate encoded content chunks over the network while maintaining the decodability at the consumers.

The markers e.g. the prefix 00 of the sequence number in are control characters in the CCN or NDN architecture. Generally control characters in a Name indicate additional information of the content chunks such as version number or sequence number. We introduce three new markers to add three new Name components.

The NC flag is indicated by the marker A0 in and the value following the marker represents the group size. For example when an Interest has the Name of NCCN in it is a request for a coded chunk in a group of size 0x10 16 where the group includes the chunk with sequence number 0x03. The group can be uniquely determined by the sequence number that originally exists and the group size. Note that by virtue of the NC flag incoming Interest data packets to the intermediate node can be recognized as the NCCN packets or as the CCN NDN packets.

The retry flag is indicated by the marker A1 in . The value following the marker is 0x00 false or 0x01 true . If an Interest has a Name including A1 01 it is a special Interest called a retry Interest for a particular chunk. Otherwise it is just a normal Interest for a coded chunk.

When a consumer transmits an Interest for a coded chunk the information of chunks in the group that have been seen by the consumer is appended to the name. The information of chunks in a given group G seen by the consumer is called the seen information of G and is represented by an n dimensional binary vector v F. In the seen information is indicated by the marker A2. The value following the marker is the hexadecimal value representing v . For example when n 4 and v 1 1 0 0 the seen information value is 0011 0x03.

These new naming components are used to control the behavior of intermediate NCCN nodes and to maintain compatibility with normal CCN or NDN nodes. Although NCCN adds three new name components it does not change the rest of the CCN or NDN Interest packet format. Coded chunks and the information needed to execute network coding operations are included in the payload field of the CCN or NDN data packet format. Given that the name components introduced in NCCN are regarded just as parts of the name in CCN and NDN the interfaces of NCCN nodes remain unchanged from those of CCN or NDN nodes and normal CCN or NDN nodes can serve Interest and data packets of NCCN packets as normal CCN or NDN packets.

The handling of Interest packets in NCCN is similar to that of normal CCN or NDN. When a node receives an Interest for a coded chunk the node generates a data packet including a new coded chunk from cached data packets if available and sends it as the response to the Interest if some conditions are satisfied. Otherwise as normal CCN or NDN the node adds the Interest to the pending Interest table PIT and if the Interest has not been forwarded within a fixed time period the node also forwards the Interest over some faces by referring to the PIT and the forwarding information base FIB according to the basic forwarding strategy.

In NCCN every data packet includes a coded chunk and its coefficient vector in the payload field of the data packet format of CCN or NDN.

Algorithm 1 below describes the caching algorithm of NCCN which essentially works over the basic caching strategy of normal CCN or NDN. As shown in Algorithm 1 the additional step with respect to CCN and NDN is that when the coded chunk of received data Yin group G does not increase the degree of freedom i.e. it does not expand the subspace spanned by coefficient vectors of cached coded chunks for G the node does not cache the data packet and discards it.

Caching arrived data Y including a coded chunk y in group G with coefficient vector v at the node that has t coded chunks y . . . y Fwith coefficient vectors v . . . v Ffor G in its cache 

Every NCCN node has a table of sent flags for each group G that is represented by an n dimensional binary vector v F where the initial value of the vector is 0. The purposes of sent flags are to manage which chunks are seen or unseen by downstream nodes and to decide if the node should respond to an Interest by using coded chunks in its cache. If the sent flag corresponding to a chunk k in G an element of v is 1 it indicates that the node has already generated a coded chunk and has sent out a Data with the Name of k. Then we assume k as the one that is already seen by downstream nodes. Also if the number of cached coded chunks in group G is smaller than the Hamming weight of v we assume that there exist some chunks in G that can newly become seen by downstream nodes by generating and sending out coded chunks from the node.

Algorithm 2 describes the procedure used to respond to an Interest received by an NCCN node or the one pending in its PIT. When a Data packet in a group G arrives and it can be cached by Algorithm 1 the node checks all Interests for coded chunks in G stored in its PIT by Algorithm 2 and tries to respond to one of them.

Responding to an Interest for a chunk k in group G at a node that has t coded chunks in G with sent flags v Fin its cache 

Generating a data packet Y as a response to a pending Interest X in group G at the node that has t coded chunks y . . . y Ffor G 

As shown in Algorithm 2 each NCCN node responds to an Interest for a chunk only if the chunk is already seen or can be seen by downstream nodes. This avoids the unnecessary transmission of coded chunks that do not expand the subspace spanned by coefficient vectors of coded chunks cached in each downstream node.

When a node decides to respond to an Interest and generate a data packet it employs random network coding following the process described in Algorithm 3.

According to Algorithm 3 a node generates a random linear combination of cached coded chunks for G and sends it as the response to the pending Interest. Then if the PIT entry has multiple outgoing faces the coded chunk sent through each outgoing face should be different and hence Algorithm 3 needs to be executed for each face.

When an NCCN node receives an Interest for a coded chunk in group G the node first updates vbefore executing Algorithm 2. Let dimdenote the number of cached coded chunks for G. dimequals the dimension of the subspace spanned by the coefficient vectors of the cached coded chunks and wt v dimG always holds in our construction where wt is the Hamming weight. By vobtained from the name of the arrived Interest let ube mindim wt wt where and are the component wise exclusive or operation and the and operation respectively. Then uelements of zeros in vare turned to 1 s. For example if dim 3 v 1 1 0 0 and v 1 0 1 0 vis updated to 1 1 1 0 . By updating the sent flags NCCN nodes can manage the status of data packets received by consumers. The ability of decode content chunks is ensured by executing this update algorithm prior to Algorithm 2.

Using random network coding in NCCN a consumer of content is able to reconstruct it as long as enough coded chunks are delivered to reconstruct each group i.e. n linearly independent coded chunks for each group with high probability if the size of Fis large.

The dissemination techniques based on sent flags support the dissemination of linearly independent coded chunks over the network. However the consumer might obtain fewer than n linearly independent coded chunks needed to decode a piece of content and coefficient vectors of all coded chunks cached in all the nodes other than the producer might not span the space of dimension n. Then some chunks in a group cannot be seen within a fixed time period and the requests for such chunks time out. To address this case and allow the content chunks to be decoded NCCN uses a special Interest called the retry Interest. The retry Interest is indicated by the marker in the Name as explained previously. The consumer is allowed to transmit a retry Interest for a chunk when the chunk has not been seen and the previous pending interest timed out.

When an NCCN node receives the retry Interest for a chunk in group G it processes the retry Interest as a normal Interest if the node has n coded chunks for G in its cache. In the case where the node has fewer than n coded chunks the node changes the sent flag for the chunk to 0 and forwards the retry Interest to upstream nodes according to the basic CCN or NDN forwarding strategy. The role of the retry Interest for a chunk is to restart the encoding and transmission for the chunk over the network.

As previously explained NCCN assumes the use of multi face forwarding strategies supported in the native CCN or NDN architecture. Considering multi face forwarding strategies we can introduce an additional step prior to the procedure to add the received Interest to the PIT of a node. When NCCN or normal CCN or NDN nodes in the network uses a strategy of forwarding to multiple faces there could exist a detour of Interests to a node as illustrated in . In order to benefit from network coding although distinct multiple paths from the consumer to producer should be provided the detour of Interests illustrated in is unnecessary. In this example the Interest coming from node to node is regarded as the detoured one. In fact responses to such detoured Interests consume unnecessary network bandwidth and computational resources in NCCN. Thus such unnecessary detoured Interests should not be added to PITs.

Algorithm 4 presents the additional step used to discard detoured Interests. Intermediate nodes omit and discard detoured Interests based on the arrival time or hop counts of received Interests. In particular if the difference between the hop count from the unique consumer node or the arrival time of a detoured Interest and that of the same Interest stored in PIT is greater than threshold t the detoured Interest is discarded. The hop count is usually included in Interest packets and the arrived time is obvious from the life time of PIT entries.

During operation interest generation module generates interests corresponding to the chunks of a content object. Content reconstruction module the re constructs the content object using received linear combinations of the chunks as described above.

During operation interest receiving module receive interests corresponding to the chunks of a content object. Content forwarding module then constructs independent linear combinations of chunks stored in content cache in response to received interests. Chunk management module maintains records on which linear combinations have been previously sent to requesting nodes and also manages which linear combinations are to be cached locally.

The data structures and code described in this detailed description are typically stored on a computer readable storage medium which may be any device or medium that can store code and or data for use by a computer system. The computer readable storage medium includes but is not limited to volatile memory non volatile memory magnetic and optical storage devices such as disk drives magnetic tape CDs compact discs DVDs digital versatile discs or digital video discs or other media capable of storing computer readable media now known or later developed.

The methods and processes described in the detailed description section can be embodied as code and or data which can be stored in a computer readable storage medium as described above. When a computer system reads and executes the code and or data stored on the computer readable storage medium the computer system performs the methods and processes embodied as data structures and code and stored within the computer readable storage medium.

Furthermore methods and processes described herein can be included in hardware modules or apparatus. These modules or apparatus may include but are not limited to an application specific integrated circuit ASIC chip a field programmable gate array FPGA a dedicated or shared processor that executes a particular software module or a piece of code at a particular time and or other programmable logic devices now known or later developed. When the hardware modules or apparatus are activated they perform the methods and processes included within them.

The above description is presented to enable any person skilled in the art to make and use the embodiments and is provided in the context of a particular application and its requirements. Various modifications to the disclosed embodiments will be readily apparent to those skilled in the art and the general principles defined herein may be applied to other embodiments and applications without departing from the spirit and scope of the present disclosure. Thus the present invention is not limited to the embodiments shown but is to be accorded the widest scope consistent with the principles and features disclosed herein.

