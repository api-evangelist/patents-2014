---

title: Apparatus and method for masking a real user controlling synthetic identities
abstract: A machine has a processor and a memory storing instructions executed by the processor to issue a challenge in response to a first request, evaluate a response to the challenge to establish confirmation that the first request originated from a human user, issue a user identification in response to the confirmation, store the user identification with encrypted identity data, receive a second request that includes the user identification, and return the encrypted identity data in response to the second request.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09372987&OS=09372987&RS=09372987
owner: Anonyome Labs, Inc.
number: 09372987
owner_city: Draper
owner_country: US
publication_date: 20141219
---
This application claims priority to U.S. Provisional Patent Application Ser. No. 62 033 064 filed Aug. 4 2014 the contents of which are incorporated herein by reference.

This invention relates generally to user identity in a computer network. More particularly this invention relates to techniques for masking the identity of a real user controlling synthetic identities.

With the current state of identity theft uncontrolled data collection and targeted marketing there is a need for a user to protect their offline identity and to compartmentalize their online activity. For example a user might prefer to use an offline real identity for general browsing or reading online newspapers and use a different identity for accessing and commenting on social media and other identities for accessing e commerce applications.

One method to achieve this compartmentalization is to allow a user to create multiple synthetic identities and then use them when accessing different web sites and applications online. The relationship between real users and their synthetic identities may be compromised by a platform hosting synthetic identities that illicitly uses personal information. The platform may also suffer from an external or internal security breach. Finally the platform operator may be coerced by an external party to disclose the mapping between a real user and synthetic identities.

Thus there is a need for improved techniques for masking the identity of a real user controlling synthetic identities.

A machine has a processor and a memory storing instructions executed by the processor to issue a challenge in response to a first request evaluate a response to the challenge to establish confirmation that the first request originated from a human user issue a user identification in response to the confirmation store the user identification with encrypted identity data receive a second request that includes the user identification and return the encrypted identity data in response to the second request.

A non transitory computer readable storage medium has instructions executed by a processor to coordinate a request for a user identification from a synthetic identity management service store the user identification and a symmetric key and coordinate a request for a synthetic identification from the synthetic identity management service. The synthetic identification is encrypted using the symmetric key to form encrypted synthetic identification. The encrypted synthetic identification is uploaded to the synthetic identity management service. A request for the encrypted synthetic identification from the synthetic identity management service is coordinated using the user identification. The encrypted synthetic identification is decrypted to render a first synthetic identification. The first synthetic identification is combined with a second synthetic identification. The first synthetic identification and the second synthetic identification are encrypted using the symmetric key to form encrypted combined synthetic identification. The combined synthetic identification is uploaded to the synthetic identity management service.

The application communicates with a synthetic identity management service that hosts a synthetic identity management service and has an associated synthetic identity data store . In particular the application calls RESTful services associated with the System Identity Management Service to create modify and delete synthetic identities for the real user . The platform includes one or more processors and associated memory storing instructions executed by the one or more processors to implement the operations specified herein.

As demonstrated below the invention discloses a technique in which only the real user can unlock the mapping between their real identity and their synthetic identities. The Synthetic Identity Mapping Service is not able to unlock the mapping. This protects the privacy of the user of the Synthetic Identity Management Service whether by intentional misuse of the data external penetration rogue insiders or coercion from other external parties.

The invention works by having the user securely maintain the only access to the cryptographic key that unlocks the mapping from the real user identity to their synthetic identities. Without the cryptographic key a party cannot unlock the mapping.

The user device device must be configured to perform cryptographic operations e.g. generating both symmetric and asymmetric keys encrypting of data decrypting of data and so on . Modern platforms have this capability built in. For example iOS used by products sold by Apple provide cryptographic libraries for symmetric and asymmetric key operations. Android devices provide cryptographic libraries to implement both symmetric and asymmetric key operations.

The cryptographic key that is used to unlock the real user to synthetic identity mapping needs to be strong. It is recommended that the symmetric algorithm Advanced Encryption Standard AES with a 256 bit key length be used. Using this algorithm and key length makes decryption of the mapping data by an adversary infeasible in a short time period with current computers.

A second pre requisite for the invention is for the user to have access to the cryptographic key that unlocks the synthetic identity mapping. One method is to derive the key dynamically e.g. use an algorithm that derives the key from the user s login credentials the user s platform identity and so on . A variety of cryptographic techniques are available to derive a key from seed information. An alternative is to use randomization techniques to generate a key e.g. iOS randomization function and securely store the key. The storage will hold the user s cryptographic key that provides the protection of the user s synthetic identity mapping data. The key needs to be protected in a way that makes it extremely difficult for any application outside of the Synthetic Identity Management Application to access it.

Modern devices provide secure storage. For example iOS has a secure storage environment called the Keychain. The Keychain on each device is protected by encryption using a key in the device hardware. Keychain items can only be shared between applications from the same developer. This is managed by requiring third party applications to use access groups with a prefix allocated to them through the iOS Developer Program. Android also provides a similar Keychain concept for securely storing cryptographic keys. While the following text uses the term Keychain this denotes secure storage rather than any particular implementation tied to the user s application platform.

The application sends a register request to the Synthetic Identity Management Service . It responds with a real user challenge . This test ensures that a real human is creating the request rather than some computerized e.g. botnet service. The real user test may be a validation text to a mobile device selecting from images and so on. If the user passes the real user challenge the Synthetic Identity Management Service then creates a new user UID creates a new user in the User DB with that UID and stores the UID as a Keychain item for the Synthetic Identity Management Application. The service also generates an AuthToken that is used as a session token by the application for subsequent requests.

The UID is used essentially as authentication proof. Possession of the UID is sufficient to gain access to the system. This is one embodiment of authentication but other techniques may be used such as username password and device fingerprinting.

A request to the synthetic REST service is made to request creation of a new Synthetic Identity. This request includes the synthetic identity s public key as well as device specific information that allows the Synthetic Identity Management Service to later contact the application on the device e.g. for Push notifications . The Synthetic Identity Management Service generates a Synthetic Identity SID and stores that in the Synthetic Identity database and returns the SID to the application.

The application reads out the UID and symmetric key K from the Keychain and then makes a REST call to the Synthetic Identity Management Service with an encrypted data SID SIDattributes . This data is called the encrypted blob and is stored in the User DB under the UID record. The SIDattributes are private attributes about the synthetic identity. The Synthetic Identity Management Service cannot read the blob and hence does not know the user of the synthetic identity mapping nor does it know the synthetic identity s RSA private key Kprivthat protects the synthetic identity communication.

The Synthetic Identity Management Service has two databases as shown in . The first database stores the user information. Each user has a UID and corresponding encrypted blob . The second database stores the synthetic identity information. In particular the SID and the synthetic identity public key and device information are stored.

An embodiment of the present invention relates to a computer storage product with a non transitory computer readable storage medium having computer code thereon for performing various computer implemented operations. The media and computer code may be those specially designed and constructed for the purposes of the present invention or they may be of the kind well known and available to those having skill in the computer software arts. Examples of computer readable media include but are not limited to magnetic media optical media magneto optical media and hardware devices that are specially configured to store and execute program code such as application specific integrated circuits ASICs programmable logic devices PLDs and ROM and RAM devices. Examples of computer code include machine code such as produced by a compiler and files containing higher level code that are executed by a computer using an interpreter. For example an embodiment of the invention may be implemented using JAVA C or other programming language and development tools. Another embodiment of the invention may be implemented in hardwired circuitry in place of or in combination with machine executable software instructions.

The foregoing description for purposes of explanation used specific nomenclature to provide a thorough understanding of the invention. However it will be apparent to one skilled in the art that specific details are not required in order to practice the invention. Thus the foregoing descriptions of specific embodiments of the invention are presented for purposes of illustration and description. They are not intended to be exhaustive or to limit the invention to the precise forms disclosed obviously many modifications and variations are possible in view of the above teachings. The embodiments were chosen and described in order to best explain the principles of the invention and its practical applications they thereby enable others skilled in the art to best utilize the invention and various embodiments with various modifications as are suited to the particular use contemplated. It is intended that the following claims and their equivalents define the scope of the invention.

