---

title: Systems and methods for facilitating call request aggregation over a network
abstract: A method for facilitating electronic commerce over a network includes identifying input dependencies for a call request based on information passed with the call request, identifying state dependencies for the call request based on information passed with the call request, parallelizing calls from the call request based on at least one of the identified input dependencies and the identified state dependencies, developing a service execution map by grouping calls in an execution order including parallelized calls, and processing the service execution map by executing grouped calls in the execution order including parallelized calls.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09633321&OS=09633321&RS=09633321
owner: PAYPAL, INC.
number: 09633321
owner_city: San Jose
owner_country: US
publication_date: 20140212
---
This application is a continuation of Ser. No. 12 639 555 filed Dec. 16 2009 which is incorporated herein by reference in its entirety.

The present invention generally relates to facilitating electronic commerce over a network and more particularly to facilitating call request aggregation over a network.

In electronic commerce users typically utilize service providers to process online transactions over communication networks. During the course of these online transactions users make requests with service calls such as application programming interface API calls and provide necessary data and information for processing the requests.

Since these requests often involve multiple API calls the user typically adds latency to the network which reduces network efficiency. To overcome this problem conventional processing techniques merge calls into a single batch call. However even though merging multiple calls into a single batch call may reduce network overhead this technique may limit the ability for the user to tie calls together and schedule calls efficiently.

As such there is need to improve network data management and reduce network latency by overcoming the deficiencies of conventional call processing techniques.

Embodiments of the present disclosure provide systems and methods for facilitating electronic commerce including call request aggregation over a network. In one aspect the systems and methods are adapted to aggregate or group multiple call requests selected by users and process the call requests in parallel when possible. In another aspect the systems and methods are adapted to utilize known or available data to automatically provide input for subsequent calls and intelligently organize e.g. via a matrix or map calls for execution to improve speed efficiency and usability.

According to an embodiment of the present disclosure a system and method for facilitating electronic commerce over a network include receiving a call request from a user via communication with a user device over the network identifying one or more input dependencies for the call request based on information passed with the call request identifying one or more state dependencies for the call request based on information passed with the call request including in one aspect meta data related to the calls parallelizing calls from the call request based on at least one of the identified input dependencies and the identified state dependencies developing a service execution map by grouping calls in an execution order including parallelized calls processing the service execution map by executing grouped calls in the execution order including parallelized calls and returning responses to the user for the executed calls. In one implementation identifying one or more state dependencies for the call request is based on information passed with the call request and the semantics of the call.

In various implementations the call request may include a batch call having multiple calls grouped together in a batch and the service execution map may be developed based on a list of call requests in the batch call. In one aspect input dependencies may refer to the dependence of data for a present call on data from a previous call identifying the input dependencies may allow automatic population of dependent data for a present call with data from a previous call and input dependencies may affect the concurrency of call execution. In another aspect state dependencies may refer to the behavioral affect of present call data on data for a subsequent call state dependencies may be semantic state dependencies may be defined between at least two operations and state dependencies may have shared data. In another aspect state dependencies may refer to a dependent call occurring after executing at least one other call and if two calls have an input dependency on the same data then the two calls may have a shared input dependency. In still another aspect calls having an input dependency and a state dependency may be executed in sequence and calls having no input dependencies or no state dependencies may be executed in parallel.

In various implementations the system and method may include batching invocation patterns based on the identified input dependencies the identified state dependencies and or the parallelized calls wherein batching invocation patterns refers to populating data for a present call with data from a previous call. The service execution map may be developed based on the identified input dependencies the identified state dependencies and or the parallelized calls. In one aspect developing the service execution map may include initializing a group number identifying empty fields in the call request locating missing data if empty fields are identified by searching one or more previous calls in the call request analyzing the input dependencies identifying a source call analyzing a call list analyzing the state dependencies and assigning calls to a group. The service execution map may be processed based on one or more dependency definitions defined by the identified input dependencies the identified state dependencies and or the parallelized calls.

These and other aspects of the present disclosure will be more readily apparent from the detailed description of the embodiments set forth below taken in conjunction with the accompanying drawings.

Embodiments of the invention and their advantages are best understood by referring to the detailed description that follows. It should be appreciated that like reference numerals are used to identify like elements illustrated in one or more of the figures wherein showings therein are for purposes of illustrating embodiments of the invention and not for purposes of limiting the same.

Embodiments of the present disclosure provide systems and methods for facilitating electronic commerce including call request aggregation over a network. In various aspects multiple call requests may be aggregated or grouped together and the calls may be processed in parallel when possible. In various other aspects known or available data may be used to automatically provide input for subsequent calls and the calls may be intelligently organized e.g. via a matrix or map to improve efficiency speed and usability.

By analyzing a set of call requests in a batch call service data may be automatically tied together and an optimal execution plan may be mapped so that integration is efficient and user friendly. For example a user may make a service request using a list of service request objects. The user may tie request and or response values together by e.g. leaving the one or more fields empty and a server may analyze the set of call requests and develop a service execution map.

During analysis input dependencies may be identified wherein when a field is left null in any request other than the first request any previous request and or response objects may be searched for matching values. In one aspect this creates an input dependency between the request and or response and the subsequent partial request. In another aspect the first request may not include a partial request.

During analysis state dependencies may be identified wherein when a request has an input dependency on another request and or response or shares an input dependency with another request the operations may be related in such a manner that the first operation changes state when used by the second or vice versa. In one aspect state dependencies may be described by meta data on the server side. In another aspect state dependencies include is static data that may be derived from the semantics of the operation.

In one implementation call requests that have an input and a state dependency should be run in sequence. In another implementation call requests that have no input dependencies or no state dependencies may be run in parallel. In some cases call requests may not be reordered to resolve dependencies and or responses may be returned to match the original order of the associated request. These and other aspects of the present disclosure are described in greater detail herein.

The network in one embodiment may be implemented as a single network or a combination of multiple networks. For example the network may include a wireless telecommunications network e.g. cellular telephone network adapted for communication with one or more other communication networks such as the Internet. In other examples the network may include the Internet one or more intranets landline networks wireless networks and or one or more other appropriate types of communication networks. As such in various implementations the user device the one or more merchant devices and the service provider server may be associated with a particular link e.g. a link such as a URL Uniform Resource Locator to an IP Internet Protocol address .

The user device in various embodiments may be implemented using any appropriate combination of hardware and or software configured for wired and or wireless communication over the network . In one embodiment the user device may be implemented as a mobile communication device e.g. wireless cellular phone adapted for communication with the network . In other embodiments the user device may be implemented as a personal computer PC a personal digital assistant PDA a notebook computer and or various other generally known types of wired and or wireless computing devices for communication with the network . It should be appreciated that the user device may be referred to as a client device or a customer device without departing from the scope of the present disclosure.

The user device in one embodiment includes a user interface application which may be utilized by a user to conduct network based financial transactions e.g. remote network based electronic commerce with the one or more merchant devices and or the service provider server over the network . The user interface application may be implemented as a mobile commerce application to initiate track manage and store data and information related to remote network based electronic commerce for viewing searching and or purchasing items products and or services over the network . In one aspect the user device may be linked to an account with the service provider for direct and or automatic settlement of purchase requests between a user and the one or more merchant devices via the user interface application .

In one embodiment the user interface application comprises a software program such as a graphical user interface GUI executable by a processor that is configured to interface and communicate with the one or more merchant devices and or the service provider server via the network . In one aspect the user interface application comprises a browser module adapted to provide a network interface to browse information available over the network . For example the user interface application may be implemented in part as a web browser to view and search information available over the network . In another example the user is able to access merchant websites of the one or more merchant devices over the network to view search and select items products and or services for purchase and the user is able to purchase selected items products and or services from the one or more merchant devices via the service provider server . As such the user may conduct network based financial transactions e.g. electronic commerce with the one or more merchant devices via the service provider server .

In one implementation upon user instruction the user interface application may be installed and or run on the user device . A user may run the user interface application on the user device to access the service provider server via the network . In one aspect upon installation and or execution of the user interface application the user may be prompted to establish a user account for login with the service provider server wherein the user may use the user interface application and the user device to access the service provider server via the network . When establishing a user account the user may be asked to provide personal information such as name address phone number etc. and financial information such as banking information credit card information etc. In another aspect referring to information related to the user may be packaged as the user identifier .

The user device in various embodiments may include other applications as may be desired in one or more embodiments of the present disclosure to provide additional features available to the user. In one example such other applications may include security applications for implementing user side security features programmatic client applications for interfacing with appropriate application programming interfaces APIs over the network and or various other types of generally known programs and or software applications. In still other examples the other applications may interface with the user interface application for improved efficiency and convenience. In one example files data and or information may be imported from various types of accounting software e.g. a spreadsheet application directly into the user interface application for improved tracking of payments and settlements related to purchases via the network . Accordingly it should be appreciated that the user interface application and each of the other applications are adapted to make API calls over the network .

The user device in various embodiments may include a user identifier which may be implemented for example as operating system registry entries cookies associated with the user interface application identifiers associated with hardware of the user device and or various other appropriate identifiers. The user identifier may include one or more attributes related to the user such as personal information related to the user e.g. one or more user names passwords photograph images biometric ids addresses phone numbers etc. and banking information e.g. one or more banking institutions credit card issuers user account numbers security data and information etc. . In various aspects the user identifier may be passed with user transaction requests to the service provider server via the network and the user identifier may be utilized by the service provider server to associate the user with a particular user account maintained by the service provider server .

The user device in one embodiment may include a network interface component NIC adapted for communication with the network . In various implementations the network interface component may comprise a wireless communication component such as a mobile cellular component a wireless broadband component a wireless satellite component or various other types of wireless communication components including radio frequency RF microwave frequency MWF and or infrared frequency IRF components adapted for communication with the network . In various other implementations the network interface component may be adapted to interface with a DSL e.g. Digital Subscriber Line modem a PSTN Public Switched Telephone Network modem an Ethernet device and or various other types of wired and or wireless network communication devices adapted for communication with the network .

The one or more merchant devices in one embodiment may be implemented using any appropriate combination of hardware and or software configured for wired and or wireless communication over the network . In various implementations the merchant devices may be implemented as a network server a personal computer PC a personal digital assistant PDA a notebook computer and or various other generally known types of wired and or wireless computing devices for communication with the network . In another implementation the merchant device may be implemented as a mobile device e.g. a wireless cellular phone adapted for communication with the network .

In another embodiment the one or more merchant devices may be maintained as one or more network servers by one or more business entities e.g. merchant sites resource information sites utility sites real estate management sites social networking sites etc. offering various items products and or services for purchase and payment which may need registration of user identity information as part of offering the items products and or services to one or more users over the network . Accordingly each of the one or more merchant devices may comprise at least one network based server in communication with the network having a merchant interface application and a products services database for presenting and identifying one or more available items products and or services for purchase via the network which may be made available to the user device for viewing and purchase by the user. In one aspect each of the network based merchant servers may be accessible via a mobile communication device e.g. wireless cellular phone for management purposes. For example each merchant entity may have the ability to remotely access and interact with their own network based merchant server via a mobile communication device for management purposes.

In one embodiment each of the merchant devices includes the merchant interface application which may be utilized by the one or more merchant devices to conduct network based financial transactions e.g. remote network commerce such as shopping purchasing bidding etc. with one or more users and or the service provider server over the network . For example the merchant interface application may be implemented as an electronic commerce application to initiate track manage and store information related to remote network based commerce for the viewing searching and purchasing of items products and or services over the network . In one implementation each of the merchant devices may be linked to an account with the service provider for direct and or automatic settlement of purchase requests between the each merchant and one or more users via the merchant interface application .

In one implementation the merchant interface application comprises a software program such as a GUI executable by a processor that is configured to interface and communicate with one or more users and or the service provider server via the network . In another implementation the merchant interface application comprises a network interface module that makes information available to the user device over the network . For example the merchant interface application may be implemented in part as a website manager to provide list and present information to the user device via the network . In another example each merchant is capable of providing one or more network based merchant websites to allow viewing searching and selecting of items products and or services for purchase by the user via the user device and the user is able to purchase items products and or services from the one or more merchant devices via the merchant websites and the service provider server . As such each of the merchant devices may conduct financial transactions with the user via the merchant interface application and the service provider server .

In various implementations the merchant interface application may include a marketplace application which may be configured to provide transaction information related to the products and or services database to the user interface application of the user device via the network . For example the user may interact with the merchant via the marketplace application through the user interface application over the network to search and view various items products and or services available for purchase from the products services database . The marketplace application may include a checkout module which may be configured to facilitate online financial transactions by the user of items products and or services identified by each merchant server for purchase. In one aspect the checkout module of the marketplace application may be configured to accept payment from the user over the network and process the payment via interaction with the service provider server .

In one implementation upon merchant instruction the merchant interface application may be installed and or run on the merchant devices . A merchant may run the merchant interface application on the merchant device to access the service provider server via the network . In one aspect upon installation and or execution of the merchant interface application the merchant may be prompted to establish a merchant account for login with the service provider server wherein the merchant may use the merchant interface application and the merchant device to access the service provider server via the network . When establishing a merchant account the merchant may be asked to provide business information such as business name address phone number etc. and financial information such as banking information credit card information etc. In another aspect referring to information related to the merchant may be packaged as the merchant identifier .

In various implementations the merchant interface application may include one or more other applications as may be desired to provide additional features available to the merchant. Other applications may include security applications for implementing user side security features programmatic applications for interfacing with appropriate application programming interfaces APIs over the network and or various other types of generally known programs and or software applications. In another example files data and or information may be imported from various types of accounting software e.g. a spreadsheet application directly into the merchant interface application for improved tracking of payments and settlements related to electronic commerce via the network . Accordingly it should be appreciated that the merchant interface application and any other application may be adapted to make API calls over the network .

Each of the merchant devices in various embodiments may include at least one merchant identifier which may be included as part of the one or more items products and or services made available for purchase so that e.g. particular items products and or services are associated with particular merchant devices . In one implementation the merchant identifier may include one or more attributes and or parameters related to the merchant such as business and or banking information. For example the merchant identifier may be passed from a particular merchant to the service provider server when the user selects an item product and or service for hold monitor and or purchase from the particular merchant . The merchant identifier may be used by the service provider server to associate particular items products and or services selected for purchase with a particular merchant account maintained by the service provider server . As described in greater detail herein the user may conduct financial transactions e.g. selection monitoring purchasing and or providing payment for items products and or services with each merchant server via the service provider server over the network .

In various embodiments each of the one or more business entities having a related merchant server may need to establish at least one merchant account with the service provider server . When establishing a merchant account each of the one or more business entities may need to provide business information such as owner name owner address social security number date of birth phone number email address etc. and financial information such as banking information merchant account information credit card information payment processing information etc.

Each of the merchant devices in various embodiments includes a network interface component NIC adapted for communication with the network . In various implementations the network interface component may comprise a wireless communication component such as a mobile cellular component a wireless broadband component a wireless satellite component or various other types of wireless communication components including radio frequency RF microwave frequency MWF and or infrared frequency IRF components adapted for communication with the network . In other various implementations the network interface component may be adapted to interface with a DSL e.g. Digital Subscriber Line modem a PSTN Public Switched Telephone Network modem an Ethernet device and or various other types of wired and or wireless network communication devices adapted for communication with the network .

The service provider server in one embodiment may be maintained by an online transaction processing entity which may provide processing for online financial transactions and or online information transactions on behalf of the user device and or one or more of the merchant devices . As shown in the service provider server includes a service interface application which may be adapted to interact with the user device and or each merchant over the network to facilitate electronic commerce including call request aggregation. In one example a financial transaction may include the selection purchase and or payment of items products and or services by the user device from one or more of the merchant devices . In one embodiment the service provider server may be provided by PayPal Inc. and or eBay of San Jose Calif. USA.

The service interface application in one embodiment is adapted to utilize a processing module to process purchases and or payments for financial transactions between the user device and each of the merchant devices . In one implementation the processing module is adapted to resolve financial transactions through validation delivery and settlement. For example the service interface application in conjunction with the processing module is adapted to settle indebtedness between the user device and each of the merchant devices wherein accounts may be directly and or automatically debited and or credited of monetary funds in a manner as accepted by the banking industry.

The service interface application in one embodiment is adapted to utilize an aggregation module to aggregate or group multiple call requests e.g. API calls selected by users and process the call requests in parallel when possible. In one implementation the aggregation module is adapted to utilize known or available data to automatically provide input for subsequent call requests and intelligently organize e.g. via a matrix or map call requests to improve efficiency and speed. For example multiple call requests may be grouped into a single call request and individual call requests may be processed in parallel when possible. In another example known or available information may be utilized to automatically input information in a next call request. In another example call requests may be processed or called in any order and the call requests may be intelligently organized e.g. by a matrix or map for execution. As a result the execution process may be efficient faster and user friendly. These and other aspects related to call request aggregation is described in greater detail herein.

The service application in one embodiment may be adapted to utilize a selection processing module to process and monitor user selection events during online shopping by the user via the user device . In one aspect the selection processing module allows the service provider server to process and monitor user selections during online navigation and shopping events over the network . For example the service provider server interfaces with the user device via e.g. a browser window to monitor the user and the user device during navigation and shopping events on various merchant sites. The selection processing module may be used by the service provider server to monitor user selections of one or more items products and or services.

The service provider server in one embodiment may be configured to maintain one or more user accounts and merchant accounts in an account database each of which may include account information associated with one or more individual users and the one or more merchant devices . For example account information may include private financial information of the user and each merchant such as one or more account numbers passwords credit card information banking information or other types of financial information which may be used to facilitate online financial transactions between the user and the one or more merchant devices . In various implementations the methods and systems described herein may be modified to accommodate additional users and or additional merchants that may or may not be associated with at least one existing user account and or merchant account respectively.

In one implementation the user and or user device may have identity attributes stored with the service provider server as the user identifier and the user and or user device may have credentials to authenticate or verify identity with the service provider server . In one aspect user attributes may include personal information and banking information as previously described. In other aspects the user attributes may be passed to the service provider server as part of a login and or transaction request and the user attributes may be utilized by the service provider server to associate the user and or the user device with one or more particular user accounts in the account database maintained by the service provider server .

In another implementation each of the merchants and or merchant devices may have identity attributes stored with the service provider server as merchant identifiers and each of the merchant devices may have credentials to authenticate or verify identity with the service provider server . In one aspect merchant attributes may include business information and banking information as previously described. In other aspects the merchant attributes may be passed to the service provider server as part of a login and or transaction request and the merchant attributes may be utilized by the service provider server to associate each of the merchant devices with one or more merchant accounts in the account database maintained by the service provider server .

The service provider server in various embodiments may include a network interface component NIC adapted for communication with the network and any network based communication devices including the network interface component of the user device and the network interface component of each merchant . In various implementations the network interface component of the service provider server may include a wireless communication component such as a wireless broadband component a wireless satellite component or various other types of wireless communication components including radio frequency RF microwave frequency MWF and or infrared frequency IRF components adapted for communication with the network . In other various implementations the network interface component may be adapted to interface with a DSL e.g. Digital Subscriber Line modem a PSTN Public Switched Telephone Network modem an Ethernet device and or various other types of wired and or wireless network communication devices adapted for communication with the network .

The service provider server in various embodiments may include one or more databases e.g. internal and or external databases for storing and tracking information related to financial transactions between particular users such as the user the one or more merchant devices and the service provider server . In one implementation the databases may provide a historical survey of transactions between the user device the one or more merchant devices and the service provider server . For example the service interface application may be adapted to monitor track log and store transaction information related to network based electronic commerce between the user device each merchant and or the service provider server and the stored transaction information is accessible from the databases for analysis maintenance and settlement.

Referring to the service provider server is adapted to receive a call request over the network block . In one embodiment the call request may include a batch call which may include multiple calls grouped together in a batch.

In one implementation the method facilitates a server side process over the network in response to a user call request via the user device and the user interface application . In another implementation the method facilitates a server side process over the network in response to a merchant call request via one or more of the merchant devices and the merchant interface application . In various implementations the service provider server is adapted to process call requests over the network on behalf of a user via the user device and or merchants via the merchant devices .

The service provider server is adapted to identify one or more input dependencies for the call request based on information passed with the call request block . In one implementation input dependencies refer to situations where the request data of one call depends on data from a previous call either from the request or the response. In one aspect identifying the input dependencies allows the dependent operation to be automatically populated with the data from the prior call which may reduce the need for the user to wire these calls together. In another aspect input dependencies may affect the ordering and or the concurrency of the calls.

For example in reference to if OperationB needs data from OperationA then OperationB should be called after OperationA is processed.

In another example OperationA may return a field which is needed in the request of one or more subsequent calls such as OperationB Accordingly there is an input dependency between OperationA and OperationB .

In a payments example in reference to a Pay call may return a payKey field which is needed in the call request of one or more subsequent calls. As such there may be an input dependency between one or more subsequent calls or operations e.g. between a SetCobrandingInfo call a ExecutePayment call and or the Pay call.

Referring to the service provider server is adapted to identify one or more state dependencies for the call request based on information passed with the call request block . In one implementation information passed with the call request includes meta data related to the calls. In another implementation state dependencies occur when the behavior of one call may affect the behavior of a subsequent call. The state dependencies are semantic and may be defined between any two operations regardless of the data. However the state dependency may only be meaningful if there is some shared data in the input either through a regular input dependency or a shared input dependency.

In one aspect a state dependency refers to a dependent call that should occur after processing the one or more calls that it is dependent on. In another aspect if two calls both have an input dependency on the same piece of data then there is a shared input dependency between the two calls. As such the shared input dependency affect may trigger the behavior related to the state dependencies but it may not force synchronous execution since the data required to invoke the call is available for both calls at the same time.

In one example referring to a state dependency may occur between a SetCobrandingOptions call a SetInitiatorinfo call and an ExecutePayment call. The ExecutePayment call may have a shared dependency with the SetCobrandingOptions call and the SetInitiatorInfo call since all three calls may need a payKey field provided by a Pay call. Since the two Set calls may modify a paymentRequest field that is needed by the ExecutePayment call there exists a state dependency. As such in one aspect the state dependency refers to a dependent call that should occur after processing of the one or more calls that it is dependent on.

Referring to the service provider server is adapted to parallelize calls block from the call request based on the identified input dependencies block and or the identified state dependencies block .

In one implementation if there is no identified input dependency as opposed to a shared dependency or no identified state dependency then the two or more calls may be executed in parallel.

In one example shows a process of executing operations in a Batch call synchronously wherein each operation is synchronously processed after completing the previous operation. As shown the Pay call is executed then the SetCobrandingOptions call is executed then the SetInitiatorInfo call is executed then the ExecutePayment call is executed and then the GetPaymentDetails is executed.

In another example referring to parallelizing calls block shows a process for executing one or more operations of the Batch call in parallel. As shown the Pay call is executed and then the SetCobrandingOptions call and the SetInitiatorInfo call are grouped together and executed simultaneously. Next the ExecutePayment call is executed and then the GetPaymentDetails is executed.

In one implementation call requests that have either an input dependency or a state dependency should be run in sequence i.e. synchronously . In another implementation call requests that have no input dependencies or no state dependencies may be run in parallel. In some cases call requests may not be reordered to resolve dependencies and or responses may be returned to match the original order of the associated request.

For example call requests that may have an input dependency include the Pay call and the GetPaymentDetails call which may need a payKey field from the Pay call.

In another example call requests that may have a state dependency include the Pay call the SetPaymentOptions call which may need the payKey field from the Pay call and the ExecutePayment call which may need the payKey field from the Pay call and may be affected by state change from the SetPaymentOptions call.

In another example call requests that may be parallelizable i.e. calls with no input dependencies include the GetPaymentDetails call which may run simultaneously with other GetPaymentDetails calls when each call is for a different payKey field.

In another example call requests that may be parallelizable i.e. calls with input dependencies but no state dependencies include the Pay call the SetCobrandingOptions call which may need the payKey field from the Pay call and the SetInitiatorInfo call which may need the payKey field from the Pay call but may not be affected by any state change from the SetCobrandingOptions call.

In another example call requests that may be parallelizable i.e. calls with input dependencies and state dependencies include the ExecutePayment call which may need the payKey field from the Pay call and may be affected by any state changes from one or more previous calls.

Referring to the service provider server is adapted to batch invocation patterns based on the identified input dependencies the identified state dependencies and or the parallelized calls block .

In one implementation since input dependencies are based on data that the user provides the user has to express the dependency. In the case where the dependent data is needed to populate a necessary field it should be enough for the user to simply leave that field empty. However in some cases since an empty field may not be considered a valid request the user may be indicating that the necessary data is unavailable at the time of the request but the necessary data may be available from another part of the batch call.

In one aspect the SetCobrandingOptions call may fail without the payKey field. In this case the payKey field may be available from somewhere else. For example the payKey field may be returned from the Pay call which may then be used.

In some instances extra information may be needed from the client and a simple name value pair that identifies both source and target fields may suffice.

Referring to the service provider server is adapted to develop a service execution map for processing block . In one aspect the service provider server is adapted to develop the service execution map by grouping calls in an execution order which may include calls that have been grouped together for execution in parallel.

In one implementation parallelizing calls on the server side may include identifying state dependencies and developing a service execution map based on that data and a list of call requests in the Batch call. In one aspect an operation state dependency graph provides static information that may be assembled into code that is adapted to describe one or more operations for execution. It should be appreciated that the state dependencies may be described in either direction of process flow whichever makes sense for maintaining this data as new operations are added.

Once that directed graph is defined it may be used to schedule a list of calls in the Batch call. The basic logic may be provided as follows.

For example shows one embodiment of a method for developing a service execution map for each call in a batch.

In one implementation a group number may be initialized block . For example a group number of zero may be used to initialize or start the process.

Empty fields may be identified block . For example the call may be analyzed to determine if the call is missing a necessary field.

If empty fields are identified block then missing data may be located block . For example if the call is missing a necessary field then one or more previous calls may be searched for the necessary data and the call with the highest group number may be chosen.

Input dependencies may be analyzed block . For example a list of explicit input dependencies may be searched through and identified.

A source call may be identified block . For example in each call that references the call with the highest group number the source call with the highest group number may be identified.

A call list may be analyzed block . For example a list of calls in the group with the highest group number and any subsequent groups may be search through and analyzed.

State dependencies may be analyzed block . For example if any calls in the call list have a state dependency with the present call then the group number for those calls is taken.

Calls may be assigned to a group block . For example the call may be assigned to a group with the present call. In one aspect the calls assigned to the group may be set for execution in parallel. In some groups all calls in the group may be executed in parallel.

In one aspect all of the calls except for Pay may need the payKey field but in this case the payKey field returned by the Pay call is used which may leave the last three calls with an empty field.

Referring to after developing the service execution map block the service provider server is adapted to process the service execution map block .

In one aspect the service execution map may be processed by executing grouped calls in the execution order including parallelized calls.

In one embodiment the service execution map may be processed based on the following dependency definitions 

In one implementation the previously listed JSON based Batch request referring to may be processed based on the dependency definitions as follows.

For example the Pay call may be automatically added to a first execution group e.g. group 1 since there may be no existing dependencies related thereto.

With the SetCobrandingOptions call a required payKey field may be recognized as missing so there may exist an input dependency. Since the Pay call in group 1 may be able to provide the required payKey field the SetCobrandingOptions call may be added to a second execution group e.g. group 2 .

Since the SetInitiatorInfo call may have an input dependency that the Pay call may be able to provide the SetInitiatorInfo call may be added to group 2 along with the SetCobrandingOptions call. However in one aspect a check may be needed to determine whether the SetInitiatorInfo call has a state dependency on the SetCobrandingOptions call in group 2. If the affects state.SetInitiatorinfo list is empty then the SetInitiatorInfo call may be safely added to group 2. As shown in the SetCobrandingOptions call and the SetInitiatorInfo call may be executed in parallel.

Since the ExecutePayment call has an input dependency satisfied by the Pay call the ExecutePayment call may be added to group 2. However the ExecutePayment call should be checked for state dependencies. Since affects state.ExecutePayment includes the SetCobrandingOptions call and the SetInitiatorInfo call which are in group 2 the ExecutePayment call should be moved to group 3.

Since the GetPaymentDetails call has an input dependency satisfied by the Pay call the GetPaymentDetails call may be added to group 2. However in one aspect the affects state.GetPaymentDetails reveals that the GetPaymentDetails call does not have a dependency on calls in group 2 but the GetPaymentDetails call does have a dependency on the ExecutePayment call in group 3. Therefore the GetPaymentDetails call should be moved to group 4.

In one embodiment as shown in the following groups may be developed in the service execution map for processing 

Group 2 includes the SetCobrandingOptions call and the SetInitiatorInfo call which may be executed in parallel 

Referring to after developing the service execution map block and processing the service execution map block the service provider server is adapted to return one or more responses block . In one aspect responses may be returned to the user for each of the executed calls.

In various implementations responses may be returned in the same order as the original call requests. Errors may be returned in order but execution of the batch calls may cease once an error occurs. Requests in the same group may be completed so that multiple errors occurring in calls within the same group may be reported. Once a group is finished subsequent groups may not be continued.

In accordance with embodiments of the present disclosure computer system performs specific operations by processor executing one or more sequences of one or more instructions contained in system memory component . Such instructions may be read into system memory component from another computer readable medium such as static storage component or disk drive component . In other embodiments hard wired circuitry may be used in place of or in combination with software instructions to implement embodiments of the present disclosure.

Logic may be encoded in a computer readable medium which may refer to any medium that participates in providing instructions to processor for execution. Such a medium may take many forms including but not limited to non volatile media and volatile media. In various implementations non volatile media includes optical or magnetic disks such as disk drive component and volatile media includes dynamic memory such as system memory component . It should be appreciated that data and information related to instructions may be transmitted to computer system via various types of transmission media such as coaxial cables copper wire and fiber optics including wires that comprise bus . In various examples transmission media may take the form of acoustic or light waves such as those generated during radio wave and infrared data communications.

Some common forms of computer readable media includes for example floppy disk flexible disk hard disk magnetic tape any other magnetic medium CD ROM any other optical medium punch cards paper tape any other physical medium with patterns of holes RAM PROM EPROM FLASH EPROM any other memory chip or cartridge carrier wave or any other medium from which a computer is adapted to read.

In various embodiments of the present disclosure execution of instruction sequences to practice the systems and methods described herein may be performed by computer system . In various other embodiments of the present disclosure a plurality of computer systems coupled by communication link e.g. LAN wireless LAN wireless network may perform instruction sequences to practice the systems and methods described herein in coordination with one another.

Computer system may transmit and receive messages data information and instructions including one or more programs i.e. application code through communication link and network interface component . Received program code may be executed by processor as received and or stored in disk drive component or some other non volatile storage component for execution.

Where applicable various embodiments provided by the present disclosure may be implemented using hardware software or combinations of hardware and software. Also where applicable the various hardware components and or software components set forth herein may be combined into composite components comprising software hardware and or both without departing from the spirit of the present disclosure. Where applicable the various hardware components and or software components set forth herein may be separated into sub components comprising software hardware or both without departing from the scope of the present disclosure. In addition where applicable it is contemplated that software components may be implemented as hardware components and vice versa.

Software in accordance with the present disclosure such as program code and or data may be stored on one or more computer readable mediums. It is also contemplated that software identified herein may be implemented using one or more general purpose or specific purpose computers and or computer systems networked and or otherwise. Where applicable the ordering of various steps described herein may be changed combined into composite steps and or separated into sub steps to provide features described herein.

The foregoing disclosure is not intended to limit the present disclosure to the precise forms or particular fields of use disclosed. As such it is contemplated that various alternate embodiments and or modifications to the present disclosure whether explicitly described or implied herein are possible in light of the disclosure. Having thus described embodiments of the present disclosure persons of ordinary skill in the art will recognize that changes may be made in form and detail without departing from the scope of the present disclosure. Thus the present disclosure is limited only by the claims

