---

title: HTML network service tags used with web browsers for controlling network elements
abstract: A web browser configured to execute on a network element receives a Hypertext Markup Language (HTML) document including HTML network service tags. The network service tags include commands to cause a corresponding network action to be taken in connection with the network element, such as configuring and/or causing information to be read from the network element. The web browser determines, based on each HTML network service tag, the command to cause the network action to be taken in connection with the network element. The web browser issues the determined command for each HTML network service tag to a corresponding application program interface (API), which in turn cause the network action to be taken in connection with the network element.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09633131&OS=09633131&RS=09633131
owner: Cisco Technology, Inc.
number: 09633131
owner_city: San Jose
owner_country: US
publication_date: 20140311
---
The present disclosure relates to controlling browser enabled network elements using HTML network service tags.

Data networks include network elements such as network routers and switches to forward data packets in the networks. Increasingly web programmers use network support tools and services such as software defined network SDN applications to define and configure the data networks including the network elements. Network programming languages related to the suite of Hypertext Markup Language HTML standards have evolved into powerful web programming tools useful for constructing web pages navigating the Internet and the like but fail to empower web programmers with an efficient way to configure control and manage network elements in the Internet.

Techniques presented herein use Hypertext Markup Language HTML network service tags embedded in an HTML document or other HTML applications with web browser enabled network elements to control and manage control plane and data plane features of the network elements. According to these techniques a web browser is configured to execute on a controller of a network element and communicate with a set of application program interfaces APIs that provide access to controllable data and control plane features of the network element. The web browser receives an HTML document including HTML network service tags. Each of the network service tags includes a command to cause a corresponding network action to be taken in connection with the network element e.g. a network action on the data or control plane features. The network action may include reading information from the network element and returning the read information to the web browser. The web browser determines based on each HTML network service tag the command to cause the network action to be taken. The web browser issues the determined command for each HTML network service tag to a corresponding one of the APIs which in turn cause the network action to be taken in connection with the network element.

Network elements are each browser enabled meaning that the network elements each host a web browser B configured to receive and interpret web documents such as Hypertext Markup Language HTML formatted documents. Web documents may be generated by applications external to network elements and sent to the network elements. Alternatively and or additionally the applications that generate web documents may be hosted on network elements and integrated with the local browser for example. According to techniques described herein the HTML documents may be formatted to include network service tags referred to simply as service tags intended to control and configure network elements . Service tags follow a format similar to other HTML tags used for web navigation and display but the service tags are directed to control of networking features of the network element. Browsers hosted on network elements are configured to deconstruct i.e. parse and interpret service tags into corresponding application programming commands API commands to control the network elements.

Browsers process service tags to cause network elements to perform actions in support of the following activities related to managing and controlling network elements 

Reference is now made to which shows an example block diagram of network element and also of the other network elements through N configured to perform the operations described herein. There are numerous possible configurations for network element and is meant to be an example. In one embodiment network element is a network router and in another embodiment network element is a network switch. In either embodiment network element has packet forwarding capabilities as well as computing data processing capabilities. To this end network element includes a packet forwarding unit coupled with a plurality of network ports P which may including wired and wireless ports and a controller having a processor or multiple processors and memory . The processor is a microcontroller or microprocessor for example configured to execute software instructions stored in the memory .

The memory may comprise read only memory ROM random access memory RAM magnetic disk storage media devices optical storage media devices flash memory devices electrical optical or other physical tangible e.g. non transitory memory storage devices. Thus in general the memory may comprise one or more computer readable storage media e.g. a memory device encoded with software comprising computer executable instructions and when the software is executed by the processor it is operable to perform the operations described herein.

For example the memory stores or is encoded with instructions for a web browser corresponding to an instance of one of web browsers B in to implement web browser operations responsive to received HTML documents with embedded network service tags and APIs through which the Web Browser may communicate with and control network features components in a data plane and a control plane of network element . APIs may be embedded in web browser . In addition memory stores data generated and used by web browser including a Network Device Object Model DOM that models HTML service tags relevant to i.e. that may cause actions on network element . In an embodiment web browser may be a displayless or windowless browser. In another embodiment web browser may be a display window enabled browser. Note that web browser may be regarded as an API itself in which case APIs depicted in are APIs other than the web browser API.

With reference to there is depicted an interaction diagram that shows high level interactions between various architectural components of network element depicted in . As depicted in web browser includes a browser application a parsing engine to parse HTML documents with embedded service tags and a rendering engine to interpret the parsed HTML documents and send network element control commands deconstructed from the service tags to APIs . Browser engines and perform their respective functions based on entries in network DOM .

In one embodiment APIs are implemented as an instance of OnePK One Platform Kit by Cisco Systems Inc. OnePK APIs are software definable APIs used for software defined networks SDNs . APIs include a Representational State Transfer REST API to provide a stateless communication interface with browser and control plane and data plane APIs and respectively that interface with controllable control plane and data plane features components of network element through an infrastructure API which interfaces directly with the network features components of network element .

Infrastructure API interfaces with the physical network network node layer functions also referred to as network node of network element such as a service module function and line card function of network element .

With reference to there is depicted an example HTML network service tag sequence diagram that shows communications between the various layers linked together in namely browser DOM APIs implemented in OnePK for example and network node and applications .

At the applications layer sends one or more HTML network service tags to the browser. In an embodiment the HTML documents are formatted according to HTML5 and the network service tags are provided as custom defined HTML5 tags. In other words the HTML5 network service tags are a custom extension of the HTML5 format standard. In this embodiment browser is configured to interpret HTML5 formatted language and the HTML5 network service tags.

Applications use service tags to cause operations to be performed on one or more of network elements . In the example of the service tags may include any of the following commands 

At browser accesses DOM and uses it to deconstruct the service tags into command primitives . In the example of the service tag for Connect is deconstructed into command primitives node type connect protocol username and password.

At browser constructs and makes RESTful API calls to OnePK APIs corresponding to the command primitives . In response OnePK APIs translate the RESTful API calls into network element device specific API syntax i.e. into commands that can be understood by the network features of the network element.

At OnePK APIs forward the translated API commands to network node to cause network functions of the network node to perform the desired action.

At OnePK APIs receive a respond from the network functions package the received response into RESTful syntax and return the packaged response to the browser .

With reference to there is depicted an example HTML service tag for Connect referred to above in connection with . Connect service tag includes a high level tag descriptor indicating a tag category of network service tag which will need to be interpreted using a network DOM e.g. DOM . A next descriptor indicates the targeted network element is a router and is a command primitive of the network service tag . A next descriptor indicates further command primitives associated with the Connect service tag. A next descriptor c.collectlogs indicates that runtime configuration logs are to be collected returned and a descriptor indicates a version identifier is also to be collected. The collected returned version identifier is output in accordance with a write format descriptor . Descriptors may be considered tag attributes that define the intended operations functions actions of tag .

With reference to there is depicted an example network DOM corresponding to DOM . Network DOM represents in a tree structure each high level network service tag command its attributes and its command primitives as objects and also defines hierarchical relationships between the objects. In the example of network DOM includes a top level or session construct corresponding to the Connect service tag. DOM includes Action constructs including and . DOM also includes Object constructs including and . According to DOM the action operates on the object i.e. the action collects logs. Similarly the action acts on the object i.e. the action terminates the process and so on.

At web browser receives HTML document including HTML network service tags each including a command to cause a corresponding network action to be taken in connection with the network element. The commands may cause a specific action on network element and may include query response commands to cause information to be read from the network element and returned to web browser .

In next operations and web browser determines the commands associated with each of network service tags .

At web browser accesses DOM that represents possible commands for network actions as different objects and defines hierarchical relationships between the different objects.

At web browser deconstructs each of the interpreted commands into one or more primitive commands suitable for interpretation by corresponding ones of APIs .

At web browser issues sends each of the primitive commands to the corresponding one of the APIs which in turn causes the corresponding commanded network action to be taken.

Techniques described herein expand the scope of an HTML browser such as an HTML5 browser so that it can be used as a valuable framework for controlling network elements. The techniques introduce network based HTML5 support of network elements through the use of network service tags. The service tags make available to network elements standardized web protocols architectures query response processing APIs surfaces and script interaction interfaces. This offers a powerful and flexible application layer framework particularly when applied to a set of network elements such as routers and switches including wireless embodiments thereof. The service tags allow applications to connect to network elements collect telemetry data from the network elements as well as configure the network elements as application driven event policy configurations tied to network configurations as extensions to SDN and OnePK APIs.

The technique extends the HTML5 layer from application rendering and processing to embeddable network element modeling using HTML5 which allows applications to service and support a communication network via rich intuitive user experience applications across diverse platforms that deliver industry standardized and consistent experience and features.

Techniques described herein may implemented in a displayless web browser hosted on a network element leverages new HTML architectural constructs like Web Components to introduce custom elements natively to a DOM tree.

The technique introduces the network service tag as a top level custom tag for use by network elements in a network service and support context by network elements. An example of such a tag follows 

The techniques enable network elements to be queried via the HTML service tags using standard Hypertext Transfer Protocol HTTP information discovery methods over a secure transport. The ability to tap into an HTML5 paradigm on displayless full featured browser enabled network elements via the network service tags also allows for web applications to provision and execute using new bi directional access mechanisms like Websockets.

The techniques may be used in wireless devices and on the edges of a network. In other words an edge networking device and a wireless network element may serve as proxies for the network service tags. This opens up network analytics and management to web programmers and application developers by defining HTML5 custom tags i.e. the network service tags that are contextually relevant to network elements namely that can provide access configuration information discovery and analytics within a ubiquitous API driven and standards based web paradigm to network elements.

These techniques provides an open and well defined API surface to interact bi directionally with networking elements permits querying of network elements through standard web based information discovery protocols e.g. Webfinger allows for gathering of analytics and Web Analytics for network elements and industry solutions and leverages browser paradigms with networking devices binds with SDN and OnePK APIs to further provide network support services to web programmers.

In summary in one form a method is provided comprising at a web browser configured to execute on a controller of a network element wherein the network element is configured to operate as a network router or a network switch the web browser further configured to communicate with a set of application program interfaces APIs that provide access to controllable data and control plane features of the network element receiving a Hypertext Markup Language HTML document including HTML network service tags each including a command to cause a corresponding network action to be taken in connection with the network element determining based on each HTML network service tag the command to cause the network action to be taken in connection with the network element and issuing the determined command for each HTML network service tag to a corresponding one of the APIs which in turn cause the network action to be taken in connection with the network element.

In another form an apparatus is provided comprising a plurality of ports of a network element that is configured to operate as a network router or a network switch the plurality of ports configured to send and receive data packets over a network and a processor of the network element coupled to the plurality of ports and configured to execute a web browser configured to communicate with a set of application program interfaces APIs that provide access to controllable data and control plane features of the network element receive by the web browser a Hypertext Markup Language HTML document including HTML network service tags each including a command to cause a corresponding network action to be taken in connection with the network element determine by the web browser based on each HTML network service tag the command to cause the network action to be taken in connection with the network element and issue by the web browser the determined command for each HTML network service tag to a corresponding one of the APIs which in turn cause the network action to be taken in connection with the network element.

In still another form a processor readable medium is provided for storing instructions that when executed by a processor cause the processor to execute a web browser configured to communicate with a set of application program interfaces APIs that provide access to controllable data and control plane features of a network element that is configured to operate as a network router or a network switch receive by the web browser a Hypertext Markup Language HTML document including HTML network service tags each including a command to cause a corresponding network action to be taken in connection with the network element determine by the web browser based on each HTML network service tag the command to cause the network action to be taken in connection with the network element and issue by the web browser the determined command for each HTML network service tag to a corresponding one of the APIs which in turn cause the network action to be taken in connection with the network element.

Although the method apparatus and computer program product processor readable medium are illustrated and described herein as embodied in one or more specific examples it is nevertheless not intended to be limited to the details shown since various modifications and structural changes may be made therein without departing from the scope of the apparatus system and method and within the scope and range of equivalents of the claims. Accordingly it is appropriate that the appended claims be construed broadly and in a manner consistent with the scope of the apparatus system and method as set forth in the following claims.

