---

title: Interest keep alives at intermediate routers in a CCN
abstract: One embodiment provides a system that facilitates an intermediate node to handle a potential timeout event. During operation, the system receives, by an intermediate node, a keep-alive control packet which indicates a name for an Interest message, an indicator to keep alive a Pending Interest Table (PIT) entry, and a time period for which to keep the PIT entry alive. The intermediate node determines whether the keep-alive control packet corresponds to the PIT entry based on the name, and, responsive to determining that the keep-alive control packet corresponds to the PIT entry, updates a timeout value of the PIT entry based on the time period indicated in the keep-alive control packet. Responsive to determining one or more interfaces specified in the PIT entry from which the Interest message is received, the intermediate node forwards the keep-alive control packet to the one or more interfaces.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09553812&OS=09553812&RS=09553812
owner: PALO ALTO RESEARCH CENTER INCORPORATED
number: 09553812
owner_city: Palo Alto
owner_country: US
publication_date: 20140909
---
The subject matter of this application is related to the subject matter in the following applications 

This disclosure is generally related to distribution of digital content. More specifically this disclosure is related to providing notification by a content producing device to intermediate routers of a potential timeout event in order to keep an Interest alive in a content centric network CCN .

The proliferation of the Internet and e commerce continues to create a vast amount of digital content. Content centric network CCN architectures have been designed to facilitate accessing and processing such digital content. A CCN includes entities or nodes such as network clients forwarders e.g. routers and content producers which communicate with each other by sending Interest packets for various content items and receiving Content Object packets in return. CCN Interests and Content Objects are identified by their unique names which are typically hierarchically structured variable length identifiers HSVLI . An HSVLI can include contiguous name components ordered from a most general level to a most specific level. As an Interest packet is routed through the network from a content requesting node to a content producing node each intermediate CCN router adds an entry in its Pending Interest Table PIT corresponding to the Interest and forwards the Interest to the next CCN router. When a matching Content Object packet is sent from the content producing node back to the requesting node it follows the reverse path of the Interest. Each intermediate CCN router forwards the Content Object along the requesting interfaces listed in the corresponding PIT entry and subsequently removes the PIT entry indicating that the Interest has been fulfilled.

A PIT entry can also be removed by a CCN node or router when the PIT entry times out. A node can select any time out value that the node deems appropriate upon adding an Interest to its PIT. PIT entries can time out under different scenarios. One case is due to congestion in the network which results in the system dropping the Interest or the matching Content Object. Another case is when the content producing node or application responsible for generating the matching Content Object needs to perform a computationally intensive task e.g. that takes 45 seconds before it can send a response back. In both cases PIT entry timeouts can lead to the requesting node re expressing the Interest sometimes repeatedly and over a short period of time. PIT entry timeouts can also cause intermediate CCN routers to transmit the re expressed Interests on multiple interfaces thus increasing network traffic and creating additional congestion.

One embodiment provides a system that facilitates an intermediate node to handle a potential timeout event. During operation the system receives by an intermediate node a keep alive control packet which indicates a name for an Interest message an indicator to keep alive a Pending Interest Table PIT entry and a time period for which to keep the PIT entry alive. The intermediate node determines whether the keep alive control packet corresponds to the PIT entry based on the name and responsive to determining that the keep alive control packet corresponds to the PIT entry updates a timeout value of the PIT entry based on the time period indicated in the keep alive control packet. Responsive to determining one or more interfaces specified in the PIT entry from which the Interest message is received the intermediate node forwards the keep alive control packet to the one or more interfaces thereby facilitating the intermediate node to handle a potential timeout event.

In some embodiments responsive to determining that no time period is indicated in the keep alive control packet the intermediate node updates the timeout value of the PIT entry based on one or more of a predetermined value and a predetermined value which is dynamically adjusted by routers based on network conditions.

In some embodiments the intermediate node receives a Content Object in response to the Interest and removes the PIT entry corresponding to the name for the Interest.

In some embodiments determining whether the keep alive control packet corresponds to the PIT entry is further based on a matching criteria and the keep alive control packet further indicates that the matching criteria is one or more of a key identifier associated with a content producing node a hash value of a Content Object corresponding to the Interest and a summary of the Interest.

In some embodiments the intermediate node receives a predetermined number for entries in the PIT for a name prefix where the name prefix comprises one or more name components of a hierarchically structured variable length identifier HSVLI . Responsive to determining that the predetermined number of entries for the name prefix has been reached the intermediate node times out additional PIT entries with the same name prefix.

Another embodiment provides a system that facilitates handling of a potential timeout event. During operation the system generates by a content producing node a keep alive control packet which indicates a name for an Interest message an indicator to keep a Pending Interest Table PIT entry corresponding to the name alive and a time period for which to keep the PIT entry alive. The content producing node transmits the keep alive control packet to an intermediate node thereby facilitating handling of a potential timeout event.

In some embodiments the keep alive control packet generated by the content producing node further indicates one or more of a key identifier associated with the content producing node a hash value of a Content Object corresponding to the Interest and a summary of the Interest message.

In some embodiments the content producing node generates a Content Object in response to the Interest.

In some embodiments the content producing node computes a hashcash value and includes the computed hashcash value in the keep alive control packet where the hashcash computation becomes progressively more complex each time the computation is performed.

In some embodiments the system allows a virtual connection provided by an Internet Service Provider between the content producing node and a content requesting node to be maintained based on the keep alive control packet.

In some embodiments the content producing node receives a predetermined number of tokens from an upstream node where a token corresponds to a time period for which to keep alive a PIT entry in the content producing node. The content producing node consumes a token in exchange for generating the keep alive control packet where the time period for which to keep the PIT entry alive is the time period corresponding to the token.

In some embodiments receiving a predetermined number of tokens is based on one or more of purchase of one or more tokens by the content producing node from an Internet Service Provider reputation of the content producing node historical behavior of the content producing node and any other technique.

In some embodiments the system removes a token based on negative behavior of the content producing node.

The following description is presented to enable any person skilled in the art to make and use the embodiments and is provided in the context of a particular application and its requirements. Various modifications to the disclosed embodiments will be readily apparent to those skilled in the art and the general principles defined herein may be applied to other embodiments and applications without departing from the spirit and scope of the present disclosure. Thus the present invention is not limited to the embodiments shown but is to be accorded the widest scope consistent with the principles and features disclosed herein.

Embodiments of the present invention provide a system which facilitates handling a potential timeout event when a content producing device e.g. a server requires additional time to generate a matching Content Object in response to an Interest from a content requesting device e.g. a client . During operation a content producer receives an Interest message from a content requester and determines that additional time is required to generate the matching Content Object. The content producer notifies the intermediate routers by sending a keep alive control packet which indicates that a corresponding entry in the Pending Interest Table PIT of each intermediate router is to be kept alive for a certain amount of time. The keep alive control packet includes the same name as the Interest an indicator that the control packet is a keep alive message and a time period corresponding to how long the intermediate router is to continue storing the entry in its PIT. The intermediate router adds the indicated time period to the timeout value for the PIT entry. If no value is specified for the time period the system uses a predetermined default value. The intermediate router then forwards the keep alive control packet to all of the interfaces specified in the corresponding PIT entry e.g. all of the interfaces that previously forwarded the Interest message. In this manner the keep alive control packet is propagated through the network to all of the intermediate routers along the paths which the Interest has previously been transmitted.

Intermediate CCN routers keep track of the computation progress of the content producer by maintaining the state associated with the Interest for the duration of the computation time required by the content producer to generate the responsive Content Object. Thus the Interest is kept alive through notification to the intermediate routers in the form of keep alive control packets and subsequent updates to the corresponding PIT entries of all intermediate routers in the path of the Interest. This solution reduces the amount of unnecessary PIT entry timeouts and frees PIT spaces which in turn reduces network congestion by reducing the number of re expressed Interests transmitted and pending in a CCN.

In CCN each piece of content is individually named and each piece of data is bound to a unique name that distinguishes the data from any other piece of data such as other versions of the same data or data from other sources. This unique name allows a network device to request the data by disseminating a request or an Interest that indicates the unique name and can obtain the data independent from the data s storage location network location application and means of transportation. The following terms are used to describe the CCN architecture 

A single piece of named data which is bound to a unique name. Content Objects are persistent which means that a Content Object can move around within a computing device or across different computing devices but does not change. If any component of the Content Object changes the entity that made the change creates a new Content Object that includes the updated content and binds the new Content Object to a new unique name.

A name in a CCN is typically location independent and uniquely identifies a Content Object. A data forwarding device can use the name or name prefix to forward a packet toward a network node that generates or stores the Content Object regardless of a network address or physical location for the Content Object. In some embodiments the name may be a hierarchically structured variable length identifier HSVLI . The HSVLI can be divided into several hierarchical components which can be structured in various ways. For example the individual name components parc home ccn and test.txt can be structured in a left oriented prefix major fashion to form the name parc home ccn test.txt. Thus the name parc home ccn can be a parent or prefix of parc home ccn test.txt. Additional components can be used to distinguish between different versions of the content item such as a collaborative document.

In some embodiments the name can include a non hierarchical identifier such as a hash value that is derived from the Content Object s data e.g. a checksum value and or from elements of the Content Object s name. A description of a hash based name is described in U.S. patent application Ser. No. 13 847 814. A name can also be a flat label. Hereinafter name is used to refer to any name for a piece of data in a name data network such as a hierarchical name or name prefix a flat name a fixed length name an arbitrary length name or a label e.g. a Multiprotocol Label Switching MPLS label .

A packet that indicates a request for a piece of data and includes a name or a name prefix for the piece of data. A data consumer can disseminate a request or Interest across an information centric network which CCN routers can propagate toward a storage device e.g. a cache server or a data producer that can provide the requested data to satisfy the request or Interest.

The methods disclosed herein are not limited to CCN networks and are applicable to other architectures as well. A description of a CCN architecture is described in U.S. patent application Ser. No. 12 338 175.

For example content requesting device can generate an Interest in a piece of content. Network routes the Interest to CCN router which adds an entry in its pending Interest table PIT and forwards the Interest to intermediate CCN router . Each CCN router that receives the Interest performs the same actions adding an entry in its PIT and forwarding the Interest to the interfaces specified by a Forwarding Information Base FIB of the router. For example the FIB of CCN router can specify that the Interest is to be forwarded on to interfaces at nodes and where an Interest forwarded through node travels from node to nodes and while an Interest forwarded through node travels from node to nodes and . Subsequently CCN router adds an entry in its PIT including an indication that the Interest was received on interfaces corresponding to nodes and and forwards the Interest to content producing device . Device determines that additional computation time is required to generate the matching Content Object and sends a keep alive control packet to its CCN forwarder CCN router . The keep alive control packet indicates a time period for which CCN router is to continue storing the corresponding PIT entry. The keep alive control packet can also include a name which is the same as the Interest and an indicator that the control packet is a keep alive message. CCN router updates its PIT entry by adding the indicated time period to a timeout value and forwards the keep alive control packet to all of the interfaces specified for the PIT entry e.g. interfaces corresponding to nodes and . For example the keep alive control packet travels from node to nodes and and also from node to nodes and . Each intermediate node that receives the keep alive control packet performs the same actions as router updating the PIT entry timeout value and forwarding to all specified interfaces.

Content producing device can send multiple keep alive control packets for the same Interest. For example content producing device can first send a keep alive control packet indicating a 20 second time period and then determine that additional time is required to generate the responsive Content Object. Device can subsequently send an updated keep alive control packet indicating e.g. a 30 second time period. When content producing device has completed the computation required to generate the responsive Content Object device transmits the matching Content Object to content requesting device back along the same path in the reverse direction. Each intermediate router again forwards the matching Content Object to the previous hop node in the reverse data path and removes the corresponding PIT entry.

Intermediate router forwards the Interest on to content producing device operation . Device determines that additional computation time is needed to generate the matching Content Object and generates a keep alive control packet operation . Device then transmits a keep alive control packet to intermediate router operation . The keep alive control packet indicates the same name as the Interest an indicator that the packet is a keep alive control packet and a time period for how long a receiving intermediate CCN router is to continue to keep alive the corresponding Interest. In some embodiments the intermediate node determines whether the keep alive control packet corresponds to a PIT entry based on the name of the Interest or other matching criteria included in the keep alive control packet such as the KeyId restriction and or the Content Object Hash restriction. The keep alive control packet specifies the restrictions present in the Interest and can also include a summary of the Interest such as a SHA 256 hash of the Interest message. Upon determining that the keep alive control packet corresponds to its PIT entry intermediate router updates its PIT entry by adding the specified time period to a timeout value operation and forwards the keep alive control packet on as described in relation to operation .

Meanwhile content producing device has successfully completed generation of the Content Object matching the Interest operation so device transmits a responsive Content Object back to intermediate router operation . Router removes the corresponding PIT entry indicating that the Interest has been fulfilled operation and forwards the responsive Content Object to the previous hop node in the reverse data path operation .

In a further embodiment the system can allow a virtual connection to be maintained operation by an Internet Service Provider ISP between the content producing node e.g. a server and a content requesting node e.g. a client based on the keep alive control packet operation . The ISP can charge a server or service at the content producing node based on the number of virtual connections open during a particular billing period. Additionally virtual connections provided during peak traffic times can incur additional costs.

Optionally the content producing node can compute a hashcash value operation and include the computed hashcash value in the keep alive control packet operation . The hashcash computation can become progressively more complex each time the computation is performed thus providing the content producing node with a negative incentive for generating and transmitting subsequent keep alive control packets for the same Interest. In this manner the system mitigates network congestion by discouraging the content producing node from unnecessarily extending the lifetime of entries in the PIT.

After the various congestion mitigation techniques are employed the content producing node transmits the keep alive control packet to an intermediate node operation . After the necessary computation has been performed the content producing node generates the responsive Content Object operation and transmits the responsive Content Object to the previous hop node in the reverse data path as the Interest operation .

Content processing system can include instructions which when executed by computer and communication system can cause computer and communication system to perform methods and or processes described in this disclosure. Specifically content processing system may include instructions for receiving by an intermediate node a keep alive control packet which indicates a name for an Interest message an indicator to keep alive a Pending Interest Table PIT entry corresponding to the name and a time period for which to keep the PIT entry alive communication mechanism . Content processing system can also include instructions for updating a timeout value of the PIT entry based on the time period indicated in the keep alive control packet Pending Interest Table mechanism . Content processing system can include instructions for responsive to determining one or more interfaces specified in the PIT entry from which the Interest message is received forwarding the keep alive control packet to the one or more interfaces communication mechanism .

Content processing system can further include instructions for responsive to determining that no time period is indicated in the keep alive control packet updating the timeout value of the PIT entry based on a predetermined value Pending Interest Table mechanism . Content processing system can receive a Content Object in response to the Interest communication mechanism and remove the PIT entry corresponding to the name for the Interest Pending Interest Table mechanism .

Content processing system can also include instructions for receiving a predetermined number for entries in the PIT for a name prefix where the name prefix comprises one or more name components of a hierarchically structured variable length identifier HSVLI congestion mitigation mechanism . Content processing system can include instructions for responsive to determining that the predetermined number of entries for the name prefix has been reached congestion mitigation mechanism timing out additional PIT entries with the same name prefix Pending Interest Table mechanism .

Content processing system can further include instructions for generating by a content producing node a keep alive control packet which indicates a name for an Interest message an indicator to keep a PIT entry corresponding to the name alive and a time period for which to keep the PIT entry alive keep alive control packet mechanism . Content processing system can include instructions for transmitting the keep alive control packet to an intermediate node communication mechanism . Content processing system can include instructions for generating a Content Object in response to the Interest content generation mechanism and transmitting the Content Object to another node communication mechanism .

Content processing system can also include instructions for computing a hashcash value and including the computed hashcash value in the keep alive control packet where the hashcash computation becomes progressively more complex each time the computation is performed congestion mitigation mechanism . Content processing system can also include instructions for allowing a virtual connection provided by an ISP between the content producing node and a content requesting node to be maintained based on the keep alive control packet congestion mitigation mechanism .

Content processing system can further include instructions for receiving a predetermined number of tokens from an upstream node where a token corresponds to a time period for which to keep alive a PIT entry in the content producing node congestion mitigation mechanism . Content processing system can include instructions for consuming a token in exchange for generating the keep alive control packet where the time period for which to keep the PIT entry alive is the time period corresponding to the token congestion mitigation mechanism . Content processing system can include instructions for removing a token based on negative behavior of the content producing node congestion mitigation mechanism .

Data can include any data that is required as input or that is generated as output by the methods and or processes described in this disclosure. Specifically data can store at least a packet that corresponds to an Interest message a name for the Interest a name for the Interest that is a hierarchically structured variable length identifier HSVLI which comprises contiguous name components ordered from a most general level to a most specific level a name prefix where the name prefix comprises one or more name components of an HSVLI an entry in a Pending Interest Table PIT a keep alive control packet which indicates a name for an Interest message an indicator to keep alive the PIT entry and a time period for which to keep the PIT entry alive a timeout value of the PIT entry one or more interfaces in the PIT entry from which the Interest message is received a predetermined time period a predetermined time period that can be dynamically adjusted by routers based on network conditions a packet that corresponds to a Content Object a predetermined number for entries in the PIT for a name prefix a hashcash value whose computation becomes progressively more complex each time the computation is performed a predetermined number of tokens where a token corresponds to a time period for which to keep alive a PIT entry information relating to reputation of a content producing device and information relating to historical or negative behavior of the content producing device.

The data structures and code described in this detailed description are typically stored on a computer readable storage medium which may be any device or medium that can store code and or data for use by a computer system. The computer readable storage medium includes but is not limited to volatile memory non volatile memory magnetic and optical storage devices such as disk drives magnetic tape CDs compact discs DVDs digital versatile discs or digital video discs or other media capable of storing computer readable media now known or later developed.

The methods and processes described in the detailed description section can be embodied as code and or data which can be stored in a computer readable storage medium as described above. When a computer system reads and executes the code and or data stored on the computer readable storage medium the computer system performs the methods and processes embodied as data structures and code and stored within the computer readable storage medium.

Furthermore the methods and processes described above can be included in hardware modules or apparatus. The hardware modules or apparatus can include but are not limited to application specific integrated circuit ASIC chips field programmable gate arrays FPGAs dedicated or shared processors that execute a particular software module or a piece of code at a particular time and other programmable logic devices now known or later developed. When the hardware modules or apparatus are activated they perform the methods and processes included within them.

The foregoing descriptions of embodiments of the present invention have been presented for purposes of illustration and description only. They are not intended to be exhaustive or to limit the present invention to the forms disclosed. Accordingly many modifications and variations will be apparent to practitioners skilled in the art. Additionally the above disclosure is not intended to limit the present invention. The scope of the present invention is defined by the appended claims.

