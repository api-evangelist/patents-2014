---

title: Systems and methods for pre-installation detection of malware on mobile devices
abstract: A computer-implemented method for pre-installation detection of malware on mobile devices may include intercepting one or more communications of an application installation agent that installs applications on a mobile computing device. The method may further include identifying, based on the one or more intercepted communications, an application that has been at least partially downloaded by the application installation agent. The method may also include, in response to identifying the application, and before the application is installed on the mobile computing device, scanning the application for malware. The method may additionally include determining, based on the scan, that the application contains malware. The method may finally include performing a security action in response to determining that the application contains malware. Various other methods, systems, and computer-readable media are also disclosed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09256738&OS=09256738&RS=09256738
owner: Symantec Corporation
number: 09256738
owner_city: Mountain View
owner_country: US
publication_date: 20140311
---
Protecting mobile devices from malware is an integral part of mobile device security. As a result security software developers are continuously seeking ways to improve the speed efficiency and efficacy of mobile device anti malware systems. Many anti malware systems detect malware by scanning files for known malware signatures. If an anti malware system detects code within a file that matches a known malware signature the anti malware system may then perform a variety of security actions such as quarantining or deleting the file. At this point unfortunately the malware file may have already compromised the security of the mobile device. This may prove especially true when malware is downloaded by app store clients e.g. GOOGLE PLAY clients or IOS APP STORE clients . For example traditional anti malware systems on a smartphone may wait to scan an application until after an app store client has downloaded and installed the application on the smartphone. This window of time between installation and scanning no matter how small may be enough for malware to compromise the security of the smartphone.

What is needed therefore is a more efficient and effective mechanism for pre installation detection of malware on mobile devices.

As will be described in greater detail below the instant disclosure describes various systems and methods for pre installation detection of malware on mobile devices. For example a method for pre installation detection of malware on mobile devices may include intercepting one or more communications of an application installation agent that installs applications on a mobile computing device. The method may further include identifying based on the one or more intercepted communications an application that has been at least partially downloaded by the application installation agent. The method may also include in response to identifying the application and before the application is installed on the mobile computing device scanning the application for malware. The method may additionally include determining based on the scan that the application contains malware. The method may further include performing a security action in response to determining that the application contains malware.

In some embodiments a monitoring agent may launch the application installation agent such that the monitoring agent is capable of intercepting communications from the application installation agent. In these embodiments after launching the application installation agent the monitoring agent may perform the intercepting and identifying steps described above.

In at least one embodiment intercepting the one or more communications of the application installation agent may include intercepting a request from the application installation agent to download the application from a remote server. In some examples intercepting the one or more communications of the application installation agent may include intercepting a request by the application installation agent to install the application on the mobile computing device. In these examples identifying the application may include identifying the file path for the application based on the request to install the application on the mobile computing device. In some embodiments identifying the application may further include providing the file path to a scanning agent that performs the scanning step.

In various examples scanning the application may include scanning the application while the application is downloading and or after the application has fully downloaded. In at least one example performing the security action may include blocking installation of the application.

In one embodiment a system for implementing the above described method may include an interception module stored in memory that intercepts one or more communications of an application installation agent that installs applications on a mobile computing device. The system may further include an identification module stored in memory that identifies based on the one or more intercepted communications an application that has been at least partially downloaded by the application installation agent. The system may also include a scanning module stored in memory that scans the application before the application is installed on the mobile computing device. The system may additionally include a determination module stored in memory that determines based on the scan that the application contains malware. The system may further include a security module stored in memory that performs a security action in response to determining that the application contains malware. In addition the system may include at least one physical processor that executes the interception module the identification module the scanning module the determination module and the security module.

In some examples the above described method may be encoded as computer readable instructions on a non transitory computer readable medium. For example a computer readable medium may include one or more computer executable instructions that when executed by at least one processor of a mobile computing device may cause the mobile computing device to intercept one or more communications of an application installation agent that installs applications on the mobile computing device. The one or more computer executable instructions may further cause the mobile computing device to identify based on the one or more intercepted communications an application that has been at least partially downloaded by the application installation agent. The one or more computer executable instructions may also cause the mobile computing device to scan the application for malware before the application is installed on the mobile computing device. The one or more computer executable instructions may additionally cause the mobile computing device to determine based on the scan that the application contains malware. The one or more computer executable instructions may further cause the mobile computing device to perform a security action in response to determining that the application contains malware.

Features from any of the above mentioned embodiments may be used in combination with one another in accordance with the general principles described herein. These and other embodiments features and advantages will be more fully understood upon reading the following detailed description in conjunction with the accompanying drawings and claims.

Throughout the drawings identical reference characters and descriptions indicate similar but not necessarily identical elements. While the exemplary embodiments described herein are susceptible to various modifications and alternative forms specific embodiments have been shown by way of example in the drawings and will be described in detail herein. However the exemplary embodiments described herein are not intended to be limited to the particular forms disclosed. Rather the instant disclosure covers all modifications equivalents and alternatives falling within the scope of the appended claims.

The present disclosure is generally directed to systems and methods for pre installation detection of malware on mobile devices. As will be explained in greater detail below the systems and methods described herein may intercept communications of an application installation agent in order to detect malware before it is installed on a mobile computing device. Specifically by intercepting requests from an application installation agent to download an application and or install an application scanning the application for malware and then blocking installation of the application the systems and methods herein may help antimalware developers create robust pro active anti malware systems.

The following will provide with reference to and detailed descriptions of exemplary systems for pre installation detection of malware on mobile devices. Detailed descriptions of corresponding computer implemented methods will also be provided in connection with . In addition detailed descriptions of an exemplary computing system and network architecture capable of implementing one or more of the embodiments described herein will be provided in connection with respectively.

In certain embodiments one or more of modules in may represent one or more software applications or programs that when executed by a computing device may cause the computing device to perform one or more tasks. For example and as will be described in greater detail below one or more of modules may represent software modules stored and configured to run on one or more computing devices such as the devices illustrated in e.g. mobile computing device and or server smartphone in computing system in and or portions of exemplary network architecture in . One or more of modules in may also represent all or portions of one or more special purpose computers configured to perform one or more tasks.

As illustrated in exemplary system may also include one or more databases such as malware signature database . In one example malware signature database may be configured to store a variety of known malware signatures. In this example an anti malware system may scan files on a mobile computing device to detect malware signatures similar to those found in malware signature database . In this way an anti malware system e.g. anti malware system in may utilize malware signature database to detect malware on a mobile computing device.

Malware signature database may represent portions of a single database or computing device or a plurality of databases or computing devices. For example malware signature database may represent a portion of server in smartphone in FIG. computing system in and or portions of exemplary network architecture in . Alternatively malware signature database in may represent one or more physically separate devices capable of being accessed by a computing device such as server in smartphone in computing system in and or portions of exemplary network architecture in .

Exemplary system in may be implemented in a variety of ways. For example all or a portion of exemplary system may represent portions of exemplary system in . As shown in system may include a mobile computing device in communication with a server via a network . In one example mobile computing device may be programmed with one or more of modules and or may store all or a portion of the data in malware signature database . Additionally or alternatively server may be programmed with one or more of modules and or may store all or a portion of the data in malware signature database .

In one embodiment one or more of modules from may when executed by at least one processor of mobile computing device and or server enable mobile computing device and or server to scan and detect malware before it is installed on mobile computing device . For example and as will be described in greater detail below interception module may intercept one or more communications of an application installation agent that installs applications on mobile computing device . Identification module may then identify based on the one or more intercepted communications an application that has been at least partially downloaded by application installation agent . In response to identification module identifying application and before application is installed on mobile computing device scanning module may scan application for malware. Determination module may then determine based on the scan of application that application contains malware. Finally security module may perform a security action in response to determining that application contains malware.

Mobile computing device generally represents any type or form of computing device capable of reading computer executable instructions. Examples of mobile computing device include without limitation laptops tablets cellular phones Personal Digital Assistants PDAs multimedia players embedded systems wearable devices e.g. smart watches smart glasses etc. gaming consoles combinations of one or more of the same smartphone in exemplary computing system in or any other suitable computing device.

Server generally represents any type or form of computing device capable of hosting and providing applications to app store clients installed on mobile devices. For example server may be part of the GOOGLE PLAY service and may allow smartphones configured with a GOOGLE PLAY client to download GOOGLE PLAY applications. Examples of server include without limitation application servers and database servers configured to provide various database services and or run certain software applications.

Network generally represents any medium or architecture capable of facilitating communication or data transfer. Examples of network include without limitation an intranet a Wide Area Network WAN a Local Area Network LAN a Personal Area Network PAN the Internet Power Line Communications PLC a cellular network e.g. a Global System for Mobile Communications GSM network exemplary network in exemplary network architecture in or the like. Network may facilitate communication or data transfer using wireless or wired connections. In one embodiment network may facilitate communication between mobile computing device and server .

As illustrated in at step one or more of the systems described herein may intercept one or more communications of an application installation agent that installs applications on a mobile computing device. For example interception module may as part of mobile computing device in intercept one or more communications of application installation agent .

As used herein the term communication generally refers to any type or form of input output sent from or received by a process application software module and or program. In addition the term communication may generally refer to any type or form of interaction between two software modules such as communications exchanged via Application Programming Interface API calls or via other communication protocols FTP HTTPS etc . In some examples a communication may include attempts by an application process to read or write data to or from a storage device. For example an application installation agent may call a system API to store and or install applications on a smartphone storage device. Communications may include any other suitable interactions input output and or data sent from and or received by any type of software.

A variety of information and or data may be sent via a communication. For example an executable file or script may be sent from an application store server to an application store client on a smart phone. In another example an application installation agent may call an API on a remote server by sending specific parameters to the API. Examples of data that may be sent via a communication may include without limitation any type or form of application files e.g. android package files APKs or iPhone application archives IPAs executables scripts libraries API parameters protocol parameters database files compressed files input output data or any other suitable type or form of data.

A communication between two software modules such as an application installation agent and an API on a remote server may be sent via a variety of protocols. For example an application installation agent and a remote server may communicate via Hyper Text Transfer Protocol HTTP or File Transfer Protocol FTP . In some examples processes within the same system may communicate via system specific protocols. For example applications on ANDROID devices may communicate with each other and other system processes via a variety of ANDROID specific protocols and parameters such as e.g. an intent declaration.

The phrase application installation agent as used herein generally refers to any type or form of application store client installed on a mobile computing device that is configured to download and install applications to the mobile computing device from a remote server e.g. GOOGLE PLAY clients or IOS APP STORE clients . For example an application installation agent may include a client side smartphone app that allows a user of the smartphone to search for and download applications from an application store. An application installation agent may include any other suitable service app and or software module that generally automates the process of downloading and installing applications on a mobile device.

An application installation agent may be configured to download and install a variety of applications and files e.g. ANROID APKs or IOS IPAs from a remote server that hosts applications. Additionally an application installation agent may be configured to communicate with a remote server via a variety of protocols as discussed above across a variety of networks and network configurations. For example an application installation agent may be configured to download and install applications via the internet a cellular network or any other suitable type of network.

Interception module may intercept one or more communications of application installation agent in a variety of ways. For example interception module may intercept a request from application installation agent to download application from server . In some embodiments interception module may intercept a request by application installation agent to install application on mobile computing device . For example on ANDROID devices interception module may intercept a request to install application by intercepting intent declarations sent from application installation agent .

In various embodiments interception module may be part of a monitoring agent such as monitoring agent in . In these embodiments the monitoring agent may launch application installation agent such that the monitoring agent is capable of intercepting communications from application installation agent . For example a monitoring agent that is part of an anti malware system on a smartphone may launch and set permissions for an application store client installed on the smartphone. Configurations such as this may enable the monitoring agent to perform various monitoring tasks such as hooking the input output of application installation agent . In at least one embodiment the monitoring agent may be configured to interrupt and redirect attempts to launch application installation agent . For example when a smartphone user attempts to launch an application store client a monitoring agent may interrupt the launch attempt and then re launch the application store client as a process that the monitoring agent can monitor.

As illustrated in at step one or more of the systems described herein may identify based on the one or more intercepted communications an application that has been at least partially downloaded by the application installation agent. For example identification module may as part of mobile computing device in identify application based on the one or more communications intercepted by interception module . In addition application may have been at least partially downloaded by application installation agent .

As used herein the term application generally refers to any type or form of executable file and or process. For example an application may include APK or IPA files. An application may be any size. For example an application may be as large as a 100 megabytes or as small as a few kilobytes. In some examples an application may include one or more files that can be installed in a variety of configurations on mobile computing device . In some examples an application may include files that can be installed at the system and application level of a mobile computing device .

Identification module may identify application in a variety of ways. For example identification module may identify application while application installation agent is downloading application from server . In some embodiments identification module may identify application after application installation agent requests to install application on mobile computing device . In at least one example identification module may identify application by identifying a file path for application based on the request by application installation agent to install application on mobile computing device . In various embodiments identification module may then send the file path for application to a scanning agent that performs the scanning step e.g. scanning module in or scanning agent in . In these embodiments the scanning agent may use the file path for application to locate and scan application .

In various embodiments identification module may be part of a monitoring agent. In these embodiments the monitoring agent may launch application installation agent in such a way that the monitoring agent is able to identify applications that have been at least partially downloaded by application installation agent . For example a monitoring agent may when launching application installation agent set permissions that allow the monitoring agent to identify attempts by application installation agent to download and or install application .

Identification module may identify application at any suitable time before application is installed. For example identification module may identify application while application installation agent is downloading application . In another example identification module may identify application after application installation agent has fully downloaded application .

At illustrated in at step one or more of the systems described herein may in response to identifying the application and before the application is installed on the mobile computing device scan the application for malware. For example scanning module may as part of mobile computing device in scan application for malware. In addition scanning module may scan application before application installation agent installs application on mobile computing device .

Scanning module may scan application using a variety of malware scanning methods. Examples of malware scanning methods may include without limitation string scanning methods wildcards methods mismatches methods generic detection methods bookmarks methods smart scanning methods skeleton detection methods heuristics analysis virus specific detection and or any other suitable malware scanning process.

Scanning module may scan application in a variety of ways. For example scanning module may scan application while application installation agent downloads application . In some embodiments scanning module may scan application after application installation agent has fully downloaded application . In at least one example scanning module may scan application in response to an attempt by application installation agent to install application . In various examples scanning module may scan application immediately after identification module identifies application .

According to some embodiments scanning module may scan application using a signature matching method. In these embodiments scanning module may scan application to find matches to know malware signatures such as malware signatures stored in malware signature database .

As illustrated in at step on or more of the systems described herein may determine based on the scan that the application contains malware. For example determination module may determine that application contains malware based on the scan of application .

As user herein the term malware generally refers to any type or form of code script application software module process and or any other type of computer executable instruction configured to behave in generally hostile intrusive unsafe undesirable and or malicious way. For example malware may include a spyware program on a smartphone that collects sensitive or private data. In another example malware may include a malicious computer virus that attempts to disrupt computer operations by performing malicious functions such as e.g. deleting files or corrupting system processes. General examples of malware may include without limitation computer viruses ransomware worms trojan horses rootkits keyloggers dialers spyware adware rogue security software malicious Browser Helper Objects BHOs and or any suitable type or form of malware.

Determination module may determine that application contains malware in a variety of ways. For example determination module may determine that application contains malware if any code within application is similar to or matches known malware signatures such as those stored in malware signature database . In some embodiments determination module may determine that application contains malware if at least one computer executable instruction of application matches a malware signature. In some examples determination module may determine that application is in and of itself a malware program. In at least one example determination module may determine that application contains malware if any part or portion of application is suspected of being malware regardless of whether that part or portion of application is malware or not. For example determination module may use a heuristic algorithm to make an informed guess or determination that application contains malware. Determination module may determine that application contains malware in any other suitable way.

As illustrated in at step one or more of the systems described herein may perform a security action in response to determining that the application contains malware. For example security module may as part of mobile computing device perform a security action.

As used herein the phrase security action when used with reference to the instant disclosure generally refers to any steps taken by a software module such as security module to improve the security of a mobile computing device. For example an anti malware system may perform a security action by attempting to quarantine a file after determining that the file contains malware. Examples of security actions may include without limitation creating security logs quarantining or deleting files that contain malware notifying a user of a mobile device about malware detected on the device blocking installation of malware and or any other suitable step or action that attempts to improve the security of a mobile device.

Security module may perform a variety of security actions when determination module determines that application contains malware. For example security module may quarantine or delete application . In another example security module may alert a user of mobile computing device that application contains malware. In some embodiments security module may store information about application to in a security log. In various embodiments security module may perform a combination of security actions. For example security module may quarantine application and then notify a user of mobile computing device that application contains malware.

In at least one example security module may block installation of application . For example security module may block an attempt by application installation agent to install application on mobile computing device . In another example security module may prevent application installation agent from even attempting to install application .

As briefly mentioned above method may be incorporated in an anti malware system stored on a smartphone. System in is an exemplary illustration an anti malware system that is configured with all of modules and stored on smartphone . In this illustration anti malware system includes a monitoring agent and a scanning agent . When a user of smartphone attempts to launch application store client monitoring agent may redirect the attempt and launch application store client into a process that monitoring agent can monitor. By doing so monitoring agent may be able to intercept communications sent from and or received by application store client such as attempts to download and install music application .

In this illustration monitoring agent may hook an input output process of application store client and therefore detect that application store client is downloading music application from application store server via network . Monitoring agent may identify and provide a file path for music application to scanning agent and then instruct scanning agent to scan music application . In this example scanning agent may be a malware scanning module that is configured to use the file path to locate files and then determine whether the files contain malware by using a signature match scanning method.

Scanning agent may then scan music application either while music application is downloading or after music application has been fully downloaded and may determine that music application contains malware. At this point scanning agent may notify anti malware system that application contains malware. Anti malware system may in response block any attempt by application store client to install music application . Anti malware system may also report the incident in a security log and then notify a user of smartphone that music application contains malware.

As explained above in connection with method in app store clients may compromise the security of a mobile device by installing an application onto a mobile device before the application has been scanned for malware. While some solutions may attempt to address this problem by scanning the application immediately after installation they fail to address the potentially serious issue that malware even when installed for a short time may severely compromise the security of a mobile device.

The instant disclosure may overcome this problem by scanning an application for malware before the application is installed on a mobile device. Specifically by hooking the input output of an application store client identifying an application and then scanning the application for malware the systems and methods described herein may detect malware before it is installed on a mobile device thus preventing a host of potentially serious security issues.

Computing system broadly represents any single or multi processor computing device or system capable of executing computer readable instructions. Examples of computing system include without limitation workstations laptops client side terminals servers distributed computing systems handheld devices or any other computing system or device. In its most basic configuration computing system may include at least one processor and a system memory .

Processor generally represents any type or form of physical processing unit e.g. a hardware implemented central processing unit capable of processing data or interpreting and executing instructions. In certain embodiments processor may receive instructions from a software application or module. These instructions may cause processor to perform the functions of one or more of the exemplary embodiments described and or illustrated herein.

System memory generally represents any type or form of volatile or non volatile storage device or medium capable of storing data and or other computer readable instructions. Examples of system memory include without limitation Random Access Memory RAM Read Only Memory ROM flash memory or any other suitable memory device. Although not required in certain embodiments computing system may include both a volatile memory unit such as for example system memory and a non volatile storage device such as for example primary storage device as described in detail below . In one example one or more of modules from may be loaded into system memory .

In certain embodiments exemplary computing system may also include one or more components or elements in addition to processor and system memory . For example as illustrated in computing system may include a memory controller an Input Output I O controller and a communication interface each of which may be interconnected via a communication infrastructure . Communication infrastructure generally represents any type or form of infrastructure capable of facilitating communication between one or more components of a computing device. Examples of communication infrastructure include without limitation a communication bus such as an Industry Standard Architecture ISA Peripheral Component Interconnect PCI PCI Express PCIe or similar bus and a network.

Memory controller generally represents any type or form of device capable of handling memory or data or controlling communication between one or more components of computing system . For example in certain embodiments memory controller may control communication between processor system memory and I O controller via communication infrastructure .

I O controller generally represents any type or form of module capable of coordinating and or controlling the input and output functions of a computing device. For example in certain embodiments I O controller may control or facilitate transfer of data between one or more elements of computing system such as processor system memory communication interface display adapter input interface and storage interface .

Communication interface broadly represents any type or form of communication device or adapter capable of facilitating communication between exemplary computing system and one or more additional devices. For example in certain embodiments communication interface may facilitate communication between computing system and a private or public network including additional computing systems. Examples of communication interface include without limitation a wired network interface such as a network interface card a wireless network interface such as a wireless network interface card a modem and any other suitable interface. In at least one embodiment communication interface may provide a direct connection to a remote server via a direct link to a network such as the Internet. Communication interface may also indirectly provide such a connection through for example a local area network such as an Ethernet network a personal area network a telephone or cable network a cellular telephone connection a satellite data connection or any other suitable connection.

In certain embodiments communication interface may also represent a host adapter configured to facilitate communication between computing system and one or more additional network or storage devices via an external bus or communications channel. Examples of host adapters include without limitation Small Computer System Interface SCSI host adapters Universal Serial Bus USB host adapters Institute of Electrical and Electronics Engineers IEEE 1394 host adapters Advanced Technology Attachment ATA Parallel ATA PATA Serial ATA SATA and External SATA eSATA host adapters Fibre Channel interface adapters Ethernet adapters or the like. Communication interface may also allow computing system to engage in distributed or remote computing. For example communication interface may receive instructions from a remote device or send instructions to a remote device for execution.

As illustrated in computing system may also include at least one display device coupled to communication infrastructure via a display adapter . Display device generally represents any type or form of device capable of visually displaying information forwarded by display adapter . Similarly display adapter generally represents any type or form of device configured to forward graphics text and other data from communication infrastructure or from a frame buffer as known in the art for display on display device .

As illustrated in exemplary computing system may also include at least one input device coupled to communication infrastructure via an input interface . Input device generally represents any type or form of input device capable of providing input either computer or human generated to exemplary computing system . Examples of input device include without limitation a keyboard a pointing device a speech recognition device or any other input device.

As illustrated in exemplary computing system may also include a primary storage device and a backup storage device coupled to communication infrastructure via a storage interface . Storage devices and generally represent any type or form of storage device or medium capable of storing data and or other computer readable instructions. For example storage devices and may be a magnetic disk drive e.g. a so called hard drive a solid state drive a floppy disk drive a magnetic tape drive an optical disk drive a flash drive or the like. Storage interface generally represents any type or form of interface or device for transferring data between storage devices and and other components of computing system . In one example malware signature database from may be stored in primary storage device .

In certain embodiments storage devices and may be configured to read from and or write to a removable storage unit configured to store computer software data or other computer readable information. Examples of suitable removable storage units include without limitation a floppy disk a magnetic tape an optical disk a flash memory device or the like. Storage devices and may also include other similar structures or devices for allowing computer software data or other computer readable instructions to be loaded into computing system . For example storage devices and may be configured to read and write software data or other computer readable information. Storage devices and may also be a part of computing system or may be a separate device accessed through other interface systems.

Many other devices or subsystems may be connected to computing system . Conversely all of the components and devices illustrated in need not be present to practice the embodiments described and or illustrated herein. The devices and subsystems referenced above may also be interconnected in different ways from that shown in . Computing system may also employ any number of software firmware and or hardware configurations. For example one or more of the exemplary embodiments disclosed herein may be encoded as a computer program also referred to as computer software software applications computer readable instructions or computer control logic on a computer readable medium. The phrase computer readable medium as used herein generally refers to any form of device carrier or medium capable of storing or carrying computer readable instructions. Examples of computer readable media include without limitation transmission type media such as carrier waves and non transitory type media such as magnetic storage media e.g. hard disk drives tape drives and floppy disks optical storage media e.g. Compact Disks CDs Digital Video Disks DVDs and BLU RAY disks electronic storage media e.g. solid state drives and flash media and other distribution systems.

The computer readable medium containing the computer program may be loaded into computing system . All or a portion of the computer program stored on the computer readable medium may then be stored in system memory and or various portions of storage devices and . When executed by processor a computer program loaded into computing system may cause processor to perform and or be a means for performing the functions of one or more of the exemplary embodiments described and or illustrated herein. Additionally or alternatively one or more of the exemplary embodiments described and or illustrated herein may be implemented in firmware and or hardware. For example computing system may be configured as an Application Specific Integrated Circuit ASIC adapted to implement one or more of the exemplary embodiments disclosed herein.

Client systems and generally represent any type or form of computing device or system such as exemplary computing system in . Similarly servers and generally represent computing devices or systems such as application servers or database servers configured to provide various database services and or run certain software applications. Network generally represents any telecommunication or computer network including for example an intranet a WAN a LAN a PAN or the Internet. In one example client systems and or and or servers and or may include all or a portion of system from .

As illustrated in one or more storage devices N may be directly attached to server . Similarly one or more storage devices N may be directly attached to server . Storage devices N and storage devices N generally represent any type or form of storage device or medium capable of storing data and or other computer readable instructions. In certain embodiments storage devices N and storage devices N may represent Network Attached Storage NAS devices configured to communicate with servers and using various protocols such as Network File System NFS Server Message Block SMB or Common Internet File System CIFS .

Servers and may also be connected to a Storage Area Network SAN fabric . SAN fabric generally represents any type or form of computer network or architecture capable of facilitating communication between a plurality of storage devices. SAN fabric may facilitate communication between servers and and a plurality of storage devices N and or an intelligent storage array . SAN fabric may also facilitate via network and servers and communication between client systems and and storage devices N and or intelligent storage array in such a manner that devices N and array appear as locally attached devices to client systems and . As with storage devices N and storage devices N storage devices N and intelligent storage array generally represent any type or form of storage device or medium capable of storing data and or other computer readable instructions.

In certain embodiments and with reference to exemplary computing system of a communication interface such as communication interface in may be used to provide connectivity between each client system and and network . Client systems and may be able to access information on server or using for example a web browser or other client software. Such software may allow client systems and to access data hosted by server server storage devices N storage devices N storage devices N or intelligent storage array . Although depicts the use of a network such as the Internet for exchanging data the embodiments described and or illustrated herein are not limited to the Internet or any particular network based environment.

In at least one embodiment all or a portion of one or more of the exemplary embodiments disclosed herein may be encoded as a computer program and loaded onto and executed by server server storage devices N storage devices N storage devices N intelligent storage array or any combination thereof. All or a portion of one or more of the exemplary embodiments disclosed herein may also be encoded as a computer program stored in server run by server and distributed to client systems and over network .

As detailed above computing system and or one or more components of network architecture may perform and or be a means for performing either alone or in combination with other elements one or more steps of an exemplary method for pre installation detection of malware on mobile devices.

While the foregoing disclosure sets forth various embodiments using specific block diagrams flowcharts and examples each block diagram component flowchart step operation and or component described and or illustrated herein may be implemented individually and or collectively using a wide range of hardware software or firmware or any combination thereof configurations. In addition any disclosure of components contained within other components should be considered exemplary in nature since many other architectures can be implemented to achieve the same functionality.

In some examples all or a portion of exemplary system in may represent portions of a cloud computing or network based environment. Cloud computing environments may provide various services and applications via the Internet. These cloud based services e.g. software as a service platform as a service infrastructure as a service etc. may be accessible through a web browser or other remote interface. Various functions described herein may be provided through a remote desktop environment or any other cloud based computing environment.

In various embodiments all or a portion of exemplary system in may facilitate multi tenancy within a cloud based computing environment. In other words the software modules described herein may configure a computing system e.g. a server to facilitate multi tenancy for one or more of the functions described herein. For example one or more of the software modules described herein may program a server to enable two or more clients e.g. customers to share an application that is running on the server. A server programmed in this manner may share an application operating system processing system and or storage system among multiple customers i.e. tenants . One or more of the modules described herein may also partition data and or configuration information of a multi tenant application for each customer such that one customer cannot access data and or configuration information of another customer.

According to various embodiments all or a portion of exemplary system in may be implemented within a virtual environment. For example the modules and or data described herein may reside and or execute within a virtual machine. As used herein the phrase virtual machine generally refers to any operating system environment that is abstracted from computing hardware by a virtual machine manager e.g. a hypervisor . Additionally or alternatively the modules and or data described herein may reside and or execute within a virtualization layer. As used herein the phrase virtualization layer generally refers to any data layer and or application layer that overlays and or is abstracted from an operating system environment. A virtualization layer may be managed by a software virtualization solution e.g. a file system filter that presents the virtualization layer as though it were part of an underlying base operating system. For example a software virtualization solution may redirect calls that are initially directed to locations within a base file system and or registry to locations within a virtualization layer.

In some examples all or a portion of exemplary system in may represent portions of a mobile computing environment. Mobile computing environments may be implemented by a wide range of mobile computing devices including mobile phones tablet computers e book readers personal digital assistants wearable computing devices e.g. computing devices with a head mounted display smartwatches etc. and the like. In some examples mobile computing environments may have one or more distinct features including for example reliance on battery power presenting only one foreground application at any given time remote management features touchscreen features location and movement data e.g. provided by Global Positioning Systems gyroscopes accelerometers etc. restricted platforms that restrict modifications to system level configurations and or that limit the ability of third party software to inspect the behavior of other applications controls to restrict the installation of applications e.g. to only originate from approved application stores etc. Various functions described herein may be provided for a mobile computing environment and or may interact with a mobile computing environment.

In addition all or a portion of exemplary system in may represent portions of interact with consume data produced by and or produce data consumed by one or more systems for information management. As used herein the phrase information management may refer to the protection organization and or storage of data. Examples of systems for information management may include without limitation storage systems backup systems archival systems replication systems high availability systems data search systems virtualization systems and the like.

In some embodiments all or a portion of exemplary system in may represent portions of produce data protected by and or communicate with one or more systems for information security. As used herein the phrase information security may refer to the control of access to protected data. Examples of systems for information security may include without limitation systems providing managed security services data loss prevention systems identity authentication systems access control systems encryption systems policy compliance systems intrusion detection and prevention systems electronic discovery systems and the like.

According to some examples all or a portion of exemplary system in may represent portions of communicate with and or receive protection from one or more systems for endpoint security. As used herein the phrase endpoint security may refer to the protection of endpoint systems from unauthorized and or illegitimate use access and or control. Examples of systems for endpoint protection may include without limitation anti malware systems user authentication systems encryption systems privacy systems spam filtering services and the like.

The process parameters and sequence of steps described and or illustrated herein are given by way of example only and can be varied as desired. For example while the steps illustrated and or described herein may be shown or discussed in a particular order these steps do not necessarily need to be performed in the order illustrated or discussed. The various exemplary methods described and or illustrated herein may also omit one or more of the steps described or illustrated herein or include additional steps in addition to those disclosed.

While various embodiments have been described and or illustrated herein in the context of fully functional computing systems one or more of these exemplary embodiments may be distributed as a program product in a variety of forms regardless of the particular type of computer readable media used to actually carry out the distribution. The embodiments disclosed herein may also be implemented using software modules that perform certain tasks. These software modules may include script batch or other executable files that may be stored on a computer readable storage medium or in a computing system. In some embodiments these software modules may configure a computing system to perform one or more of the exemplary embodiments disclosed herein.

In addition one or more of the modules described herein may transform data physical devices and or representations of physical devices from one form to another. For example one or more of the modules recited herein may transform an application installation agent process by re launching the application installation agent process so that a monitoring agent is able to monitor the application installation agent process. Additionally or alternatively one or more of the modules recited herein may transform a processor volatile memory non volatile memory and or any other portion of a physical computing device from one form to another by executing on the computing device storing data on the computing device and or otherwise interacting with the computing device.

The preceding description has been provided to enable others skilled in the art to best utilize various aspects of the exemplary embodiments disclosed herein. This exemplary description is not intended to be exhaustive or to be limited to any precise form disclosed. Many modifications and variations are possible without departing from the spirit and scope of the instant disclosure. The embodiments disclosed herein should be considered in all respects illustrative and not restrictive. Reference should be made to the appended claims and their equivalents in determining the scope of the instant disclosure.

Unless otherwise noted the terms connected to and coupled to and their derivatives as used in the specification and claims are to be construed as permitting both direct and indirect i.e. via other elements or components connection. In addition the terms a or an as used in the specification and claims are to be construed as meaning at least one of. Finally for ease of use the terms including and having and their derivatives as used in the specification and claims are interchangeable with and have the same meaning as the word comprising. 

