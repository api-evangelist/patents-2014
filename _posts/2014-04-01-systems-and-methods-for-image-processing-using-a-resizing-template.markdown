---

title: Systems and methods for image processing using a resizing template
abstract: Disclosed are various embodiments for systems and methods for image processing. A resizing template may be generated having one or more image sizes of an original image based at least in part on resize settings. A preview may then be generated of preview images of the original image based at least in part on the resizing template and the resize settings. The resize settings may be further adjusted via the preview. Upon approval of the preview and the adjusted resize settings, the original image is processed to generate final resized images according to the template and the modified resize settings.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09256919&OS=09256919&RS=09256919
owner: GRIT DESIGN, INC.
number: 09256919
owner_city: Detroit
owner_country: US
publication_date: 20140401
---
This application claims priority to copending U.S. Provisional Patent Application titled Systems and Methods for Image Processing filed on Apr. 5 2013 and assigned application No. 61 808 671 which is incorporated by reference herein in its entirety.

Images may be processed and resized to conform to various device and image size requirements. Processing an image can be a difficult and timely task. Rotating resizing renaming cropping and compressing are all various functions that may be performed when processing an image. While processing a single image is a timely task the time to process multiple images is exponentially greater as each image needs to be processed individually. One alternative to processing multiple images is batch processing with scripts. However batch processing with scripts requires implementing a set of commands and scripts for processing the images. Since not all images are the same the final images generated via batch processing with scripts may not all turn out as desired.

This disclosure relates to systems and methods for processing images. Specifically this disclosure relates to systems and methods for resizing an original image into multiple resized images having different sizes and aspect ratios at one time.

According to various embodiments of the present disclosure a user may choose an image source containing original images and an image destination for storing resized images. In some embodiments a user may select a preexisting template defining resize settings such as required image sizes file images image compressions image types cropping settings and or other information for image processing. The user may adjust the resize settings as desired. In other embodiments a user may create a new template defining the resize settings. Once the template and corresponding resize settings are determined a preview may be created to provide the user with a preview of the resized images to be generated from the original images according to the resize settings and template. The user may make further adjustments to the resized images in the preview prior to creating the final resized images. For example the user may crop certain images redefine image size delete a certain image size add a new image size change compression settings for a particular image etc. The resized images may be adjusted individually or as groups designated by the user or by the system. Once the resized images in the preview are approved the final resized images may be generated and stored in the image destination.

With reference to shown is a networked environment according to various embodiments. The networked environment includes a computing environment in data communication with one or more clients via a network . The network includes for example the Internet intranets extranets wide area networks WANs local area networks LANs wired networks wireless networks cable networks satellite networks or other suitable networks etc. or any combination of two or more such networks.

The computing environment may comprise for example a server computer or any other system providing computing capability. Alternatively the computing environment may employ a plurality of computing devices that may be arranged for example in one or more server banks computer banks or other arrangements. Such computing devices may be located in a single installation or may be distributed among many different geographical locations. For example the computing environment may include a plurality of computing devices that together may comprise a hosted or cloud computing resource a grid computing resource and or any other distributed computing arrangement. In some cases the computing environment may correspond to an elastic computing resource where the allotted capacity of processing network storage or other computing related resources may vary over time.

Various applications and or other functionality may be executed in the computing environment according to various embodiments. Also various data is stored in a data store that is accessible to the computing environment . The data store may be representative of a plurality of data stores as can be appreciated. The data stored in the data store for example is associated with the operation of the various applications and or functional entities described below.

The components executed on the computing environment for example include a resizing application and other applications services processes systems engines or functionality not discussed in detail herein. The resizing application is executed to facilitate the creation of a project for processing images and to process the images to generate a plurality of final resized images. The resizing application may comprise a template generator service a preview service a processing service and or other applications that may assist in facilitating and processing the images. The template generator service is executed to define and adjust a template for processing images. The template is used to define various resize settings for resized images for a project. In some embodiments the template generator service may be executed to create a new template for processing images. In other embodiments the template generator service may be executed to modify a predefined template . The preview service may be executed to generate a user interface comprising a preview of preview images of an original image according to the defined template and respective resize settings . The preview service further facilitates the ability to make further adjustments to one or more of the preview images and corresponding resize settings prior to final processing. The processing service is executed to process the original image into final resized images according to resize settings defined via the template generator service and or the preview service . The processing service may further store the final resize images into a destination location.

The data stored in the data store includes for example template s project s processing data network content data and potentially other data. The template s may include data defining parameters for resizing images for resizing projects . The template s may include resize settings corresponding to different templates for resizing projects . The resize settings may include information such as for example required image sizes file types file names image compressions image types watermark data resolution settings print specific settings unsharp masking settings filter settings image grouping settings preview style settings preview size settings cropping settings scaling settings padding settings margin settings and or other types of settings appropriate for image processing. The template s may comprise multiple templates for various types of projects based at least in part on an original image image source access point and or other appropriate features. The resize settings may correspond to a respective resize image and or multiple resize images. For example a template may include four different image sizes for an original image . Each one of the image sizes may have different resize settings . For example not only may the image sizes be the same or different from one another but one resized image corresponding to a first image size may have a compression setting that is different from another resize image corresponding to a second image size. This information is stored in the resize settings .

The project s includes data relating to image processing such as for example the location of the image source the location of the image destination the template s corresponding to the particular project the user information and or other appropriate data for a project . The processing data may include data that may be used to process the images according to the parameters defined by the template s and resize settings .

Network content data may include images text code graphics audio video and or other content that may be served up by the resizing application . To this end network content data may include static network content or static elements of network content for example in hypertext markup language HTML extensible markup language XML and or any other language suitable for creating network content. Further network content data may include code that generates dynamic network pages when executed or interpreted in the computing environment . Such code may be written in any suitable programming language such as PHP Perl Objective C Java Ruby etc. Network content data may also include code configured to be executed or interpreted within a client in order to render a dynamic network content. Such code may be referred to as applets and may be written in any suitable programming language such as JavaScript Java etc.

The client is representative of a plurality of client devices that may be coupled to the network . The client may comprise for example a processor based system such as a computer system. Such a computer system may be embodied in the form of a desktop computer a laptop computer personal digital assistants cellular telephones smartphones set top boxes music players web pads tablet computer systems game consoles electronic book readers or other devices with like capability. The client may include a display . The display may comprise for example one or more devices such as liquid crystal display LCD displays gas plasma based flat panel displays organic light emitting diode OLED displays electrophoretic ink E ink displays LCD projectors or other types of display devices etc.

The client may be configured to execute various applications such as a client application and or other applications. Also various data is stored in the data store that is accessible the client . The data stored in the data store for example is associated with the operation of the various applications and or functional entities described below.

The client application may be executed in a client for example to access network content served up by the computing environment and or other servers thereby rendering a user interface on the display . To this end the client application may comprise for example a browser a dedicated application etc. and the user interface may comprise a network page an application screen etc. The client may be configured to execute applications beyond the client application such as for example email applications social networking applications word processors spreadsheets and or other applications.

The data stored in the data store may include for example the image source the image destination and potentially other data. The image source may include the original images to be processed according to a resizing project created via the resizing application . The image source may include individual images or folders including multiple images. The original image s included in the image source may be changed depending on a user s needs may be controlled by a user may be used in multiple resize projects at a same time may be monitored for changes and adjustments and or may be changed at any time.

The image destination may include the final resized images . The image destination may comprise folders for storing the final resized images following processing. The image destination may be controlled by a user used in multiple resize projects at a same time monitored for changes and adjustments and or changed at any time depending on a user s needs. In various embodiments the resizing application may upload the original image s from the image source via the network . After the processing service of the resizing application has processed the original image s the resized images may be sent back over the network to the image destination for storage.

With reference to shown is a networked environment according another embodiment relating to image processing. The networked environment includes a computing environment in data communication with one or more clients and a computing environment via a network . In contrast to the networked environment the data store comprising the image source and the image destination may be located within the computing environment . Accordingly the resizing application may access the original image s from the image source and store the resized images in the image destination located within the computing environment which is external to both the client and the computing environment

With reference to shown is a networked environment according to another embodiment relating to image processing. The networked environment includes a computing environment in data communication with one or more clients via a network . In contrast to the networked environment and networked environment the resizing application is executed by the client . In addition the data stored in the data store in the computing environment is now stored in the data store in the client and is accessible by the client .

The components executed on the computing environment of include a social network application programming interface API and other applications services processes systems engines or functionality not discussed in detail herein. The social network API is configured to provide social networking data to the resizing application . The data stored in the data store includes for example the image source the image destination and or potentially other data. Accordingly the resizing application executed on the client may access the original images via the image source in the data store on the computing environment . The resizing application may store the resized images in the image destination data in the data store on the computing environment

It should be noted that describe various non limiting embodiments of the present disclosure. In other embodiments the resizing application may be accessed by a user via a cloud based interface a computing environment hereinafter the client a browser software plug ins an API third party integration etc.

In addition to the embodiment discussed in the image source may be external to the client and the computing environment . For example the image source may be a service such as for example Dropbox Box Flicker Picasa or other similar services. In other embodiments the image source may be a cloud storage device a social media service an API connection an asset management system a content management system a digital marketing automation system a work in progress system a social media feed or API a program such as WordPress Drupal or Joomla a private folder on a network and or other appropriate system. The image source may also include an email service camera integration and or other sources for direct upload.

In other embodiments of the present disclosure the image destination may be created and added to any connected network or structure such as for example the sources discussed above with respect to the image source . In addition the image destination may be located in a completely different location than the image source . For example the image source may be provided via a social media service and the image destination may be located on a client .

Next a general description of the operation of the various components of the networked environments is provided. To begin a user may access the resizing application to begin a project for processing and resizing one or more original images . In some embodiments the resizing application may be accessible via the computing environment or via the client . To create a project the image source and image destination are determined. A user may input a location for the image source and location for the image destination via a user interface rendered on the client . In some embodiments the image source comprises a single original image for processing. In other embodiments the image source comprises multiple original images for processing.

Upon selecting an image source and image destination for the project the user may create or select a template to be used for processing. In some embodiments the template comprises a set of predefined resize settings for an image processing project . For example the number and sizes of image sizes may be predefined. In addition the corresponding resize settings for each image size may be predefined. In other embodiments a user may create a template and specify the resize settings for a specific template and project . The user may input resize settings and or may choose from a predefined set of options. In other embodiments a user may modify a pre existing template to conform to specific resize settings selected by the user. For example a user may select a predefined template and may add a new image size to the template and or may delete an existing image size to the template .

Upon creating modifying and or selecting template a user may then save the template . Upon obtaining a request to save the template the resizing application may save the template accordingly and then generate a preview of the original image s obtained from the image source according to the template and resize settings . The preview may comprise preview images of the original image s according to the template and resize settings . The user may further make adjustments to each individual preview image prior to a final processing. For example the user may adjust the scale adjust the crop adjust the image color apply filters adjust the resize setting update the original image and or make other adjustments to the preview of preview images . When previewing the preview images the user may also view the preview images for other original images view images that have been adjusted add or adjust image tags share the preview access with other add comments to one or more preview images and or view previous versions of the images. Once the user has been able to preview the preview images and make desired adjustments the user may then request that the resizing application process the original image s in accordance to the template and modified resize settings to generate the final resized images . The processing service of the resizing application may process the original images to generate the final resized images and store the final resized images in the image destination .

In some embodiments the image destination may be monitored by the resizing application to determine whether other resizes of the original image s previously exist. Accordingly the processing service may only generate final resized images that are new or have been modified from the pre existing images in the image destination . In some embodiments the image destination is not monitored and the processing service may generate all of the final resized images according to the template and resize settings for the project .

Referring next to shown is an example of a user interface rendered by a client in the networked environment according to various embodiments of the present disclosure. In particular depicts an example of a create project view rendered by a client application executing on the client.

The create project view may include a name entry component an input source component an image destination component a create template component a select template component a create project component and or other appropriate components. The name entry component illustrates a component that a user may enter a name of a project . Although the name entry component is depicted as a text input field the name entry component may comprise a text area a drop down box and or other types of components. The input source component may be selected to select the image source for the original image s for the project . Upon selection of the input source component the user may be presented with a file listing including a list of potential image sources . The image destination component may be chosen to select the image destination for the final resized images for the project . Upon selection of the image destination component the user may be presented with a file listing including a list of potential image destinations . The create template component may be chosen when a user wants to create a new template for a project . Upon selection the user may be presented with a list of resize settings to define for creating a new template . The select template component may be chosen to select from one or more predefined templates . The create project component may be selected to create a project according to selected image source selected image destination selected template and or other project parameters.

Turning now to shown is drawing of an example of a user interface rendered by a client in the networked environment according to various embodiments of the present disclosure. In particular depicts an example of a template view and toolbar rendered by a client application executing on the client.

Specifically the template view may comprise multiple image sizes according to a template . The multiple image sizes may comprise image size image size image size and image size . In some embodiments the template may have more or less image sizes. The toolbar may comprise resizing setting components an add image size component and a save template button . The resizing setting components may include a width component a height component a compression setting component a scaling component a positioning component a file type component a file size component a preview size component and or other resizing setting components. In some embodiments the toolbar may comprise more or less components associated with the resize settings . The resize settings components may be used to define specific settings for a resizing project . In some embodiments the resizing setting components may be pre populated with resize settings corresponding to a selected template . In other embodiments a user may define the resize settings . In other embodiments the user may select the resize settings from a set of pre set options.

In one non limiting example the width component and the height component correspond to width and height settings for a respective image size . For example the width setting for image size may be 16 and the height setting for image size may be 9. The width and height settings for image size may be different than those for image size . Although the width component and the height component of comprise text input boxes the width component and height component may comprise a drop down box and or other appropriate type of component.

In another non limiting example the compression setting component may be selected by a user to define a compression setting for each image. For example the compression setting listed in corresponds to JPEG high. However the compression setting component may comprise a drop down box that includes other types of compression settings that may be selected for a given project . Although the compression setting component is depicted as a drop down box some embodiments may comprise one or more check boxes radio buttons or other type of component for selecting a type of compression setting.

With respect to other resize setting components the scaling component corresponds to a scaling setting for each resized image in a project . The positioning component may correspond to the positioning of an image for a specific image size . For example an image corresponding to a first image size may be positioned in the center for image size and may positioned to the left for image size . The file type component may be selected by a user to select a type of file for the image sizes . The file size component may be selected by a user to select a file size for the image sizes . The preview size component may be selected by a user to select the preview size of an image. For example the preview size component may be selected to request that the images in the preview are zoomed out to 50 .

The add image size component may be selected to add a new image size to the template corresponding to the template view . Upon selection of the add image size component a user may define parameters for a new image size . In some embodiments the user may remove an image size from the template corresponding to the template view . For example a user may select image size and request that the image size be deleted. The save template button may be selected to save the appropriate template according to the defined resize settings . The save template button may be selected to save the template as a new template and or save modifications to the current template . In addition upon selection for the save template button the resizing application may then generate a preview of original image as preview images according to the saved template and corresponding resize settings .

Moving on to shown is a drawing of an example of a user interface rendered by a client in the networked environment according to various embodiments of the present disclosure. In particular depicts an example of a preview and a toolbar rendered by a client application executing on the client.

The preview may comprise one or more sets of preview images hereinafter corresponding to the original images obtained from the image source . The preview images may correspond to image sizes as defined by the template and resize settings . For example the preview image corresponds to the image size of the template defined in . Accordingly the preview image corresponds to the image size the preview image corresponds to the image size and the preview image corresponds to the image size . In addition the preview of illustrates preview image corresponding to a first original image and preview image corresponding to a second original image .

The toolbar may comprise resizing setting components such as the resizing setting components of a process image component and or other components. In some embodiments a user may further define and adjust the resize settings for one or more of the preview images . For example the user may select preview image and request that the preview image be deleted. As such the resized settings may be modified to delete the corresponding image size . The user may also select the preview image and change the settings defining the image size via the user interface . In one embodiment the user may select the actual image and dynamically adjust the image size . In other embodiments the user may select a preview image and change one or more of the resize settings via the corresponding resize settings components.

The process image component may be selected by the user to request that the original image s be processed according to the template and modified resize settings .

Referring next to shown is a flowchart that provides one example of the operation of a portion of the resizing application according to various embodiments. It is understood that the flowchart of provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the portion of the resizing application as described herein. As an alternative the flowchart of may be viewed as depicting an example of elements of a method implemented in the computing environment and or client according to one or more embodiments.

Beginning with reference numeral the resizing application creates a project . In some embodiments the resizing application creates a project in response to a request obtained via a user interface rendered on a client . The project is created for an image processing project relating to processing an original image s to generate multiple final resized images for various image size requirements and or devices. At reference numeral the resizing application determines the image source for the original image s for the project . In some embodiments the user may select an image source define an image source and or notify the resizing application of the image source . As previously discussed the image source may be a folder and or subfolder of one or more original image s a single image email service a multimedia messaging service MMS Dropbox Box Flickr Picasa or other similar services a cloud storage device a social media service an API connection files folders within a cloud program files folders within or provided by an asset management system files folders within or provided by a content management system files folders within or provided by a digital marketing automation system files folders within or provided by a work in progress system files folders within or proved by a social media feed or API a folder in a program such as for example Wordpress Drupal or Joomla a private folder on a network a camera etc.

At reference numeral the resizing application determines the image destination for the final resized images . The image destination may be any one of the locations of the image source as defined above. In some embodiments the image destination may be different from the image source . For example the image source may be a social media service such as for example Facebook . However the image destination may be a folder local to the client . As previously discussed the image destination may be created and added to any connected network or structure including but not limited to the image sources discussed above.

At reference numeral the resizing application via the template generator service obtains a template for the project . In some embodiments the template is a predefined template is selected based at least in part on the image source the image destination the templates accessible via the resizing application and or other factors. In some embodiments a user may request via a user interface rendered on a client to create a new template .

At reference numeral the resizing application via the template generator service determines if any resize settings are to be adjusted. In some embodiments a user may request the resize settings be adjusted create new sizes and resize settings remove image sizes from a template etc. The user may also request that the resize settings corresponding to each resize image be adjusted. For example the user may adjust the file type including but not limited to .jpg .gif .png .psd .eps tif .pdf file compression file names high resolution settings print specific settings unsharp masking filters image groupings preview style preview size cropping preferences scaling preference padding preferences image margins 3D groupings automatic crops and scales based at least in part on image attributes etc. In reference numeral the resizing application via the template generator service modifies the template and resize settings accordingly.

At reference numeral the resizing application obtains the original image s for the project . At reference numeral the resizing application via the preview service generates a user interface comprising a preview of preview images of the original image s according to the modified template and modified resize settings . The preview may comprise preview images of multiple original images via a single user interface . The preview may further comprise images that have been changed since the last time that the resizes were generated images that have been adjusted images that have not been adjusted images that do not fit within quality standards etc. The preview may be rendered on the client . In embodiments where the resizing application is local to the client the user interface comprising the preview is rendered on the client . In embodiments where the resizing application is not local to the client the resizing application sends the user interface comprising the preview over the network to the client for rendering.

At reference numeral the resizing application via the preview service determines whether to adjust any of the resize settings corresponding to the preview images . The user may be provided a preview of the preview images in one user interface and may make adjustments to each of the preview images accordingly. For example the user may adjust the scale adjust the crop adjust the margins and padding adjust the image color apply filters replace the original image with a retouched image etc. via controls on the user interface comprising the preview . In some embodiments the user may request that one or more of the preview images include tags and or comments.

At reference numeral the preview service modifies the resize settings for the project specific to the adjustment requests by the user on the client . At reference numeral the resizing application via the processing service processes the original image s according to the resize settings and template as approved via the preview to generate the final resized images . In some embodiments the image destination may be monitored by the resizing application to determine whether other resizes of the original image s previously exist. Accordingly the processing service may only generate final resized images that are new or have been modified. In some embodiments the image destination is not monitored and the processing service may generate all of the final resized images according to the template and resize settings for the project . At reference numeral the resizing application via the processing service stores the final resized images in the image destination .

With reference to shown is a schematic block diagram of the computing environment according to an embodiment of the present disclosure. The computing environment includes one or more computing devices . Each computing device includes at least one processor circuit for example having a processor and a memory both of which are coupled to a local interface . To this end each computing device may comprise for example at least one server computer or like device. The local interface may comprise for example a data bus with an accompanying address control bus or other bus structure as can be appreciated.

Stored in the memory are both data and several components that are executable by the processor . In particular stored in the memory and executable by the processor are the resizing application template generator service preview service processing service and potentially other applications. Also stored in the memory may be a data store and other data. In addition an operating system may be stored in the memory and executable by the processor .

It is understood that there may be other applications that are stored in the memory and are executable by the processor as can be appreciated. Where any component discussed herein is implemented in the form of software any one of a number of programming languages may be employed such as for example C C C Objective C Java JavaScript Perl PHP Visual Basic Python Ruby Flash or other programming languages.

A number of software components are stored in the memory and are executable by the processor . In this respect the term executable means a program file that is in a form that can ultimately be run by the processor . Examples of executable programs may be for example a compiled program that can be translated into machine code in a format that can be loaded into a random access portion of the memory and run by the processor source code that may be expressed in proper format such as object code that is capable of being loaded into a random access portion of the memory and executed by the processor or source code that may be interpreted by another executable program to generate instructions in a random access portion of the memory to be executed by the processor etc. An executable program may be stored in any portion or component of the memory including for example random access memory RAM read only memory ROM hard drive solid state drive USB flash drive memory card optical disc such as compact disc CD or digital versatile disc DVD floppy disk magnetic tape or other memory components.

The memory is defined herein as including both volatile and nonvolatile memory and data storage components. Volatile components are those that do not retain data values upon loss of power. Nonvolatile components are those that retain data upon a loss of power. Thus the memory may comprise for example random access memory RAM read only memory ROM hard disk drives solid state drives USB flash drives memory cards accessed via a memory card reader floppy disks accessed via an associated floppy disk drive optical discs accessed via an optical disc drive magnetic tapes accessed via an appropriate tape drive and or other memory components or a combination of any two or more of these memory components. In addition the RAM may comprise for example static random access memory SRAM dynamic random access memory DRAM or magnetic random access memory MRAM and other such devices. The ROM may comprise for example a programmable read only memory PROM an erasable programmable read only memory EPROM an electrically erasable programmable read only memory EEPROM or other like memory device.

Also the processor may represent multiple processors and or multiple processor cores and the memory may represent multiple memories that operate in parallel processing circuits respectively. In such a case the local interface may be an appropriate network that facilitates communication between any two of the multiple processors between any processor and any of the memories or between any two of the memories etc. The local interface may comprise additional systems designed to coordinate this communication including for example performing load balancing. The processor may be of electrical or of some other available construction.

Although resizing application template generator service preview service processing service and other various systems described herein may be embodied in software or code executed by general purpose hardware as discussed above as an alternative the same may also be embodied in dedicated hardware or a combination of software general purpose hardware and dedicated hardware. If embodied in dedicated hardware each can be implemented as a circuit or state machine that employs any one of or a combination of a number of technologies. These technologies may include but are not limited to discrete logic circuits having logic gates for implementing various logic functions upon an application of one or more data signals application specific integrated circuits ASICs having appropriate logic gates field programmable gate arrays FPGAs or other components etc. Such technologies are generally well known by those skilled in the art and consequently are not described in detail herein.

The flowchart of shows the functionality and operation of an implementation of portions of the resizing application . If embodied in software each block may represent a module segment or portion of code that comprises program instructions to implement the specified logical function s . The program instructions may be embodied in the form of source code that comprises human readable statements written in a programming language or machine code that comprises numerical instructions recognizable by a suitable execution system such as a processor in a computer system or other system. The machine code may be converted from the source code etc. If embodied in hardware each block may represent a circuit or a number of interconnected circuits to implement the specified logical function s .

Although the flowchart of shows a specific order of execution it is understood that the order of execution may differ from that which is depicted. For example the order of execution of two or more blocks may be scrambled relative to the order shown. Also two or more blocks shown in succession in may be executed concurrently or with partial concurrence. Further in some embodiments one or more of the blocks shown in may be skipped or omitted. In addition any number of counters state variables warning semaphores or messages might be added to the logical flow described herein for purposes of enhanced utility accounting performance measurement or providing troubleshooting aids etc. It is understood that all such variations are within the scope of the present disclosure.

Also any logic or application described herein including the resizing application the template generator service the preview service and the processing service that comprises software or code can be embodied in any non transitory computer readable medium for use by or in connection with an instruction execution system such as for example a processor in a computer system or other system. In this sense the logic may comprise for example statements including instructions and declarations that can be fetched from the computer readable medium and executed by the instruction execution system. In the context of the present disclosure a computer readable medium can be any medium that can contain store or maintain the logic or application described herein for use by or in connection with the instruction execution system.

The computer readable medium can comprise any one of many physical media such as for example magnetic optical or semiconductor media. More specific examples of a suitable computer readable medium would include but are not limited to magnetic tapes magnetic floppy diskettes magnetic hard drives memory cards solid state drives USB flash drives or optical discs. Also the computer readable medium may be a random access memory RAM including for example static random access memory SRAM and dynamic random access memory DRAM or magnetic random access memory MRAM . In addition the computer readable medium may be a read only memory ROM a programmable read only memory PROM an erasable programmable read only memory EPROM an electrically erasable programmable read only memory EEPROM or other type of memory device.

Further any logic or application described herein including the resizing application the template generator service the preview service and the processing service may be implemented and structured in a variety of ways. For example one or more applications described may be implemented as modules or components of a single application. Further one or more applications described herein may be executed in shared or separate computing devices or a combination thereof. For example a plurality of the applications described herein may execute in the same computing device or in multiple computing devices in the same computing environment . Additionally it is understood that terms such as application service system engine module and so on may be interchangeable and are not intended to be limiting.

Disjunctive language such as the phrase at least one of X Y or Z unless specifically stated otherwise is otherwise understood with the context as used in general to present that an item term etc. may be either X Y or Z or any combination thereof e.g. X Y and or Z . Thus such disjunctive language is not generally intended to and should not imply that certain embodiments require at least one of X at least one of Y or at least one of Z to each be present.

It should be emphasized that the above described embodiments of the present disclosure are merely possible examples of implementations set forth for a clear understanding of the principles of the disclosure. Many variations and modifications may be made to the above described embodiment s without departing substantially from the spirit and principles of the disclosure. All such modifications and variations are intended to be included herein within the scope of this disclosure and protected by the following claims.

