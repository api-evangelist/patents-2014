---

title: Integrated cloud platform translation system
abstract: Systems, apparatuses and methods for use in the development of software applications or extensions to applications, user interfaces or similar products. Specifically, the invention is directed to an efficient process for developing software applications for markets in which different languages are spoken, typically as part of an internationalization strategy. The inventive systems and processes may also be used to produce software applications for a single geographic market in which multiple languages are spoken. The inventive process involves providing a development environment for software applications in which multiple users may generate customized applications based on access to a common set of applications, functional modules, translation elements, translated strings, etc. The inventive system, apparatus, and method for generating software applications in multiple languages is more efficient than presently known methods and ensures completeness and consistency of terminology in the translation into other languages.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09405532&OS=09405532&RS=09405532
owner: NetSuite Inc.
number: 09405532
owner_city: San Mateo
owner_country: US
publication_date: 20140303
---
This application claims the benefit of U.S. Provisional Application No. 61 773 367 entitled Integrated Cloud Platform Translation System filed Mar. 6 2013 which is incorporated herein by reference in its entirety including the appendix for all purposes.

Modern computer networks incorporate layers of virtualization so that physically remote computers and computer components can be allocated to a particular task and then reallocated when the task is done. Users sometimes speak in terms of computing clouds because of the way groups of computers and computing components can form and split responsive to user demand and because users often never see the computing hardware that ultimately provides the computing services. More recently different types of computing clouds and cloud services have begun emerging.

For the purposes of this description cloud services may be divided broadly into low level services and high level services. Low level cloud services sometimes called raw or commodity services typically provide little more than virtual versions of a newly purchased physical computer system virtual disk storage space virtual processing power an operating system and perhaps a database such as an RDBMS. In contrast high or higher level cloud services typically focus on one or more well defined end user applications such as business oriented applications. Some high level cloud services provide an ability to customize and or extend the functionality of one or more of the end user applications they provide however high level cloud services typically do not provide direct access to low level computing functions.

Some high level cloud based services may permit a user to not only customize existing applications but also to create new applications processes or data flows that satisfy a specific need of that user. This may include a need to provide a version of an application for use in one or more markets. Since some of these markets may be in locations in which different languages are spoken an international marketing plan may include the capability to provide applications in more than a single language. This means that user interfaces help functions operating instructions and even comments contained in software code may need to be translated into one or more languages. Additionally where such cloud based services provide for new applications processes or data flows to be deployed within the cloud based services existing user interface and hence are desired to become a seamless part of the user experience of that service platform it is critical for ease of use and user adoption that the user interface elements for the new applications processes or data flows be consistent in look and feel including the use of standard terminology both in the original language and in any translations to other languages.

Unfortunately accomplishing this translation can be a difficult and inefficient process. Typically a software vendor will develop an application and then translate all or essentially all of the significant instances of one language into a second language to produce a version of the application for a new market. However this approach has several disadvantages including but not limited to 

As noted methods presently exist for generating software applications in more than a single language as part of providing an internationalization strategy for a company. However conventional methods typically suffer from one or more disadvantages including requiring a large amount of time to implement increasing the cost of software development and introducing other inefficiencies into the software development process. Further conventional systems and methods may not ensure completeness and consistency of terminology in the translation into other languages. Embodiments of the invention are directed toward solving these and other problems individually and collectively.

The terms invention the invention this invention and the present invention as used herein are intended to refer broadly to all of the subject matter of this patent and the patent claims below. Statements containing these terms should be understood not to limit the subject matter described herein or to limit the meaning or scope of the patent claims below. Embodiments of the invention covered by this patent are defined by the claims below not this summary. This summary is a high level overview of various aspects of the invention and introduces some of the concepts that are further described in the Detailed Description section. This summary is not intended to identify key or essential features of the claimed subject matter nor is it intended to be used in isolation to determine the scope of the claimed subject matter. The subject matter should be understood by reference to appropriate portions of the entire specification of this patent any or all drawings and each claim.

Embodiments of the invention are directed to systems apparatuses and methods for use in the development of software applications. Specifically the invention is directed to an efficient process for developing software applications for markets in which different languages are spoken typically as part of an internationalization strategy. The inventive systems and processes may also be used to produce software applications for a single geographic market in which multiple languages are spoken. The inventive process involves providing a development environment for software applications in which multiple users may generate customized applications based on access to a common set of applications functional modules translation elements translated strings etc. The inventive system apparatus and method for generating software applications in multiple languages is more efficient than presently known methods and ensures completeness and consistency of terminology in the translation into other languages.

In one embodiment the development environment is a multi tenant cloud based environment typically used to develop web services and business applications for end users. Such an environment may include a multi tenant business data processing platform or system or other form of distributed computing platform. The platform may include software tools to enable users to define and implement user interfaces software applications data structures and or extensions to such elements. In one embodiment the inventive process includes identifying which of a set of user interface elements or other content identified by a user of the development environment requires translation and if so automatically determining if a translated version of that element exists in a commonly accessible data store that may be accessed by a plurality of users of the development environment e.g. a plurality of tenants of the multi tenant data processing platform . In some embodiments this may include determining if a desired user interface element or other content has an exact equivalent a substantial equivalent or a similar enough version expressed in a desired language that is available in the commonly accessible data store. If a suitable translated version does exist then that content is automatically recommended to the user of the development environment for inclusion in the application they are developing. In some embodiments this permits users to determine if a standard or commonly used word or phrase is available that may be used for a data field or other intended use by conducting a search of the database. In some embodiments a user may enter their own text and the invention will search for and display similar text found in the database that might be of interest to the user.

If a suitable e.g. exact substantially similar similar etc. translated version does not exist based on an applied matching or similarity measure rule base heuristic or algorithm then the content contained in the user interface element may be processed into a form in which it may be provided to a translation service. The translation service in return may provide the desired translated content in one or more formats. The translated content may then be used by the developer and added to the commonly accessible data store. This enables the newly translated content to be accessed by others who are developing applications within the development environment. Note that although the inventive system apparatus and method have been described primarily in the context of a user interface they may also be used to provide translations for other content such as help files user manuals marketing material code comments reports articles etc.

In one embodiment the invention is directed to a multi tenant data processing system where the system includes

In another embodiment the invention is directed to a system for developing a software application where the system includes

In yet another embodiment the invention is directed to a method for developing software where the method includes

Other objects and advantages of the present invention will be apparent to one of ordinary skill in the art upon review of the detailed description of the present invention and the included figures.

Note that the same numbers are used throughout the disclosure and figures to reference like components and features.

The subject matter of embodiments of the present invention is described here with specificity to meet statutory requirements but this description is not necessarily intended to limit the scope of the claims. The claimed subject matter may be embodied in other ways may include different elements or steps and may be used in conjunction with other existing or future technologies. This description should not be interpreted as implying any particular order or arrangement among or between various steps or elements except when the order of individual steps or arrangement of elements is explicitly described.

This description discusses illustrative embodiments of the inventive system and methods. It is presented with reference to the accompanying drawings in order to provide a person having ordinary skill in the relevant art with a full clear and concise description of the subject matter defined by the claims which follow and to enable such a person to appreciate and understand how to make and use the invention. However this description should not be read to limit the scope of the claimed subject matter nor does the presence of an embodiment in this description imply any preference of the described embodiment over any other embodiment unless such a preference is explicitly identified herein. It is the claims not this description or other sections of this document or the accompanying drawings which define the scope of the subject matter to which the inventor and or the inventor s assignee s claim exclusive entitlement.

Among other embodiments the invention may be embodied in whole or in part as a system as one or more processes operations methods or functions or as one or more apparatuses or devices. Embodiments of the invention may take the form of an entirely hardware implemented embodiment an entirely software implemented embodiment or an embodiment combining software and hardware aspects. For example in some embodiments one or more of the operations functions processes or methods described herein may be implemented by a suitable processing element such as a processor microprocessor CPU controller etc. that is programmed with a set of executable instructions e.g. software instructions where the instructions may be stored in a suitable data storage element. The processor microprocessor CPU or controller may be a component or element of a computing device or data processing device or platform such as a client device or a server used with an associated data storage element or database. In some embodiments one or more of the operations functions processes or methods described herein may be implemented by a specialized form of hardware such as a programmable gate array application specific integrated circuit ASIC or the like. The following detailed description is therefore not to be taken in a limiting sense.

Embodiments of the invention are directed to systems apparatuses and methods for use in developing software applications within a multi tenant computing environment. Specifically embodiments of the invention are directed to systems and methods for efficiently enabling the development of a software application in more than one language by leveraging the use of a commonly accessible database containing translated versions of user interface and other content along with the services of a translation platform.

The multi tenant distributed computing data processing platform may include multiple processing tiers or layers including a user interface layer an application layer and a data storage layer . The user interface layer may include multiple user interfaces including graphical user interfaces and or web based interfaces. The user interfaces may include a default user interface for the service illustrated as Service UI in the figure as well as one or more user interfaces customized by one or more tenants of the service. The default user interface may include components enabling tenants to maintain custom user interfaces provide service platform extensions and otherwise administer their participation in the service. Each tier or layer may be implemented with a set of computers and or computing device components including computer servers that contain processing elements programmed to execute a set of software instructions. The data storage layer may include a core service data store as well as a data store dedicated to each tenant. The data storage layer may include one or more production data stores and one or more testing validation and or backup data stores. Data stores may be implemented with any suitable data storage technology including structured query language SQL based relational database management systems RDBMS .

The example architecture depicted in includes a user interface UI layer or tier having one or more user interfaces . Examples of such user interfaces include graphical user interfaces and application programming interfaces APIs . Each user interface may include one or more interface elements . For example users may interact with interface elements in order to access functionality and or data provided by application and or data storage layers of the example architecture. Examples of graphical user interface elements include buttons menus checkboxes drop down lists scrollbars sliders spinners text boxes icons labels progress bars status bars toolbars windows hyperlinks and dialog boxes. Application programming interfaces may be local or remote and may include interface elements such as parameterized procedure calls programmatic objects and messaging protocols. Service platform extensions may extend the user interface layer by adding a new user interface replacing an existing user interface and or extending an existing user interface. An existing user interface may be extended by adding new interface elements replacing interface elements and or extending user interface elements.

The application App layer may include one or more application modules each having one or more sub modules . The application modules and or sub modules may include any suitable computer executable code such as computer executable code corresponding to a programming language. For example programming language source code may be compiled into computer executable code. Alternatively or in addition the programming language may be an interpreted programming language such as a scripting language. Each application server may include each application module. Alternatively different application servers may include different sets of application modules. Such sets may be disjoint or overlapping. Service platform extensions may extend the application layer by adding new application modules replacing existing application modules and or extending existing application modules. An existing application module may be extended by adding new sub modules replacing existing sub modules and or extending existing sub modules.

In some embodiments application layer may include one or more modules or sub modules that contain executable code that when executed by a properly programmed processor cause multi tenant data processing platform to perform one or more of the following processes methods functions or operations as part of implementing an embodiment of the invention 

The data storage layer may include one or more data objects each having one or more data object components such as attributes and or behaviors. For example the data objects may correspond to tables of a relational database and the data object components may correspond to columns or fields of such tables. Alternatively or in addition the data objects may correspond to data records having fields and associated services. Alternatively or in addition the data objects may correspond to persistent instances of programmatic data objects such as structures and classes. Each data store in the data storage layer may include each data object. Alternatively different data stores may include different sets of data objects. Such sets may be disjoint or overlapping. Service platform extensions may extend the data storage layer by adding new data objects replacing existing data objects and or extending existing data objects. Existing data objects may be extended by adding new data object components replacing existing data object components and or extending existing data object components.

In a typical use case for an embodiment of the invention a software developer or development team is responsible for developing a version of a software application in another language often as part of an internationalization strategy for a product. One such use case might be to convert certain aspects of an application from English into one or more other languages in order to permit use of the application in other countries. This can be particularly useful if a business sells or wishes to sell the application in multiple countries or if the application is used by employees in multiple countries to perform their work functions. It may also be helpful if multiple languages are used by employees within a single country to perform their work functions and or to provide services to users who are not all literate in a single common language.

In such cases the aspects of an application that may require translation into one or more other languages may include but are not limited to such features as help files user interface screens comments contained in code installation instructions labels on controls or features drop down menus etc. Embodiments of the invention provide a system apparatus and associated methods for enabling the efficient and cost effective production of an application or one or more of its sub modules in additional languages. In some embodiments the invention also provides a data store such as element of containing translated segments information that may be accessed by multiple users of a common data processing platform to assist those users in developing applications or modifying existing applications e.g. the users of a multi tenant business data processing platform such as that described with reference to .

As shown in the eco system in which an embodiment of the invention may be used includes one or more contributors users . These may include for example technical publications shown as Tech Pubs in the figure which may provide content that requires translation and use the results to produce publications training personnel shown as Training in the figure which may provide content and use the results to produce manuals etc. an internal reviewer shown as Internal Reviewer in the figure which represents a person or persons responsible for evaluating the results of a translation process before the results are incorporated into one or more elements a services solutions group shown as SG in the figure which represents another possible contributor of content and or user of the translated results one or more external entities that are working with a business to generate the application shown as Partners in the figure an external reviewer shown as External Reviewer in the figure which represents an external person or persons responsible for evaluating the results of a translation process such as an employee of a translation service or a Partner or a person or persons involved in a marketing function for a business shown as Marketing in the figure where such a person or persons may contribute and or use content that is processed by the inventive translation platform and its associated methods.

In some embodiments contributors users represents entities that contribute content for translation i.e. they function as a source of content that requires processing to generate one or more translated versions of the content or as part of the translation process and or use the translated content to perform a business function. These entities interact with the inventive Language Translation System Platform to enable content to be translated and or to enable previously translated content to be accessed and used. Content that requires translation may be provided to one or more Translation Vendors who perform aspects of the actual translation process. The results of a translation process may be stored in the commonly accessible data storage e.g. Translation System Data Storage of and made available to other tenants of a multi tenant data processing platform or software development environment.

A typical user contributor may have an associated data store in which is stored one or more language segments used by that user contributor in the development of software content etc. When developing software or content the user contributor may first access data store to determine if needed language segments are available from that data store. In one embodiment if the desired segment s are not available from data store then user contributor may access Translation System via a suitable interface such as a Translation System API . In another embodiment even if the needed language segments are available from data store the invention may be used to evaluate those segments and suggest replacements that are more consistent with the labeling field names and other content that are used by the platform and its other users. This helps to ensure a common set of user interface elements and labels throughout multiple users and developers.

Using API a user contributor may interact with Translation System to request certain content. As will be described such a request may be generated as a result of processing certain information about the fields or content of the software being developed for example to identify what content is needed. Once identified information typically in the form of a XLIFF file may be retrieved from Data Storage and processed by System before being used for a task or sent to an internal or external Translation Vendor to generate the needed content. The results or output of a Translation Vendor may be received by System and validated to ensure that the translation process was completely and accurately performed by the vendor. System may then if needed convert or process the received content into an appropriate format such as XLIFF. The new content may then be merged or otherwise incorporated into Data Storage so that it may be accessed and retrieved by the same or other users at a later time. Note that although a single Translation Vendor is shown in a particular translation task may be performed by more than a single such vendor with the results then being compared or otherwise evaluated before determining which if any should be incorporated into Data Store .

The processing involved in determining whether suitable content is available in the System Data Store may be based on determining which fields the developer has utilized the types of user interface elements utilized the categories of content utilized or another suitable method. The Translation System may also or instead permit the developer to determine the content of the System Data Store via a list index search function etc. and thereby identify terms labels field names etc. that are already available for use in one or more languages. In some embodiments this processing may also be dependent on or related to the context of the application being developed for example an application being created for use in a Medical context might have suggestions for replacing the term Name with Patient and its related translations. If the desired content is available in the System Data Store corresponding to the Yes branch of step then the desired language segment content may be accessed and returned to the developer step or stage .

If the desired content or something considered suitable by the user is not available in the System Data Store corresponding to the No branch of step then the Translation System processes the developer s content and prepares a request for translation services from a translation vendor step or stage . This processing may include formatting of the content to be translated such as into XLIFF or another suitable form construction of a request for services in accordance with the vendor s or the system s protocols etc. The translation vendor receives the request and the segment content requiring translation along with other information that may be needed to determine the parameters of the requested task step or stage . The translation vendor processes the request and the associated segment content to generate one or more translated versions of the segment content stage or step . Such translations may represent for example user interface labels marketing materials instructions comments menus etc. in one or more languages. The translation vendor or vendors then provide the translated content to the translation system platform stage or step .

The translation system platform receives the translated content from the vendor s and may then perform one or more validation or test processes on the received content stage or step . The validation or test processes may include ones selected by the system platform and or by the developer and may include for example processes to determine if the requested translation operation was completed processes to determine if the received translated content has any undesired meanings etc. If the result of the validation or test processes is that the translated content is not acceptable i.e. not valid as indicated by the No branch of step then the developer may be notified and the content returned to the vendor for re processing stage or step . If the result of the validation or test processes is that the translated content is acceptable i.e. valid as indicated by the Yes branch of step then the translation system may transfer the translated content to the developer for evaluation stage or step .

The developer receives the translated content from the system platform and evaluates the suitability of the translated content for use in their project stage or step . This may involve the developer performing one or more validation or test processes that are specific to the developer s task or project. Such validation or test processes may include determining if the translated content has the proper appearance for use as part of the task or project determining if the translated content is understandable when integrated with the task or project etc. If the developer is not satisfied with the translated content as indicated by the No branch of step then the content may be returned to the vendor either directly or via the system platform stage or step . If the developer is satisfied with the translated content as indicated by the Yes branch of step then the translation system platform may determine whether to store the translated content in the system data storage stage or step . This may involve determining if the new content is of potential interest to other tenants or developers that use the system platform e.g. based on those tenants or developers use of content for a similar purpose in the same language as the new content legal or contractual limitations on use of the new content etc. . If the system platform determines that the new content is not suitable for storage in the system data store as indicated by the No branch of step then the developer may be notified stage or step so that they are aware of the situation and make sure to store the new content in a local data store. If the system platform determines that the new content is suitable for storage in the system data store as indicated by the Yes branch of step then the new content may be processed for merger incorporation into the system data storage stage or step . Such processing may include formatting or otherwise structuring the new content for indexing retrieval from the data storage.

As described in one embodiment when a user interface element or other form of content is desired as part of developing an application the inventive system determines if a suitable candidate string or other form of data is available in a commonly accessible data store as suggested by step of . The suitability of the string or other form of data may be determined based on one or more rules matching heuristics tests algorithms etc. and may operate to determine an exact match substantially similar match or similar enough match depending on the developer s criteria. Thus in one embodiment the system platform may perform a form of fuzzy reasoning matching or other decision process to determine if a suitable content segment or string is available.

If a suitable match is located in the commonly accessible database then it may be presented to the developer for approval. If approved it may be incorporated into the application being developed. If a suitable translated version of the content is not available in the commonly accessible database then a version of the content in a first language may be provided to a translation vendor service or platform. The version of the content may be processed or formatted as needed for input to the translation vendor service or platform. The translation vendor service or platform may be automated semi automated or manual in operation. Upon completion of the translation process the translated content may be returned to the translation system platform and or developer for approval and incorporation into the application being developed. Further and subject to other possible evaluation and or approval processes the translated content may be added to the commonly accessible database data store repository etc. and made available for use by other developers who are utilizing the translation system platform such as by virtue of using the same software development environment .

In one embodiment the translation system data storage element corresponding to element or component of may contain standard or common segments or strings that are typically used in an application or user interface. Such standard or common segments or strings may include but are not limited to 

In one embodiment the invention may be used to assist software developers who are developing applications user interfaces or extensions of applications or interfaces for users of a multi tenant data processing system or platform. For example developers for one tenant may be producing a version of a user interface or application for use by speakers of another language. They may wish to utilize standard translations for certain aspects of the project such as user interface controls menu names field names etc. but also need to generate labels or names in another language or languages for other parts of the final product. In this situation an embodiment of the invention may permit a first tenant to 

In one embodiment a request for the services of an external translation vendor may be generated routed for internal approval and communicated to the vendor using the capabilities of an integrated business data processing platform such as the Multi Tenant Distributed Computing Data Processing Platform of . In this example the business processes that are enabled by the platform provide an efficient way to generate a purchase request for the translation services enable the request to be approved and accounted for by an accounts payable function track the progress of the purchase request and its fulfillment receive and validate the translated segments and generate payment for the services.

As noted embodiments of the invention solve one or more problems encountered when using conventional content translation systems and methods. In particular conventional translation systems do not address problems that arise in the context of development within a cloud based multi tenant software development platform where these problems are solved by the invention. For example by embedding the inventive solution into the user experience and screens workflows embodiments of the invention enable the efficient production of new applications interfaces and extensions to existing functionality for multiple tenants of such a platform.

As recognized by the inventor software vendors have not integrated a suitable translation process into an application development environment. As such currently available approaches do not provide one or more of the following benefits that are provided by an embodiment of the invention 

Accelerate the ability of partners building applications on a common platform to localize and translate their applications for International markets 

Simplify the process of defining content for translation extracting that content for submission to a translator re importing the translated content into the application reviewing content in situ for accuracy and completeness and publishing the finished translated content to a repository for use by other tenants or platform users 

Ensure the consistency and quality of translation by providing users tenants with a seamless way to utilize a translation memory and glossaries to identify exact or sufficiently close matches for language segments and in some cases pre translate them into other languages and

Lower the cost of translation for users tenants by reducing the word count sent to translators as a result of leveraging pre translated content that is an exact or sufficiently close match to a desired segment.

As part of implementing one or more embodiments of the invention the invention may include tools and processes to support platform development efforts and enable the delivery of high quality timely and economical translation services. These tools processes will interact with a Translation System Data Store to identify matches to requests and generate proposals for matches using available segments including determining those segments that should be considered for external translation which may be performed by a machine translation service or by a 3rd party translation services provider . For those terms and written content e.g. Field Level Help Help Docs Operating Manuals Release Notes Marketing Collateral etc. that are created for a new application and for which a suitable match is not found resident in the Translation System Data Store the Translation System tools may help prepare a XLIFF or similar file extraction for submission to the 3rd party translation service along with any needed supporting content data style guide etc. and similarly will support a re importation of the resulting translated content when it has been completed. The application developer will then be able to review the translated content in the languages in which they wish to publish the application to finalize and catch any problems before release. The translation received can then be submitted for validation and addition to the Translation System Data Store for the benefit of the developer community in the future.

In accordance with at least one embodiment of the invention the system apparatus methods processes and or operations for enabling development of software applications in more than a single language may be wholly or partially implemented in the form of a set of instructions executed by one or more programmed computer processors such as a central processing unit CPU or microprocessor. Such processors may be incorporated in an apparatus server client or other computing device operated by or in communication with other components of the system. As an example is a diagram illustrating elements or components that may be present in a computing device apparatus architecture or system configured to implement a method process operation or function in accordance with an embodiment of the invention. The subsystems shown in are interconnected via a system bus . Additional subsystems include a printer a keyboard a fixed disk and a monitor which is coupled to a display adapter . Peripherals and input output I O devices which couple to an I O controller can be connected to the computer system by any number of means known in the art such as a serial port . For example the serial port or an external interface can be utilized to connect the computing device to further devices and or systems not shown in including a wide area network such as the Internet a mouse input device and or a scanner. The interconnection via the system bus allows one or more processors to communicate with each subsystem and to control the execution of instructions that may be stored in a system memory and or the fixed disk as well as the exchange of information between subsystems. The system memory and or the fixed disk may embody a tangible computer readable medium.

It should be understood that the present invention as described above can be implemented in the form of control logic using computer software in a modular or integrated manner. Based on the disclosure and teachings provided herein a person of ordinary skill in the art will know and appreciate other ways and or methods to implement the present invention using hardware and a combination of hardware and software.

Any of the software components processes or functions described in this application may be implemented as software code to be executed by a processor using any suitable computer language such as for example Java C or Perl using for example conventional or object oriented techniques. The software code may be stored as a series of instructions or commands on a computer readable medium such as a random access memory RAM a read only memory ROM a magnetic medium such as a hard drive or a floppy disk or an optical medium such as a CD ROM. Any such computer readable medium may reside on or within a single computational apparatus and may be present on or within different computational apparatuses within a system or network.

All references including publications patent applications and patents cited herein are hereby incorporated by reference to the same extent as if each reference were individually and specifically indicated to be incorporated by reference and or were set forth in its entirety herein.

The use of the terms a and an and the and similar referents in the specification and in the following claims are to be construed to cover both the singular and the plural unless otherwise indicated herein or clearly contradicted by context. The terms having including containing and similar referents in the specification and in the following claims are to be construed as open ended terms e.g. meaning including but not limited to unless otherwise noted. Recitation of ranges of values herein are merely indented to serve as a shorthand method of referring individually to each separate value inclusively falling within the range unless otherwise indicated herein and each separate value is incorporated into the specification as if it were individually recited herein. All methods described herein can be performed in any suitable order unless otherwise indicated herein or clearly contradicted by context. The use of any and all examples or exemplary language e.g. such as provided herein is intended merely to better illuminate embodiments of the invention and does not pose a limitation to the scope of the invention unless otherwise claimed. No language in the specification should be construed as indicating any non claimed element as essential to each embodiment of the present invention.

Different arrangements of the components depicted in the drawings or described above as well as components and steps not shown or described are possible. Similarly some features and sub combinations are useful and may be employed without reference to other features and sub combinations. Embodiments of the invention have been described for illustrative and not restrictive purposes and alternative embodiments will become apparent to readers of this patent. Accordingly the present invention is not limited to the embodiments described above or depicted in the drawings and various embodiments and modifications can be made without departing from the scope of the claims below.

