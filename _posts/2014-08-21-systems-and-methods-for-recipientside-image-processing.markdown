---

title: Systems and methods for recipient-side image processing
abstract: Systems, methods, and non-transitory computer readable media configured to create, process, and/or modify images are provided. Recipient image data associated with an original image captured by a second computing system can be received by a first computing system. A first intermediate image may be generated based on the recipient image data. A first viewable image for display on the first computing system may be generated based on the first intermediate image.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09489711&OS=09489711&RS=09489711
owner: Facebook, Inc.
number: 09489711
owner_city: Menlo Park
owner_country: US
publication_date: 20140821
---
The present technology relates to the field of image processing. More particularly the present technology provides techniques for processing media on the recipient side in a social network.

Today people have many options available for taking pictures. In addition to traditional cameras dedicated exclusively to capturing images in film or digital form many mobile devices such as smartphones have the capability to take pictures. For example a mobile device may include a camera and an application that allows the user to take pictures with the camera on the mobile device. These images may be stored and available for viewing at any time. In view of the increasingly popular capabilities of social networks photos may be shared with the user s connections in many different ways.

Images can be processed in various ways and at various times. In general image processing may involve an image as an input such as a photograph or video frame and an image or a set of characteristics or parameters associated with the image as an output. Images may be processed after they are captured and before they are rendered for viewing. For example an image may be altered or annotated after it is captured and before it is shared with the user s connections. A user may choose to enhance some image effects to improve aesthetics of an image. The exposure color hues and other parameters of an image may be edited before it is shared and viewed by a user s connections.

Various embodiments of the present disclosure can include systems methods and non transitory computer readable media configured to create process and or modify images. In some embodiments recipient image data associated with an original image captured by a second computing system can be received by a first computing system. A first intermediate image may be generated based on the recipient image data. A first viewable image for display on the first computing system may be generated based on the first intermediate image.

In one embodiment the recipient image data may be decoded based on a format when generating the first intermediate image.

In one embodiment information related to the first computing system may be provided by the first computing system to the second computing system. The format may be determined by the second computing system.

In one embodiment the format is determined based on at least one of the information related to the first computing system and information related to the second computing system.

In one embodiment the format is determined based on the information related to the first computing system and information related to a third computing system. The information related to the third computing system received by the second computing system.

In one embodiment the recipient image data is decrypted to generate decrypted image data. The decrypted image data is decoded based on a format to create the first intermediate image.

In one embodiment an image filter is applied to the intermediate image when generating the first viewable image based on the first intermediate image.

In one embodiment a set of intermediate images including the first intermediate image is generated based on the recipient image data. The first viewable image generated based on the first intermediate image is based on the set of intermediate images.

In one embodiment the set of intermediate images is stored in the first computing system. The first viewable image is stored in the first computing system.

In one embodiment a second viewable image for display on the first computing system is received by the first computing system. The second viewable image is generated from a second intermediate image by a second computing system.

In one embodiment blur associated with the viewable image is less than blur associated with the original image.

In one embodiment the intermediate image has a first resolution and the viewable image has a second resolution.

In one embodiment the intermediate image has a first color format and the viewable image has a second color format.

Many other features and embodiments of the invention will be apparent from the following detailed description and from the accompanying drawings.

The figures depict various embodiments of the disclosed technology for purposes of illustration only wherein the figures use like reference numerals to identify like elements. One skilled in the art will readily recognize from the following discussion that alternative embodiments of the structures and methods illustrated in the figures can be employed without departing from the principles of the disclosed technology described herein.

Social networking systems may include a client application that enables a user to interface with the social networking system. The term client application is used broadly herein and may include any program or software that provides a user interface to be presented or displayed on a client device for a user. The client application may include a standalone application executed from the client device such as a mobile application executed from a mobile phone. The client application may also include a website having one or more web pages accessible by the user through a web browser on the client device. The client application may provide images for display to a user on a client device. The images described herein may relate to pictures photographs graphical images advertisements etc. In certain instances the images described herein may also be equally applicable to a set of images such as video. It should be appreciated that while features of the systems and methods in the present disclosure may be described with respect to a social networking system the features may also be applicable to any other suitable networked computer systems involving display of various images.

In certain circumstances to share an image a user needs to select one or more recipients with whom the image or the video is to be shared. The image that is shared is often processed on the sender side. That is subsequent to the image being captured and or selected by the sender the image is processed by the client device that is used by the sender. For example the image may be edited or altered by the sender prior to being shared with the recipients designated by the sender. As another example the image may be stabilized by the client device used by the sender prior to being shared with the recipients designated by the sender. The image to be shared needs to be processed prior to being sent to a server or the client device used by a recipient. Consequently a delay in transmission of the processed image to the recipient is inevitable due to the time required for processing.

The example system may include at least one data store . In the example of the at least one image store may be configured to store image data and images including an original image an intermediate image and a viewable image. An image may be generated from image data. In some embodiments image data may be a data stream that is a sequence of digitally encoded coherent signals or data packets carrying information of an image. Image data may be generated by compressing an image according to a variety of compression related formats. Various compression techniques may be used in different embodiments such as lossless compression e.g. FFV1 JPEG 2000 lossless PNG QuickTime etc. or lossy compression e.g. Cinepak H.261 MPEG 4 Part 2 etc. .

In various embodiments original images that are captured by a sender as well as derivative images that are processed based on the original images may be stored in the data store . At least one image parameter of a derivative image is different from the original image. For example a derivative image may have an image quality a resolution or a color format that is different from that of the original image. A derivative image may be the original image with comments annotations or special effects. A derivative image may be an intermediate image and or a viewable image.

The image data conversion module may be configured to generate an image from image data. In various embodiments the image generated by the image data conversion module is an intermediate image. That is the image generated by the image data conversion module is not displayed to a recipient in some instances. For example a recipient s client device may generate an intermediate image based on the image data. In some instances an intermediate image may not be viewable. Accordingly the intermediate image may be processed according to the sender s instructions to generate a viewable image that may be presented to a recipient. For example a sender may select a recipient prior to recording a video clip. Image data of the video clip may be transmitted and received by the recipient while the video clip is being recorded. Intermediate images generated based on image data may be further processed for viewing by the recipient.

The image creation module may be configured to process an intermediate image into a viewable image for presentation to the recipient. The intermediate image may be processed according to a sender s instructions. In some embodiments the intermediate image may be processed according to complementary or alternative instructions of an intermediary e.g. server or recipient e.g. client device . The viewable image for display to the recipient is generated based on the intermediate image such that the original image is generated according to instructions as provided for example by the sender.

Processing the intermediate image to generate the viewable image can involve any type of image processing. For example a sender may require one or more image parameters e.g. color exposure focus contrast blurriness resolution etc. of the original image to be modified when shared with a recipient. As another example a sender may select application of an image or photographic filter e.g. Amaro Mayfair Sierra Lo fi Inkwell 1977 etc. to the original image. As yet another example the intermediate image may be processed such that stabilization is performed on the original image to generate the viewable image. As yet still another example the original video clip as recorded may be blurry due to various reasons and processing may be performed to improve or correct the blurriness.

The image data conversion module may include a data reception module a data decryption module and a data image transformation module . Image data may include information of the original image captured by a sender. The original image may be generated from the image data. In some embodiments images at a lower quality or higher quality but based on the original image may be generated from the image data. Image quality may be informed by various factors including but not limited to sharpness noise dynamic range tone reproduction contrast color accuracy distortion vignetting exposure accuracy lateral chromatic aberration lens flare color moire and artifacts.

The data reception module may be configured to receive image data when a user is designated by a sender as a recipient. In various embodiments image data is received in real time or near real time as the original image is being captured. Image data may be generated from the original image according to a format that is compatible with or optimized for the recipient device. In some embodiments received image data may be compressed or otherwise modified in relation to image data of an original image.

The data decryption module may be configured to decrypt the image data received. The image data may be encrypted by an encryption key. The image data may be decrypted by using the encryption key which may be provided by the sender or obtained from a server.

The data image transformation module is configured to generate a set of intermediate images based on the image data received by the data reception module . In some embodiments when the received image data is encrypted the data image transformation module may be performed on the decrypted image data. As described herein unless otherwise specified the image data received is not encrypted. In various embodiments the data image transformation module may be configured to decompress the image data and to generate a set of images. The set of images are intermediate images which may be further processed for display to the recipient.

An intermediate image may comprise information describing pixels such as the location and the RGB value of a pixel. Accordingly an intermediate image may provide a basis to create a viewable image for display to the recipient. The viewable image is based on the original image captured by the sender and modified according to the sender s instructions. In some embodiments the intermediate image may be processed according to complementary or alternative instructions of an intermediary e.g. server or recipient e.g. client device . In some embodiments an intermediate image may be the image that is presented to the recipient. The data image transformation module may decompress image data according to various image or video decompression formats. That is a data stream of the image data may be decoded according to a bitstream format defined by an image or video decompression format.

The illustrated system includes a recipient device a sender device a server and network . The recipient device and the sender device may be collectively referred to as client devices. The term server is used broadly herein and may include a computer system such as one or more servers that provides content to a client device. A client device e.g. a recipient device or a sender device may include any computer system. In various embodiments a client device may include a desktop computer a laptop computer a tablet computing device a mobile phone or any other device. A client device may include a client application and a display. The server may be remote from the recipient device and the sender device . The server may be communicatively coupled to a client device e.g. the recipient device or the sender device via a network such as the Internet. Each of recipient device the sender device and the server may be coupled to the network via a wired or wireless connection.

A client application may be run on the client device e.g. the recipient device or the sender device and displayed to a user on the display of the client device. The client application may be a standalone application such as a mobile application for instance. In other embodiments the client application may be run on the server and communicated to a client device for presentation on the client device. For example the client application may include a website having one or more web pages accessible by the user through a web browser.

In some embodiments a data store e.g. the data store of or the data store of may store the original image image data as well as any derivative image e.g. an intermediate image a viewable image that is based on the original image. The location of the image data store may vary. For example the image data store may be located within the client device e.g. the recipient device and or the sender device . As another example the image store may be located within an image processing module e.g. the image processing module of that is located within the sender device or within the server . The image data store also may be located remotely from an image processing module e.g. the image processing module of that is located within the sender device or within the server .

In various embodiments the sender device captures and provides images in a format e.g. the compression rate the size the image quality etc. that is compatible with or optimized for the recipient device . For instance constraints such as limited computing capabilities constrained bandwidth network limit data limits or costs or a recipient s preference may impact the performance of the recipient device. Low performance recipient devices may not have the processing power to resize images e.g. shrink for display on the mobile phone. In addition these recipient devices may not have the processing power to download large amounts of data associated with high quality images or multiple images within an acceptable amount of time. Moreover these recipient devices may not have the computing capabilities to process image data compressed in a bit rate to decode a data stream or to process a sender s instructions. Longer download and or processing time as well as lack of processing capabilities may also adversely impact the speed and operation of the client application in general on the recipient device resulting in unsatisfactory user experience.

Device information about a recipient device may be provided to a sender device. The device information may be further provided to a server. For example as illustrated the device information regarding the recipient device may be provided to the sender device via the network . The device information may include information about the device that may affect the capture and provision of images from a sender to a recipient. For example the computing capabilities the operating system the network carrier the bandwidth or other information that may affect the format of an image may be provided from the recipient to the sender. The amount of data required to capture and transmit an image to a recipient device may depend on various factors such as the image quality at which the image is to be compressed the size of the image etc. Compression at higher image qualities may require more data to adequately represent the image than compression at lower image qualities. Furthermore compression of larger sizes of an image may require more data than compression of smaller sizes. An image processing module e.g. the image processing module of may communicate the device information to a sender device .

Based on the device information provided by the recipient device the sender device may generate image data that may be provided to and processed by the recipient device . The image data is generated such that it is compatible with or optimized for the recipient device . For example based on the device information the sender device may determine that the recipient device may support multiple image formats and accordingly may select a supported image format to generate the image data . The image format may be selected to provide the best user experience to the recipient. The image format may be selected such that the best image quality the fastest image delivery speed the lowest cost or other user s preference is provided to the recipient. For example based on the device information the sender device may determine that the recipient device only supports one image format and thereby generate the image data based on that image format.

In various embodiments the image data is provided to the recipient device in real time or near real time as the image data is being generated by the sender device . In the illustrated example the image data is provided from the sender device to the recipient device via the network . In further embodiments the image data may be provided to the server .

Based on the device information provided by the recipient device the sender device may determine that the recipient device is unable to process an image or it is more efficient that the image is processed by the sender device . In such an event the original image may be processed by the sender device instead of the recipient device to create a derivative image. The image data is generated based on the derivative image of the original image. The image data may be provided to the recipient device for display to the recipient.

A client application may be run on the client device e.g. the recipient device or the sender device and displayed on display to a user of the client application. The client application may be a standalone application such as a mobile application for instance. In other embodiments the client application may be run on the server and communicated to a client device for presentation on the client device. For example the client application may include a website having one or more web pages accessible by the user through a web browser.

In some embodiments a data store e.g. the data store of or the data store of may store the original image image data as well as any derivative image based on the original image. The location of the image data store may vary. For example the image data store may be located within the client device e.g. the recipient device and or the sender device . As another example the image store may be located within an image processing module e.g. the image processing module of that locates within the sender device or within the server . The image data store also may be located remotely from an image processing module e.g. the image processing module of that locates within the sender device or within the server .

In various embodiments the sender device captures and provides images in a format e.g. the compression rate the size the image quality etc. that is compatible with or optimized for the recipient device . Devices information includes both the device information about the sender device as well as the device information about the recipient device . As illustrated the devices information may be provided to the server via the network . The devices information may include information about the recipient device and the sender device that may affect the capture and provision of images from a sender to a recipient. For example the computing capabilities the operating system the network carrier the bandwidth or other information that may affect the format of an image may be provided from the sender and the recipient to the server. The amount of data required to capture and transmit an image to a recipient device may depend on various factors such as the image quality at which the image is to be compressed the size of the image etc. Compression at higher image qualities may require more data to adequately represent the image than compression at lower image qualities. Furthermore compression of larger sizes of an image may require more data than compression of smaller sizes.

Based on the devices information of the recipient device and the sender device the server may determine the image format that is compatible with or optimized for the recipient device and that is supported by the sender device . For example based on the devices information the server may determine that the sender device and the recipient device may support multiple image formats and selects a supported image format from the multiple image formats. The image format may be selected to provide the best user experience to the recipient. The image format may be selected such that the best image quality the fastest image delivery speed the lowest cost or other user s preference is provided to the recipient. For example based on the devices information the sender device may determine that the recipient device and the sender device only support one image format. The server may provide the determination of the image format to the sender device . In some embodiments the server may provide identification of a codec compatible with the image format and prompt the sender device to generate the image data based on that image format.

According to the determination of the image format the sender device may generate the image data . In some embodiments the image data may be generated by using the codec identified by the server . The image data may be provided to the recipient device . In various embodiments the image data is provided to the recipient device in real time or near real time as it is being generated by the sender device . In the illustrated example the image data is provided from the sender device to the recipient device via the network . In further embodiments the image data may be provided to the server .

Based on the devices information provided by the recipient device and the sender device the server may determine that the recipient device is unable to process an image or it is more efficient that the image is processed by the sender device . In such an event the original image is processed by the sender device to create a derivative image. The image data is generated based on the derivative image of the original image. The image data may be provided to the recipient device for display to the recipient.

The image creation module may include an image stabilization module and an image modification module . The image stabilization module may be configured to reduce blurring associated with the original image. Accordingly the blurring associated with a viewable image is less than the blurring associated with the original image captured by a sender. In some embodiments the image stabilization module may be configured to create a viewable image with less blur automatically. For example automatic image stabilization may be performed when an original image captured by a sender is blurry and image data of the original blurry image is provided to a recipient but the sender does not specify that the original blurry image needs to be stabilized. When a set of intermediate images is generated from the image data the image creation module is configured to create a viewable image based on the set of intermediate images such that the viewable image has less blur than the original blurry image. In some embodiments the image stabilization module may be configured to create a viewable image with less blur based on the recipient s device setting. In some embodiments a recipient may provide that image stabilization is only performed when the blur in the original image exceeds a predetermined amount.

The image modification module is configured to create a viewable image such that the viewable image is modified based on the original image according to a sender s instructions. A sender may desire to share with a recipient an image that is different from the original image as captured. For example the original image may be cropped zoomed modified to a different color format faded tinted or accompanied with the sender s comments annotations or special effects. An intermediate image may be generated from image data based on the original image without regard to any instruction to modify the image. Any modification desired and selected by a sender may be performed by the image modification module on the intermediate image . In some embodiments the image modification module may be configured to create a viewable image including the sender s comments annotations or other special effects. In some embodiments the image modification module may be configured to create the viewable image such that at least one parameter of the viewable image is modified. For example a sender may choose to share the original image with the application of a particular photographic filter or effect.

The user device comprises one or more computing devices that can receive input from a user and transmit and receive data via the network . In one embodiment the user device is a conventional computer system executing for example a Microsoft Windows compatible operating system OS Apple OS X and or a Linux distribution. In another embodiment the user device can be a device having computer functionality such as a smart phone a tablet a personal digital assistant PDA a mobile telephone etc. The user device is configured to communicate via the network . The user device can execute an application for example a browser application that allows a user of the user device to interact with the social networking system . In another embodiment the user device interacts with the social networking system through an application programming interface API provided by the native operating system of the user device such as iOS and ANDROID. The user device is configured to communicate with the external system and the social networking system via the network which may comprise any combination of local area and or wide area networks using wired and or wireless communication systems.

In one embodiment the network uses standard communications technologies and protocols. Thus the network can include links using technologies such as Ethernet 702.11 worldwide interoperability for microwave access WiMAX 3G 4G CDMA GSM LTE digital subscriber line DSL etc. Similarly the networking protocols used on the network can include multiprotocol label switching MPLS transmission control protocol Internet protocol TCP IP User Datagram Protocol UDP hypertext transport protocol HTTP simple mail transfer protocol SMTP file transfer protocol FTP and the like. The data exchanged over the network can be represented using technologies and or formats including hypertext markup language HTML and extensible markup language XML . In addition all or some links can be encrypted using conventional encryption technologies such as secure sockets layer SSL transport layer security TLS and Internet Protocol security IPsec .

In one embodiment the user device may display content from the external system and or from the social networking system by processing a markup language document received from the external system and from the social networking system using a browser application . The markup language document identifies content and one or more instructions describing formatting or presentation of the content. By executing the instructions included in the markup language document the browser application displays the identified content using the format or presentation described by the markup language document . For example the markup language document includes instructions for generating and displaying a web page having multiple frames that include text and or image data retrieved from the external system and the social networking system . In various embodiments the markup language document comprises a data file including extensible markup language XML data extensible hypertext markup language XHTML data or other markup language data. Additionally the markup language document may include JavaScript Object Notation JSON data JSON with padding JSONP and JavaScript data to facilitate data interchange between the external system and the user device . The browser application on the user device may use a JavaScript compiler to decode the markup language document .

The markup language document may also include or link to applications or application frameworks such as FLASH or Unity applications the SilverLight application framework etc.

In one embodiment the user device also includes one or more cookies including data indicating whether a user of the user device is logged into the social networking system which may enable modification of the data communicated from the social networking system to the user device .

The external system includes one or more web servers that include one or more web pages which are communicated to the user device using the network . The external system is separate from the social networking system . For example the external system is associated with a first domain while the social networking system is associated with a separate social networking domain. Web pages included in the external system comprise markup language documents identifying content and including instructions specifying formatting or presentation of the identified content.

The social networking system includes one or more computing devices for a social network including a plurality of users and providing users of the social network with the ability to communicate and interact with other users of the social network. In some instances the social network can be represented by a graph i.e. a data structure including edges and nodes. Other data structures can also be used to represent the social network including but not limited to databases objects classes meta elements files or any other data structure. The social networking system may be administered managed or controlled by an operator. The operator of the social networking system may be a human being an automated application or a series of applications for managing content regulating policies and collecting usage metrics within the social networking system . Any type of operator may be used.

Users may join the social networking system and then add connections to any number of other users of the social networking system to whom they desire to be connected. As used herein the term friend refers to any other user of the social networking system to whom a user has formed a connection association or relationship via the social networking system . For example in an embodiment if users in the social networking system are represented as nodes in the social graph the term friend can refer to an edge formed between and directly connecting two user nodes.

Connections may be added explicitly by a user or may be automatically created by the social networking system based on common characteristics of the users e.g. users who are alumni of the same educational institution . For example a first user specifically selects a particular other user to be a friend. Connections in the social networking system are usually in both directions but need not be so the terms user and friend depend on the frame of reference. Connections between users of the social networking system are usually bilateral two way or mutual but connections may also be unilateral or one way. For example if Bob and Joe are both users of the social networking system and connected to each other Bob and Joe are each other s connections. If on the other hand Bob wishes to connect to Joe to view data communicated to the social networking system by Joe but Joe does not wish to form a mutual connection a unilateral connection may be established. The connection between users may be a direct connection however some embodiments of the social networking system allow the connection to be indirect via one or more levels of connections or degrees of separation.

In addition to establishing and maintaining connections between users and allowing interactions between users the social networking system provides users with the ability to take actions on various types of items supported by the social networking system . These items may include groups or networks i.e. social networks of people entities and concepts to which users of the social networking system may belong events or calendar entries in which a user might be interested computer based applications that a user may use via the social networking system transactions that allow users to buy or sell items via services provided by or through the social networking system and interactions with advertisements that a user may perform on or off the social networking system . These are just a few examples of the items upon which a user may act on the social networking system and many others are possible. A user may interact with anything that is capable of being represented in the social networking system or in the external system separate from the social networking system or coupled to the social networking system via the network .

The social networking system is also capable of linking a variety of entities. For example the social networking system enables users to interact with each other as well as external systems or other entities through an API a web service or other communication channels. The social networking system generates and maintains the social graph comprising a plurality of nodes interconnected by a plurality of edges. Each node in the social graph may represent an entity that can act on another node and or that can be acted on by another node. The social graph may include various types of nodes. Examples of types of nodes include users non person entities content items web pages groups activities messages concepts and any other things that can be represented by an object in the social networking system . An edge between two nodes in the social graph may represent a particular kind of connection or association between the two nodes which may result from node relationships or from an action that was performed by one of the nodes on the other node. In some cases the edges between nodes can be weighted. The weight of an edge can represent an attribute associated with the edge such as a strength of the connection or association between nodes. Different types of edges can be provided with different weights. For example an edge created when one user likes another user may be given one weight while an edge created when a user befriends another user may be given a different weight.

As an example when a first user identifies a second user as a friend an edge in the social graph is generated connecting a node representing the first user and a second node representing the second user. As various nodes relate or interact with each other the social networking system modifies edges connecting the various nodes to reflect the relationships and interactions.

The social networking system also includes user generated content which enhances a user s interactions with the social networking system . User generated content may include anything a user can add upload send or post to the social networking system . For example a user communicates posts to the social networking system from a user device . Posts may include data such as status updates or other textual data location information images such as photos videos links music or other similar data and or media. Content may also be added to the social networking system by a third party. Content items are represented as objects in the social networking system . In this way users of the social networking system are encouraged to communicate with each other by posting text and content items of various types of media through various communication channels. Such communication increases the interaction of users with each other and increases the frequency with which users interact with the social networking system .

The social networking system includes a web server an API request server a user profile store a connection store an action logger an activity log and an authorization server . In an embodiment of the invention the social networking system may include additional fewer or different components for various applications. Other components such as network interfaces security mechanisms load balancers failover servers management and network operations consoles and the like are not shown so as to not obscure the details of the system.

The user profile store maintains information about user accounts including biographic demographic and other types of descriptive information such as work experience educational history hobbies or preferences location and the like that has been declared by users or inferred by the social networking system . This information is stored in the user profile store such that each user is uniquely identified. The social networking system also stores data describing one or more connections between different users in the connection store . The connection information may indicate users who have similar or common work experience group memberships hobbies or educational history. Additionally the social networking system includes user defined connections between different users allowing users to specify their relationships with other users. For example user defined connections allow users to generate relationships with other users that parallel the users real life relationships such as friends co workers partners and so forth. Users may select from predefined types of connections or define their own connection types as needed. Connections with other nodes in the social networking system such as non person entities buckets cluster centers images interests pages external systems concepts and the like are also stored in the connection store .

The social networking system maintains data about objects with which a user may interact. To maintain this data the user profile store and the connection store store instances of the corresponding type of objects maintained by the social networking system . Each object type has information fields that are suitable for storing information appropriate to the type of object. For example the user profile store contains data structures with fields suitable for describing a user s account and information related to a user s account. When a new object of a particular type is created the social networking system initializes a new data structure of the corresponding type assigns a unique object identifier to it and begins to add data to the object as needed. This might occur for example when a user becomes a user of the social networking system the social networking system generates a new instance of a user profile in the user profile store assigns a unique identifier to the user account and begins to populate the fields of the user account with information provided by the user.

The connection store includes data structures suitable for describing a user s connections to other users connections to external systems or connections to other entities. The connection store may also associate a connection type with a user s connections which may be used in conjunction with the user s privacy setting to regulate access to information about the user. In an embodiment of the invention the user profile store and the connection store may be implemented as a federated database.

Data stored in the connection store the user profile store and the activity log enables the social networking system to generate the social graph that uses nodes to identify various objects and edges connecting nodes to identify relationships between different objects. For example if a first user establishes a connection with a second user in the social networking system user accounts of the first user and the second user from the user profile store may act as nodes in the social graph. The connection between the first user and the second user stored by the connection store is an edge between the nodes associated with the first user and the second user. Continuing this example the second user may then send the first user a message within the social networking system . The action of sending the message which may be stored is another edge between the two nodes in the social graph representing the first user and the second user. Additionally the message itself may be identified and included in the social graph as another node connected to the nodes representing the first user and the second user.

In another example a first user may tag a second user in an image that is maintained by the social networking system or alternatively in an image maintained by another system outside of the social networking system . The image may itself be represented as a node in the social networking system . This tagging action may create edges between the first user and the second user as well as create an edge between each of the users and the image which is also a node in the social graph. In yet another example if a user confirms attending an event the user and the event are nodes obtained from the user profile store where the attendance of the event is an edge between the nodes that may be retrieved from the activity log . By generating and maintaining the social graph the social networking system includes data describing many different types of objects and the interactions and connections among those objects providing a rich source of socially relevant information.

The web server links the social networking system to one or more user devices and or one or more external systems via the network . The web server serves web pages as well as other web related content such as Java JavaScript Flash XML and so forth. The web server may include a mail server or other messaging functionality for receiving and routing messages between the social networking system and one or more user devices . The messages can be instant messages queued messages e.g. email text and SMS messages or any other suitable messaging format.

The API request server allows one or more external systems and user devices to call access information from the social networking system by calling one or more API functions. The API request server may also allow external systems to send information to the social networking system by calling APIs. The external system in one embodiment sends an API request to the social networking system via the network and the API request server receives the API request. The API request server processes the request by calling an API associated with the API request to generate an appropriate response which the API request server communicates to the external system via the network . For example responsive to an API request the API request server collects data associated with a user such as the user s connections that have logged into the external system and communicates the collected data to the external system . In another embodiment the user device communicates with the social networking system via APIs in the same manner as external systems .

The action logger is capable of receiving communications from the web server about user actions on and or off the social networking system . The action logger populates the activity log with information about user actions enabling the social networking system to discover various actions taken by its users within the social networking system and outside of the social networking system . Any action that a particular user takes with respect to another node on the social networking system may be associated with each user s account through information maintained in the activity log or in a similar database or other data repository. Examples of actions taken by a user within the social networking system that are identified and stored may include for example adding a connection to another user sending a message to another user reading a message from another user viewing content associated with another user attending an event posted by another user posting an image attempting to post an image or other actions interacting with another user or another object. When a user takes an action within the social networking system the action is recorded in the activity log . In one embodiment the social networking system maintains the activity log as a database of entries. When an action is taken within the social networking system an entry for the action is added to the activity log . The activity log may be referred to as an action log.

Additionally user actions may be associated with concepts and actions that occur within an entity outside of the social networking system such as an external system that is separate from the social networking system . For example the action logger may receive data describing a user s interaction with an external system from the web server . In this example the external system reports a user s interaction according to structured actions and objects in the social graph.

Other examples of actions where a user interacts with an external system include a user expressing an interest in an external system or another entity a user posting a comment to the social networking system that discusses an external system or a web page within the external system a user posting to the social networking system a Uniform Resource Locator URL or other identifier associated with an external system a user attending an event associated with an external system or any other action by a user that is related to an external system . Thus the activity log may include actions describing interactions between a user of the social networking system and an external system that is separate from the social networking system .

The authorization server enforces one or more privacy settings of the users of the social networking system . A privacy setting of a user determines how particular information associated with a user can be shared. The privacy setting comprises the specification of particular information associated with a user and the specification of the entity or entities with whom the information can be shared. Examples of entities with which information can be shared may include other users applications external systems or any entity that can potentially access the information. The information that can be shared by a user comprises user account information such as profile photos phone numbers associated with the user user s connections actions taken by the user such as adding a connection changing user profile information and the like.

The privacy setting specification may be provided at different levels of granularity. For example the privacy setting may identify specific information to be shared with other users the privacy setting identifies a work phone number or a specific set of related information such as personal information including profile photo home phone number and status. Alternatively the privacy setting may apply to all the information associated with the user. The specification of the set of entities that can access particular information can also be specified at various levels of granularity. Various sets of entities with which information can be shared may include for example all friends of the user all friends of friends all applications or all external systems . One embodiment allows the specification of the set of entities to comprise an enumeration of entities. For example the user may provide a list of external systems that are allowed to access certain information. Another embodiment allows the specification to comprise a set of entities along with exceptions that are not allowed to access the information. For example a user may allow all external systems to access the user s work information but specify a list of external systems that are not allowed to access the work information. Certain embodiments call the list of exceptions that are not allowed to access certain information a block list . External systems belonging to a block list specified by a user are blocked from accessing the information specified in the privacy setting. Various combinations of granularity of specification of information and granularity of specification of entities with which information is shared are possible. For example all personal information may be shared with friends whereas all work information may be shared with friends of friends.

The authorization server contains logic to determine if certain information associated with a user can be accessed by a user s friends external systems and or other applications and entities. The external system may need authorization from the authorization server to access the user s more private and sensitive information such as the user s work phone number. Based on the user s privacy settings the authorization server determines if another user the external system an application or another entity is allowed to access information associated with the user including information about actions taken by the user.

The social networking system can include an image processing module . In some embodiments the image processing module can be implemented as the image processing module of . The image processing module can be configured to create process and or modify images according to various embodiments of the present disclosure.

The user device can include an image processing module . In some embodiments the image processing module can be implemented as the image processing module of . The image processing module can be configured to create process and or modify images according to various embodiments of the present disclosure.

The foregoing processes and features can be implemented by a wide variety of machine and computer system architectures and in a wide variety of network and computing environments. illustrates an example of a computer system that may be used to implement one or more of the embodiments described herein in accordance with an embodiment of the invention. The computer system includes sets of instructions for causing the computer system to perform the processes and features discussed herein. The computer system may be connected e.g. networked to other machines. In a networked deployment the computer system may operate in the capacity of a server machine or a client machine in a client server network environment or as a peer machine in a peer to peer or distributed network environment. In an embodiment of the invention the computer system may be the social networking system the user device and the external system or a component thereof. In an embodiment of the invention the computer system may be one server among many that constitutes all or part of the social networking system .

The computer system includes a processor a cache and one or more executable modules and drivers stored on a computer readable medium directed to the processes and features described herein. Additionally the computer system includes a high performance input output I O bus and a standard I O bus . A host bridge couples processor to high performance I O bus whereas I O bus bridge couples the two buses and to each other. A system memory and one or more network interfaces couple to high performance I O bus . The computer system may further include video memory and a display device coupled to the video memory not shown . Mass storage and I O ports couple to the standard I O bus . The computer system may optionally include a keyboard and pointing device a display device or other input output devices not shown coupled to the standard I O bus . Collectively these elements are intended to represent a broad category of computer hardware systems including but not limited to computer systems based on the x86 compatible processors manufactured by Intel Corporation of Santa Clara Calif. and the x86 compatible processors manufactured by Advanced Micro Devices AMD Inc. of Sunnyvale Calif. as well as any other suitable processor.

An operating system manages and controls the operation of the computer system including the input and output of data to and from software applications not shown . The operating system provides an interface between the software applications being executed on the system and the hardware components of the system. Any suitable operating system may be used such as the LINUX Operating System the Apple Macintosh Operating System available from Apple Computer Inc. of Cupertino Calif. UNIX operating systems Microsoft Windows operating systems BSD operating systems and the like. Other implementations are possible.

The elements of the computer system are described in greater detail below. In particular the network interface provides communication between the computer system and any of a wide range of networks such as an Ethernet e.g. IEEE 802.3 network a backplane etc. The mass storage provides permanent storage for the data and programming instructions to perform the above described processes and features implemented by the respective computing systems identified above whereas the system memory e.g. DRAM provides temporary storage for the data and programming instructions when executed by the processor . The I O ports may be one or more serial and or parallel communication ports that provide communication between additional peripheral devices which may be coupled to the computer system .

The computer system may include a variety of system architectures and various components of the computer system may be rearranged. For example the cache may be on chip with processor . Alternatively the cache and the processor may be packed together as a processor module with processor being referred to as the processor core . Furthermore certain embodiments of the invention may neither require nor include all of the above components. For example peripheral devices coupled to the standard I O bus may couple to the high performance I O bus . In addition in some embodiments only a single bus may exist with the components of the computer system being coupled to the single bus. Furthermore the computer system may include additional components such as additional processors storage devices or memories.

In general the processes and features described herein may be implemented as part of an operating system or a specific application component program object module or series of instructions referred to as programs . For example one or more programs may be used to execute specific processes described herein. The programs typically comprise one or more instructions in various memory and storage devices in the computer system that when read and executed by one or more processors cause the computer system to perform operations to execute the processes and features described herein. The processes and features described herein may be implemented in software firmware hardware e.g. an application specific integrated circuit or any combination thereof.

In one implementation the processes and features described herein are implemented as a series of executable modules run by the computer system individually or collectively in a distributed computing environment. The foregoing modules may be realized by hardware executable modules stored on a computer readable medium or machine readable medium or a combination of both. For example the modules may comprise a plurality or series of instructions to be executed by a processor in a hardware system such as the processor . Initially the series of instructions may be stored on a storage device such as the mass storage . However the series of instructions can be stored on any suitable computer readable storage medium. Furthermore the series of instructions need not be stored locally and could be received from a remote storage device such as a server on a network via the network interface . The instructions are copied from the storage device such as the mass storage into the system memory and then accessed and executed by the processor . In various implementations a module or modules can be executed by a processor or multiple processors in one or multiple locations such as multiple servers in a parallel processing environment.

Examples of computer readable media include but are not limited to recordable type media such as volatile and non volatile memory devices solid state memories floppy and other removable disks hard disk drives magnetic media optical disks e.g. Compact Disk Read Only Memory CD ROMS Digital Versatile Disks DVDs other similar non transitory or transitory tangible or non tangible storage medium or any type of medium suitable for storing encoding or carrying a series of instructions for execution by the computer system to perform any one or more of the processes and features described herein.

For purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the description. It will be apparent however to one skilled in the art that embodiments of the disclosure can be practiced without these specific details. In some instances modules structures processes features and devices are shown in block diagram form in order to avoid obscuring the description. In other instances functional block diagrams and flow diagrams are shown to represent data and logic flows. The components of block diagrams and flow diagrams e.g. modules blocks structures devices features etc. may be variously combined separated removed reordered and replaced in a manner other than as expressly described and depicted herein.

Reference in this specification to one embodiment an embodiment other embodiments one series of embodiments some embodiments various embodiments or the like means that a particular feature design structure or characteristic described in connection with the embodiment is included in at least one embodiment of the disclosure. The appearances of for example the phrase in one embodiment or in an embodiment in various places in the specification are not necessarily all referring to the same embodiment nor are separate or alternative embodiments mutually exclusive of other embodiments. Moreover whether or not there is express reference to an embodiment or the like various features are described which may be variously combined and included in some embodiments but also variously omitted in other embodiments. Similarly various features are described that may be preferences or requirements for some embodiments but not other embodiments.

The language used herein has been principally selected for readability and instructional purposes and it may not have been selected to delineate or circumscribe the inventive subject matter. It is therefore intended that the scope of the invention be limited not by this detailed description but rather by any claims that issue on an application based hereon. Accordingly the disclosure of the embodiments of the invention is intended to be illustrative but not limiting of the scope of the invention which is set forth in the following claims.

