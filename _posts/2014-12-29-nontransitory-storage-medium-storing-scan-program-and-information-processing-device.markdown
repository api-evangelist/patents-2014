---

title: Non-transitory storage medium storing scan program and information processing device
abstract: A non-transitory storage medium storing a scan program executable by a computer of an image processing device including a communication portion communicable with a scanning device and a storage portion storing a certain program, the scan program, when executed by the computer, causing the image processing device to execute: determining processing in which it is determined whether a pseudo image file is read by the certain program; scan-command transmission processing in which, when the image processing device determines that the pseudo image file is read by the certain program, a scan command is transmitted to the scanning device via the communication portion; scanned-data receiving processing in which the image processing device receives scanned data from the scanning device via the communication portion as a reply to the scan command; and scanned-data writing processing in which the received scanned data is written to the pseudo image file.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09270862&OS=09270862&RS=09270862
owner: Brother Kogyo Kabushiki Kaisha
number: 09270862
owner_city: Nagoya-shi, Aichi-ken
owner_country: JP
publication_date: 20141229
---
The present application claims priority from Japanese Patent Application No. 2013 272166 which was filed on Dec. 27 2013 the disclosure of which is herein incorporated by reference in its entirety.

The present invention relates to an information processing device communicable with a scanning device and a non transitory storage medium storing a scan program executable by a computer of the information processing device.

Most of application programs that can be executed by an image processing device such as a personal computer PC can call a driver of a device by use of an application programming interface API . The image processing device provides an output to the driver of the device during execution of the program and performs various operations such as printing using a printer communicable with the image processing device.

Some of the application programs that can be read by the image processing device cannot call the API of a scanner driver. Such an application program can read in scanned data according to the following procedure. Initially the scanner driver is activated by a program that can call the API of the scanner driver and a scan operation is performed by use of a scanning device communicable with the image processing device. The scanned data obtained in the scan operation is stored in a storage portion of the image processing device. Subsequently the application program reads in as a file the scanned data stored in the storage portion. Thus when the application program that cannot call the API of the scanner driver reads in the scanned data very complicated operations are required. Even the application program that can call the API of the scanner driver suffers from the following problem. That is every time the scanned data is read a screen for setting the scanner driver is displayed and it is required to check setting values on the screen and to press an Enter button. The invention has been developed in view of the situations. It is therefore an object of the invention to enable reading in of scanned data in a simplified manner.

The object indicated above may be attained according to one aspect of the invention which provides a computer readable non transitory storage medium storing a scan program executable by a computer of an image processing device including a communication portion configured to be communicable with a scanning device and a storage portion configured to store a certain program the scan program when executed by the computer causing the image processing device to execute determining processing in which the image processing device determines whether a pseudo image file is read by the certain program scan command transmission processing in which when the image processing device determines that the pseudo image file is read by the certain program in the determining processing the image processing device transmits a scan command to the scanning device via the communication portion scanned data receiving processing in which the image processing device receives scanned data from the scanning device via the communication portion as a reply to the scan command and scanned data writing processing in which the image processing device writes the scanned data received from the scanning device to the pseudo image file.

The object indicated above may be attained according to another aspect of the invention which provides an image processing device comprising a communication portion configured to be communicable with a scanning device and a controller wherein the controller is configured to determine whether a pseudo image file is read by a certain program transmit a scan command to the scanning device via the communication portion when the controller determines that the pseudo image file is read by the certain program receive scanned data from the scanning device via the communication portion as a reply to the scan command and write the scanned data received from the scanning device to the pseudo image file.

Configuration of the PC will be explained. The PC mainly includes a central processing unit CPU as one example of a controller and a computer of the invention a storage portion as one example of a storage portion a wireless LAN I F as one example of a communication portion a panel as one example of a display a button input portion and a mouse as one example of an input portion. These elements are communicable with one another via an input output port .

The wireless LAN I F can perform wireless communication data communication using radio waves according to a wireless LAN scheme in an infrastructure mode in which a plurality of wireless LAN terminal devices perform data communication via access points. The wireless communication is based on a Wi Fi R scheme according to the IEEE 802.11 standard or any standard equivalent thereto. Wi Fi is a registered trademark of Wi Fi Alliance. The scanner can also perform the wireless communication . Thus when the PC accesses the access point and the wireless communication based on wireless LAN becomes available the PC can perform data communication with the scanner .

The CPU executes processing according to an image processing program as one example of a certain program or a scan program as one example of a scan program stored in the storage portion . The image processing program is a program for processing image data. The scan program is a program for causing the scanner to execute a scan operation for obtaining scanned data. In the following description the CPU that executes the program such as the image processing program or the scan program will be described simply by the program name. For instance the image processing program executes may mean the CPU executing the image processing program executes . The storage portion is constituted by a combination of elements such as random access memory RAM read only memory ROM flash memory a hard disk HDD and a buffer of the CPU . The storage portion has a data storage area as one example of a predetermined area of the invention . Various sorts of data such as scanned data obtained by the scanner and data necessary for execution of the programs are stored in the data storage area .

Images and the like based on image data are displayed on the panel . The button input portion is constituted by a keyboard and accepts a button operation by a user. Characters and the like input through the button input portion are displayed on the panel . The mouse is for moving a pointer displayed on the panel and accepts a click operation by the user.

The image processing program is configured to read an image file and to process image data contained in the image file. The image processing program does not have a function of calling an application program interface API of a scanner driver and a function of directly controlling the scanner. Such configuration is typical in an image uploader or the like. For enabling such an image processing program to read a scanned image a named pipe is utilized in the present embodiment. The named pipe is one example of a pseudo image file of the invention.

 3 When file opening is commanded with respect to the named pipe in a write blocking mode opening processing is delayed until another process performs reading with respect to the named pipe.

The scan program is installed on the PC and the scanned image is sent to the image processing program via the named pipe through the use of the scan program . The image processing program reads in the named pipe as a file in the same way as when reading in typical image files so as to read in the scanned image.

Setting and creation of a file name and scanning conditions for each named pipe will be explained below. The setting and creation executed as initial setting prior to activation of the image processing program are executed by activating the scan program in a setting mode.

The scan program sets a pipe name for each named pipe to be created and sets setting values of a scan operation by the scanner for each of named pipes having mutually different pipe names. More specifically when the setting values of the scan operation are set a setting value change screen shown in is displayed on the panel . There are displayed on the setting value change screen a plurality of pipe name select buttons an Add button a Change button and a Delete button .

The pipe name select button is a button for selecting a pipe name i.e. a name of the named pipe. The Add button is a button for setting a new pipe name. The Change button is a button for changing the setting values of the scan operation already set for the pipe name. The Delete button is a button for deleting the setting values of the scan operation already set for the pipe name. After the pointer of the mouse is moved onto any button to be operated the button is operated by a click operation using the mouse .

When the Add button is operated a setting value input screen shown in is displayed. There are displayed on the setting value input screen a pipe name display area a scan size select button a scan color select button a scan resolution select button an OK button a Cancel button a Preview button and a preview area .

The scan size select button is a button for setting a size of a document or original to be scanned. Operating the scan size select button causes a pull down list including a plurality of candidates such as A3 A4 and A5 to be displayed. The user selects a desired size from among the plurality of candidates. The scan color select button is a button for setting a color in scanning. Operating the scan color select button causes a pull down list including two candidates i.e. color and monochrome to be displayed. The user selects a desired one of the two color settings. The scan resolution select button is a button for setting scan resolution. Operating the scan resolution select button causes a pull down list including a plurality of candidates such as 300 dpi 400 dpi and 500 dpi to be displayed. The user selects desired resolution from among the plurality of candidates.

After the setting values of the scan operation are selected by the button operations on the scan size select button etc. the OK button is operated so that a pipe name in accordance with the selected setting values is added as a new pipe name select button and a setting file including the pipe name and the setting values is created and stored in the data storage area . The pipe name has an extension indicative of an image format attached thereto.

The setting value input screen is displayed also when a desired pipe name is selected by operating the corresponding pipe name select button on the setting value change screen and the Change button is subsequently operated. After the setting values of the scan operation are selected by the button operations on the scan size select button etc. on the setting value input screen and the OK button is subsequently operated the setting values of the scan operation set for the existing pipe name are changed.

When a desired pipe name is selected by operating the corresponding pipe name select button on the setting value change screen and the Delete button is subsequently operated the setting values of the scan operation set for the selected pipe name are deleted.

In later explained processing a named pipe is created for each pipe name set by use of the setting value change screen and the setting value input screen . Specifically the scan program is executed to read in the set pipe names and the setting values of the scan operation for each pipe are extracted. Each named pipe in accordance with the setting values of the scan operation is stored in the data storage area . A command for creating the named pipe is mkfifo file name PERMISSION .

There will be next explained processing when activating the scan program in a resident mode. The activation of the scan program in the resident mode needs to be usually executed only at start up of the PC . However when the scan program is activated in the setting mode and the settings are changed as descried above the scan program needs to be activated again in the resident mode. When the scan program is activated in the resident mode the named pipe is created based on the setting file created in the setting mode. Subsequently a blocking mode is set for the created named pipe and the opening processing is executed. When a reading request is externally made to the named pipe namely when the image processing program makes a reading request to the named pipe the named pipe is set in a wait condition list with respect to a wait function select function . Here select function means select function in the C language.

When the named pipe is created according to the above procedure the PERMISSION is set to 644 . Specifically mode t in the command mkfifo const char pathname mode t mode is set to 644 . Thus writing to the named pipe is allowed only by the scan program and writing to the named pipe by programs other than the scan program is not allowed. That is only reading of the named pipe is allowed for programs other than the scan program such as the image processing program . The scan program is an owner of the named pipe and reading of and writing to the named pipe by the scan program are allowed. This is because the resident mode is activated by another user different from a usual user.

When the image processing program performs reading with respect to the named pipe set in the wait condition list described above the named pipe with respect to which the image processing program has performed reading is identified and the setting values of the scan operation set for the named pipe are obtained. Subsequently a command of the scan operation i.e. scan command based on the obtained setting values is transmitted to the scanner via the wireless LAN I F .

The scanner that has received the scan command performs the scan operation according to the setting values received together with the command and creates the scanned data. The created scanned data is transmitted from the scanner to the PC through the wireless communication . Upon reception of the scanned data the scan program stores the received scanned data in a temporary file in the data storage area . The scan program converts the format of the scanned data according to the extension.

Subsequently the scan program reads the scanned data that has undergone format conversion from the temporary file and writes the read scanned data to the named pipe with respect to which the image processing program has performed reading. Thus the scanned data written to the named pipe is obtained by use of the image processing program . In other words the image processing program can read in the scanned data created by the scanner in the same way as when reading in typical image files.

The scan operation by the scanner is not sometimes performed properly. For example the scan operation is not performed by the scanner and the scan program accordingly cannot obtain the scanned data in cases such as when data transmission and reception through the wireless communication is not available between the PC and the scanner when no document is set on the scanner and when the scanner is not turned on. In such cases the scan program writes image data indicative of an error to the named pipe with respect to which the image processing program has performed reading. Consequently the image processing program executes processing that is to be executed when the scanned data cannot be obtained on the basis of the image data indicative of the error written to the named pipe.

When writing of the scanned data or the image data indicative of the error to the named pipe ends the named pipe is disabled. That is the named pipe is closed and is deleted from the data storage area . It is noted however that the deleted named pipe is again created according to the manner described above and becomes available. In this respect the scanned data stored in the temporary file is also deleted.

The above indicated creation of the named pipe and acquisition of the scanned data utilizing the named pipe is executed by execution of the scan program in the CPU of the PC . Referring to flow charts of processing when the scan program is executed in the CPU will be explained below. Processing executed in the setting mode is less relevant to the principle of the invention and its explanation is dispensed with.

When the scan program is executed in the resident mode the setting file is read in Step . Hereinafter Step is abbreviated as S . The setting file is created when the scan program is activated in the setting mode. In the setting file the pipe name and the setting values set for the pipe name are described. It is subsequently determined whether named pipes are already created for all of the pipe names described in the setting file S . If any pipe name for which the named pipe is not yet created exists in the setting file S NO the pipe name and the setting values of the scan operation are extracted from the setting file S and a pipe creating sub routine is executed based on the extracted pipe name and setting values of the scan operation S .

The named pipe is created in the pipe creating sub routine as shown in S . A command for creating the named pipe is mkfifo file name PERMISSION . Then a thread is formed S and the pipe creating sub routine ends. The routine of the thread formed at S is executed concurrently with the processing shown in . As shown in the opening processing is executed on the named pipe created at S S . In this instance a write only mode and the blocking mode are set. The blocking mode is a mode in which any associated processing is suspended until writing is allowable. When opening is commanded in this mode this opening processing is blocked or suspended until the image processing program performs reading with respect to the named pipe. When the opening processing ends in other words when a reading request is externally made to the named pipe namely the image processing program performs reading with respect to the named pipe the named pipe is set in a wait condition list with respect to a wait function select function S . This processing is executed by an FD SET macro. Thereafter the scan program instructs an end of wait with respect to wait processing S that will be later explained S and the sub routine of the thread ends.

If the named pipe is already created for each of all of the pipe names in the setting file at S S YES a wait sub routine is executed S . In the wait sub routine the scan program waits until the end of wait is instructed from the sub routine of the thread as shown in S . When the pipe creating sub routine is executed for each of the plurality of named pipes the scan program waits until the end of wait for any one of the pipes is instructed. The instruction of the end of wait causes the processing to proceed to S. At S the scan program waits until writing to the pipe associated with the instruction of the end of wait is allowed S . When writing is allowed S is implemented at which it is determined whether a wait ending factor is due to the pipe S . S is implemented by use of the select function. The reason for implementation of S is that the select function indicates in some cases that another factor different from the pipe causes cancellation of the wait. If the wait ending factor indicated by the select function is not due to the pipe S NO the processing returns to S at which the scan program continues to wait. If the wait ending factor namely the ending factor indicated by the select function is due to the pipe S YES the wait sub routine ends.

When the wait sub routine ends the processing returns to a main routine and the named pipe that is responsible for the end of wait is selected S . The setting values of the scan operation for the selected named pipe are read out from the setting file S . Subsequently the scan processing sub routine is executed S . In the scan processing sub routine shown in the CPU initially determines whether the PC is being connected to the scanner namely whether data transmission and reception therebetween are available S .

If data transmission and reception are available between the PC and the scanner S YES the CPU determines whether any document is set on the scanner S . If any document is set on the scanner S YES the scan command is sent to the scanner via the wireless LAN I F S . The CPU receives the scanned data as a reply to the scan command and stores the received scanned data in a temporary file in the data storage area S .

Thereafter the image format of the scanned data is converted into the one corresponding to the extension of the selected named pipe S . The format converted scanned data is read out from the temporary file S . The reading of the scanned data is performed for every block having a predetermined data amount. Then the scan program is placed in a wait state S . The condition for ending the wait state is the same as that at S. That is the scan program waits until the data written at S that will be explained is read by the image processing program and the data can be thus written to the named pipe. In an instance where the wait sub routine is called at S S is directly implemented without waiting for a new instruction at S. This is because the end of wait is already instructed at S. Subsequently the CPU determines whether the wait state has ended. If the wait state has ended the CPU determines whether a factor of ending of the wait state ending factor is due to a timeout S . If the ending factor of the wait state is not due to the timeout S NO the CPU determines whether the ending factor of the wait state is due to the named pipe S . If the ending factor of the wait state is not due to the named pipe S NO the processing returns to S.

If the ending factor of the wait state is due to the named pipe S YES the scanned data is written to the named pipe S . The CPU subsequently determines whether writing of all of the scanned data has been completed S . If writing of the scanned data is not yet completed S NO the processing returns to S and the next data block is processed similarly. If writing of all of the scanned data has been completed S YES the scan processing sub routine ends.

If it is determined at S that the ending factor of the wait state is due to the timeout S YES the scan processing sub routine ends.

If it is determined at S that data transmission and reception between the PC and the scanner are not available S NO or if it is determined at S that no document is set on the scanner S NO the image data indicative of the error is created S . The image data indicative of the error is written to the named pipe S and the scan processing sub routine ends.

When the scan processing sub routine ends the processing returns to the main routine and a postprocessing sub routine is executed S . In the postprocessing sub routine shown in the named pipe is disabled namely closed S . Subsequently the closed named pipe is deleted from the data storage area S and the scanned data stored in the temporary file is deleted S . Thus the postprocessing sub routine ends.

When the postprocessing sub routine ends the processing returns to the main routine and the pipe creating sub routine is executed S . In the pipe creating sub routine of S a pipe whose name is the same as the deleted named pipe is created. The manner of creation is substantially the same as in the pipe creating sub routine of S and its explanation is dispensed with. When the pipe creating sub routine of S ends the processing returns to S.

When the scanned data is obtained a plurality of times at the same settings of the scan operation pseudo files used in reading by the image processing device have the same name in the illustrated first embodiment. In an instance where the image processing program is configured to upload image files to a server a plurality of images are uploaded with the same file name. This may cause troubles depending upon the configuration of the server. A second embodiment of the invention can avoid such troubles. There will be explained below acquisition of the scanned data using the scan program in the PC according to the second embodiment. The PC of the second embodiment is substantially identical in configuration with the PC of the first embodiment except that a scanner driver is installed on the PC of the second embodiment and an explanation thereof is dispensed with.

The scanner driver of the PC according to the second embodiment incorporates a function corresponding to the setting mode in the first embodiment. Specifically execution of the scanner driver by a program that can call a scan API causes a setting value input screen to be displayed on the panel as shown in . The setting value input screen is a screen through which are set setting values used when the scan operation is performed using the scanner driver. There are displayed on the setting value input screen a scan size select button a scan color select button a scan resolution select button a File Create button a Scan button a Cancel button a Preview button and a preview area .

The scan size select button the scan color select button the scan resolution select button are respectively similar to the scan size select button the scan color select button and the scan resolution select button displayed on the setting value input screen in the first embodiment. The setting values of the scan operation are selected by button operations on those buttons and the scan operation based on the selected setting values is performed by operating the Scan button . When the File Create button is clicked in a state in which the settings are established the setting file is created as in the setting mode of the first embodiment. Once the File Create button is clicked the scan operation can be thereafter performed as in the first embodiment if the image processing program performs reading with respect to the named pipe as in the first embodiment even though the image processing program cannot call the API of the scanner driver.

Specifically operating the File Create button causes a pipe name input button to be displayed on the panel as shown in . A pipe name input area and an OK button are displayed on the pipe name input button . A template of the pipe name is input to the pipe name input area by a user s operation. The template of the pipe name may include a macro for information relating to a setting date DATE as one example of time related information of the invention and a macro for information relating to a serial number SERIAL . The macros are replaced with character strings of the corresponding information when the scan program is activated in the resident mode. Subsequently the OK button is operated so that the template of the pipe name that is being displayed in the pipe name input area is set.

When the scan program is activated in the resident mode the named pipe is created based on the template of the pipe name set by use of the pipe name input button . Specifically the set template of the pipe name is read by execution of the scan program and a pipe name is created in accordance with the template. For instance in a case in which the template is A4300dpi  DATE  SERIAL and a creation date of the named pipe is Nov. 20 2013 the pipe name is set to A4300dpi20131120001 and the named pipe having the pipe name is created in the data storage area .

For the named pipe having the pipe name that contains information relating to the creation date the wait ending factor includes date changing. When the date changes the named pipe is deleted from the data storage area . Specifically the pipe name A4300dpi20131120001 indicates that the named pipe was created on Nov. 20 2013. If scanned data obtained on Nov. 21 2013 is written to the named pipe for instance the user may confuse. Accordingly the PC is configured such that when the date changes to Nov. 21 2013 the named pipe having the pipe name A4300dpi20131120001 is deleted from the data storage area . Thereafter the serial number is reset and a pipe name having a new date is created.

Where the template of the pipe name contains information relating to a serial number SERIAL the file name of the temporary file is changed to the pipe name of the named pipe and the scanned data in the temporary file is stored without being deleted. Thus the scanned data used in the image processing program is stored in the temporary file of the data storage area and the scanned data can be easily distinguished based on the file name of the temporary file. It is noted that when a new named pipe is created the serial number is incremented.

The creation of the named pipe having the pipe name based on the template the deletion of the named pipe resulting from the date changing the storage of the scanned data in the temporary file etc. are executed by execution of the scan program by the CPU of the PC according to the second embodiment. There will be explained below processing when the scan program of the second embodiment is executed. The processing when the scan program of the second embodiment is executed is the same as the processing when the scan program of the first embodiment is executed except for the pipe creating sub routine the wait sub routine and the postprocessing sub routine. In view of this the processing in the pipe creating sub routine the wait sub routine and the postprocessing sub routine will be explained below referring to the flow charts of .

When the pipe creating sub routine is executed the CPU reads the template of the pipe name as shown in S . Subsequently a pipe name is created based on the read template S . In this instance DATE in the template is replaced with information indicative of the date of creation of the pipe name such as 20131225 . Further SERIAL in the template is replaced with a serial number starting from 001 as an initial value. At S and S the same processing executed at S and S shown in is executed. Thus the pipe creating sub routine ends. The routine of the thread formed at S executes the same processing as shown in .

When the wait sub routine is executed the CPU sets the date changing as the wait ending factor in addition to the writing permission conditions and the notification of the opening processing with respect to the pipe i.e. the processing at S in the first embodiment as shown in S . Then the scan program is placed in a wait state S . Subsequently the CPU determines whether the wait state has ended. If it is determined that the wait state has ended the CPU then determines whether the ending factor of the wait state is due to the date changing S . If the ending factor of the wait state is not due to the date changing S NO the CPU determines whether the ending factor of the wait state is due to the named pipe S . In other words the CPU determines whether the wait state has ended because of an occurrence of reading with respect to the named pipe. If the ending factor of the wait state is not due to the named pipe S NO the processing returns to S. If the ending factor of the wait state is due to the named pipe S YES the wait sub routine ends.

If it is determined at S that the ending factor of the wait state is due to the date changing S YES all of the named pipes each including DATE in the template are closed S and the named pipes are deleted from the data storage area S . Subsequently the serial numbers are reset S and all of the deleted named pipes are again created using the same templates S . In this instance DATE is replaced with a new date. Thus the processing returns again to S and the scan program is placed in the wait state.

When the postprocessing sub routine is executed the named pipe is closed as shown in S . Then the closed named pipe is deleted from the data storage area S . Subsequently the CPU determines whether the template of the pipe name includes the serial number S . If the template of the pipe name does not include the serial number S NO the scanned data stored in the temporary file is deleted S . If the template of the pipe name includes the serial number S YES the file name of the temporary file is changed to the same name as the deleted named pipe S . Then the serial number is incremented S and the postprocessing sub routine ends. Thereafter a new named pipe is created at S having a new file name including the serial number incremented at S. Consequently the image file remains so as to have the same name as that of the named pipe for which reading of data has been performed. Where the image processing device again reads the same file name the image processing device re reads the previously read image without the scanning operation being performed. In other words the user can deal with a newly scanned image and a previously scanned image in the same sense.

The PC according to a third embodiment is configured such that the pipe name of the named pipe is not associated with the setting values of the scan operation and the setting values of the scan operation are input after the image processing program has performed reading with respect to the named pipe. Inputting the setting values of the scan operation after the image processing program has performed reading thereto will be explained below. The PC of the third embodiment is substantially the same in configuration as the PC of the first embodiment and its explanation is dispensed with.

The PC of the third embodiment is configured such that when reading has occurred with respect to the named pipe having the pipe name that is not associated with the setting values of the scan operation a setting value input screen shown in is displayed on the panel . There are displayed on the setting value input screen a scan size select button a scan color select button a scan resolution select button an OK button a Cancel button a Preview button and a preview area .

The scan size select button the scan color select button and the scan resolution select button are respectively similar to the scan size select button the scan color select button and the scan resolution select button displayed on the setting value input screen in the first embodiment. The setting values of the scan operation are selected by operations of the respective buttons and the scan operation based on the setting values is performed by operating the OK button .

Inputting the setting values of the scan operation after the occurrence of reading with respect to the named pipe is executed by execution of the scan program by the CPU of the PC in the third embodiment. The processing when the scan program of the third embodiment is executed will be explained below. The processing when the scan program of the third embodiment is executed is the same as the processing when the scan program of the first embodiment is executed except for the wait sub routine. In view of this the processing of the wait sub routine will be explained referring to the flow chart of .

When the wait sub routine is executed the scan program is placed in a wait state as shown in S . Subsequently the CPU determines whether the ending factor of the wait state is due to an end of the opening processing with respect to the pipe and the writing permission conditions S . That is the CPU determines whether the wait state has ended because reading with respect to the named pipe has occurred. If the ending factor of the wait state is not due to the named pipe S NO the processing returns to S. If the ending factor of the wait state is due to the named pipe S YES the CPU determines whether the pipe name of the named pipe includes the setting values of the scan operation S .

If the pipe name includes the setting values of the scan operation or if associated settings are written in the setting file S YES the wait sub routine ends and the scan operation at the setting values or at the settings is performed like the processing at S . If the pipe name does not include the setting values of the scan operation and the associated settings are not written in the setting file S NO the setting value input screen is displayed on the panel S and the CPU determines whether the setting values of the scan operation have been input S . In other words the CPU determines whether the OK button has been operated after selection of the setting values of the scan operation by operations of the scan size select button and so on. If the setting values of the scan operation are not yet input S NO the processing returns to S. If the setting values of the scan operation have been input S YES the wait sub routine ends. In this instance the scanning operation at the settings input through the setting value input screen is performed at S.

A postprocessing sub routine different from the postprocessing sub routine illustrated above will be explained as one modified example. In the postprocessing sub routine indicated by a flow chart of the named pipe is disabled namely is closed S and the closed named pipe is deleted from the data storage area S . Subsequently the serial number n is set to 1 S . The CPU then determines whether there exists a file having a file name that includes the pipe name and the serial number n S .

If the file having the file name that includes the pipe name and the serial number n exists S YES the serial number n is incremented by 1 S and the processing returns to S. If the file having the file name that includes the pipe name and the serial number n does not exist S NO the file name of the temporary file is changed to the file name that includes the pipe name and the serial number n S and the postprocessing sub routine ends. The serial number in the modified example is different from the serial number attached to the pipe name by the macro of the information SERIAL related to the serial number in the second embodiment. It is preferable not to attach the macro SERIAL indicative of the serial number to the template of the pipe name when the modified example is practiced.

The CPU of the PC that executes the scan program is regarded to have a functional configuration shown in in view of the processing executed by the CPU . As apparent from the CPU includes a reading determining section determining section a scan command transmitting section a scanned data receiving section a scanned data writing section a pseudo image file creating section a first pseudo image file deleting section a second pseudo image file deleting section a first storage control section a second storage control section a pseudo image file closing section a screen display section a setting value setting input receiving section and an error data writing section .

The reading determining section is a functional section that executes the reading determining processing determining processing at S S S of the scan program . The scan command transmitting section is a functional section that executes the scan command transmitting processing at S of the scan program . The scanned data receiving section is a functional section that executes the scanned data receiving processing at S of the scan program . The scanned data writing section is a functional section that executes the scanned data writing processing at S of the scan program . The pseudo image file creating section is a functional section that executes the pseudo image file creating processing at S S of the scan program . The first pseudo image file deleting section is a functional section that executes the first pseudo image file deleting processing at S of the scan program . The second pseudo image file deleting section is a functional section that executes the second pseudo image file deleting processing at S S of the scan program . The first storage control section is a functional section that executes the first storage control processing at S of the scan program . The second storage control section is a functional section that executes the second storage control processing at S of the scan program . The pseudo image file closing section is a functional section that executes the pseudo image file closing processing at S S of the scan program . The screen display section is a functional section that executes the screen display processing at S of the scan program . The setting value receiving section is a functional section that executes the setting value setting input receiving processing at S of the scan program . The error data writing section is a functional section that executes the error data writing processing at S of the scan program .

It is to be understood that the present invention is not limited to the details of the illustrated embodiments but may be embodied with various changes and modifications which may occur to those skilled in the art. In the illustrated embodiments the scanned data is obtained utilizing the scan program while the image processing program is being executed. The scanned data may be obtained utilizing the scan program while various programs such as a document creating program and a print processing program are being executed.

The file name of the named pipe includes information relating to the date in the second embodiment. The scan program in the first embodiment may be modified such that the file name of the named pipe includes information relating to the date.

The named pipe stored in the data storage area of the PC in the illustrated embodiments may be stored in other devices connected to the PC .

The information relating to the date is included in the pipe name in the illustrated embodiment. Information relating to a time a day of the week and the like may be included in the pipe name.

The error information is written to the named pipe in the illustrated embodiments when the PC cannot obtain the scanned data. The named pipe may be closed without the error information being written thereto.

While the processing shown in and is executed by the CPU in the illustrated embodiments other devices may execute the processing. For instance the processing may be executed by an ASIC or other logic integrated circuits. Further the CPU the ASIC and other logic integrated circuits may cooperate with one another to execute the processing.

The scan processing in the illustrated embodiments is performed by use of the API. The scan processing may be performed by a call of other programs or a call of a scanner driver.

According to the embodiments illustrated above the named pipe the pseudo image file is virtually provided in the storage portion of the PC the image processing device and the CPU determines whether the image processing program the certain program has performed reading with respect to the named pipe. When the CPU determines that the image processing program has performed reading with respect to the named pipe the scan command is transmitted to the scammer the scanning device . When the PC receives form the scanner the scanned data as a reply to the scan command the received scanned data is written to the named pipe and the scanned data written to the named pipe is read by the image processing program . Thus the embodiments enable the image processing program that cannot call the API of the scanner driver to read in the scanned data in a simplified manner.

