---

title: Bezier curves for advanced driver assistance system applications
abstract: A method and system for using Bezier curves in vehicle positioning and electronic horizon applications for providing data to advanced driver assistance systems (ADAS) applications are disclosed. The Bezier curves are obtained from B-splines. The obtained Bezier curves are subdivided in a manner that allows the vehicle positioning application to derive a polyline representation in real time. Using the Bezier and polyline geometry, the vehicle positioning application provides a vehicle position approximation to the ADAS applications. Using the Bezier curves, the electronic horizon application provides curvature, slope, and heading profiles to the ADAS applications.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09383212&OS=09383212&RS=09383212
owner: HERE Global B.V.
number: 09383212
owner_city: Eindhoven
owner_country: NL
publication_date: 20140326
---
This application is a divisional application under 37 C.F.R. 1.53 b of U.S. patent application Ser. No. 12 540 665 filed Aug. 13 2009 now U.S. Pat. No. 8 725 474 the entire disclosure of which is hereby incorporated by reference which claims the benefit of U.S. Provisional Patent Application No. 61 101 758 filed Oct. 1 2008 and entitled BEZIER CURVES FOR ADVANCED DRIVER ASSISTANCE SYSTEM APPLICATIONS. The full disclosure of U.S. Provisional Patent Application Ser. No. 61 101 758 is incorporated herein by reference.

The present patent application is related to the copending patent application filed on the same date Ser. No. 12 540 704 entitled CREATING GEOMETRY FOR ADVANCED DRIVER ASSISTANCE SYSTEMS which is incorporated herein by reference.

The present invention relates generally to advanced driver assistance systems ADAS and more particularly relates to using Bezier curves to provide vehicle positioning curvature slope and heading information to ADAS applications.

ADAS was developed to improve the comfort efficiency safety and overall satisfaction of driving. Examples of these advanced driver assistance systems include adaptive headlight aiming adaptive cruise control lane departure warning and control curve warning speed limit notification hazard warning predictive cruise control adaptive shift control as well as others. Some of these advanced driver assistance systems use a variety of sensor mechanisms in the vehicle to determine the current state of the vehicle and the current state of the roadway in front of the vehicle. These sensor mechanisms may include radar infrared ultrasonic and vision oriented sensors such as digital video cameras and LIDAR.

Some advanced driver assistance systems also use digital map data. These systems are sometimes referred to as map enhanced ADAS. The digital map data can be used in advanced driver assistance systems to provide information about the road network road geometry road conditions and other items associated with the road and terrain around the vehicle. Unlike some sensors the digital map data is not affected by environmental conditions such as fog rain or snow. In addition the digital map data can provide useful information that cannot reliably be provided by sensors such as curvature grade bank speed limits that are not indicated by signage lane restrictions and so on. Further digital map data can provide a predictive capability well beyond the range of sensors or even beyond the driver s vision to determine the road ahead of the vehicle around corners over hills or beyond obstructions. Accordingly the digital map data can be a useful addition for some advanced driver assistance systems.

The map enhanced advanced driver assistance systems commonly use data from a geographic database associated with a navigation system in a vehicle. The navigation system database contains data that represents the road network in the region such as the locations geographic coordinates including altitude of roads and intersections road names speed limits along roads turn restrictions at intersections addresses or address ranges along roads the number of lanes for each road lane width lane markings functional classes of roads the locations of medians and so on. The navigation system database may also contain information about other geographic features such as bodies of water parks administrative areas including municipal state and country boundaries and locations of points of interest such as businesses hospitals police stations and so on.

The navigation system database has much more data than an advanced driver assistance system needs. Additionally a geographic database designed for navigation may not have all the data and or may not have data with the accuracy levels needed by the advanced driver assistance system. As a result there has been some effort in designing a geographic database specifically for advanced driver assistance systems. For example U.S. Patent Publication No. 2006 0100780 describes a geographic database having a data storage format designed for a sensor device in a motor vehicle system. However there is room for improvement in a geographic database designed specifically for advanced driver assistance systems.

A method and system for using Bezier curves in vehicle positioning and electronic horizon applications for providing data to ADAS applications are disclosed. The Bezier curves are obtained from B splines. The obtained Bezier curves are subdivided in a manner that allows the vehicle positioning application to derive a polyline representation in real time. Using the Bezier and polyline geometry the vehicle positioning application provides a vehicle position approximation to the ADAS applications. Using the Bezier curves the electronic horizon application provides curvature slope and heading profiles to the ADAS applications.

These as well as other aspects and advantages will become apparent to those of ordinary skill in the art by reading the following detailed description with reference where appropriate to the accompanying drawings. Further it is understood that this summary is merely an example and is not intended to limit the scope of the invention as claimed.

The processor may be any type of processor controller or other computing device. For example the processor may be a digital signal processor. The processor receives inputs from the positioning system the geographic database the communication system the in vehicle data bus interface and other sources. The processor then processes the inputs using application software programs some of which are described with reference to .

The processor then provides outputs to the driver assistance applications via the in vehicle data bus interface and a data bus . Preferably the in vehicle data bus interface and the data bus are a Controller Area Network CAN interface and a CAN bus which are designed for automotive applications. The driver assistance applications may include adaptive headlight aiming adaptive cruise control obstruction detection obstruction avoidance collision avoidance adaptive shift control and others.

The positioning system may utilize GPS type technology a dead reckoning type system or combinations of these or other systems which are known in the art. The positioning system may also include suitable sensing devices that measure the traveling distance speed direction orientation and so on. For example the positioning system may include a GPS system and a gyroscope. The positioning system provides an output signal to the processor . Some of the application software programs that run on the processor use the output signal from the positioning system to determine the location direction orientation etc. of the MPE .

The geographic database is designed for ADAS applications. Like a navigation system geographic database the geographic database contains data about roads and intersections in a geographic region. For example the geographic database contains at least one database record also referred to as entity or entry for each road segment also referred to as a link . When the road segment is represented as a B spline or Bezier curve s the road segment data record includes data providing the geographic coordinates e.g. the latitude longitude and altitude of control points. The end points also referred to as nodes of the road segment correspond to the first and last control points. Additionally the road segment data record may also contain a knot vector for B spline geometry.

When the road segment is represented as shape point geometry the road segment data record includes data providing the geographic coordinates e.g. the latitude longitude and altitude of the end points of the represented road segment. For curved segments the road segment data record also includes data providing the geographic coordinates e.g. the latitude longitude and altitude of the shape points used to characterize the polyline.

The geographic database may include higher quality i.e. more accurate data than the data typically contained in a navigation system geographic database. For example with respect to road geometry the data in the geographic database may be more accurate with respect to longitude latitude and or altitude. Also the starting and stopping locations of tunnels may be more accurately specified in the geographic database . Further the data in the geographic database may be more accurate with respect to derived information such as curvature.

The geographic database may also include more kinds of data e.g. more kinds of attributes than the data typically contained in a navigation system geographic database. For example the geographic database may include data about road objects such as signs and crosswalks including their positions along a road segment sign object type and sign text. Some of the data attributes found in the geographic database are described with reference to .

The map access application provides data access to the geographic database stored on physical storage media. The map access application receives a request for data from the processor and locates data responsive to the request on the physical storage media. The map access application preferably provides an application programming interface API for use by the processor and or the applications .

The map update application facilitates updates to the geographic database . The communications system receives one or more parcels that either add additional coverage to an existing database or replace existing parcels. A parcel is a unit of storage for storing geographic data in the geographic database on physical storage media. For new parcels the map update application stores the parcel on the physical storage media. For existing parcels the map update application replaces the old parcel with the new parcel on the physical storage media.

The vehicle positioning application determines the vehicle s position relative to a road network that is represented by data included in the geographic database . The vehicle positioning application uses the output from the positioning system and matches the output to data in the geographic database using a vehicle positioning algorithm which is sometimes referred to as a map matching algorithm.

The electronic horizon application determines an electronic horizon. An electronic horizon is a collection of roads and intersections leading out from the current vehicle position to an extent determined by the electronic horizon application . The collection of roads and intersections are potential paths that the vehicle may follow from the current vehicle position. The electronic horizon application determines extent using one or more costing functions. The costing functions are based on the needs of the driver assistance applications and may take into consideration various factors such as vehicle speed travel time and driving distance. An example electronic horizon application is described in U.S. Pat. No. 6 405 128 which is assigned to the same assignee as the current application and is hereby incorporated by reference in its entirety.

The interface application controls communications between the MPE and the driver assistance applications via the interface and the bus . Preferably the interface application is based on the CAN protocol which is a serial communication protocol for communicating between various electronic devices in the vehicle. In accordance with the CAN protocol the various electronic devices in the vehicle can be coupled to a single serial bus e.g. the bus such that messages and data can be sent from one electronic device in the vehicle to another. The CAN protocol is a message based protocol in which CAN frames are placed on a common CAN bus. The CAN bus may be a single wire or a differentially driven pair of wires.

The data also include control point data which identify the latitude longitude and altitude coordinate positions of control points that can be used to represent the shape of a straight or curved segment. While the data for two control points are shown in it is understood that a segment can contain more than one curve and the number of control points may depend on the number and shape of the curves in the segment. For example each cubic Bezier curve is represented by four control points but the last control point of a previous Bezier curve is the same as the first control point of the next Bezier curve. The road segment data record stores data for the number of control points equal to the number of Bezier curves multiplied by three plus one.

The data further include attributes for the segment. Some of the attributes of the segment are depicted in . The road segment data record may include additional data such as shape point data as well.

The control point attributes contain bit flags that provide additional information regarding control points to aid in the creation of curvature and slope profiles as described with reference to . For example the control point attributes may include a byte size flag per control point. One of the bits in the flag is assigned to curvature while another of the bits is assigned to slope. If the curvature bit flag is set to one then the control point is marked as part of the curvature profile. Similarly if the slope bit flag is set to one then the control point is marked as part of the slope profile.

The direction of travel attribute represents the allowed direction of traffic flow on a segment. For example the segment may represent a portion of a road network in which travel is permitted in both directions. Alternatively the segment may represent a portion of a road network allowing only one way travel. The direction of travel attribute identifies whether the segment allows bi directional travel or unidirectional travel and if unidirectional the direction of travel attribute also identifies the allowed direction of travel.

The speed category attribute represents the general speed trend of a road based on posted or implied speed limit. The speed category attribute contains data associated with a speed range. For example the speed category attribute may include a data representation of the integer 1 for speeds exceeding 80 mph the integer 2 for speeds in the range of 65 80 mph the integer 3 for speeds in the range of 55 64 mph and so on until the speed range includes 0 mph.

The lane category attribute represents the predominant number of lanes on a segment in one direction of travel. Preferably the lane category attribute does not include turn lanes. If the number of lanes is different for each direction the lane category attribute may represent the higher number.

The road type attribute represents the type of road and or functional class that the segment represents. For example the road type attribute may contain data associated with an interstate highway a controlled access highway a pedestrian walkway and so on.

The segment characteristic attribute contains bit flags that describe various characteristics of the segment. For example the segment characteristic attribute may identify whether a segment is paved a ramp a bridge a tunnel a roundabout and so on.

The access characteristic attribute contains bit flags that define the types of traffic allowed on the segment. For example the access characteristic attribute may identify whether cars buses trucks taxis emergency vehicles pedestrians and so on are allowed on the segment.

The tiles are formed in such a way that each tile contains approximately equal amount of nodes and shape points. The map surface is covered by an imaginary 2D rectangular grid with fine approximately 2 km by 2 km cells. Then the density of the nodes and shape points is computed by mapping the nodes and shape points in the geographic database onto the grid. The tiles are assembled from the grid cells.

In order to ensure that each tile has approximately equal number of nodes and shape points the whole grid is recursively subdivided in half along the grid lines both in horizontal and vertical directions in such a way that each of the two partitions contain an equal number of geometrical points. The process continues until the tiles contain an amount of nodes and shape points that is smaller than a predefined threshold. The direction of each subdivision is selected in such a way that the aspect ratio of the tiles is minimized.

II At block the method creates link chains within each tile using data from the geographic database . The link chains are a sequence of segments with each of the segments having the same road type attribute . The link chains are created using a software routine. The software routine selects a first segment having an associated functional class. At each node the software routine selects the next segment to add to the link chain. The sequence of segments is preferably made as long as possible. The link chains are used to perform a B spline fit to ensure smoothness across segment boundaries.

At block the method creates 2D B splines using the link chains created at block . At block the method creates 3D B splines using the link chains created at block the 2D B splines created at block and height data . A spline refers to any composite curve formed with piecewise polynomial functions representing curve sections and satisfying specified conditions at boundaries of the sections. Thus there are many types of spline curves including B splines. A B spline has control points and knots. Knots are the points at which individual polynomial curve segments of a polynomial spline curve join together. The segments are joined in such a way as to provide smoothness of the complete curve. A knot vector is an ordered list of non decreasing floating point numbers that describe points along the spline curve where segments begin and end. Splines are well known in the art.

With splines map features including curving road portions are represented by polynomial equations whose coefficients have been determined so as to generate curves that match the shapes of the geographic features with the desired degree of accuracy. Thus splines are a means of describing the shape of the underlying road geometry by specifying the coefficients of a polynomial equation. As described in U.S. Pat. No. 7 084 882 splines have been used to represent shapes of road segments in navigation system databases. U.S. Pat. No. 7 084 882 is assigned to the same assignee as the current application and is hereby incorporated by reference.

The link chains are fitted to create 2D B splines. The 2D B splines are manipulated to correct irregularities and alignment problems. Knots not needed to encode curvature or preserve the position curvature slope and or heading are removed to minimize storage requirements.

The optimized 2D B splines and the height data are used to create 3D splines. The height data is preferably obtained from GPS IMU traces collected as vehicles travel on the roads represented by the road segments however the height data may be obtained from other sources and or sensors. The height data is linearly corrected at crossing nodes to account for GPS height inaccuracies. The link chains are fitted to create an altitude B spline using the corrected height data.

The 2D B spline and the altitude B spline are merged to obtain a 3D B spline. Like the 2D B spline knots not needed to encode curvature and slope or preserve the position curvature slope and or heading are removed from the 3D B spline to minimize storage requirements.

At block the 2D B splines and the 3D B splines may be converted to Bezier curves. If a segment does not have height data the 2D B spline is converted to a Bezier curve. However if the segment does have height data the 2D B spline may only be used to create the 3D B spline at block .

Cubic Bezier curves are defined by two end points and two additional control points that are positioned along tangents to the curve at the end points. The cubic Bezier curve equation can be written in vector form as follows 1 3 1 3 1 where P P P and P3 are the control points and t is the parameter. Bezier curves can be derived from B spline curves using known methods.

While spline geometry is useful for representing road segment geometry the use of B splines in the MPE increases the computational requirements for the vehicle positioning and the electronic horizon applications . The analytical B spline geometry is converted into a Bezier representation to facilitate real time derivation of a polyline representation by the vehicle positioning application and an electronic horizon by the electronic horizon application .

At block the Bezier road geometry is divided so that the vehicle positioning application can derive a polyline representation in real time. The method assumes that the road geometry has Bezier curves such that when a point farthest from its chord is projected onto the chord line the point falls inside the chord. The Bezier road geometry is divided after identifying a point or possibly more than one point at a furthest distance or distances from the Bezier curve to a line connecting the end points of the curve i.e. the control polygon base chord right arrow over PP as shown in . Also seen in the furthest distance is generally not in the center of the curve.

The optimal subdivision point is the point on the Bezier curve that is the furthest from the control polygon base chord. The position of the point is obtained analytically from the condition that the tangent to the 2D Bezier curve B t at the point is parallel to the chord.

The expression above is reduced to a quadratic equation for the parameter t. For a general Bezier curve the quadratic equation may not have real roots in the interval 0 1 on which the parameter t is defined. However for well behaved Bezier curves the quadratic equation will have one or two real roots in the 0 1 interval. If the quadratic equation has two real roots two subdivision points are used to split the Bezier curve at two points. Once the point is obtained the Bezier curve is split into two Bezier curves using the de Casteljau subdivision algorithm. The resulting Bezier curves are stored in the geographic database .

At block the vehicle positioning application derives a polyline representation in real time. An example polyline representation is depicted in . The vehicle positioning application derives the polyline representation by connecting the end points of the Bezier curves while ignoring the internal control points .

At block the vehicle positioning application performs map matching analysis to determine the closest point to the vehicle on the polyline representation as determined at block . The map matching analysis may be conducted using conventional vehicle positioning algorithms.

At block the vehicle positioning application identifies the appropriate Bezier curve from the point on the polyline found at block . The vehicle positioning application computes a lookup table on the fly to associate the Bezier curves with the computed polyline. The length along the polyline is used in the lookup table to identify the corresponding Bezier curve.

At block the vehicle positioning application projects the map matched point identified at block onto the Bezier curve identified at block . The vehicle positioning application obtains an approximation of vehicle position on the Bezier curve by solving a cubic equation numerically using a combination of Newton s and bisection methods.

Because the vehicle positioning application is approximating vehicle position on the Bezier curve the process is simplified from processes that attempt to identify exact vehicle position. This simplification is useful for the MPE as the MPE is likely to have less computing capabilities than a navigation system for example. The vehicle positioning application provides the vehicle position approximation to one or more of the driver assistance applications via the interface application the in vehicle data bus interface and the data bus .

At block the method obtains curvature and slope information from the B splines. The curvature information may be obtained by taking samples along the B spline and computing 2D i.e. horizontal curvature and arc length at each sample point. The measured curvature and arc length are graphed e.g. curvature along the y axis arc length along the x axis . The method applies the Douglas Peucker line simplification technique using recursive subdivision to the plot until the polyline approximation is within a desired tolerance. These polylines have coordinates of arc length and curvature i.e. l k . The slope information may be obtained in a similar way.

At block the method encodes the vertices of the piecewise linear approximation into the Bezier control points. The method identifies points on the B spline that correspond to the vertexes of the polyline. The method inserts knots into the B spline at the identified points. The inserted knots are tagged flagged as curvature II knots or slope knots. After inserting the additional knots the method removes as many original untagged knots from the B spline not needed to keep the B spline within a threshold tolerance from the 2D 3D position shape heading slope and curvature of the original B spline. The resulting B splines are then converted to Bezier curves. Additionally the B spline knot flags that mark the curvature and slope knots are converted to the Bezier curve control point flags .

At block the electronic horizon program computes arc length for the Bezier curves in the electronic horizon. Preferably the electronic horizon program uses Gaussian quadrature to estimate arc length. Evaluating Bezier curve derivatives at four internal points to calculate the arc length is a sufficiently good approximation.

At block the electronic horizon program publishes a curvature profile curvature vs. arc length using the curvature obtained at block and encoded at block and the arc length calculated at block . Similarly the electronic horizon program publishes a slope profile slope vs. arc length using the slope obtained at block and encoded at block and the arc length calculated at block .

The electronic horizon application provides the curvature and or slope profiles to one or more of the driver assistance applications via the interface application the in vehicle data bus interface and the data bus . Preferably the electronic horizon application provides the profiles as a pair of values i.e. arc length and curvature or arc length and slope or two pairs of values if the profile is not continuous for a driven length. The number of pairs provided should be sufficient for the needs of the driver assistance applications but not too much as to degrade communications on the data bus .

A heading is the direction in which the vehicle is facing which changes frequently as a vehicle travels on the road. The heading profile plot depicts how the vehicle s heading changes as the vehicle travels on the road relative to a compass reading. The compass reading in this example is based on north being at 0 and 360 east at 90 south at 180 and west at 270 .

Generally the electronic horizon application publishes the piecewise parabolic heading profile plot in real time as a set of three points for each Bezier curve. The three points include the heading angles at the two end points and an intermediate heading angle point that the electronic horizon application calculates.

To calculate the intermediate heading angle point the electronic horizon application preferably samples heading angle points e.g. four heading angle points on the Bezier curve and performs a least squares analysis to fit a parabolic curve to the sampled heading angle points. The intermediate heading angle point is computed at midpoint l l 0.5 l l from the resulting best fitting parabolic curve derived by the least squares fit to the four sampled heading angle points on the Bezier curve. Using the three points the electronic horizon application computes the heading profile as a function of driven length. The electronic horizon program provides the heading profile to one or more of the driver assistance applications via the interface application the in vehicle data bus interface and the data bus .

More specifically the heading angle h is published as a function of the driving distance along the segment. As heading is a smooth varying function along the road heading is best represented by a piecewise parabolic profile instead of a piecewise linear approximation. The heading angle is computed in degrees and is measured in the clockwise direction from north. The heading angle values are published in the range of 0 to 360 . Since the heading angle is a periodic function additional points are inserted into the heading profile when the link points exactly north to avoid a 0 to 360 transition inside a parabolic segment.

The parabolas are defined by three points. Each parabolic segment interpolates the values of the heading at the ends of a Bezier curve. The least squares fit technique is employed to derive a parabola that best approximates the internal points of the h profile as described above. The point on this parabola evaluated at the parameter value t 0.5 constitutes the third heading profile point to be published for the Bezier curve. The details of the least squares fit determination of a parabolic segment h h l are presented as follows.

Let h h l be the heading angle value at the left end of the Bezier curve t 0 and h h l be the heading angle value at the right end of the Bezier curve t 1. The equation of the parabola that approximates heading angle vs. the driving distance can be written as follows where a b and c are unknown scalar coefficients. Coefficients a and c can be eliminated using the boundary conditions to yield 

The remaining scalar coefficient b is derived by minimizing the sum of the square distances between the values sampled on the actual heading profile and the approximating parabola described above 

Introducing the substitution l l where is the distance from the start of the Bezier curve yields a simpler expression for the coefficient b 

It is intended that the foregoing detailed description be regarded as illustrative rather than limiting and that it is understood that the following claims including all equivalents are intended to define the scope of the invention. The claims should not be read as limited to the described order or elements unless stated to that effect. Therefore all embodiments that come within the scope and spirit of the following claims and equivalents thereto are claimed as the invention.

