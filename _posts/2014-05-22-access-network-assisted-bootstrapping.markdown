---

title: Access network assisted bootstrapping
abstract: The Generic Bootstrapping Architecture is used in a method for assigning the bootstrapping transaction ID so that a machine-to-machine server or other device can locate and communicate with a bootstrapping server function. The bootstrapping server function assigns the bootstrapping transaction ID and updates a DNS server with an entry that maps the bootstrapping transaction ID to a network node IP Address.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09392459&OS=09392459&RS=09392459
owner: Convida Wireless, LLC
number: 09392459
owner_city: Wilmington
owner_country: US
publication_date: 20140522
---
This application claims the benefit of priority of U.S. Provisional Patent Application No. 61 826 176 filed on May 22 2013 entitled ACCESS NETWORK ASSISTED BOOTSTRAPPING the contents of the application are hereby incorporated by reference herein.

Machine to machine M2M technologies allow devices to communicate more directly with each other using wired and wireless communications systems. M2M technologies enable further realization of the Internet of Things IoT a system of uniquely identifiable objects and virtual representations of such objects that communicate with each other over a network such as the Internet. IoT may facilitate communication with even mundane everyday objects such as products in a grocery store or appliances in a home and thereby reduce costs and waste by improving knowledge of such objects. For example stores may maintain very precise inventory data by being able to communicate with or obtain data from objects that may be in inventory or may have been sold.

Several efforts have been undertaken to develop standardized architectures for machine to machine communication. These include 3rd Generation Partnership Project 3GPP Machine Type Communication MTC architecture the ETSI M2M architecture and the one M2M architecture. These architectures are summarized briefly below.

The 3GPP evolved packet core EPC network was not originally designed in a way that is optimized for handling machine to machine M2M communications also referred to as machine type communications MTC in which machines or devices communicate with each other over the network such as communications involving smart metering home automation eHealth consumer products fleet management etc. Thus in Release 11 R11 of the 3GPP specifications 3GPP enhanced the interworking capabilities of the UMTS core network for machine type communications machine to machine communications. Interworking refers to a server or application interfacing to the core network for the purposes of exchanging information controlling devices or monitoring devices or communicating with devices. shows portions of the MTC architecture that is presented by 3GPP in TS 23.682 V11.5.0.

As shown in user equipment may connect to the EPC over a radio access network RAN which may comprise E UTRAN LTE access network . The Evolved NodeB eNodeB is the base station for LTE radio. In this figure the EPC comprises a number of network elements including Serving Gateway Serving GW Packet Data Network Gateway PDN GW or P GW mobility management entity MME and Home Subscriber Server HSS .

HSS is a database that contains user related and subscriber related information. It also provides support functions in mobility management call and session setup user authentication and access authorization.

The gateways S GW and P GW deal with the user plane. They transport IP data traffic between User Equipment UE and an external network s . S GW is the point of interconnect between the radio side and the EPC. As its name indicates this gateway serves the UE by routing incoming and outgoing IP packets. It is the anchor point for intra LTE mobility i.e. in case of handover between eNodeBs in RAN and between LTE and other 3GPP accesses. It is logically connected to the other gateway the P GW .

P GW is the point of interconnect between the EPC and external IP networks such as the Internet. These networks are called PDNs Packet Data Networks hence the name. P GW routes packets to and from the PDNs. P GW also performs various functions such as IP address IP prefix allocation or policy control and charging. 3GPP specifies these gateways operate independently but in practice they may be combined in a single box by network vendors.

MME deals with the control plane. It handles the signaling related to mobility and security for E UTRAN access. MME is responsible for the tracking and the paging of UEs in idle mode. It is also the termination point of the Non Access Stratum NAS .

As mentioned above UE can reach the EPC using E UTRAN however this is not the only access technology supported. 3GPP specifies support of multiple access technologies and also the handover between these accesses. The idea is to bring convergence using a unique core network providing various IP based services over multiple access technologies. Existing 3GPP radio access networks are supported. 3GPP specifications define how interworking is achieved between an E UTRAN LTE and LTE Advanced GERAN radio access network of GSM GPRS and UTRAN radio access network of UMTS based technologies WCDMA and HSPA .

The architecture also allows non 3GPP technologies to interconnect the UE and the EPC. Non 3GPP means that these accesses were not specified in 3GPP. These technologies include for example WiMAX cdma2000 WLAN or fixed networks. Non 3GPP accesses can be split into two categories the trusted ones and the untrusted . Trusted non 3GPP accesses can interact directly with the EPC. Untrusted non 3GPP accesses interwork with the EPC via a network entity called the ePDG for Evolved Packet Data Gateway not shown . The main role of the ePDG is to provide security mechanisms such as IPsec tunneling of connections with the UE over an untrusted non 3GPP access. 3GPP does not specify which non 3GPP technologies should be considered trusted or untrusted. This decision is made by the operator.

As further illustrated in a service capability server SCS may provide services to the core network devices and applications. The SCS may also be called an M2M Server MTC Server a Service Capability Layer SCL or a Common Services Entity CSE . An SCS may be controlled by the operator of the home public land mobile network HPLMN or by an MTC service provider. An SCS may be deployed inside or outside the operator domain. If an SCS is deployed inside the operator domain the SCS may be an internal network function and may be controlled by the operator. If an SCS is deployed outside the operator domain the SCS may be controlled by a MTC service provider.

In the MTC architecture of SCS may communicate with machine type communication MTC interworking function MTC IWF via a Tsp reference point i.e. interface . The Tsp reference point is an example of an interface that is used for interworking with the core network.

A UE may communicate through the public land mobile network PLMN which includes radio access network RAN with SCS s and or other MTC UE s . An MTC UE may host one or more MTC applications . The MTC applications may also be hosted on one or more application servers AS e.g. AS . The MTC application may be a MTC communication endpoint that may interact with SCS AS MTC applications or other UE MTC applications.

An application server AS e.g. AS may also host one or more MTC applications. The AS may interface with the SCS and the SCS may provide services to an application s running on the AS . The MTC applications on an AS may interact with SCSs UE MTC applications or other MTC applications.

The MTC inter working function MTC IWF hides the internal PLMN topology from the SCS . The MTC IWF may relay and or translate signaling protocols used between itself and the SCS e.g. over the Tsp reference point to support MTC functionality e.g. MTC UE triggering in the PLMN. For example the SCS may request that the MTC IWF send a trigger to a MTC device. The MTC IWF may deliver the MTC trigger to the MTC device via SMS not shown for example. The MTC device based on the trigger may respond to the SCS . The MTC device may for example respond with a sensor reading. When the MTC device responds to the SCS the MTC device may use a packet data network PDN packet data protocol PDP connection via P GW to communicate with the SCS . The MTC device may connect with the SCS using an IP connection.

The MTC IWF may authorize the SCS before the SCS may establish communication with the 3GPP network. For example when the SCS makes a trigger request on the Tsp reference point the MTC IWF may check whether the SCS is authorized to send the trigger request and that the SCS has not exceeded its quota or rate of trigger submissions.

The ETSI M2M architecture is illustrated in . In the ETSI M2M architecture a service capability layer SCL uses core network functionalities through a set of exposed interfaces to provide service capabilities to the network. An SCL may interface to one or several different core networks.

In the ETSI M2M architecture the network comprises M2M devices e.g. device M2M gateways e.g. gateway and M2M servers e.g. M2M server . A device application DA may be executing on an M2M device a gateway application GA may be executing on an M2M gateway and a network application NA may be executing on an M2M server. As further shown a device e.g. device may implement M2M service capabilities using a device service capabilities layer DSCL e.g. DSCL a gateway may implement a gateway SCL GSCL and a server may implement a network SCL NSCL e.g. NSCL .

The mIa reference point allows a network application to access the M2M service capabilities in an M2M server.

The dIa reference point allows a device application residing in an M2M device to access the different M2M service capabilities in the same M2M device or in an M2M gateway and allows a gateway application residing in an M2M gateway to access the different M2M service capabilities in the same M2M gateway.

The mId reference point allows M2M service capabilities layer residing in an M2M device or M2M gateway to communicate with the M2M service capabilities layer in the network. The mId reference point uses core network connectivity functions as an underlying layer.

Further according to the ETSI M2M architecture an M2M entity e.g. an M2M functional entity such as a device gateway or server platform that may be implemented by a combination of hardware and or software may provide an application or service. For example a light sensor may provide data indicating detected light levels or a thermostat may provide temperature data and the ability to adjust air conditioning controls. This data may be made available as a resource that may be accessed by other M2M entities and that essentially serves as a means to exchange data between M2M entities. A resource may be a uniquely addressable representation of data that may be addressed using a Universal Resource Indicator URI or Universal Resource Locator URL . The availability of such resources may be communicated among M2M entities via the M2M service capabilities layer SCL .

The M2M SCL is also a functional entity that may be implemented using a combination of hardware and software and provides functions exposed on the reference points i.e. functional interfaces between M2M entities mentioned above. For example the M2M SCL may provide common service functionalities that are shared or commonly used by different M2M applications and or services. M2M service capabilities may use functions and capabilities of the 3GPP core network architecture through a set of exposed interfaces e.g. existing interfaces specified by 3GPP 3GPP2 ETSI TISPAN etc. and may also interface to one or more other core networks. M2M devices and entities are typically organized into M2M network domains. In many implementations an M2M server e.g. M2M server configured with a network SCL entity NSCL may maintain resources and resource data for use by other devices e.g. other M2M devices and M2M gateways in the same M2M network domain.

Still referring to NSCL may be in network domain and configured with network application NA at M2M server platform . NA and NSCL may communicate via reference point mIa . The mIa reference points may allow an NA to access the M2M service capabilities available from an NSCL in an M2M domain. Also within network domain may be GSCL and gateway application GA that may be configured at M2M gateway device . GSCL and GA may communicate using reference point dIa . Also within network domain may be DSCL and device application DA that may be configured at M2M device . DSCL and DA may communicate using reference point dIa . Each of GSCL and DSCL may communicate with NSCL using reference point mId . In general dIa reference points allow device and gateway applications to communicate with their respective local service capabilities i.e. service capabilities available at a DSCL and a GSCL respectively . The mId reference point allows an M2M SCL residing in an M2M device e.g. DSCL or an M2M gateway e.g. GSCL to communicate with the M2M service capabilities in the network domain and vice versa e.g. NSCL .

Typically the device gateway and M2M server platform comprise computing devices such as the devices illustrated in and and described below. The NSCL DSCL GSCL NA GA and DA entities typically are logical entities that are implemented in the form of software executing on the underlying device or platform to perform their respective functions in the system . The M2M server of the ETSI M2M architecture may be an SCS e.g. SCS of in the 3GPP MTC architecture.

As further shown in NSCL may be in domain with NA . NA and NSCL may communicate via mIa reference point . There may be an NSCL in network domain and NSCL in network domain . mIm reference point may be an inter domain reference point that allows M2M network nodes in different network domains such as NSCL in network domain NSCL in network domain NSCL in network domain or NSCL in network domain to communicate with one another. For simplicity herein the term M2M server may be used to indicate a service capability server SCS NSCL application server NA or an MTC server. In addition the term user equipment UE as discussed herein may apply to GA GSCL DA or DSCL. A UE may comprise any wireless device capable of communicating in a 3GPP or other wireless network such as an M2M or MTC device or gateway and including for example machines sensors appliances or the like a mobile station a fixed or mobile subscriber unit a pager a personal digital assistant PDA a computer a mobile phone or smart phone or any other type of device capable of operating in a wired or wireless environment.

One process that is often performed in an M2M system is called bootstrapping. Bootstrapping is a process by which entities e.g. an end user device and server perform mutual authentication and key agreement to establish a relationship enabling secure communications between them. Mutual authentication is a procedure in which each party proves its identity to the other. For example if the Generic Bootstrapping Architecture GBA is used authentication may be achieved by making a network component challenge the subscriber identity module SIM card of the end user device and verify that the answer is identical to the one predicted by a home location register HLR or home subscriber server HSS . Authentication helps prevent a rogue device from registering with a server by pretending it is a legitimate end user device. Authentication also helps prevent a fraudulent server from performing a man in the middle attack which may consist of the fraudulent server establishing a connection with an end user device by pretending that it is a legitimate server.

Key agreement is a procedure in which the communicating entities derive a security key that they can then use to secure communications between them for example by an encryption process that uses the security key. A feature of a key agreement mechanism is that the key is not transmitted. The key derivation function may be based on a shared secret value that is meant for only an end user device and server to know for example. This shared secret is also not transmitted. The key derivation function is designed such that it is prohibitively computationally complex for an eavesdropper who does not know the shared secret to compute the key by observing the messages that are transmitted during the key agreement procedure. An overview of some authentication and key agreement mechanisms such as HTTP 1.0 HTTP Digest Authentication and General Bootstrapping Architecture GBA are discussed to give further context to disclosed embodiments.

According to RFC 2617 HTTP 1.0 includes a basic access authentication scheme. The scheme is not considered to be a secure method of user authentication as the user name and password are passed over the network in an unencrypted form. In addition RFC 2617 defines an HTTP Digest Authentication Scheme. The digest scheme is similar to the basic HTTP 1.0 authentication scheme because both are based on a simple challenge response paradigm. However the digest scheme uses a nonce value. Each challenge issued by the server contains a uniquely generated nonce value. The client response never includes the password but instead it includes a checksum or hash of the username the password the given nonce value the HTTP method and the requested URI. Just like basic authentication this scheme still requires the password be prearranged between the user and server. However the checksum is defined such that the password cannot be derived without an unreasonable amount of computation.

RFC 3310 defines a method for using the universal mobile telecommunication system UMTS authentication and key agreement AKA protocol as a one time password generation mechanism for HTTP Digest Authentication. The approach that is proposed in RFC 3310 removes the need for the user equipment UE Application and the network application to use a pre arranged password. Instead the universal subscriber identity module USIM and home subscriber server HSS are leveraged to authenticate the UE authenticate the network application and establish encryption keys.

3GPP TS 33.220 defines the Generic Bootstrap Architecture GBA . The GBA allows UE applications and network application functions NAF s to leverage the 3GPP AKA protocol for device bootstrapping. The GBA is an architecture that HTTP Digest can leverage to implement the HTTP Digest AKA protocol defined in RFC 3310. ETSI 102 690 Section 8.3.2.1 proposes that the GBA be used to implement HTTP Digest Authentication using the AKA protocol as defined in RFC 3310.

Bootstrapping can be an expensive process in that it often requires that secret keys or certificates be provisioned in a device in order to achieve the desired level of security. This is a particularly important problem in the machine to machine field because of the large number of devices that are required to bootstrap with an SCS or M2M server. Disclosed herein are methods devices and systems for access network assisted bootstrapping. For example the service layer may leverage the access network infrastructure so that device or gateway service capability layers D GSCLs may bootstrap with the M2M server without requiring provisioning beyond what is already required by the access network. Particularly in an embodiment access network subscription information is added to the HSS to support the authorization of service layer bootstrapping.

In another embodiment for the Generic Bootstrapping Architecture GBA a method is defined for assigning the bootstrapping transaction ID B TID so that an SCS can locate and communicate with the bootstrapping server function BSF of the GBA. The BSF assigns the B TID and updates a DNS server with an entry that maps the B TID to a machine type communication inter working function MTC IWF IP Address. The SCS may use this mapping to locate an MTC IWF that may be used to reach the BSF. In another embodiment Zn interface commands are placed with the Tsp interface while some of the BSF functionality is moved into the MTC IWF.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter. Furthermore the claimed subject matter is not limited to limitations that solve any or all disadvantages noted in any part of this disclosure.

Discussed with further detail herein are multiple concepts with regard to bootstrapping. As described in relation to the GBA architecture a method is disclosed for assigning the bootstrapping transaction ID B TID so that a M2M server may locate and communicate with the bootstrapping server function BSF of the GBA. The BSF assigns the B TID and updates a DNS server with an entry that maps the B TID to a machine type communication inter working function MTC IWF IP Address. The M2M server uses this mapping to locate an MTC IWF that may be used to reach the BSF.

By way of further background 3GPP TS 33.220 defines the Generic Bootstrap Architecture GBA . The GBA allows UE applications and network application functions NAFs to leverage the 3GPP AKA protocol for device bootstrapping. The GBA is an architecture that HTTP Digest can leverage to implement the HTTP Digest AKA protocol defined in RFC 3310. ETSI TS 102 690 Section 8.3.2.1 proposes that the GBA be used to implement HTTP Digest Authentication using the AKA protocol as defined in RFC 3310. GBA was defined for generic network applications it was not designed to work with specific service layers.

As still further background the ETSI M2M Architecture Specification TS 102 690 supports access network assisted bootstrapping methods. These approaches generally allow the service layer to be more lightweight. In Section 8.3.2 of the ETSI M2M Architecture Specification three approaches are discussed that leverage the capabilities of the access network in order to simplify the process of bootstrapping at the service layer. One of the approaches is a GBA approach. The GBA approach requires an interface from the M2M Server NSCL to the access network which is not completely defined by ETSI M2M.

As previously defined in GBA when UE bootstraps with NAF UE identifies itself with a bootstrapping transaction ID B TID . The B TID is a temporary identifier assigned by bootstrapping server function BSF which BSF may map to a permanent device identifier and an authentication vector. NAF is able to detect the home network of BSF from the B TID. TS 33.220 lists multiple requirements for the B TID. For example B TID shall be globally unique B TID shall be usable as a key identifier in protocols used in reference point Ua and NAF shall be able to detect the home network and BSF of UE from the B TID.

The definition of the B TID is found in 3GPP TS 29.109. The definition of this attribute value pair AVP called transaction identifier is incomplete. The specification simply calls for the AVP to be of type Octet String. As revealed in more detail herein the fact that the NAF or SCS is required to locate the BSF implies additional coordination between the service layer and access network. The B TID should be formatted such that the identifiers that are already known to the access network and service layer may be leveraged. In the architecture of it is implied that the BSF will need to authorize NAF confirms that UE and NAF are allowed to bootstrap and perform some level of identifier mapping. Also since the access network assists with bootstrapping additional information may be retained in the subscription information of devices that are allowed to use this feature. As revealed in more detail herein new access network subscription information is added to the HSS to support the authorization of service layer bootstrapping.

Disclosed below is a method or system for a device or gateway SCL D GSCL to bootstrap with a M2M server e.g. SCS using GBA. The disclosed bootstrapping process leverages the core network infrastructure to allow a UE that includes one or more D GSCLs to perform mutual authentication with an M2M server. In addition the bootstrapping process leverages the core network infrastructure to derive the service layer root key Kmr as part of the bootstrapping process. There may also be integration of the registration process so that when the bootstrapping process is complete an SCL will be registered with a M2M server.

Before proceeding it should be noted that embodiments described herein may be described in terms of a representational state transfer REST architecture with components and entities described conforming to the constraints of a REST architecture RESTful architecture . A RESTful architecture is described in terms of the constraints applied to components entities connectors and data elements used in the architecture rather than in terms of physical component implementation or communications protocols used. Thus the roles and functions of the components entities connectors and data elements will be described.

In a RESTful architecture representations of uniquely addressable resources are transferred between entities. The ETSI M2M specification e.g. TS 102 921 and TS 102 690 as discussed herein has standardized the resource structure that resides on an SCL. When handling resources in a RESTful architecture there are basic methods that may be applied to resources such as Create create child resources Retrieve read the content of the resource Update write the content of the resource or Delete delete the resource. One skilled in the art will recognize that implementations of the instant embodiments may vary while remaining within the scope of the present disclosure. One skilled in the art will also recognize that the disclosed embodiments are not limited to implementations using the ETSI M2M architecture that is described herein to describe exemplary embodiments. The disclosed embodiments may be implemented in other architectures and systems as well such as one M2M and other M2M systems and architectures.

If the subscriber information of UE indicates that the GBA architecture and extensions allow it to work with SCS then the core network HPLMN allows the SCS to access the BSF . A D GSCL on UE is able to leverage the GBA to bootstrap with SCS . Use of the GBA implies that the D GSCL on UE has a way to discover BSF and that the core network will be able to authorize connections between devices or gateways and SCSs. In accordance with another aspect of the present embodiment new HSS subscription information fields are defined to support the new bootstrapping process. These new HSS subscription information fields include a BSF name field a field for permitted service capability servers i.e. the names of SCSs that the device is allowed to connect to and a permitted for GBA field i.e. a flag that is used to indicate if the device should be provided with the bootstrapping service .

Table 1 lists the reference points that are used to deploy the GBA as discussed above. 3GPP TS 33.220 defines the Zn reference point such that it directly connects the BSF with the SCS. In the Zn reference point Zn and Zn is routed through MTC IWF . By routing the Zn reference point through MTC IWF BSF will not need to authorize SCS for bootstrapping or authenticate SCS . MTC IWF already authenticates and authorizes SCS . This approach simplifies BSF . In one embodiment BSF may be part of HSS . In another embodiment the BSF may be tightly integrated with HSS . In other embodiments BSF may be part of an AAA server not shown or tightly integrated with an AAA server. The Zn reference point i.e. Zn reference point and Zn reference point may be routed through MTC IWF by adding the commands that are currently part of Zn reference point to the Tsp interface.

In the embodiment illustrated in BSF is a core network function that the D GSCL on UE and SCS may use to mutually authenticate. BSF is capable of requesting that HSS run the AKA protocol. The application which could be a D GSCL on UE and BSF communicate over the Ub reference point e.g. Ub reference point and Ub reference point and agree on session keys that will be applied between the application on UE and SCS . The Ub reference point e.g. Ub reference point and Ub reference point is HTTP based and can be accessed via P GW in the subscriber s home network i.e. HPLMN . This does not mean that the device cannot roam into a visited network or access BSF from a visited network. It simply means that the selected access point name APN maps P GW in the home network e.g. HPLMN that can be used to access BSF .

In order to contact BSF the D GSCL on UE uses a contact address for BSF . The contact address of BSF may be an IP address that P GW will use to route traffic to BSF . The BSF contact address may be provisioned in the D GSCL on UE or provided to the D GSCL on UE by the NSCL on SCS . The contact address of BSF will map to the BSF Name field of the subscriber information of UE . When the D GSCL on UE and BSF authenticate BSF assigns a B TID a temporary identifier to the D GSCL on UE . The B TID will be used by UE to bootstrap with SCS . In accordance with the improved bootstrapping method described herein BSF will update DNS server with a B TID to MTC IWF mapping.

As mentioned above when a device bootstraps with a NAF in the GBA architecture it only identifies itself with a Bootstrapping Transaction ID B TID . The B TID is a temporary identifier assigned by the Bootstrapping Server Function BSF which the BSF can map to a permanent device identifier and an authentication vector. The GBA architecture requires that the Network Application Function be able to detect the home network of the BSF from the B TID.

SCS will play the role of a NAF in the GBA. SCS may locate and securely communicate with BSF via MTC IWF to obtain the shared key material that was pre established between UE and BSF . MTC IWF is associated with devices in its home network thus SCS reaches BSF via the home network i.e. HPLMN of UE . MTC IWF uses the Tsp reference point to pass messages from SCS to BSF . In this way the messaging on the Zn reference point will be mapped to the Tsp reference point. This embodiment involves the SCL but can be used for a UE or M2M server without an SCL. In other words it can be used for almost any application that is running on a UE and wants to bootstrap with a server.

As mentioned above in order to support the bootstrapping process described herein HSS is provisioned with additional information for each device including in the present embodiment a BSF name field a field for permitted service capability servers and a permitted for GBA. In this example the permitted service capability servers field will include the name that is associated with SCS . The BSF name field will hold the URI IP address or other similar address of BSF . The permitted for GBA field e.g. flag indicates if UE should be provided with the bootstrapping service

At step a service layer of a UE e.g. UE hereinafter UE service layer makes a service layer registration request to SCS i.e. NSCL . In this example an sclCreateRequestIndication Registration is attempted without first authenticating.

After receiving the service layer registration SCS recognizes that UE service layer is attempting to register without authenticating. SCS decides that it wants UE service layer to perform GBA bootstrapping. At step SCS mrequests from MTC IWF the BSF address that should be used by UE service layer . SCS uses a 3GPP External Device Identifier that was provided in step to make this request. A Device Information Request DIR command is executed with parameters External ID SCS ID and Requested Param BSF ID. The BSF address information requested by SCS may be housed on the MTC IWF or another computing device. For example MTC IWF may request a BSF address from HSS . The request at step includes the name of SCS who initiated the request. A DIR Subscriber Information Request SIR Command may include an external ID an SCS ID and Service ID AUTH SERVER ID.

At step if SCS is in the device s list of authorized SCSs MTC IWF may respond with the BSF address. MTC IWF receives the BSF address from HSS . At step MTC IWF is informed of which SCS e.g. SCS is authorized to bootstrap with UE service layer and MTC IWF knows the address of BSF . As discussed in more detail herein Subscriber Information Answer SIA command may be the command executed.

At step MTC IWF responds to SCS with the BSF address. As discussed in more detail herein Device Information Answer SIA command may be the command executed. At step SCS is informed of the IP address of BSF . In a typical scenario BSF is usually inside of a private IP address space that SCS cannot reach. SCS cannot use the private IP Address to access BSF . Due to the private IP address issue SCS passes the IP address to the UE service layer i.e. D GSCL and SCS may access BSF via MTC IWF .

At step SCS issues a registration response rejecting the initial registration attempt. The response includes an indication of GBA bootstrapping and it includes the BSF address. At step UE service layer makes a bootstrap request to BSF . The bootstrap request at step may be included in an HTTP request that has a 3GPP External Device Identifier of UE service layer . At step BSF makes a bootstrap request to HSS . The request at step includes the 3GPP External Device Identifier of the UE . At step HSS responds to BSF with an Authentication Vector for UE . At step BSF responds to UE service layer bootstrap request at step with a random challenge RAND and authentication token AUTN value to UE service layer . Generally the AUTN value together with the RAND parameter authenticates servers to clients. Here at step UE service layer may check the AUTN value to authenticate BSF and UE service layer calculates the cipher key CK integrity key IK and authentication response RES . At step the UE service layer issues an authentication request which may be an HTTP authentication request to BSF . The HTTP authentication request includes the 3GPP External Device Identifier of the device and the RES that was calculated at step . At step BSF authenticates UE service layer by checking that the RES equals an expected authentication response XRES .

At step BSF generates a NAF specific key and a bootstrapping transaction identifier B TID as defined in 3GPP TS 33.220. The NAF specific key Ks NAF is used as M2M Root Key Ks. As discussed in more detail herein in addition to the requirements defined in 3GPP TS 33.220 the B TID may be formatted in the following manner . The field of the B TID may be equal to the field of UE service layer external ID. The field of the B TID is a temporary value that is assigned by BSF . BSF maps the temporary value to the field of UE service layer external ID. The field of the B TID is a random value that is assigned by BSF . BSF updates a DNS server not shown so that when a DNS lookup is performed on the B TID it resolves to the IP Address of an MTC IWF e.g. MTC IWF that may be used to reach BSF .

At step BSF responds to the UE service layer with a HTTP OK response to indicate that authentication was successful. The successful response includes B TID and the lifetime of the key material. At step UE service layer generates the NAF specific key Ks NAF which is used as M2M Root Key Ks. At step UE Service Layer makes a service layer registration request to SCS . The service layer registration request includes an indication that HTTP Digest Authentication is used the B TID. This message is sent to SCS over the mId reference point between the UE service layer and SCS NSCL . The 3GPP External Device Identifier of the UE is not included in this message so the server would need to lookup the identity of the UE using the B TID which is a globally unique identifier that can be resolved to the device identifier.

At step SCS performs a DNS lookup on the B TID to resolve the identifier to an IP Address of MTC IWF . At step SCS makes a device authentication request to MTC IWF. The request includes the B TID. A DIR Command may be executed and include an SCS ID Requested Param GBA BOOTSTRAPPING and B TID. At step MTC IWF forwards the device authentication request from SCS to BSF over the Zn interface. A DIR Command may be executed and include an SCS ID Requested Param GBA KEY MATERIAL and B TID. At step BSF responds to MTC IWF with the M2M Root Key Kmr and the key lifetime over the Zn interface. A DIA Command may be executed and include an Authorization Lifetime Key Material and External Identifier.

At step MTC IWF requests the subscriber information from HSS . The request at step is used to obtain the IMSI that maps to the external identifier of UE service layer and the identities of the SCS s that are authorized to access UE service layer . This request for the subscriber information includes the name of the 3GPP External Identifier. A SIR Command may be executed and include an External ID Service ID ID MAPPING. At step HSS responds to MTC IWF with the IMSI and the list of SCS s that are allowed to access UE service layer . After completing step MTC IWF knows if SCS is authorized to bootstrap with UE service layer . An SIA command may be executed. Aforementioned step and may be skipped if the information is cached in MTC IWF from a previous response. At step MTC IWF responds to SCS with the M2M Root Key Kmr and the key lifetime. A DIA command may be executed. At step SCS responds with a response to indicate that the service layer registration was successful. The registration success message defined in ETSI TS 102 921 may be used to carry the response.

As discussed above fields may need to be added to the subscriber database in an HSS to support bootstrapping in accordance with the method described above. In one embodiment a BSF Name Field and a Permitted for GBA field are added. The BSF Name Field is the name of the BSF that the device uses when bootstrapping. This field may be a public IP address a URI that the UE may resolve to a public IP address or the like. Note that the BSF Name Field is not implied in 3GPP TS 23.682. In one embodiment this information is permanent subscriber data.

For each permitted SCS the subscription information will include the Permitted for GBA field. This field indicates if the SCS is authorized to use GBA procedures to bootstrap with the device. This field also is not implied in 3GPP TS 23.682. In one embodiment this information is permanent subscriber data. The terms permanent and temporary as used herein have the same implication as they do in reference 3GPP TS 23.008. Permanent subscriber data is data that is changed by administration means. For example a phone number of a subscriber and what web sites the subscriber is permitted to visit. Temporary subscriber data is data that may change or expect to be changed as a result of normal operation of the system. For example the name of the base station that a subscriber is connected to will probably change as a subscriber drives through a city.

As shown in the M2M IoT WoT communication system includes a communication network . The communication network may be a fixed network e.g. Ethernet Fiber ISDN PLC or the like or a wireless network e.g. WLAN cellular or the like or a network of heterogeneous networks. For example the communication network may comprise of multiple access networks that provides content such as voice data video messaging broadcast or the like to multiple users. For example the communication network may employ one or more channel access methods such as code division multiple access CDMA time division multiple access TDMA frequency division multiple access FDMA orthogonal FDMA OFDMA single carrier FDMA SC FDMA and the like. Further the communication network may comprise other networks such as a core network the Internet a sensor network an industrial control network a personal area network a fused personal network a satellite network a home network or an enterprise network for example.

As shown in the M2M IoT WoT communication system may include the Infrastructure Domain and the Field Domain. The Infrastructure Domain refers to the network side of the end to end M2M deployment and the Field Domain refers to the area networks usually behind an M2M gateway. The Field Domain includes M2M gateways and terminal devices . It will be appreciated that any number of M2M gateway devices and M2M terminal devices may be included in the M2M IoT WoT communication system as desired. Each of the M2M gateway devices and M2M terminal devices e.g. UE as described herein are configured to transmit and receive signals via the communication network or direct radio link. The M2M gateway device allows wireless M2M devices e.g. cellular and non cellular as well as fixed network M2M devices e.g. PLC to communicate either through operator networks such as the communication network or direct radio link. For example the M2M devices may collect data and send the data via the communication network or direct radio link to an M2M application or M2M devices . The M2M devices may also receive data from the M2M application or an M2M device . Further data and signals may be sent to and received from the M2M application via an M2M service layer as described below. M2M devices and gateways may communicate via various networks including cellular WLAN WPAN e.g. Zigbee 6LoWPAN Bluetooth direct radio link and wireline for example.

Referring to the illustrated M2M service layer in the field domain provides services for the M2M application M2M gateway devices and M2M terminal devices and the communication network . It will be understood that the M2M service layer may communicate with any number of M2M applications M2M gateway devices M2M terminal devices and communication networks as desired. The M2M service layer may be implemented by one or more servers computers or the like. The M2M service layer provides service capabilities that apply to M2M terminal devices M2M gateway devices and M2M applications . The functions of the M2M service layer may be implemented in a variety of ways for example as a web server in the cellular core network in the cloud etc.

Similar to the illustrated M2M service layer there is the M2M service layer in the Infrastructure Domain. M2M service layer provides services for the M2M application and the underlying communication network in the infrastructure domain. M2M service layer also provides services for the M2M gateway devices and M2M terminal devices in the field domain. It will be understood that the M2M service layer may communicate with any number of M2M applications M2M gateway devices and M2M terminal devices. The M2M service layer may interact with a service layer by a different service provider. The M2M service layer may be implemented by one or more servers computers virtual machines e.g. cloud compute storage farms etc. or the like.

Referring also to the M2M service layer and provide a core set of service delivery capabilities that diverse applications and verticals can leverage. These service capabilities enable M2M applications and to interact with devices and perform functions such as data collection data analysis device management security billing service device discovery etc. Essentially these service capabilities free the applications of the burden of implementing these functionalities thus simplifying application development and reducing cost and time to market. The service layer and also enables M2M applications and to communicate through various networks and in connection with the services that the service layer and provide.

In some embodiments M2M applications and may include desired applications that communicate using the GBA as discussed herein. The M2M applications and may include applications in various industries such as without limitation transportation health and wellness connected home energy management asset tracking and security and surveillance. As mentioned above the M2M service layer running across the devices gateways and other servers of the system supports functions such as for example data collection device management security billing location tracking geofencing device service discovery and legacy systems integration and provides these functions as services to the M2M applications and .

The service layer e.g. UE service layer is a software middleware layer that supports value added service capabilities through a set of Application Programming Interfaces APIs and underlying networking interfaces. An M2M entity e.g. an M2M functional entity such as a device gateway or server platform that may be implemented by a combination of hardware and software may provide an application or service. Both ETSI M2M and oneM2M use a service layer that may contain the GBA methods of the present disclosure. ETSI M2M s service layer is referred to as the Service Capability Layer SCL . The SCL may be implemented within an M2M device where it is referred to as a device SCL DSCL a gateway where it is referred to as a gateway SCL GSCL and or a network node where it is referred to as a network SCL NSCL . The oneM2M service layer supports a set of Common Service Functions CSFs i.e. service capabilities . An instantiation of a set of one or more particular types of CSFs is referred to as a Common Services Entity CSE which can be hosted on different types of network nodes e.g. infrastructure node middle node application specific node . Further the GBA of the present application can be implemented as part of an M2M network that uses a Service Oriented Architecture SOA and or a resource oriented architecture ROA to access services such as the GBA of the present application.

The processor may be a general purpose processor a special purpose processor a conventional processor a digital signal processor DSP a plurality of microprocessors one or more microprocessors in association with a DSP core a controller a microcontroller Application Specific Integrated Circuits ASICs Field Programmable Gate Array FPGAs circuits any other type of integrated circuit IC a state machine and the like. The processor may perform signal coding data processing power control input output processing and or any other functionality that enables the M2M device to operate in a wireless environment. The processor may be coupled to the transceiver which may be coupled to the transmit receive element . While depicts the processor and the transceiver as separate components it will be appreciated that the processor and the transceiver may be integrated together in an electronic package or chip. The processor may perform application layer programs e.g. browsers and or radio access layer RAN programs and or communications. The processor may perform security operations such as authentication security key agreement and or cryptographic operations such as at the access layer and or application layer for example.

The transmit receive element may be configured to transmit signals to or receive signals from an M2M service platform . For example in an embodiment the transmit receive element may be an antenna configured to transmit and or receive RF signals. The transmit receive element may support various networks and air interfaces such as WLAN WPAN cellular and the like. In an embodiment the transmit receive element may be an emitter detector configured to transmit and or receive IR UV or visible light signals for example. In yet another embodiment the transmit receive element may be configured to transmit and receive both RF and light signals. It will be appreciated that the transmit receive element may be configured to transmit and or receive any combination of wireless or wired signals.

In addition although the transmit receive element is depicted in as a single element the M2M device may include any number of transmit receive elements . More specifically the M2M device may employ MIMO technology. Thus in an embodiment the M2M device may include two or more transmit receive elements e.g. multiple antennas for transmitting and receiving wireless signals.

The transceiver may be configured to modulate the signals that are to be transmitted by the transmit receive element and to demodulate the signals that are received by the transmit receive element . As noted above the M2M device may have multi mode capabilities. Thus the transceiver may include multiple transceivers for enabling the M2M device to communicate via multiple RATs such as UTRA and IEEE 802.11 for example.

The processor may access information from and store data in any type of suitable memory such as the non removable memory and or the removable memory . The non removable memory may include random access memory RAM read only memory ROM a hard disk or any other type of memory storage device. The removable memory may include a subscriber identity module SIM card a memory stick a secure digital SD memory card and the like. In other embodiments the processor may access information from and store data in memory that is not physically located on the M2M device such as on a server or a home computer. The processor may be configured to control lighting patterns images or colors on a display or indicators in response to whether bootstrapping e.g. bootstrapping using GBA in some of embodiments described herein is successful or unsuccessful or otherwise indicate the status of resource propagation processes. A user interface viewed via display may give a user an option of using GBA for authentication.

The processor may receive power from the power source and may be configured to distribute and or control the power to the other components in the M2M device . The power source may be any suitable device for powering the M2M device . For example the power source may include one or more dry cell batteries e.g. nickel cadmium NiCd nickel zinc NiZn nickel metal hydride NiMH lithium ion Li ion etc. solar cells fuel cells and the like.

The processor may also be coupled to the GPS chipset which is configured to provide location information e.g. longitude and latitude regarding the current location of the M2M device . It will be appreciated that the M2M device may acquire location information by way of any suitable location determination method while remaining consistent with an embodiment.

The processor may further be coupled to other peripherals which may include one or more software and or hardware modules that provide additional features functionality and or wired or wireless connectivity. For example the peripherals may include an accelerometer an e compass a satellite transceiver a sensor a digital camera for photographs or video a universal serial bus USB port a vibration device a television transceiver a hands free headset a Bluetooth module a frequency modulated FM radio unit a digital music player a media player a video game player module an Internet browser and the like.

In operation CPU fetches decodes and executes instructions and transfers information to and from other resources via the computer s main data transfer path system bus . Such a system bus connects the components in computing system and defines the medium for data exchange. System bus typically includes data lines for sending data address lines for sending addresses and control lines for sending interrupts and for operating the system bus. An example of such a system bus is the PCI Peripheral Component Interconnect bus.

Memory devices coupled to system bus include random access memory RAM and read only memory ROM . Such memories include circuitry that allows information to be stored and retrieved. ROMs generally contain stored data that cannot easily be modified. Data stored in RAM can be read or changed by CPU or other hardware devices. Access to RAM and or ROM may be controlled by memory controller . Memory controller may provide an address translation function that translates virtual addresses into physical addresses as instructions are executed. Memory controller may also provide a memory protection function that isolates processes within the system and isolates system processes from user processes. Thus a program running in a first mode can access only memory mapped by its own process virtual address space it cannot access memory within another process s virtual address space unless memory sharing between the processes has been set up.

In addition computing system may contain peripherals controller responsible for communicating instructions from CPU to peripherals such as printer keyboard mouse and disk drive .

Display which is controlled by display controller is used to display visual output generated by computing system . Such visual output may include text graphics animated graphics and video. Display may be implemented with a CRT based video display an LCD based flat panel display gas plasma based flat panel display or a touch panel. Display controller includes electronic components required to generate a video signal that is sent to display .

Further computing system may contain network adaptor that may be used to connect computing system to an external communications network such as network of and .

It is understood that any or all of the systems methods and processes described herein may be embodied in the form of computer executable instructions i.e. program code stored on a computer readable storage medium which instructions when executed by a machine such as a computer server M2M terminal device M2M gateway device or the like perform and or implement the systems methods and processes described herein. Specifically any of the steps operations or functions described above may be implemented in the form of such computer executable instructions. Computer readable storage media include both volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information but such computer readable storage media do not includes signals. Computer readable storage media include but are not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other physical medium which can be used to store the desired information and which can be accessed by a computer.

In describing preferred embodiments of the subject matter of the present disclosure as illustrated in the Figures specific terminology is employed for the sake of clarity. The claimed subject matter however is not intended to be limited to the specific terminology so selected and it is to be understood that each specific element includes all technical equivalents that operate in a similar manner to accomplish a similar purpose.

This written description uses examples to disclose the invention including the best mode and also to enable any person skilled in the art to practice the invention including making and using any devices or systems and performing any incorporated methods. The patentable scope of an invention is defined by the claims and may include other examples that occur to those skilled in the art. Such other examples are intended to be within the scope of the claims if they have structural elements that do not differ from the literal language of the claims or if they include equivalent structural elements with insubstantial differences from the literal languages of the claims.

