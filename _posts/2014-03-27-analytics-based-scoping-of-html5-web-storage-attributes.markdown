---

title: Analytics based scoping of HTML5 web storage attributes
abstract: A method, system, and computer program product for optimizing storage of Web storage attributes through analytics is provided. The method includes identifying and storing in memory of a computer, utilization of different Web storage attributes by different end users across different Web application sessions from different Web browsers and analyzing the stored utilization of different Web storage attributes to identify a past scope of utilization for each of the different Web storage attributes. The method further includes, responsive to receiving a request from a requestor for an optimal storage location of a particular Web storage attribute, determining an identified past scope of utilization for the particular Web storage attribute, mapping the determined identified past scope of utilization for the particular Web storage attribute to the optimal storage location, and returning an indication of the mapped optimal storage location of the particular Web storage attribute to the requestor.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09380118&OS=09380118&RS=09380118
owner: International Business Machines Corporation
number: 09380118
owner_city: Armonk
owner_country: US
publication_date: 20140327
---
This application is a Continuation of U.S. application Ser. No. 14 076 041 filed Nov. 8 2013 currently pending the entirety of which is incorporated herein by reference.

The present invention relates to memory management during page processing and more particularly to optimizing memory management of Web storage attributes during page processing.

Page processing refers to the receipt interpretation and rendering of a markup language defined page in a content browser. The most well known form of a page processing content browser at present is the venerable Web browser in which Web pages are received processed and rendered. In a conventional Web browser a markup language page typically a page defined according to the hypertext markup language HTML markup language specification can be received interpreted and rendered in a display of a computer. Integral to the HTML processing capabilities of the Web browser is the cookie feature.

The cookie feature provides for short term data storage of state information for a Web page. Cookies have been used for many reasons including session management personalization and tracking. However according to the hypertext transfer protocol HTTP specification on statement management a Web browser in respect to the use of cookies need only support a minimal number of cookies. In particular according to the HTTP specification a Web browser is expected only to be able to store three hundred cookies of four kilobytes each and only twenty cookies per server or domain.

While the cookie feature of HTML can provide a tempting mechanism for data storage in page processing for many applications and in particular in light of advances in the acquisition and transfer of digital information such as digital imagery and audio a client side mechanism of greater capacity is desirable. The HTML version 5 specification addresses this need in defining Web Storage. Web Storage picks up where cookies left off. In this regard Web Storage provides both a simple application programming interface API to getter and setter methods for attributes specified in terms of key value pairs and also a default disk space quota of no less than five megabytes per fully qualified domain name.

Importantly Web storage falls exclusively under the purview of client side scripting. In other words the scoping of Web storage attributes is under the discretion of a developer. Therefore it is left to the developer to decide the lifetime of an attribute as well as the scope or location of where different attributes are stored such as locally for a HTTP session or on a server. A Web storage attribute placed in local storage is per domain the Web storage attribute is available to all scripts from the domain that originally stored the Web storage attribute. Therefore a Web storage attribute placed in local storage persists even after the Web browser closes. In contrast session storage is per page per window and is therefore temporally limited to the lifetime of the window. Of course server side storage of an attribute persists for as long as the attribute remains in the server side storage and is made accessible to requesting pages.

Because scoping of the Web storage attributes are at the discretion of the developer developers oftentimes misuse the scoping and storage of Web storage attributes which can further reduce the scalability of a Web application. For example when a developer stores an object that contains a vast amount of information correct data placement storage problems can arise. For instance if state or country lists occur in a form but a developer stores the entire form into local memory the memory on a computing device is not utilized most efficiently. Instead information state or country data that is global or will not change based on a user should be stored on a server or on a database on the server or on a database coupled to the server and should be queried when needed rather than placed in local storage.

Embodiments of the present invention address deficiencies of the art in respect to memory utilization in page processing and provide a novel and non obvious method system and computer program product for optimizing storage of Web storage attributes through analytics. In an embodiment of the invention a method for optimizing storage of Web storage attributes through analytics is provided and includes identifying and storing in memory of a computer utilization of different Web storage attributes by different end users across different Web application sessions from different Web browsers. The method can further include analyzing the stored utilization of different Web storage attributes to identify a past scope of utilization for each of the different Web storage attributes and responsive to receiving a request from a requestor for an optimal storage location of a particular Web storage attribute determining an identified past scope of utilization for the particular Web storage attribute mapping the determined identified past scope of utilization for the particular Web storage attribute to the optimal storage location and returning an indication of the mapped optimal storage location of the particular Web storage attribute to the requestor.

Another embodiment of the invention provides a data processing system configured for optimizing storage of Web storage attributes through analytics. The system can include a server configured for communicative coupling to a client computing device. The server can also be coupled to a database and configured to execute an analytics module. The analytics module can include program code for identifying and storing in memory of the server utilization of different Web storage attributes by different end users across different Web application sessions from different Web browsers. The analytics module can further include program code for analyzing the stored utilization of different Web storage attributes to identify a past scope of utilization for each of the different Web storage attributes. The analytics module can further include program code for determining an identified past scope of utilization for the particular Web storage attribute responsive to receiving a request from a requestor for an optimal storage location of a particular Web storage attribute for mapping the determined identified past scope of utilization for the particular Web storage attribute to the optimal storage location and for returning an indication of the mapped optimal storage location of the particular Web storage attribute to the requestor.

Additional aspects of the invention will be set forth in part in the description which follows and in part will be obvious from the description or may be learned by practice of the invention. The aspects of the invention will be realized and attained by means of the elements and combinations particularly pointed out in the appended claims. It is to be understood that both the foregoing general description and the following detailed description are exemplary and explanatory only and are not restrictive of the invention as claimed.

Embodiments of the invention provide for optimizing storage of Web storage attributes through analytics. In accordance with an embodiment of the invention utilization of different Web storage attributes by different end users across different Web application sessions from different Web browsers can be identified and stored. The stored utilization can be analyzed to identify a past scope of utilization for each of the Web storage attributes. Thereafter in response to receiving a request from a requestor for an optimal storage location of a particular Web storage attribute an identified past scope of utilization for the particular Web storage attribute can be determined and mapped to an optimal storage location such as session storage local storage or server storage. Finally the optimal storage location can be returned to the requestor. In this way the misuse of assigning storage locations to Web storage attributes can be minimized by providing analytics to the developer of an optimal storage location for a particular Web storage attribute.

In further illustration pictorially shows a process optimizing storage of Web storage attributes through analytics. As shown in utilization of different Web storage attributes from at one least one client computing device can be identified by analytic logic on a computer such as a server for each create read update and delete call from a web application to memory an end user such as a developer does on the client computing device . The utilization of different Web storage attributes by different end users across different Web application sessions from different Web browsers can also be identified by analytic logic . In other words different Web storage attributes across different Web application sessions from different Web browsers from one client computing device can be identified or different Web storage attributes across different Web application sessions from different Web browsers from multiple client computing devices can be identified.

Regardless the utilization of different Web storage attributes can be stored by analytic logic in memory on a computer on a database coupled to a computer or on a database on a computer . In addition the utilization of different Web storage attributes can include but is not limited to multiple different keys values users session identification session ID and total number of times a specific key and its corresponding value are assessed. Further the stored utilization of different Web storage attributes can be analyzed by analytic logic to identify a past scope of utilization for each of the different Web storage attributes .

In response to a request from a requestor from a client computing device for an optimal storage location of a particular Web storage attribute analytic logic on a computer can determine an identified past scope of utilization for the particular Web storage attribute . Of note a particular Web storage attribute can be one of the different Web storage attributes or a particular Web storage attribute can be unrelated to the different Web storage attribute. In other words a requestor may request an optimal storage location of a particular Web storage attribute that is not associated with one of the stored utilization of different Web storage attributes. In such a case analytic logic can produce an error that can be returned to the client computing device which made the request .

Thereafter analytic logic can map the determined identified past scope of utilization for the particular Web storage attribute to the optimal storage location. Upon mapping the determined identified past scope of utilization for the particular Web storage attribute to the optimal storage location analytic logic can return an indication of the mapped optimal storage location of the particular Web storage attribute to the requestor. The indication of the mapped optimal storage location of a particular Web storage attribute can include but it is not limited to session persistent session storage local storage and server storage . Optionally analytic logic can display the indication of the mapped optimal storage location of the particular Web storage attribute in an application program interface .

The process described in connection with can be implemented in a data processing system configured to optimize storage of Web storage attributes through analytics. In further illustration shows a data processing system configured to optimize storage of Web storage attributes through analytics. The system can include multiple different client computing devices coupled to a server via a communications network . Each client computing device can include at least one processor B and memory B supporting the execution of an operating system B. In addition the operating system B of each client computing device can support the execution of different Web application sessions from different Web browsers . The server can also include at least one processor and memory supporting the execution of an operating system . In addition the server can be coupled to a database . Yet further the server can be configured to execute an analytic module .

The analytic module can include program code which when executed by at least one processor on the server can identify utilization of multiple different Web storage attributes when certain calls such as create read update and delete are made from different Web application session or just Web application from different Web browsers to memory B by different end users on different client computing devices . Of note the program code of the analytic module can also identify utilization of different Web storage attributes across different Web application sessions from different Web browsers on just one client computing device . The program code of the analytic module can further be enabled to store the identified utilization of different Web storage attributes by different end user across different Web application sessions from different Web browsers . The utilization of different Web storage attributes can be stored in memory of the server or stored in a database . Further program code of the analytic module can analyze the stored utilization of different Web storage attributes to identify a past scope of utilization for each of the different Web storage attributes.

Responsive to receiving a request from a requestor for an optimal storage location of a particular Web storage attribute the program code of the analytic module can determine an identified past scope of utilization for the particular Web storage device can map the determined identified past scope of utilization for the particular Web storage attribute to the optimal storage location and can return an indication of the mapped optimal storage location of the particular Web storage attribute to the requestor. In addition program code of the analytic module can display the indication of the mapped optimal storage location in an API on the client computing device from which the request from the requestor for the optimal storage location of the particular Web storage attribute was received. Further the indication of the mapped optimal storage location of the particular Web storage attribute can include but is not limited to session storage local storage and server storage.

In even yet further illustration of the operation of the program code of the analytic module is a flow chart illustrating a process for optimizing storage of Web storage attributes through analytics. Beginning in block utilization of different Web storage attributes by different end users across different Web application sessions from different Web browsers can be identified. Specifically utilization can be identified from multiple different end users on multiple different computers for each create read update and delete call from a web application to memory. The identified utilization of different Web storage attributes can be stored in memory of a computer such as on server as indicated in block . In addition the identified utilization of different Web storage attributes can also be stored on a database on the server or on a database coupled to a server. As shown in block a past scope of utilization for each of the different Web storage attributes can be identified by analyzing the stored utilization of different Web storage attributes.

Thereafter a request for an optimal storage location for a particular Web storage attribute can be received from a requestor as illustrated in block . Responsive to receiving the request from the requestor for an optimal storage location of a particular Web storage attribute a determination can be made as to whether a utilization exists for a particular Web storage attribute as shown in block . As shown in block if a utilization does not exist for the particular Web storage attribute for which a request for an optimal storage location was received an error can be generated that can be sent to the requestor. In other words the particular Web storage attribute has yet to be utilized either by different end users or by the end user making the request and thus is not one of the different Web storage attributes.

However if the utilization does exist for the particular Web storage attribute for which a request for an optimal storage location was received an identified past scope of utilization for the particular Web storage attribute can be determined as in block . In other words the particular Web storage attribute for which a request for an optimal storage location has been made has previously been utilized by either different end users or by the end user requestor and thus is one of the different Web storage attributes. Further as illustrated in block the determined identified past scope of utilization for the particular Web storage attribute can be mapped to the optimal storage location. Thereafter an indication of the mapped optimal storage location of the particular Web storage attribute can be returned to the requestor as shown in block . Finally the indication of the mapped optimal storage location can be displayed to the requestor for example in an API on the computer from which the request for the optimal storage location of the particular Web storage attribute from the requestor was received as illustrated in block . Of note the indication is not limited to being displayed in an API but can also be displayed on a computer of the requestor and not in an API. Of further note the indication of the mapped optimal storage location of the particular Web storage attribute can be include session storage local storage or server storage.

In further illustration of an embodiment of the invention for optimizing storage of Web storage attributes through analytics utilization of different Web storage attributes can be stored on a server and utilized by the analytics module when a request is made.

Based on the table above if a user Stephen wanted to know the recommended scope optimal storage location for the key foo program code of the analytics module would have determined that since multiple users accessed the same key value over multiple sessions it would be more efficient to store the data on local storage where it could stay persistent across sessions. On the other hand if a scoping optimal storage location request was made for the key buggy the program code of the analytics module would have determined that efficiency is established when the key buggy is stored on the http session since the values do not persist across sessions. Of note the utilization in the table above is for illustration purposes only as the data in the table is arbitrary.

As will be appreciated by one skilled in the art aspects of the present invention may be embodied as a system method or computer program product. Accordingly aspects of the present invention may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium s having computer readable program code embodied therein.

Any combination of one or more computer readable medium s may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device or any suitable combination of the foregoing. More specific examples a non exhaustive list of the computer readable storage mediums would include the following an electrical connection having one or more wires a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber a portable compact disc read only memory CD ROM an optical storage device a magnetic storage device or any suitable combination of the foregoing. In the context of this document a computer readable storage medium may be any tangible medium that can contain or store a program for use by or in connection with an instruction execution system apparatus or device.

A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein for example in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms including but not limited to electro magnetic optical or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate propagate or transport a program for use by or in connection with an instruction execution system apparatus or device.

Program code embodied in a computer readable medium may be transmitted using any appropriate medium including but not limited to wireless wireline optical fiber cable radiofrequency and the like or any suitable combination of the foregoing. Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages including an object oriented programming language and conventional procedural programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

Aspects of the present invention have been described above with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. In this regard the flowchart and block diagrams in the Figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. For instance each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the block might occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and computer instructions.

It also will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions also may be stored in a computer readable medium that can direct a computer other programmable data processing apparatus or other devices to function in a particular manner such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function act specified in the flowchart and or block diagram block or blocks. The computer program instructions also may be loaded onto a computer other programmable data processing apparatus or other devices to cause a series of operational steps to be performed on the computer other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

Finally the terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise. It will be further understood that the terms comprises and or comprising when used in this specification specify the presence of stated features integers steps operations elements and or components but do not preclude the presence or addition of one or more other features integers steps operations elements components and or groups thereof.

The corresponding structures materials acts and equivalents of all means or step plus function elements in the claims below are intended to include any structure material or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present invention has been presented for purposes of illustration and description but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The embodiment was chosen and described in order to best explain the principles of the invention and the practical application and to enable others of ordinary skill in the art to understand the invention in various embodiments with various modifications as are suited to the particular use contemplated.

Having thus described the invention of the present application in detail and by reference to embodiments thereof it will be apparent that modifications and variations are possible without departing from the scope of the invention defined in the appended claims as follows 

