---

title: Partitionable memory interfaces
abstract: A memory device receives a plurality of read commands and/or write commands in parallel. The memory device transmits data corresponding to respective read commands on respective portions of a data bus and receives data corresponding to respective write commands on respective portions of the data bus. The memory device includes I/O logic to receive the plurality of read commands in parallel, to transmit the data corresponding to the respective read commands on respective portions of the data bus, and to receive the data corresponding to the respective write commands on respective portions of the data bus.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09417816&OS=09417816&RS=09417816
owner: ADVANCED MICRO DEVICES, INC.
number: 09417816
owner_city: Sunnyvale
owner_country: US
publication_date: 20140102
---
This invention was made with Government support under Prime Contract Number DE AC52 07NA27344 Subcontract Number B600716 awarded by DOE. The Government has certain rights in this invention.

The present embodiments relate generally to memory devices and interfaces and more specifically to partitioning memory interfaces.

Data for operations to be performed in a computer system or other electronic system may be fetched from a memory device in blocks. For example memory interface standards may specify a minimum read write transaction size. This transaction size however may exceed the desired amount of data resulting in over fetching which wastes power and bandwidth. This problem is exacerbated as data bus widths increase.

In some embodiments a method is performed in a memory device. The method includes receiving a plurality of read commands and or write commands in parallel. Data corresponding to respective read commands are transmitted on respective portions of a data bus. Data corresponding to respective write commands are received on respective portions of the data bus.

In some embodiments a memory device includes input output I O logic to receive a plurality of read commands and or write commands in parallel. The I O logic transmits data corresponding to respective read commands on respective portions of a data bus and receives data corresponding to respective write commands on respective portions of the data bus.

Multiple memory transactions thus may be performed in parallel in a memory device. Furthermore the size of each transaction may be reduced as compared to the size of memory transactions performed serially. Reducing the transaction size reduces over fetching of unneeded data thereby saving power and bandwidth.

Reference will now be made in detail to various embodiments examples of which are illustrated in the accompanying drawings. In the following detailed description numerous specific details are set forth in order to provide a thorough understanding of the disclosure. However some embodiments may be practiced without these specific details. In other instances well known methods procedures components and circuits have not been described in detail so as not to unnecessarily obscure aspects of the embodiments.

The memory device includes an array of memory cells divided into a plurality of banks . In the example of the memory device includes four banks through . However the number of banks may vary. Each bank includes a sub array of memory cells arranged in rows and columns which are not shown in for simplicity. In the example of the rows run vertically in each of the banks through and the columns run horizontally in each of the banks through . The memory device thus includes a plurality of memory locations each of which is addressed by a distinct combination of a bank address a row address and a column address. Each memory location includes a plurality of memory cells that stores a block of data.

Each of the banks is coupled to a corresponding row buffer bank is coupled to a row buffer bank is coupled to a row buffer bank is coupled to a row buffer and bank is coupled to a row buffer . When a row in a bank is activated the data stored in the memory cells of the row are transferred to the respective row buffer . Portions of the data for the row may subsequently be read from the respective row buffer e.g. in bursts in accordance with subsequent read commands. Each read command specifies a column address which specifies the portion of data to be read from the respective row buffer .

The memory device is coupled with the memory controller through a first command and address C A bus a second C A bus and a data bus DBus . Each of the busses and includes a plurality of signal lines. Additional signal lines such as signal lines for various control signals and or enable signals may also couple the memory device with the memory controller . The memory controller sends commands to the memory device over the first and second C A busses and . Examples of these commands are described below with respect to . For write commands the memory controller sends data to the memory device through the data bus e.g. in a burst of data bus cycles . The memory device writes the data to memory locations specified by addresses received through the first C A bus and or second C A bus . For read commands the memory device accesses data stored at memory locations specified by addresses received through the first C A bus and or second C A bus . The memory device transmits the accessed data to the memory controller through the data bus e.g. in a burst of data bus cycles .

In some embodiments commands sent from the memory controller to the memory device include row access commands e.g. including activate commands that specify rows to be activated and column access commands e.g. including read commands and write commands . Row access commands may be sent from the memory controller to the memory device on the first C A bus while column access commands may be sent from the memory controller to the memory device on the second C A bus . However the frequency of row access commands may be less than the frequency of column access commands because multiple column accesses may be performed in a single row. As a result there may be unused bandwidth on the first C A bus . The memory controller may use this otherwise unused bandwidth to transmit additional column access commands e.g. additional read commands and or write commands to the memory device . The memory controller thus may transmit two or more commands e.g. read and or write commands to the memory device in parallel on the first and second C A busses and such that the two commands are provided simultaneously e.g. in the same clock cycle or set of clock cycles . In some embodiments a first command and a first portion of a second command are provided on the first C A bus while a second portion of the second command is provided in parallel on the second C A bus or vice versa . In some other embodiments the first command is provided on the first C A bus and the second command is provided in parallel on the second C A bus .

The data bus may be partitioned into multiple portions i.e. multiple sub channels with each portion used for a respective command of a plurality of commands provided in parallel to the memory device . For example if two commands are provided in parallel to the memory device the data bus may be partitioned into a first portion e.g. a first half used for data associated with the first command and a second portion e.g. a second half used for data associated with the second command. Each portion of the data bus is thus used for a distinct memory transaction. In some embodiments the number of portions into which the data bus is partitioned is specified by a control signal that the memory controller provides to the memory device . The partitioning of the data bus therefore may be reconfigured on the fly during operation in accordance with some embodiments.

In some embodiments the data bus is partitioned into multiple portions in a first mode of operation but not in a second mode of operation. In the first mode the memory controller may provide multiple commands e.g. multiple read and or write commands to the memory device in parallel with each portion of the data bus being used to convey data associated with a respective command. In the second mode the memory controller provides commands to the memory device in series such that only a single command is provided to the memory device at a time. In the second mode the entire data bus is used to convey data associated with a respective command. Furthermore in some embodiments the memory device and memory controller may operate in one or more additional modes with the data bus being partitioned into a different number of portions in each additional mode.

The memory device includes I O logic that is coupled to the row buffers and to the C A bus C A bus and data bus . For read operations the I O logic receives data from the row buffers and transmits the data on the data bus . For parallel read commands in the first mode the I O logic provides data from the row buffers to the corresponding portions of the data bus . For read commands in the second mode the I O logic provides data from the row buffers to the entire data bus . For parallel write commands in the first mode the I O logic provides data from corresponding portions of the data bus to respective memory locations. For write commands in the second mode the I O logic provides data from the entire data bus to respective memory locations.

In some embodiments the memory device operates in accordance with a received clock signal . For example the memory device samples the C A bus and C A bus and samples or transmits on the data bus on rising and or falling edges of the clock signal . Each of the C A bus C A bus and data bus may be a double data rate DDR bus or a single data rate SDR bus. If the data bus is a DDR bus lengths of bursts are measured in clock edges including both rising and falling clock edges. If the data bus is an SDR bus lengths of bursts are measured in rising clock edges and therefore in clock cycles.

In one example the data bus is a DDR bus with a width of 128 such that 16 bytes 16B are transferred on each clock edge and memory transactions e.g. reads and writes have a burst length of two. The data bus thus transfers 32B in a single clock cycle burst of burst length 2 with 16B transferred on the rising edge of the clock signal and 16B transferred on the falling edge of the clock signal . In the second mode a sequence of individual successive 32B memory transactions is performed. In the first mode two 16B memory transactions may be performed in parallel. Alternatively the burst length in the first mode may be increased to four such that two 32B memory transactions may be performed in parallel. In general however different embodiments may have different bus widths burst lengths and transaction sizes.

The commands listed in include a row no operation NOP command activate command precharge command precharge all banks command single bank refresh command refresh all banks command power down entry command self refresh entry command and power down and self refresh exit command. Each of these commands includes command bits the activate precharge and single bank refresh commands also include address bits. The commands may also include a parity bit PAR used to detect errors in the command bits and or address bits.

The row NOP command tells the memory device to perform no row related operation. The command bits for the row NOP command are the H bits on R 0 R 1 and R 2 for the rising clock edge of a clock cycle.

The activate command tells the memory device to activate a row e.g. to turn on a word line for a row at an address specified by bank address bits BA3 BA2 BA1 and BA0 i.e. BA 3 0 and row address bits RA 15 0 . The memory device therefore has 16 banks addressed by four bank address bits in this example. The command bits for the activate command are the respective L and H bits on R 0 and R 1 for the first rising clock edge. The activate command extends across four clock edges in two successive clock cycles whereas the other commands in are transmitted in a single clock cycle. Activation of the row causes the data in the row to be transferred to a corresponding row buffer . The activate command is thus a row access command.

The precharge command tells the memory device to precharge the bit lines in a bank specified by bank address bits BA 3 0 . The precharge all banks command tells the memory device to precharge the bit lines in all of the banks . The command bits for these commands are on R 0 R 1 and R 2 for the rising clock edge and R 4 for the falling clock edge.

The single bank refresh command tells the memory device to refresh the data stored in the memory cells of a bank specified by bank address bits BA 3 0 . The refresh all banks command tells the memory device to refresh the data stored in the memory cells of all of the banks . The command bits for these commands are on R 0 R 1 and R 2 for the rising clock edge and R 4 for the falling clock edge.

The power down entry command tells the memory device to enter a low power mode. The self refresh entry command tells the memory device to enter a mode in which it performs self refresh of stored data. The power down and self refresh exit command tells the memory device to exit the low power mode and or the self refresh mode. The command bits for these commands are on R 0 R 1 and R 2 for the rising clock edge.

The commands listed in include a column NOP command read command read with automatic precharge command write command write with automatic precharge command set mode register command and split column NOP CNOPS command. As in each of these commands includes command bits and a parity bit. The read command read with automatic precharge command write command and write with automatic precharge command also include address bits and a mode bit. The read command read with automatic precharge command write command and write with automatic precharge command are examples of column access commands. While the read with automatic precharge command is listed separately from the read command it is a type of read command. Similarly while the write with automatic precharge command is listed separately from the write command it is a type of write command.

The column NOP command tells the memory device to perform no column related operation. The command bits for the column NOP command are the H bits on C 0 C 1 and C 2 for the rising clock edge of a clock cycle.

The read and read with automatic precharge commands each tell the memory device to perform a read operation for a column specified by column address bits CA0a through CA6a i.e. CA 6 0 a in a bank specified by bank address bits BA3a BA2a BA1a and BA0a i.e. BA 3 0 a . The read with automatic precharge command also tells the memory device to precharge the bit lines in the specified bank after performing the read operation. In some embodiments one or more additional address bits for a read command may be provided on the first C A bus for example in the first mode. An example in which an eighth column address bit CA7a is provided on the first C A bus is described below with respect to . Data in the specified column of the specified bank is read from the row buffer corresponding to the specified bank . The command bits for the read and read with automatic precharge commands are on C 0 C 1 and C 2 for the rising clock edge in a clock cycle. The data accessed in response to the read commands is transmitted on a first portion e.g. a first half of the data bus in the first mode and on the entire data bus e.g. on all signal lines of the data bus in the second mode.

The write and write with automatic precharge commands each tell the memory device to perform a write operation for a column specified by column address bits CA0a through CA6a i.e. CA 6 0 a in a bank specified by bank address bits BA3a BA2a BA1a and BA0a i.e. BA 3 0 a . The write with automatic precharge command also tells the memory device to precharge the bit lines in the specified bank after performing the write operation. In some embodiments one or more additional address bits for a write command may be provided on the first C A bus for example in the first mode. An example in which an eighth column address bit CA7a is provided on the first C A bus is described below with respect to . The row in which the write is to be performed is specified by a previous activate command. The command bits for the write and write with automatic precharge commands are on C 0 C 1 and C 2 for the rising clock edge in a clock cycle. The data for the write commands is provided on a first portion e.g. a first half of the data bus in the first mode and on the entire data bus e.g. on all signal lines of the data bus in the second mode.

The mode bit in the read command read with automatic precharge command write command and write with automatic precharge command selects between the first and second modes. The memory device enters the first mode in response to receiving a mode bit having a first value e.g. H or alternately L and enters the second mode in response to receiving a mode bit having a second value e.g. L or alternately H . In the example of the mode bit is on C 3 for the rising clock edge in a clock cycle.

The set mode register command tells the memory device to set a mode register for a specified bank in accordance with an opcode specified by opcode bits OP 7 0 . The command bits for the set mode register command are on C 0 C 1 and C 2 for the rising clock edge in a clock cycle.

The split column NOP CNOPS command is used in the first mode for example and instructs the memory device to perform no column access e.g. no read or write operation associated with a respective portion e.g. half of the data bus . The memory device may however perform a column access e.g. a read or write operation associated with another portion e.g. the other half of the data bus in response to a column access command received on the first C A bus e.g. as described below with respect to . The command bits for the split column NOP command are on C 0 C 1 and C 2 for the rising clock edge in a clock cycle. In some embodiments the CNOPS command also includes the mode bit e.g. on C 3 on the falling clock edge in a clock cycle . Alternatively the mode bit is omitted and the CNOPS command is uniquely identified by the command bits as shown in .

The column access commands of include read read with automatic precharge write and write with automatic precharge which function by analogy to the corresponding commands of but are associated with only a respective portion e.g. a respective half of the data bus . The data accessed in response to the read commands is transmitted on this portion of the data bus . The data for the write commands is provided on this portion of the data bus . The command bits for the column access commands are on R 0 and R 1 for the rising clock edge of a clock cycle. The bank and column address bits are situated as shown in . The bank addresses BA 3 0 b are independent of the bank addresses BA 3 0 a of . Likewise the column addresses CA 6 0 b are independent of the column addresses CA 3 0 a of . The row for which a respective column access command is performed is specified in a previous activate command provided over the first C A bus e.g. as shown in .

In the example of the number of column address bits is the same in the first and second modes which indicates that the amount of data associated with a memory transaction e.g. a given read or write command and thus the size of a memory transaction is the same regardless of the mode. However only a portion of the data bus is used for a given memory transaction in the first mode while the entire data bus is used for a given memory transaction in the second mode. To accommodate this difference the burst length in the first mode is longer than e.g. twice as long as the burst length in the second mode. For example the burst length may be two in the second mode and four in the first mode.

Alternatively the amount of data associated with memory transactions in the first mode is less than the amount of data associated with memory transaction in the second mode. The granularity of memory transactions in the first mode thus is greater than the granularity of memory transactions in the second mode. In some embodiments to accommodate this increased granularity the number of column address bits is increased in the first mode as compared to the second mode. For example one extra column address bit is added in the first mode in which case the size of memory transactions in the first mode is half the size of memory transactions in the second mode e.g. 16B versus 32B . Burst size thus may remain unchanged with respect to the second mode. Reducing the size of memory transactions reduces or eliminates over fetching of unneeded data from the memory device thereby saving bandwidth and reducing power.

As illustrates a first portion of a command may be provided on the first C A bus and a second portion of a command may be provided on the second C A bus . Alternatively a command may be provided entirely on one of the C A busses and .

The width of the first C A bus and or second C A bus and or the number of C A busses may be increased to accommodate partitioning of the data bus into more than two portions. Also the first C A bus and or second C A bus may be over clocked with respect to the data bus to accommodate partitioning of the data bus into more than two portions.

The command bit values command bit locations and address bit locations in are merely examples and may vary. While show DDR embodiments the first C A bus and second C A bus may alternately be SDR with bits being provided on successive rising edges of the clock signal .

The memory controller transmits a plurality of read commands in parallel e.g. in a first set of one or more clock cycles to the memory device . The memory device receives the plurality of read commands in parallel.

For example first and second read commands are sent to the memory device in parallel on the first C A bus and second C A bus as described with respect to or . Command bits for the first read command thus may be received on the first C A bus while command bits for the second read command may be received on the second C A bus . At least a portion of the address bits for the first read command may be received on the first C A bus and at least a portion of the address bits for the second read command may be received on the second C A bus . In some embodiments the address bits e.g. CA 7 0 b for the first read command are received on the first C A bus a first portion of the address bits e.g. CA 6 0 a for the second read command are received on the second C A bus and a second portion of the address bits e.g. CA7a for the second read command are received on the first C A bus . In some embodiments the command bits for the first and second read commands are received on the rising clock edge in a clock cycle while address bits for the first and second read commands are received on both the rising and falling clock edges in the clock cycle. Other examples are possible.

In some embodiments the memory controller transmits to the memory device a first control signal e.g. the mode bit of specifying a first mode in which the data bus is divided and thus partitioned into portions. The memory device receives the first control signal and enters the first mode in response.

The memory device accesses data corresponding to respective read commands of the plurality of read commands. For example the data is provided from one or more row buffers to the I O logic .

The memory device transmits the data corresponding to the respective read commands on the respective portions of the data bus . The memory controller receives this data. In some embodiments the data is transmitted in parallel bursts with each burst corresponding to a respective read command of the plurality of read commands. For example data corresponding to a first read command is transmitted in a burst on a first portion e.g. first half of the data bus while data corresponding to a second read command is transmitted in a burst on a second portion e.g. second half of the data bus .

The memory controller transmits a single read command e.g. in a second set of one or more clock cycles distinct from the first set of one or more clock cycles which the memory device receives . The single read command may be preceded by another row activation command. The single read command is transmitted for example as shown in or B.

The memory device accesses data corresponding to the single read command. For example the data is provided from a row buffer to the I O logic . The memory device transmits the data corresponding to the single read command on the data bus . The memory controller receives this data.

In some embodiments the memory controller transmits a second control signal e.g. the mode bit of specifying a second mode in which the data bus is undivided. The memory device receives the second control signal and enters the second mode in response. The memory device transmits the data corresponding to the single read command which was received for example on the second C A bus as shown in on all signal lines of the data bus .

Alternatively the data corresponding to the single read command which is received for example on the first C A bus as shown in may be transmitted on a first portion e.g. a first half of the data bus . For example the memory device receives a column NOP command e.g. the CNOPS command of corresponding to a second portion e.g. a second half of the data bus in parallel with the single read command e.g. during the second set of one or more clock cycles . In response to the column NOP command the memory device does not transmit data on the second portion of the data bus while transmitting the data corresponding to the single read command on the first portion of the data bus . For example the memory device tristates the drivers in the I O logic for the second portion of the data bus .

The memory controller transmits and the memory device receives one or more row activation commands as described for the method .

The memory controller transmits a plurality of write commands in parallel and transmits data corresponding to respective write commands of the plurality of write commands on respective portions of the data bus. The data corresponding to the respective write commands is transmitted in parallel e.g. in parallel bursts . The memory device receives the plurality of write commands and the data in parallel.

For example first and second write commands are sent to the memory device in parallel on the first C A bus and second C A bus as described with respect to or .

In some embodiments the memory controller transmits to the memory device a first control signal e.g. the mode bit of specifying a first mode in which the data bus is divided into portions e.g. as described for operation . The memory device receives the first control signal and enters the first mode in response.

The memory device writes the data to respective memory locations corresponding to e.g. specified at least in part by the respective write commands.

The memory controller transmits a single write command and transmits data corresponding to the single write command on the data bus . The single write command is transmitted for example as shown in or B. The memory device receives the single write command and the data and writes the data to a memory location corresponding to e.g. specified at least in part by the single write command.

In some embodiments the memory controller transmits the data for the single write command on all signal lines of the data bus and thus on the entire data bus . For example the memory controller transmits to the memory device a second control signal specifying a second mode in which the data bus is undivided e.g. as described for operation . The memory device receives the second control signal and enters the second mode in response.

Alternatively the memory controller transmits the data for the single write command on a first portion e.g. a first half of the data bus . The memory controller transmits a column NOP command e.g. the CNOPS command of corresponding to a second portion e.g. a second half of the data bus .

The methods and may be expanded to include performing a read in parallel with write the memory controller may provide parallel read and write commands to the memory device .

The methods and include a number of operations that appear to occur in a specific order. However it should be apparent that the methods and can include more or fewer operations an order of two or more operations may be changed performance of two or more operations may overlap and two or more operations may be combined into a single operation.

In some embodiments software may specify the mode e.g. the first mode or second mode in which the memory controller and memory device operate. is a block diagram of a system in which software running on one or more processors may specify the mode in accordance with some embodiments. In addition to the one or more processors the system includes the memory device the memory controller an I O memory management unit IOMMU one or more peripherals and a nonvolatile memory . The memory controller couples the one or more processors to the memory device thereby providing the one or more processors with access to the memory device . The IOMMU couples the memory controller and thus the one or more processors and the memory device to the one or more peripherals and the nonvolatile memory .

The memory controller includes a mode register which is software accessible. The nonvolatile memory e.g. a boot ROM flash memory hard disk drive etc. includes a non transitory computer readable storage medium storing one or more programs with instructions configured for execution by the one or more processors . The one or more programs include mode setting software . The mode setting software includes instructions to specify the mode by storing a value in the mode register . For example the mode setting software includes instructions to specify the first mode by storing a first value in the mode register and instructions to specify the second mode by storing a second value in the mode register . The memory controller thus operates in accordance with the first mode when the first value is stored in the mode register and operates in accordance with the second mode when the second value is stored in the mode register . Furthermore in some embodiments the mode setting software includes instructions to specify a third mode in which the memory controller selects between the first and second mode on the fly e.g. based on current states of the busses and or . In the third mode the memory controller thus has discretion to select between the first and second modes for different transactions e.g. based on whether the busses and or are busy or free .

In some embodiments the functionality of the memory controller as described herein is implemented in hardware. Alternatively the functionality of the memory controller may be implemented in firmware. For example the memory controller may include a microcontroller. The nonvolatile memory may include a non transitory computer readable storage medium storing one or more programs with instructions configured for execution by the microcontroller. These instructions include instructions that when executed by the microcontroller cause the memory controller to achieve the functionality described herein. For example these instructions include instructions that when executed by the microcontroller cause the memory controller to perform its portion of the methods and or .

The foregoing description for purpose of explanation has been described with reference to specific embodiments. However the illustrative discussions above are not intended to be exhaustive or to limit all embodiments to the precise forms disclosed. Many modifications and variations are possible in view of the above teachings. The disclosed embodiments were chosen and described to best explain the underlying principles and their practical applications to thereby enable others skilled in the art to best implement various embodiments with various modifications as are suited to the particular use contemplated.

