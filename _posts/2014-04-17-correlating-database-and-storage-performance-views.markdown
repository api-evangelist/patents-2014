---

title: Correlating database and storage performance views
abstract: Technology is disclosed for providing access to operation performance of various storage mediums in a distributed storage system, which store and host data associated with a database (“the technology”). The technology can identify the storage mediums storing data associated with a particular database, gather data associated with performance of each of the identified storage mediums storing data associated with the particular database, and generate performance statistics associated with each of the identified storage mediums utilizing the gathered data and provide the generated statistics as a performance overview of storage associated with the particular database.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09483510&OS=09483510&RS=09483510
owner: NETAPP, INC.
number: 09483510
owner_city: Sunnyvale
owner_country: US
publication_date: 20140417
---
Various of the disclosed embodiments relate to providing access to operation performance of various storage mediums in a distributed storage system.

Many commercial applications including financial management systems payroll applications customer relationship management systems etc. utilize one or more database applications e.g. Oracle Enterprise DB2 MySQL and SQL Server etc. to store and manage data in distributed storage systems. Enterprises worldwide spend billions of dollars annually in managing and administering these database applications and underlying storage infrastructure provided by the distributed storage systems. Database administration is the process of establishing computerized databases and ensuring their integrity recoverability security availability reliability scalability and performance.

Database administrators DBAs work with database management system software to organize store and retrieve data. One of the primary responsibilities of a DBA is fine tuning performance of databases for high throughput availability for enterprise applications. A DBA can fine tune various database parameters to improve performance of a particular database. However a DBA has limited means to determine whether an observed performance bottleneck is due to the particular database s internals layout or due to the underlying infrastructure specifically the storage infrastructure that is hosting the data associated with the particular database.

Accordingly known techniques for determining the performance of storage infrastructure associated with a database are limited in their capabilities and suffer from at least the above constraints and deficiencies.

Technology is disclosed for correlating database and storage performance views e.g. by providing access to operation performance of various storage media and devices in a distributed storage system which store and host data associated with a database the technology . In various embodiments to provide the operation performance the technology identifies the storage volumes that are accessible through various storage servers e.g. storage node or storage controller of the distributed storage system. A storage volume is a logical storage entity providing a logically contiguous portion of storage within a physical storage medium or device e.g. hard disk drive solid state device etc. The storage volume can be utilized to store data associated with one or more databases that employ the distributed storage system to store their data.

To determine the operation performance for a particular database the technology identifies a subset of storage volumes of the accessible storage volumes that presently store data associated with the particular database. The technology identifies the subset of storage volumes using mapping information that maps the particular database to one or more storage nodes providing access to the subset of storage volumes storing data associated with the particular database. The mapping information further includes identification information of the specific storage volume of the one or more storage volumes that are accessible through the particular storage node which has been assigned to store data associated with the particular database.

For each of the storage volumes of the subset of storage volumes the technology gathers the data associated with performance of each storage volume from the storage node providing accessing to it. The storage node monitors and stores data for various performance parameters for the storage volumes to which it provides access. The performance parameters include a delay associated with servicing a data read access request a delay associated with servicing a data write request a delay associated with servicing a data modification request a total number of access requests performed within a particular time period etc.

The technology generates various performance statistics for each of the storage volumes utilizing the gathered performance parameter data. The generated performance statistics can include a read latency of a storage volume at a particular time computed as a function of the delay associated with servicing a data read access request at the particular time. Further the generated performance statistics can include a write latency of the particular storage volume at the particular time measured as a function of a delay associated with servicing a data write access request at the particular time. Other generated statistics can include an average latency of the particular storage volume at the particular time measured as a function of the generated read latency and write latency at the particular time.

The technology provides the generated statistics as a performance overview of storage volumes associated with the particular database. In some embodiments the technology provides the generated statistics in the form of line charts for each particular storage volume. Further when the database spans across multiple storage volumes the technology sorts the charts based upon the generated statistics e.g. average latency read latency write latency etc. and provides a subset of top volumes by performance. The technology further provides the various generated statistics in terms of performance of a particular volume where the performance of each of the database stored in the particular volume is provided as a line chart.

Several embodiments of the disclosed technology are described in more detail in reference to the Figures. Turning now to the Figures is a block diagram illustrating a distributed storage environment in which the technology can operate in various embodiments. It should be noted that the described technology can be implemented in other storage environments and the technology s operation should not be considered limited to the distributed storage environment illustrated in .

The distributed storage environment includes a database management platform one or more storage servers also referred to as storage node or storage controller storage organizations with storage units which are managed by the one or more storage servers a network providing connectivity between the various storage servers and the database management platform a performance data repository to store data related to the performance of various storage mediums and a web server to provide access to the stored performance data in the performance data repository as web content to a client system .

The following discussion provides a description of the storage server and its various sub components and the storage organization and its various sub components. It should be noted that the description of the storage server and its various sub components and the storage organization and its various sub components are equally applicable to other storage servers and storage organizations respectively in the distributed storage environment .

In some embodiments the storage server can be a file level server e.g. a data server in a network attached storage NAS environment. In embodiments a storage server include a network module e.g. N module and a disk module e.g. D module not shown which communicate with each other and or with other storage servers over an external interconnect. The N module acts as a front end of the storage server exporting services to clients and the D module acts as the back end managing the underlying storage of the storage server

The N module and D module can be contained in separate housings and communicate with each other via network connections. Thus the N module and the D module enable a storage server to be physically separated and distributed across a network . In some embodiments a storage server can include multiple N modules and D modules each of the N modules corresponding to one or more D modules and each of the D modules corresponding to one or more N modules. In some embodiments the N module a management interface and D module a data interface are each assigned a fully qualified domain name FQDN or an internet protocol IP address which can be utilized to identify the respective module and communicate with the identified module through the network .

In some embodiments the storage server includes one or more processors and memory connected via an interconnect . The interconnect is an abstraction that represents any one or more separate physical buses point to point connections or both connected by appropriate bridges adapters or controllers. The interconnect therefore may include for example a system bus a Peripheral Component Interconnect PCI family bus a HyperTransport or industry standard architecture ISA bus a small computer system interface SCSI bus a universal serial bus USB IIC I2C bus or an Institute of Electrical and Electronics Engineers IEEE standard 1394 bus sometimes referred to as Firewire .

The processor s may include central processing units CPUs of the storage server and thus control the overall operation of the storage server . In certain embodiments the processor s accomplish this by executing software or firmware stored in memory . The processor s may be or may include one or more programmable general purpose or special purpose microprocessors digital signal processors DSPs programmable controllers application specific integrated circuits ASICs programmable logic devices PLDs or the like or a combination of such devices.

The memory is or includes the main memory of the storage server . The memory represents any form of random access memory RAM read only memory ROM flash memory as discussed below or the like or a combination of such devices. In use the memory may contain among other things a set of machine instructions which when executed by processor causes the processor to perform operations to implement embodiments of the disclosed technology. In one embodiment the database management platform contains processor s and memory not shown similar to the ones of the storage server

Also connected to the processor s through the interconnect are a network adapter and a storage adapter . The network adapter provides the storage server with the ability to communicate with remote devices such as a database management platform and or other storage servers over the network and may be for example an Ethernet adapter or Fibre Channel adapter. The storage adapter allows the storage server to access the storage units in a storage organization and may be for example a Fibre Channel adapter a SCSI adapter an Ethernet adapter or any Fibre Channel Protocol FCP and iSCSI protocol adapters.

The storage server receives and responds to various read and write requests from one or more clients e.g. database management platform directed to data stored in or to be stored in the storage organization . The storage organization can be a RAID configuration which provides data redundancy and fault tolerance to the data stored in the storage units . The storage organization contains multiple storage units that can include for example conventional magnetic or optical disks or tape drives alternatively they can include non volatile solid state memory such as flash memory etc.

In some embodiments the storage resource available in the various storage units are organized as one or more storage volumes. A storage volume is a logical storage entity providing a logically contiguous portion of storage within the physical storage units . As discussed above each such storage volume can be assigned to one or more databases which can utilize the assigned storage volume to store their associated data e.g. data being organized and managed using the database. In some embodiments the storage server receives and responds to various read and write requests from one or more clients directed to data stored in or to be stored in the one or more storage volumes in the storage organization

In some embodiments the storage server monitors the performance of data access requests directed to data stored in or to be stored in the various storage volumes in the storage organization . The data access requests can include a data read request a data write request a data modification request etc. In some embodiments the storage server monitors the performance of data access requests at various storage granularity e.g. performance by storage volume performance by storage unit etc. In some embodiments the monitored performance includes various performance parameters associated with performing the various data access requests directed to data stored in the storage organization

The various performance parameters associated with performing the various data access requests includes a total time delay associated with servicing a data read request i.e. the total time elapsed between receiving a request for a data and sending the requested data from the store organization . Other performance parameters include a total time delay associated with servicing a write request a total time delay associated with servicing a modification request a total number of a particular data access request performed within a particular time period etc. In some embodiments the storage server stores the data gathered from monitoring the various performance parameters in the storage units

In some embodiments the storage server computes various performance metrics statistics based on the gathered performance parameters data. The generated performance statistics can include a read latency of a storage volume at a particular time computed as a function of the delay associated with servicing a data read access request at the particular time. The generated performance statistics can also include a write latency of the particular storage volume at the particular time measured as a function of a delay associated with servicing a data write access request at the particular time.

Other generated statistics can include an average latency of the particular storage volume at the particular time measured as a function of the generated read latency and write latency at the particular time the total number of Input Output IO operations performed within the particular time measured as a function of the total number of read write and modification requests performed within the particular time etc. In embodiments the storage server provides the gathered performance parameters data and any generated statistics at various storage granularity in response to a request from a client e.g. database management platform . For instance the storage server can provide the performance parameters data of a particular storage volume gathered within a particular time period to the database management platform .

In embodiments the database management platform utilizes an application programming interface API for example Zephyr Application and Programming Interface ZAPI protocol to request the gathered performance data from the storage server . An API is a source code interface that a computer system or program library provides in order to support requests for services to be made of it by a computer program. The ZAPI protocol includes various functions that can be utilized to request specific data from the storage server e.g. read latency of a particular volume within a particular time period the latency associated with various read access requests within a particular time period etc.

In some embodiments the database management platform includes a performance analysis module to communicate with the various storage servers to gather the performance data. In some embodiments the performance analysis module can be provided as a plug in to a database management module used to create and manage databases for managing data for client applications e.g. financial management systems payroll applications customer relationship management systems etc. The database management module can be any one of database application e.g. Oracle Enterprise DB2 MySQL SQL Server etc. which can create and manage databases for managing data for client applications. So for example the performance analysis module can be provided as a plug in to an Oracle Enterprise database application.

In embodiments the database management module includes a database instances module to track and manage the various databases created through the database management module . In embodiments the database instances module stores information that maps the various database instances to corresponding storage volumes in the various storage servers used to store data associated with the particular database instance. For example a database for managing a firm s employees personal information can store those personal information in one or more storage volumes assigned accessible through the various storage servers 

In some embodiments the database management module performs the assignment of particular storage volumes for storing data of a particular database and stores the information in the database instances module . In some embodiments a database administrator DBA manually performs the assignment of particular storage volumes for storing data of a particular database and the database management module stores the information in the database instances module .

In some embodiments the DBA performs the assignments by assigning mount points to a particular database where a mount point is a file system object that provides access to a particular volume. The database instances module stores the mount point assignments for the particular database which can then be queried to identify the storage volumes in the various storage servers used to store data associated with the particular database.

Turning briefly to is a mapping table illustrating the mapping between the various databases the mount points assigned to the databases the storage volume associated with each of the mount points and the FQDN address of the managing interface of the storage servers providing access to the various storage volumes associated with the mount points.

As discussed earlier a particular storage volume can be utilized to store the content of more than one database. In the storage volume vol vol1 is utilized to store the data of both database db and db . In some embodiments the content in the mapping table can be generated by the performance analysis module by parsing the mount point definitions associated with the each of the database instance in the database instances module .

Returning to in some embodiments the performance analysis module provides the operation performance for a particular database by gathering the performance data of the various storage volumes across the storage server used to store data associated with the particular database. To provide the operation performance for the particular database in some embodiments the performance analysis module identifies the storage volumes that are accessible through the various storage servers in the distributed storage environment .

In some embodiments the performance analysis module identifies the storage volumes accessible through the various storage servers by querying each of the storage servers for the list of storage volumes in their storage organizations . In some embodiments the performance analysis module identifies the subset of storage volumes of the accessible storage volumes which are storing data associated with the particular database.

The performance analysis module identifies the subset of storage volumes using a mapping information that maps the particular database to one or more storage servers providing access to the subset of storage volumes storing data associated with the particular database. The mapping information includes identification information of the specific storage volume of the one or more storage volumes that are accessible through the particular storage server which has been assigned to store data associated with the particular database. As discussed above in some embodiments the performance analysis module gathers the mapping information that maps the particular database and its associated storage volumes using mount point definitions that are stored in database instances module .

In some embodiments the performance analysis module gathers the data associated with performance of each storage volume of the subset of storage volumes from the storage server that provides access to the storage volume. As discussed earlier the storage servers monitor and store data for various performance parameters and performance statistics for the storage volumes or at other storage granularity to which they provides access. As discussed above the performance parameters includes a delay associated with servicing a data read access request a delay associated with servicing a data write request a delay associated with servicing a data modification request the total number of access requests performed within a particular time period etc. In some embodiments the performance analysis module gathers the data associated with performance from the storage servers using ZAPI protocol.

In some embodiments the performance analysis module generates various performance statistics for each of the storage volumes utilizing the gathered performance parameters data. The generated performance statistics can include a read latency of a storage volume at a particular time computed as a function of the delay associated with servicing a data read access request at the particular time. Further the generated performance statistics can include a write latency of the particular storage volume at the particular time measured as a function of a delay associated with servicing a data write access request at the particular time. Other generated statistics can include an average latency of the particular storage volume at the particular time measured as a function of the generated read latency and write latency at the particular time.

In some embodiments the performance analysis module provides the generated statistics as a performance overview of storage volumes associated with the particular database. In some embodiments the performance analysis module provides the generated statistics in the form of line charts for each particular storage volume. Further when the database is spanning across multiple storage volumes the performance analysis module sorts the charts based upon the generated statistics e.g. average latency read latency write latency etc. and provides a subset of top volumes or at other storage granularity by performance. The performance analysis module further provides the various generated statistics in terms of performance of a particular volume where the performance of each of the database stored in the particular volume is provided as a line chart.

In some embodiments the performance analysis module stores the generated statistics and any other gathered statistics from the storage servers in a performance data repository . In some instances the data stored in the performance data repository can be accessed by a client through a web server that provides the various performance statistics as web content. For example a web page accessible through the web server can be viewed through a web browser executing in the client . Turning briefly to is a web page providing an illustrative example of the various performance statistics of the storage volumes associated with a particular database which can be viewed accessed through the a web browser in client .

In the webpage provides a drop down menu that provides a list of various databases whose data are stored in the storage volumes across the storage servers . By selecting any of the database the performance of the associated storage volumes can be viewed as line charts. The webpage further allows a user to select the performance views of the various storage volumes associated with the selected database. The webpage further allows a user to select the performance views by storage volumes.

The webpage provides the performance views as line charts for various performance statistics e.g. average access latency of storage volumes over a particular time period total number of IO operations performed per second by the storage volumes over the particular time period latency of read access requests to storage volumes over the particular time period and latency of write access requests to storage volumes over the particular time period .

The webpage further provides the general performance statistics of the selected database a line chart of the total number of operations performed by the selected database and a table providing the mapping information that maps the various databases to their associated storage volumes storage controllers servers mount points and other statistics associated with the usage of associated storage volumes.

Returning to in some embodiments the webpage is configured to include various content widgets that utilize the performance statistics stored by the performance analysis module in the content repository . In embodiments the content widgets are configured to refresh the displayed dynamically as the performance analysis module refreshes the performance statistics data stored in the content repository .

Turning now to is a flow diagram illustrating a method for providing a performance overview of storage volumes associated with a particular database. In various embodiments the method may be executed in a distributed storage environment e.g. distributed storage environment of . The method starts at block . At block the storage volumes that are accessible through the storage servers of the distributed storage environment are identified where the storage volumes are utilized to store data associated with one or more databases.

At block a subset of the identified storage volumes which are storing data associated with a particular database are identified. As discussed above in some embodiments the identification of the subset of storage volumes is based on a mapping information e.g. mount point definitions that maps the particular database to at least one identifier associated with a particular storage server that provides access to the particular storage volume utilized to store data associated with the particular database.

At block data associated with performance of the subset of storage volumes are gathered. At block performance statistics associated with each storage volume of the subset of storage volumes are generated utilizing the gathered data. At block the generated statistics are provided as a performance overview of storage volumes associated with the particular database. The method returns at block .

Those skilled in the art will appreciate that the logic illustrated in and described above and in each of the flow diagrams discussed below may be altered in various ways. For example the order of the logic may be rearranged substeps may be performed in parallel illustrated logic may be omitted other logic may be included etc.

Turning now to is a flow diagram illustrating a method for providing a performance overview of storage volumes associated with a particular database. In various embodiments the method may be executed in a distributed storage environment e.g. distributed storage environment of .

The method starts at block . At block the various databases whose data are stored in storage volumes using various storage servers in the distributed storage environment are identified. At block the identification information e.g. a name corresponding to each of the identified databases are provided. The provided information can enable a user to select the database the needs to be analyzed. At block a selection of a database from the identified databases is received. In some embodiments the selection can be provided by returning the identification information e.g. a name corresponding to the selected databases. At block a subset of the storage volumes storing data associated with the selected database are identified.

As discussed above in some embodiments the identification of the subset of storage volumes is based on a mapping information e.g. mount point definitions that maps the selected database to at least one identifier associated with a particular storage server that provides access to the particular storage volume utilized to store data associated with the particular database. At block a performance statistics associated with each storage volume of the subset of storage volumes are generated. At block the generated statistics are providing as performance overview of storage associated with the selected database. The method returns at block .

Turing now to is a block diagram of a computer system as may be used to implement features of some embodiments of the disclosed technology. The computing system may include one or more central processing units processors memory input output devices e.g. keyboard and pointing devices display devices storage devices e.g. disk drives and network adapters e.g. network interfaces that are connected to an interconnect . The interconnect is illustrated as an abstraction that represents any one or more separate physical buses point to point connections or both connected by appropriate bridges adapters or controllers. The interconnect therefore may include for example a system bus a Peripheral Component Interconnect PCI bus or PCI Express bus a HyperTransport or industry standard architecture ISA bus a small computer system interface SCSI bus a universal serial bus USB IIC I2C bus or an Institute of Electrical and Electronics Engineers IEEE standard 1394 bus also called Firewire .

The memory and storage devices are computer readable storage media that may store instructions that implement at least portions of the described technology. In addition the data structures and message structures may be stored or transmitted via a data transmission medium such as a signal on a communications link. Various communications links may be used such as the Internet a local area network a wide area network or a point to point dial up connection. Thus computer readable media can include computer readable storage media e.g. non transitory media and computer readable transmission media.

The instructions stored in memory can be implemented as software and or firmware to program the processor s to carry out actions described above. In some embodiments such software or firmware may be initially provided to the processing system by downloading it from a remote system through the computing system e.g. via network adapter .

The technology introduced herein can be implemented by for example programmable circuitry e.g. one or more microprocessors programmed with software and or firmware or entirely in special purpose hardwired non programmable circuitry or in a combination of such forms. Special purpose hardwired circuitry may be in the form of for example one or more ASICs PLDs FPGAs etc.

Reference in this specification to one embodiment or an embodiment means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment of the disclosure. The appearances of the phrase in one embodiment in various places in the specification are not necessarily all referring to the same embodiment nor are separate or alternative embodiments mutually exclusive of other embodiments. Moreover various features are described which may be exhibited by some embodiments and not by others. Similarly various requirements are described which may be requirements for some embodiments but not for other embodiments.

The terms used in this specification generally have their ordinary meanings in the art within the context of the disclosure and in the specific context where each term is used. Certain terms that are used to describe the disclosure are discussed below or elsewhere in the specification to provide additional guidance to the practitioner regarding the description of the disclosure. For convenience certain terms may be highlighted for example using italics and or quotation marks. The use of highlighting has no influence on the scope and meaning of a term the scope and meaning of a term is the same in the same context whether or not it is highlighted. It will be appreciated that the same thing can be said in more than one way. One will recognize that memory is one form of a storage and that the terms may on occasion be used interchangeably.

Consequently alternative language and synonyms may be used for any one or more of the terms discussed herein nor is any special significance to be placed upon whether or not a term is elaborated or discussed herein. Synonyms for certain terms are provided. A recital of one or more synonyms does not exclude the use of other synonyms. The use of examples anywhere in this specification including examples of any term discussed herein is illustrative only and is not intended to further limit the scope and meaning of the disclosure or of any exemplified term. Likewise the disclosure is not limited to various embodiments given in this specification.

Without intent to further limit the scope of the disclosure examples of instruments apparatus methods and their related results according to the embodiments of the present disclosure are given below. Note that titles or subtitles may be used in the examples for convenience of a reader which in no way should limit the scope of the disclosure. Unless otherwise defined all technical and scientific terms used herein have the same meaning as commonly understood by one of ordinary skill in the art to which this disclosure pertains. In the case of conflict the present document including definitions will control.

The above description and drawings are illustrative and are not to be construed as limiting. Numerous specific details are described to provide a thorough understanding of the disclosure. However in certain instances well known details are not described in order to avoid obscuring the description. Further various modifications may be made without deviating from the scope of the technology. Accordingly the technology is not limited except as defined by the appended claims.

