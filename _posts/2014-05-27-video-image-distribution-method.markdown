---

title: Video image distribution method
abstract: A video image distribution method used in a mobile electronic device is disclosed to include the step of controlling the video camera and starting image capture execution command, the step of temporarily storing original video camera images, the step of enabling the proprietary camera layer to use resource images for the creation of an image processing chain, the step of allocating hardware and software resources and constructing an image processing node Then enabling image processing chain to add source images to multiple processed images for storage, and the step of creating an application user linked service execution command and distributing temporarily stored multiple images to multiple application users. As long as the hardware and software resources permit, the method of the invention can serve multiple application users to meet different needs of different application users for different format settings, achieving optimal results, and facilitating operation of the mobile electronic device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09525892&OS=09525892&RS=09525892
owner: NEXTDRIVE INC.
number: 09525892
owner_city: Grand Cayman
owner_country: KY
publication_date: 20140527
---
The present invention relates to video image distribution technology and more particularly to a video image distribution method for use in a mobile electronic device which includes the step of controlling the video camera and starting image capture execution command the step of temporarily storing original video camera images the step of enabling the proprietary camera layer to use resource images for the creation of an image processing chain the step of allocating hardware and software resources and constructing an image processing node and then enabling image processing chain to add source images to multiple processed images for storage and the step of creating an application user linked service execution command and distributing temporarily stored multiple images to multiple application users.

Modern electronic technology and multimedia technology are continuously flourishing general handheld or mobile electronic devices such as smart phones tablet computers notebook computers etc. have become immensely popular in nearly all corners of the world. With the popularity of the Internet there are more and more users choose to use instant communication interfaces such as Skype Line Viber Yahoo Messenger etc. as calls text chat or video instant communication bridge Internet the popularity of the network there are more and more users choose real time communication interfaces such as Skype Line Viber Yahoo Messenger etc. for calls real time text chat or video communication further shortening the distance between people.

However current handheld or mobile electronic devices are mainly operated by an operating system to drive a video camera to capture user images and to send captured images through the Internet to other users on real time thereby getting video capabilities. However subject to the restrictions on the hardware and software itself the operating system such as Android iOS Windows Phone etc. of a handheld or mobile electronic device only checks whether there are other programs have used the video camera. Because the video camera hardware can simply serve only one single program user at one same time and can run only on one single image format setting such as resolution frame rate etc. the video camera hardware will be unable to run if multiple users simultaneously open the video camera and make different format settings.

Therefore how to effectively solve the problem of format setting conflict when multiple program users access to one single camera is an important subject to be improved.

The present invention has been accomplished under the circumstances in view. It is therefore the main object of the present invention to provide a video image distribution method which is used in a mobile electronic device that comprises a hardware platform an operating system installed in the hardware platform and having built therein a proprietary camera layer and a driver and an image capture interface. The driver of the operating system is controlled to receive video images from a video camera through the image capture interface and to transmit received video images to the proprietary camera layer for dynamically creating image processing chains and multiple images queues for distribution to multiple application users. The method comprises the step of controlling the video camera and starting image capture execution command the step of temporarily storing original video camera images the step of enabling the proprietary camera layer to use resource images for the creation of an image processing chain the step of allocating hardware and software resources and constructing an image processing node and then enabling image processing chain to add source images to multiple processed images for storage and the step of creating an application user linked service execution command and distributing temporarily stored multiple images to multiple application users. As long as the hardware and software resources permit the method of the invention can serve multiple application users to meet different needs of different application users for different format settings achieving optimal results and facilitating operation of the mobile electronic device.

Referring to a video image distribution method in accordance with the present invention is used in a mobile electronic device such as smart phone tablet computer notebook computer etc. that comprises a hardware platform an operating system installed in the hardware platform and having built therein a proprietary camera layer and a driver and an image capture interface . The driver of the operating system is controlled to receive video images from a video camera through the image capture interface and to transmit received video images to the proprietary camera layer for dynamically creating image processing chains and multiple images queues for distribution to multiple application users .

The hardware platform of the mobile electronic device comprises a CPU a HW SW shared memory a HW camera interface DMA an image sensor ISP image signal processor a hardware video encoder a 2D processor scaler color space converter blitter and a 3D processor pixel shader fragment shader . The operating system can be Linux based Android operating system comprising Android camera API Android APIs and Android core services system frameworks and LinkNext Proprietary API having the aforesaid proprietary camera layer connected thereto. The proprietary camera layer has built therein a camera recorder a streaming server a buffer queue an image processing and an original camera buffer queue. Further the proprietary camera layer can also be a software for running an algorithm on a host processor. In actual application the proprietary camera layer can be a hardware such as video encoder post processor or 2D accelerator or a software program such as pixel shader or fragment shader for running a video processing algorism on a GPU graphic processing unit .

Further the driver built in the operating system can be Linux kernel comprising a camera driver V4L2 framework an Android IPC driver and an Android ION buffer management driver. Thus the proprietary camera layer and driver of the operating system can be operated through the hardware platform to receive video images from a video camera and to dynamically create image processing chains and multiple images queues for distribution to multiple application users . With respect to how the proprietary camera layer creates image processing chains and multiple images queues and uses the camera image queue to run source image processing through the video encoder stream buffer queue scaler image buffer queue video encoder or stream buffer queue and then to transmit processed images through the recorder streaming server or Android API to application users for playing or to run source image processing through the 2D accelerator or frame buffer and then directly enabling the processed images to be dynamically displayed through a display or HDMI subject to the control of a LCD controller these image processing procedures are of the known art and not within the scope of the spirit of the present invention and thus no further detailed description in this regard will be given.

In the above described procedure the hardware platform of the mobile electronic device receives video images from the video camera through the image capture interface by means of the proprietary camera layer and driver of the operating system and uses the hardware of the video camera the driver and or the image capture framework to control the operation aperture shutter speed sensitivity zoom autofocus backlight compensation etc. of the video camera . After obtained the image capture execution command the proprietary camera layer is enabled to temporarily store the original video camera images in the HW SW shared memory of the hardware platform and to create data related to the service execution command that is linked to the application user . Through the hardware platform and by means of assigned parameters and allocating the hardware and software resources a image processing chain is dynamically created subject to the source image of the video camera and processed into the desired format such as image size color resolution dynamic video and audio compression encoding format grid put rate data rate etc. and then the processed data is added to processed multiple images for storage. Thereafter the storage multiple images are distributed to the multiple application users . Thus as long as the hardware and software resources of the hardware platform permits the video image distribution method enables to the system to serve multiple applications users with requested different image formats achieving optimization of the mobile electronic device and facilitating the user to use the mobile electronic device .

Referring to and again the applications users can be Skype Line WeChat Viber or Yahoo Messenger application programming interfaces or other application programming interfaces such as Android iOS Windows Phone that are built in the operating system .

As stated above the application user of the mobile electronic device can inquire video camera parameters through the respective application program interface and video camera service and the proprietary camera layer . When an image processing chain and adequate hardware resources are found the supported video camera parameters can then be generated and sent through the proprietary camera layer and the respective video camera service and application program interface to the application user . If neither image processing chain nor adequate hardware resources are found input the list of commonly used supported image formats and enable the hardware resource manager to input the record of use of hardware resources the processing of hardware supported image format and the image processing list in action and then check again whether or not there are an image processing chain and adequate hardware resources. After the aforesaid procedure is completed the supported video camera parameters is then generated and sent through the proprietary camera layer and the respective video camera service and application program interface to the application user .

When the application user starts to set video camera parameters the video camera parameter setting procedure comprises the steps of 

As stated above the application user of the mobile electronic device can set video camera parameters through the respective video camera service the application program interface and the proprietary camera layer . When an image processing chain is found a linked data corresponding to the video camera user and the respective image processing chain will be then created and then a message of SETTING SUCCEEDED will be sent to the application user via the respective video camera service the application program interface and the proprietary camera layer . If no image processing chain is found but adequate format for the hardware resources is available an image processing chain in the desired format will be generated and a message of SETTING SUCCEEDED will then be sent through the respective video camera service the application program interface and the proprietary camera layer to the application user after creation of a linked data corresponding to the video camera user and the respective image processing column. If neither image processing chain nor adequate format for the hardware resources is found the parameter setting will be refused and a message of SETTING FAILED will then be sent back to the application user via the respective video camera service the application program interface and the proprietary camera layer .

As stated above the application user of the mobile electronic device can start up the video camera to get images through the application program interface the respective video camera service and the proprietary camera layer and get the corresponding image processing chain linked data of the video camera. If the image processing chain is created and enabled a service execution command corresponding to this application user will then be created and a message of ENABLE SUCCEEDED will be sent back to the application user via the respective video camera service the application program interface and the proprietary camera layer . If the image processing chain is not enabled enable the image processing chain and then check whether the image node involved hardware is enabled. If the image node involved hardware is enabled create a service execution command for this user and then send a message of ENABLE SUCCEEDED back to the application user via the respective video camera service the application program interface and the proprietary camera layer . If the image node involved hardware is not enabled but the enabling and setting of the related hardware is succeeded repeat the aforesaid step to create a service execution command corresponding to this application user and then send a message of ENABLE SUCCEEDED back to the application user via the respective video camera service the application program interface and the proprietary camera layer . If the image processing chain is not created or the enabling and setting of the related hardware is not succeeded the enabling is failed. At this time send a message of ENABLE FAILED back to the application user via the respective video camera service the application program interface and the proprietary camera layer for further follow up action.

Further in the above described step 104 the processing of the image processing chain comprises the steps of 

After the procedure of distributing temporarily stored multiple images to the application users in the above described step 105 the procedure of disabling the image processing chain comprises the steps of 

As stated above the application user of the mobile electronic device can stop image capture through the video camera the application program interface the video camera service and the proprietary camera layer and then get the related image processing chain linked data from the video camera corresponding to this application user . If the image processing chain is created and enabled disable the image processing chain and then check whether or not the related image node has been shared by other image processing chains If the related image node has been shared by other image processing chain disable the service execution command and then send a message of DISABLE SUCCEEDED back to the application user via the proprietary camera layer the respective video camera service and the application program interface. If no other image processing chain share the related image node disable the image node associated hardware and release the related resources and then stop the service thread and then send a message of DISABLE SUCCEEDED back to the application user via the proprietary camera layer the respective video camera service and the application program interface. If the image processing chain is not created or if the image processing chain is created but not enabled disable the service execution command and then send a message of DISABLE SUCCEEDED back to the application user via the proprietary camera layer the respective video camera service and the application program interface.

Although a particular embodiment of the invention has been described in detail for purposes of illustration various modifications and enhancements may be made without departing from the spirit and scope of the invention. Accordingly the invention is not to be limited except as by the appended claims.

