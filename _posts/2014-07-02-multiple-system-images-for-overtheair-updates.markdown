---

title: Multiple system images for over-the-air updates
abstract: In one embodiment, a client computing device may execute software from a first portion of memory of the client computing device. The client computing device may request from a server an over-the-air (OTA) update to the software. The client computing device may receive from the server a manifest for the OTA update. The client computing device may download from the server a payload pursuant to the manifest. The client computing device may install the payload into a second portion of memory of the client computing device, and execute the software from the second portion of memory.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09268555&OS=09268555&RS=09268555
owner: Facebook, Inc.
number: 09268555
owner_city: Menlo Park
owner_country: US
publication_date: 20140702
---
This application is a continuation under 35 U.S.C. 120 of U.S. patent application Ser. No. 14 097 327 filed 5 Dec. 2013 which is a continuation under 35 U.S.C. 120 of U.S. patent application Ser. No. 13 349 137 filed 12 Jan. 2012.

Mobile devices possessing wireless data connectivity to public IP networks otherwise known as the Internet have become prevalent in recent times. Mobile devices include system software or firmware that may need updating or reprogramming to remedy security exploits bugs and to support new features. Mobile devices commonly support OTA over the air programming or FOTA firmware over the air . It is used for upgrades to mobile phones and PDAs. The feature goes by several names including software update firmware update or device management. Originally firmware updates required visiting a specific service center every mobile brand having their own. Another method has been upgrading by connecting the mobile device via a cable to a PC personal computer . Both these methods are considered inconvenient by consumers and also depend heavily on consumers to seek out the upgrade and therefore the majority of mobile phone manufacturers and operators have now adopted FOTA technology for their handsets. If the mobile device has FOTA capability the user can instead download the firmware upgrade over the air directly from his or her mobile device. FOTA also allows manufacturers and operators to push out firmware upgrades to ensure that mobile consumers have the latest software improvements which helps reduce customer support costs and increase consumer satisfaction.

Particular embodiments are now described in detail with reference to a few embodiments thereof as illustrated in the accompanying drawings. In the following description numerous specific details are set forth in order to provide a thorough understanding of the present disclosure. It is apparent however to one skilled in the art that the present disclosure may be practiced without some or all of these specific details. In other instances well known process steps and or structures have not been described in detail in order not to unnecessarily obscure the present disclosure. In addition while the disclosure is described in conjunction with the particular embodiments it should be understood that this description is not intended to limit the disclosure to the described embodiments. To the contrary the description is intended to cover alternatives modifications and equivalents as may be included within the spirit and scope of the disclosure as defined by the appended claims.

Network cloud generally represents a network or collection of networks such as the Internet a corporate intranet a virtual private network a local area network a wireless local area network a cellular network a wide area network a metropolitan area network or a combination of two or more such networks over which update server may communicate with mobile device .

Mobile device is generally a portable computer or computing device including functionality for communicating e.g. remotely over a network. For example mobile device can be a mobile phone a tablet computer a laptop computer a handheld game console an electronic book reader or any other suitable portable devices. Mobile device may execute one or more client applications such as a web browser e.g. Microsoft Windows Internet Explorer Mozilla Firefox Apple Safari Google Chrome and Opera etc. or special purpose client application e.g. Microsoft Outlook Facebook for iPhone etc. to access and view content and messages transmitted from update server over network cloud . In particular embodiments mobile device may connect to network cloud via a base station of a cellular network e.g. a Global System for Mobile Communications or GSM cellular network a Long Term Evolution or LTE network . In particular embodiments mobile device may connect to network cloud via a wireless access point of a WI FI network.

In particular embodiments mobile device may connect to a social networking system through network cloud . A social networking system such as a social networking website enables its users to interact with it and with each other through the system. Typically to become a registered user of a social networking system an entity either human or non human registers for an account with the social networking system. Thereafter the registered user may log into the social networking system via an account by providing for example a correct login ID or username and password. As used herein a user may be an individual human user an entity e.g. an enterprise business or third party application or a group e.g. of individuals or entities that interacts or communicates with or over such a social network environment.

When a user registers for an account with a social networking system the social networking system may create and store a record often referred to as a user profile in connection with the user. The user profile may include information provided by the user and information gathered by various systems including the social networking system relating to activities or actions of the user. For example the user may provide his name profile picture contact information birth date gender marital status family status employment education background preferences interests and other demographical information to be included in his user profile. The user may identify other users of the social networking system that the user considers to be his friends. A list of the user s friends or first degree contacts may be included in the user s profile. Connections in social networking systems may be in both directions or may be in just one direction. For example if Bob and Joe are both users and connect with each another Bob and Joe are each connections of the other. If on the other hand Bob wishes to connect to Sam to view Sam s posted content items but Sam does not choose to connect to Bob a one way connection may be formed where Sam is Bob s connection but Bob is not Sam s connection. Some embodiments of a social networking system allow the connection to be indirect via one or more levels of connections e.g. friends of friends . Connections may be added explicitly by a user for example the user selecting a particular other user to be a friend or automatically created by the social networking system based on common characteristics of the users e.g. users who are alumni of the same educational institution . The user may identify or bookmark websites or web pages he visits frequently and these websites or web pages may be included in the user s profile.

The user may provide information relating to various aspects of the user such as contact information and interests at the time the user registers for an account or at a later time. The user may also update his or her profile information at any time. For example when the user moves or changes a phone number he may update his contact information. Additionally the user s interests may change as time passes and the user may update his interests in his profile from time to time. A user s activities on the social networking system such as frequency of accessing particular information on the system may also provide information that may be included in the user s profile. Again such information may be updated from time to time to reflect the user s most recent activities. Still further other users or so called friends or contacts of the user may also perform activities that affect or cause updates to a user s profile. For example a contact may add the user as a friend or remove the user as a friend . A contact may also write messages to the user s profile pages typically known as wall posts. A user may also input status messages that get posted to the user s profile page.

A social network system may maintain social graph information which can generally model the relationships among groups of individuals and may include relationships ranging from casual acquaintances to close familial bonds. A social network may be represented using a graph structure. Each node of the graph corresponds to a member of the social network. Edges connecting two nodes represent a relationship between two users. In addition the degree of separation between any two nodes is defined as the minimum number of hops required to traverse the graph from one node to the other. A degree of separation between two users can be considered a measure of relatedness between the two users represented by the nodes in the graph.

A social networking system may support a variety of applications such as photo sharing on line calendars and events. For example the social networking system may also include media sharing capabilities. For example the social networking system may allow users to post photographs and other multimedia files to a user s profile such as in a wall post or in a photo album both of which may be accessible to other users of the social networking system. Social networking system may also allow users to configure events. For example a first user may configure an event with attributes including time and date of the event location of the event and other users invited to the event. The invited users may receive invitations to the event and respond such as by accepting the invitation or declining it . Furthermore social networking system may allow users to maintain a personal calendar. Similarly to events the calendar entries may include times dates locations and identities of other users.

The social networking system may also support a privacy model. A user may or may not wish to share his information with other users or third party applications or a user may wish to share his information only with specific users or third party applications. A user may control whether his information is shared with other users or third party applications through privacy settings associated with his user profile. For example a user may select a privacy setting for each user datum associated with the user and or select settings that apply globally or to categories or types of user profile information. A privacy setting defines or identifies the set of entities e.g. other users connections of the user friends of friends or third party application that may have access to the user datum. The privacy setting may be specified on various levels of granularity such as by specifying particular entities in the social network e.g. other users predefined groups of the user s connections a particular type of connections all of the user s connections all first degree connections of the user s connections the entire social network or even the entire Internet e.g. to make the posted content item index able and searchable on the Internet . A user may choose a default privacy setting for all user data that is to be posted. Additionally a user may specifically exclude certain entities from viewing a user datum or a particular type of user data.

Social networking system may maintain a database of information relating to geographic locations or places. Places may correspond to various physical locations such as restaurants bars train stations airports and the like. Some places may correspond to larger regions that themselves contain places such as a restaurant or a gate location in an airport. In one implementation each place can be maintained as a hub node in a social graph or other data structure maintained by the social networking system.

In particular embodiments location database may store an information base of places where each place includes a name a geographic location and meta information such as the user that initially created the place reviews comments check in activity data and the like . Places may be created by administrators of the system and or created by users of the system. For example a user may register a new place by accessing a client application to define a place name and provide a geographic location and cause the newly created place to be registered in location database . As discussed above a created place may correspond to a hub node which an administrator can claim for purposes of augmenting the information about the place and for creating ads or other offers to be delivered to users. In particular embodiments system front end may construct and serve a web page of a place as requested by a user. In some embodiments a web page of a place may include selectable components for a user to like the place or check in to the place. In particular embodiments location database may store geo location data identifying a real world geographic location of a user associated with a check in.

While mobile device may access the social networking system through a mobile web browser resident on mobile device in particular embodiments mobile device may run a special piece of application software installed in the memory of mobile device to connect to the social networking system. In particular embodiments the specialized social networking application may maintain a persistent TCP IP connection with the social networking system in order to send and receive updates from mobile device to the social networking system. In particular embodiments the firmware of mobile device itself may be provided by the social networking system. While this disclosure describes updating system firmware provided by a social networking system this disclosure is applicable to any type of firmware or software OTA update.

Security is of eminent concern in firmware and to a lesser extent software application updates. Generally firmware or software application publishers push new versions of their software firmware to users in response to correcting a bug or fixing a software exploit that allows users or third parties to compromise the device or the system. For example the firmware software publisher may update their software to eliminate a particular software exploit or attack such as an eavesdropping or man in the middle exploit. However generally when a new update is announced the exploit becomes public. Thus there is a risk that malicious users may harvest software updates downgrade their particular mobile device and compromise the overall system.

As will be discussed further booting to a particular system image requires a signed an authenticated manifest. Flash memory includes a recovery manifest partition that is necessary for booting to recovery system image partition . In particular embodiments recovery manifest partition is digitally signed with both a universal manifest key and a device specific manifest key for authentication and security purposes. In particular embodiments recovery manifest includes device s unique serial number. In particular embodiments the serial number in manifest stored in manifest partition is signed by a serial number key. The various keys permit the bootloader to verify that the recovery manifest stored in manifest partition comes from a trusted source and is not third party code for purposes of exploiting security flaws. For instance absent any security updates a user may overwrite recovery system image in recovery system image partition with a custom ROM and corrupt the other system images or manifests forcing mobile device to boot to a third party ROM.

Recovery system image partition stores the system image or firmware that shipped from the factory floor with mobile device . In particular embodiments recovery system image partition is used when the device s other system image partitions and have been corrupted so that mobile device may revert back to factory settings if the device has been bricked.

Manifest partition stores a manifest that is critical for booting to a system image written in system image partition 1 or system image partition 2 . Because data corruption of the manifest may result in being unable to boot to either system image in particular embodiments flash memory may include multiple copies of the manifest in manifest partition . In particular embodiments the manifest is signed with a universal manifest private key and per device manifest private key.

Flash memory includes system image partitions 1 and 2 and for storing system firmware. At any given moment only one system image is running the active image and the other image is free for updating the inactive image . Thus mobile device may run active image 1 while updating inactive image 2 and reboot to image 2 therefore making image 2 the active image. In such a manner mobile device ping pongs between the two system images. The overall update process is described in further detail with respect to .

Flash memory also includes writable user data partition for storing applications media and other user data and unwritable system data partition for maintaining operating system settings and other necessary files.

At Step the OTA update process begins. In particular embodiments the OTA update process may be triggered based on the expiration of a periodic timer such as once a day. In particular embodiments the social networking system software provider or carrier may trigger the OTA update process by transmitting an out of band message instructing mobile device to begin the OTA process. In particular embodiments the out of band message may be via the short message service SMS in the form of a text or MMS message. In particular embodiments the out of band message may be via the SMS in the form of a notification. In particular embodiments the out of band message may be a wireless access protocol WAP push over the carrier SMS channel. In particular embodiments the out of band message may be a data message through the packet switched core network of the carrier of mobile device . In particular embodiments the out of band message may be a notification pushed from the social networking system via a persistent TCP IP connection with mobile device . In particular embodiments the persistent TCP IP connection is a VPN tunnel. In particular embodiments the OTA update process is triggered by user action such as selecting an update device option from the user interface of mobile device . This disclosure contemplates any suitable means of triggering the OTA update process.

At Step mobile device polls update server to check if a new firmware update is available by sending a request to the URL or IP address of update server . In particular embodiments the request may be in the form of an HTTP POST request. In particular embodiments the request may be an HTTPS POST. In particular embodiments the request may include the time of the request for security purposes such as to prevent a malicious user from requesting older versions of the firmware. In particular embodiments the request may include an identifier for the particular hardware platform of mobile device . In particular embodiments the request may include the current software or system version running on mobile device again to prevent a malicious user from hoarding or harvesting previous updates. In particular embodiments the request may include the update time in order to protect against man in the middle attacks increased or abnormally long latency may indicate the presence of a malicious third party.

In particular embodiments update server generates a unique firmware OTA manifest for each mobile device based on its unique serial number. In order to verify the authenticity of the serial number of mobile device mobile devices making a request to update server may in particular embodiments digitally sign the request via asymmetric key algorithms. In particular embodiments when mobile device is manufactured the device manufacturer may burn a serial number private key into the ROM or fuses of mobile device so that mobile device may digitally sign transmissions to third parties having the matching serial number public key. In particular embodiments the serial number private key is unique to each device. In particular embodiments the serial number key is universal to all devices but mobile device and update server maintain public and private keys unique to each device. Thus in such embodiments a third party may detect a device spoofing a particular serial number because the device cannot sign requests with a correct serial number private key. In particular embodiments the device serial number is burned into the fuses or ROM of mobile device and as such a user cannot alter the device s serial number.

In the above example the hmac hash based message authentication code value is generated by a particular cryptographic hash function in conjunction with the serial number private key. In particular embodiments the hash function is MD5 or SHA 1. Methods of verifying data integrity and authenticity are well known in the art and this disclosure contemplates any suitable method of verifying the authenticity of a request.

At Step update server receives the request from mobile device . In particular embodiments update server checks the system version value transmitted in the request. If this value matches the most recent version available at Step update server transmits a value in response to the HTTPS POST request for example 302 that indicates that mobile device has the most up to date software and should do nothing. Mobile device upon receiving the response terminates the OTA process.

In particular embodiments update server may be busy due to network congestion technical difficulties or other unforeseen issues and may issue a response to the HTTPS POST request for example 400 indicating that mobile device should try again later. In such embodiments mobile device may wait a predetermined amount of time for example one hour and retransmit the HTTPS POST request to update server .

If at Step update server determines that a new version for the firmware software exists update server then validates the request at Step . In particular embodiments update server may additionally determine at Step whether mobile device is allowed to obtain the updated firmware. For example the administrator of update server may progressively roll out firmware or software in order to slowly address any complaints and prevent widespread damage or bricking of all its customers. For example update server may roll out firmware updates based on IP address ranges or physical locations hardware or system version or based on the user s corporate affiliation such as the administrator of update server s own employees . This disclosure contemplates any suitable method of selectively rolling out a software update and any suitable method of determining whether a particular mobile device is scheduled or authorized for a firmware update.

If update server determines that a new update is available and in particular embodiments that requesting mobile device is authorized to download the update at Step update server validates the request. In particular embodiments update server includes a copy of the serial number private key of mobile device . In such embodiments update server may validate the request by checking the hmac value and device serial number. In particular embodiments update server may include mobile device s serial number public key in order to validate the request. As previously disclosed in particular embodiments the serial number keys may be universal to all devices. In particular embodiments the serial number keys are unique to each device serial number. This disclosure contemplates any suitable implementation for securely validating a request.

At Step update server generates a unique OTA manifest for the update for mobile device . The OTA manifest is one of two keys to keeping the OTA update process secure it also provides instructions to mobile device for downloading the payload the actual firmware update . For didactic purposes an example manifest is displayed below 

The example manifest above includes a system version and a URL from which mobile device may download the payload the firmware update . In particular embodiments mobile device downloads the payload via HTTP. In particular embodiments mobile device downloads the payload via FTP. This disclosure contemplates any suitable transfer protocol for downloading the payload and any suitable URL defining a location from which the payload may be downloaded.

In particular embodiments the OTA manifest includes a series of hmac values for verifying the data integrity or authenticating various portions of the update. In the example above the manifest includes hash values for the payload system and updater. In particular embodiments these hash values may be utilized by mobile device to verify data integrity after the download of each portion of the payload after a complete download of the payload and after writing the payload to flash to ensure error free writing. Although the example above describes hash values generated via the SHA1 cryptographic hash function this disclosure contemplates any suitable cryptographic hash function including without limitation MD5 GOST HAVAL MD2 MD4 PANAMA RadioGatun RIPEMD SHA 0 SHA 256 224 SHA 512 384 Tiger 2 WHIRLPOOL and the like. This disclosure contemplates any suitable cryptographic hash function. In particular embodiments the downloaded payload system and updater are unsigned by update server or payload server in order to reduce cryptographic calculation.

The manifest also includes a download policy instructing mobile device when and how to download the payload. In particular embodiments the manifest may define the bearer over which mobile device is to download the payload for example WiFi 3G or 4G. In particular embodiments the manifest may define the battery state required to download the payload for example charging over 50 etc. In particular embodiments the manifest may control the dates and times at which mobile device may download the update. In particular embodiments the manifest may define the state in which mobile device must be in order to download the update for example only when the device is not actively in use. In particular embodiments the manifest may define a data or bandwidth limit for the download of the update for example only 1 MB a day or 256 k hour etc. In the above example the manifest defines three download policies first mobile device is permitted to download the payload when it is on a WiFi bearer and plugged in up to 262 144 bytes. In the second policy mobile device is permitted to download on a 3G bearer from the hours of 10 PM to 6 AM if the battery is above 50 . In the final policy mobile device is permitted to download over a 3G bearer when the device is idle and has over 50 battery up to 65 k of data. This disclosure contemplates a manifest defining any suitable device or environmental condition for downloading the payload.

In particular embodiments the manifest defines when the device reboots to the newly updated system image. Because rebooting modern mobile devices is a time consuming process it is preferable to reboot mobile device when the user is not actively interacting with the device or further when the user is unlikely to interact with the device for a predetermined amount of time. Thus in particular embodiments the manifest may define that the mobile device only reboot itself during a particular time window for example from 3 AM 5 AM. In particular embodiments the manifest may define a battery state in the reboot conditions. For example the manifest may instruct mobile device only to reboot if the battery level meets some minimum threshold. In particular embodiments the reboot operation may be overridden by user action. For example the device may provide the user with a prompt that states his or her device will reboot in 10 seconds absent user intervention. This disclosure contemplates any suitable device or environment condition requirement for rebooting mobile device .

In particular embodiments the OTA manifest also includes the serial number for mobile device . Thus the portion under the manifest block is the universal manifest because it is the same for all devices. As will be discussed in further detail with reference to paragraphs 5 and 6 the system bootloader will not load a system image unless the manifest passes a number of checks. In particular embodiments one such check is to determine that the manifest serial number matches the serial number of the mobile device.

In particular embodiments to enhance security the manifest and appended serial number may each be signed by a different cryptographic security key. The universal manifest itself may be signed by a universal manifest private key stored at the firmware developer s secure location. Because in such embodiments mobile device maintains a copy of the universal manifest public key mobile device may verify that the manifest comes from the developer itself rather than a man in the middle. Additionally the serial number appended to the manifest may be signed by a number of keys. In particular embodiments the serial number may be signed by a private per device manifest key stored at update server . Because mobile device maintains a public per device manifest key mobile device may verify the identity of the firmware developer. In particular embodiments the serial number appended to the universal manifest may also be signed with a serial number private key maintained at the update server . In particular embodiments the serial number may be signed by both the private per device manifest and serial number keys. This disclosure contemplates any suitable method of authenticating the universal manifest and serial number.

At Step mobile device receives the manifest from update server and authenticates the universal manifest and serial number as described above. In particular embodiments it uses its UniveralManifestKey.public to authenticate the signature on the universal manifest and PerDeviceManifestKey.public and SerialNumberKey.private to authenticate the signature on the serial number.

Having authenticated the manifest mobile device at Step requests the payload from payload server by making a request to the URL specified in the manifest. In particular embodiments the request is an HTTP request. In particular embodiments the request is an HTTP request with range support in order to support resumable or partial downloading of the payload. In particular embodiments the request is a torrent tracker file for downloading from a plurality of download servers . This disclosure contemplates any suitable method of requesting and downloading the payload. Steps pertain to the downloading of the payload the download process is described in further detail with respect to . After successfully downloading the payload at Step mobile device reboots the system in accordance with the reboot instructions included in the manifest.

At Step mobile device begins download of the next block. Mobile device downloads blocks so long as it meets the download policies in the manifest if mobile device meets its daily bandwidth or data limit for example it stops downloading until it is able to download more data pursuant to the download policy. At Step mobile device checks whether it has downloaded the complete payload to system data partition . If not the process repeats Step .

After downloading the entire payload at Step the current running system in the user space checks the downloaded data against the hash value transmitted in the manifest. For example mobile device may run the SHA 1 algorithm on the downloaded data and check it against the value of payloadSHA1 received in the universal manifest. If the values do not match mobile device knows that a download error has occurred and at Step it identifies which blocks were corrupted. In particular embodiments each block includes its own hash value SHA1 or otherwise . In such embodiments at Step mobile device calculates hash values for each downloaded block and compares it to the hash value downloaded with each block. In particular embodiments mobile device performs a checksum immediately upon downloading a block and redownloads any blocks whose calculated hash value does not match its downloaded hash value. This disclosure contemplates any suitable method of checking individual blocks and identifying bad blocks of the payload.

After identifying the bad blocks mobile device then requests from payload server only the bad blocks for re downloading at Step . The process then returns to the hack check of to verify the data integrity of the entire downloaded payload. After verifying that the hash value of the complete payload matches the value of payloadSHA1 the process proceeds to Step . In particular embodiments the system calls a more secure layer to perform the hash check of Step immediately prior to writing the system image to flash memory .

At Step mobile device copies the downloaded system image from system data partition to the inactive system image partition. Because a single bad page write onto flash memory could cause a boot failure mobile device performs one more hash check at Step to verify the data integrity of the system image written to the inactive system image partition. In particular embodiments the payload may be in compressed format. In such embodiments mobile device may extract the downloaded system image to the inactive system partition. Finally if the system image in the inactive system image partition passes the hash check the system reboots pursuant to the reboot instructions of the universal manifest and completes installation of the updated firmware.

At Step the bootloader application gains execution control and at Step the bootloader reads the manifest from manifest partition . In particular embodiments the bootloader may obtain the manifest from any of the flash replicas in manifest partition .

At Step the bootloader checks the manifest signature with the public universal manifest key UniversalManifestKey.public and the public per device manifest key PerDeviceManifestKey.public . In particular embodiments the bootloader also verifies the serial number by using the serial number public key.

At Step the bootloader verifies the hash value of the system image against the hash value transmitted in the manifest. In particular embodiments the bootloader may perform multiple checksums for payloadSHA1 systemSHA1 or updaterSHA1. As previously described any particular cryptographic hash function may be utilized.

After verifying that the hash value of the system image matches the manifest system image hash at Step the system kernel gains execution control completing the update process.

Mobile device leaves factory floor with a number of pieces of data burned into the fuses of its mobile chip serial number serial number signature and bootloader public key . These values cannot be changed by third party code or any modifications because they are physically hard coded into the hardware of mobile chip . As previously discussed serial number is central to the security of the OTA update it permits update server to validate any request for a OTA software download. In particular embodiments mobile device may also include a serial number signature in its requests for OTA updates. Because the number signature is signed at factory floor via SerialNumberKey.private check it is essentially impossible for a user to fake or spoof the serial number of mobile device . That is even if the user were able to obtain a blank mobile chip and reprogram another serial number into fuses he or she would be unable to generate serial number signature because the user lacks SerialNumberKey.private. BootloaderKey.public is used by boot ROM to validate bootloader signature

Bootloader signature is generated at a secure location typically at the location of the firmware developer via BootloaderKey.private Step . Secure location includes two private keys that are never distributed to the public Bootloaderkey.private and UniversalManifestKey.private. After the firmware developer readies a firmware update to be pushed to all devices it attaches a signature to manifest . Universal manifest signature is generated by digitally signing manifest with UniversalMainfiestKey.private check .

Serial number is appended to the universal manifest by update server during manifest generation. Serial number also includes a PerDeviceManifest signature . Both serial number and PerDeviceManifest signature are generated by update server by digitally signing the serial number with SerialNumberKey.private check and PerDeviceManifestKey.private respectively.

Bootloader verifies universal manifest signature via UniversalManifestKey.pub in Step serial number with SerialNumberKey.pub and per device manifest signature with PerDeviceManifestKey.pub Step . After the manifest has been verified the system image is hashed via a predetermined hash function and checked against the hash value in manifest System Image SHA1 . As previously described above the newly updated system image or firmware then takes control of mobile device Step and may load applications .

While the foregoing embodiments may be implemented in a variety of network configurations the following illustrates an example network environment for didactic and not limiting purposes. illustrates an example network environment . Network environment includes a network coupling one or more servers and one or more clients to each other. Network environment also includes one or more data storage linked to one or more servers . Particular embodiments may be implemented in network environment . For example social networking system frontend may be written in software programs hosted by one or more servers . For example event database may be stored in one or more storage . In particular embodiments network is an intranet an extranet a virtual private network VPN a local area network LAN a wireless LAN WLAN a wide area network WAN a metropolitan area network MAN a portion of the Internet or another network or a combination of two or more such networks . The present disclosure contemplates any suitable network .

One or more links couple a server or a client to network . In particular embodiments one or more links each includes one or more wired wireless or optical links . In particular embodiments one or more links each includes an intranet an extranet a VPN a LAN a WLAN a WAN a MAN a portion of the Internet or another link or a combination of two or more such links . The present disclosure contemplates any suitable links coupling servers and clients to network .

In particular embodiments each server may be a unitary server or may be a distributed server spanning multiple computers or multiple datacenters. Servers may be of various types such as for example and without limitation web server news server mail server message server advertising server file server application server exchange server database server or proxy server. In particular embodiments each server may include hardware software or embedded logic components or a combination of two or more such components for carrying out the appropriate functionalities implemented or supported by server . For example a web server is generally capable of hosting websites containing web pages or particular elements of web pages. More specifically a web server may host HTML files or other file types or may dynamically create or constitute files upon a request and communicate them to clients in response to HTTP or other requests from clients . A mail server is generally capable of providing electronic mail services to various clients . A database server is generally capable of providing an interface for managing data stored in one or more data stores.

In particular embodiments one or more data storages may be communicatively linked to one or more servers via one or more links . In particular embodiments data storages may be used to store various types of information. In particular embodiments the information stored in data storages may be organized according to specific data structures. In particular embodiment each data storage may be a relational database. Particular embodiments may provide interfaces that enable servers or clients to manage e.g. retrieve modify add or delete the information stored in data storage .

In particular embodiments each client may be an electronic device including hardware software or embedded logic components or a combination of two or more such components and capable of carrying out the appropriate functions implemented or supported by client . For example and without limitation a client may be a desktop computer system a notebook computer system a netbook computer system a handheld electronic device or a mobile telephone. The present disclosure contemplates any suitable clients . A client may enable a network user at client to access network . A client may enable its user to communicate with other users at other clients .

A client may have a web browser such as MICROSOFT INTERNET EXPLORER GOOGLE CHROME or MOZILLA FIREFOX and may have one or more add ons plug ins or other extensions such as TOOLBAR or YAHOO TOOLBAR. A user at client may enter a Uniform Resource Locator URL or other address directing the web browser to a server and the web browser may generate a Hyper Text Transfer Protocol HTTP request and communicate the HTTP request to server . Server may accept the HTTP request and communicate to client one or more Hyper Text Markup Language HTML files responsive to the HTTP request. Client may render a web page based on the HTML files from server for presentation to the user. The present disclosure contemplates any suitable web page files. As an example and not by way of limitation web pages may render from HTML files Extensible Hyper Text Markup Language XHTML files or Extensible Markup Language XML files according to particular needs. Such pages may also execute scripts such as for example and without limitation those written in JAVASCRIPT JAVA MICROSOFT SILVERLIGHT combinations of markup language and scripts such as AJAX Asynchronous JAVASCRIPT and XML and the like. Herein reference to a web page encompasses one or more corresponding web page files which a browser may use to render the web page and vice versa where appropriate.

In particular embodiments computer system includes a processor memory storage an input output I O interface a communication interface and a bus . Although this disclosure describes and illustrates a particular computer system having a particular number of particular components in a particular arrangement this disclosure contemplates any suitable computer system having any suitable number of any suitable components in any suitable arrangement.

In particular embodiments processor includes hardware for executing instructions such as those making up a computer program. As an example and not by way of limitation to execute instructions processor may retrieve or fetch the instructions from an internal register an internal cache memory or storage decode and execute them and then write one or more results to an internal register an internal cache memory or storage . In particular embodiments processor may include one or more internal caches for data instructions or addresses. The present disclosure contemplates processor including any suitable number of any suitable internal caches where appropriate. As an example and not by way of limitation processor may include one or more instruction caches one or more data caches and one or more translation look aside buffers TLBs . Instructions in the instruction caches may be copies of instructions in memory or storage and the instruction caches may speed up retrieval of those instructions by processor . Data in the data caches may be copies of data in memory or storage for instructions executing at processor to operate on the results of previous instructions executed at processor for access by subsequent instructions executing at processor or for writing to memory or storage or other suitable data. The data caches may speed up read or write operations by processor . The TLBs may speed up virtual address translation for processor . In particular embodiments processor may include one or more internal registers for data instructions or addresses. The present disclosure contemplates processor including any suitable number of any suitable internal registers where appropriate. Where appropriate processor may include one or more arithmetic logic units ALUs be a multi core processor or include one or more processors . Although this disclosure describes and illustrates a particular processor this disclosure contemplates any suitable processor.

In particular embodiments memory includes main memory for storing instructions for processor to execute or data for processor to operate on. As an example and not by way of limitation computer system may load instructions from storage or another source such as for example another computer system to memory . Processor may then load the instructions from memory to an internal register or internal cache. To execute the instructions processor may retrieve the instructions from the internal register or internal cache and decode them. During or after execution of the instructions processor may write one or more results which may be intermediate or final results to the internal register or internal cache. Processor may then write one or more of those results to memory . In particular embodiments processor executes only instructions in one or more internal registers or internal caches or in memory as opposed to storage or elsewhere and operates only on data in one or more internal registers or internal caches or in memory as opposed to storage or elsewhere . One or more memory buses which may each include an address bus and a data bus may couple processor to memory . Bus may include one or more memory buses as described below. In particular embodiments one or more memory management units MMUs reside between processor and memory and facilitate accesses to memory requested by processor . In particular embodiments memory includes random access memory RAM . This RAM may be volatile memory where appropriate Where appropriate this RAM may be dynamic RAM DRAM or static RAM SRAM . Moreover where appropriate this RAM may be single ported or multi ported RAM. The present disclosure contemplates any suitable RAM. Memory may include one or more memories where appropriate. Although this disclosure describes and illustrates particular memory this disclosure contemplates any suitable memory.

In particular embodiments storage includes mass storage for data or instructions. As an example and not by way of limitation storage may include an HDD a floppy disk drive flash memory an optical disc a magneto optical disc magnetic tape or a Universal Serial Bus USB drive or a combination of two or more of these. Storage may include removable or non removable or fixed media where appropriate. Storage may be internal or external to computer system where appropriate. In particular embodiments storage is non volatile solid state memory. In particular embodiments storage includes read only memory ROM . Where appropriate this ROM may be mask programmed ROM programmable ROM PROM erasable PROM EPROM electrically erasable PROM EEPROM electrically alterable ROM EAROM or flash memory or a combination of two or more of these. This disclosure contemplates mass storage taking any suitable physical form. Storage may include one or more storage control units facilitating communication between processor and storage where appropriate. Where appropriate storage may include one or more storages . Although this disclosure describes and illustrates particular storage this disclosure contemplates any suitable storage.

In particular embodiments I O interface includes hardware software or both providing one or more interfaces for communication between computer system and one or more I O devices. Computer system may include one or more of these I O devices where appropriate. One or more of these I O devices may enable communication between a person and computer system . As an example and not by way of limitation an I O device may include a keyboard keypad microphone monitor mouse printer scanner speaker still camera stylus tablet touch screen trackball video camera another suitable I O device or a combination of two or more of these. An I O device may include one or more sensors. This disclosure contemplates any suitable I O devices and any suitable I O interfaces for them. Where appropriate I O interface may include one or more device or software drivers enabling processor to drive one or more of these I O devices. I O interface may include one or more I O interfaces where appropriate. Although this disclosure describes and illustrates a particular I O interface this disclosure contemplates any suitable I O interface.

In particular embodiments communication interface includes hardware software or both providing one or more interfaces for communication such as for example packet based communication between computer system and one or more other computer systems or one or more networks. As an example and not by way of limitation communication interface may include a network interface controller NIC or network adapter for communicating with an Ethernet or other wire based network or a wireless NIC WNIC or wireless adapter for communicating with a wireless network such as a WI FI network. This disclosure contemplates any suitable network and any suitable communication interface for it. As an example and not by way of limitation computer system may communicate with an ad hoc network a personal area network PAN a local area network LAN a wide area network WAN a metropolitan area network MAN or one or more portions of the Internet or a combination of two or more of these. One or more portions of one or more of these networks may be wired or wireless. As an example computer system may communicate with a wireless PAN WPAN such as for example a BLUETOOTH WPAN a WI FI network such as for example a 802.11a b g n WI FI network a 802.11s mesh network a WI MAX network a cellular telephone network such as for example a Global System for Mobile Communications GSM network an Enhanced Data Rates for GSM Evolution EDGE network a Universal Mobile Telecommunications System UMTS network a Long Term Evolution LTE network or other suitable wireless network or a combination of two or more of these. Computer system may include any suitable communication interface for any of these networks where appropriate. Communication interface may include one or more communication interfaces where appropriate. Although this disclosure describes and illustrates a particular communication interface this disclosure contemplates any suitable communication interface.

In particular embodiments bus includes hardware software or both coupling components of computer system to each other. As an example and not by way of limitation bus may include an Accelerated Graphics Port AGP or other graphics bus an Enhanced Industry Standard Architecture EISA bus a front side bus FSB a HYPERTRANSPORT HT interconnect an Industry Standard Architecture ISA bus an INFINIBAND interconnect a low pin count LPC bus a memory bus a Micro Channel Architecture MCA bus a Peripheral Component Interconnect PCI bus a PCI Express PCI X bus a serial advanced technology attachment SATA bus a Video Electronics Standards Association local VLB bus a Universal Asynchronous Receiver Transmitter UART interface a Inter Integrated Circuit IC bus a Serial Peripheral Interface SPI bus a Secure Digital SD memory interface a MultiMediaCard MMC memory interface a Memory Stick MS memory interface a Secure Digital Input Output SDIO interface a Multi channel Buffered Serial Port McBSP bus a Universal Serial Bus USB bus a General Purpose Memory Controller GPMC bus a SDRAM Controller SDRC bus a General Purpose Input Output GPIO bus a Separate Video S Video bus a Display Serial Interface DSI bus a Advanced Microcontroller Bus Architecture AMBA bus or another suitable bus or a combination of two or more of these. Bus may include one or more buses where appropriate. Although this disclosure describes and illustrates a particular bus this disclosure contemplates any suitable bus or interconnect.

The client side functionality described above can be implemented as a series of instructions stored on a computer readable storage medium that when executed cause a programmable processor to implement the operations described above. While the client device may be implemented in a variety of different hardware and computing systems shows a schematic representation of the main components of an example computing platform of a client or mobile device according to various particular embodiments. In particular embodiments computing platform may comprise controller memory and input output subsystem . In particular embodiments controller which may comprise one or more processors and or one or more microcontrollers configured to execute instructions and to carry out operations associated with a computing platform. In various embodiments controller may be implemented as a single chip multiple chips and or other electrical components including one or more integrated circuits and printed circuit boards. Controller may optionally contain a cache memory unit for temporary local storage of instructions data or computer addresses. By way of example using instructions retrieved from memory controller may control the reception and manipulation of input and output data between components of computing platform . By way of example controller may include one or more processors or one or more controllers dedicated for certain processing tasks of computing platform for example for 2D 3D graphics processing image processing or video processing.

Controller together with a suitable operating system may operate to execute instructions in the form of computer code and produce and use data. By way of example and not by way of limitation the operating system may be Windows based Mac based or Unix or Linux based or Symbian based among other suitable operating systems. The operating system other computer code and or data may be physically stored within memory that is operatively coupled to controller .

Memory may encompass one or more storage media and generally provide a place to store computer code e.g. software and or firmware and data that are used by computing platform . By way of example memory may include various tangible computer readable storage media including Read Only Memory ROM and or Random Access Memory RAM . As is well known in the art ROM acts to transfer data and instructions uni directionally to controller and RAM is used typically to transfer data and instructions in a bi directional manner. Memory may also include one or more fixed storage devices in the form of by way of example hard disk drives HDDs solid state drives SSDs flash memory cards e.g. Secured Digital or SD cards embedded MultiMediaCard or eMMD cards among other suitable forms of memory coupled bi directionally to controller . Information may also reside on one or more removable storage media loaded into or installed in computing platform when needed. By way of example any of a number of suitable memory cards e.g. SD cards may be loaded into computing platform on a temporary or permanent basis.

Input output subsystem may comprise one or more input and output devices operably connected to controller . For example input output subsystem may include keyboard mouse one or more buttons thumb wheel and or display e.g. liquid crystal display LCD light emitting diode LED Interferometric modulator display IMOD or any other suitable display technology . Generally input devices are configured to transfer data commands and responses from the outside world into computing platform . The display is generally configured to display a graphical user interface GUI that provides an easy to use visual interface between a user of the computing platform and the operating system or application s running on the mobile device. Generally the GUI presents programs files and operational options with graphical images. During operation the user may select and activate various graphical images displayed on the display in order to initiate functions and tasks associated therewith. Input output subsystem may also include touch based devices such as touch pad and touch screen. A touchpad is an input device including a surface that detects touch based inputs of users. Similarly a touch screen is a display that detects the presence and location of user touch inputs. Input output system may also include dual touch or multi touch displays or touch pads that can identify the presence location and movement of more than one touch inputs such as two or three finger touches.

In particular embodiments computing platform may additionally comprise audio subsystem camera subsystem wireless communication subsystem sensor subsystems and or wired communication subsystem operably connected to controller to facilitate various functions of computing platform . For example Audio subsystem including a speaker a microphone and a codec module configured to process audio signals can be utilized to facilitate voice enabled functions such as voice recognition voice replication digital recording and telephony functions. For example camera subsystem including an optical sensor e.g. a charged coupled device CCD or a complementary metal oxide semiconductor CMOS image sensor can be utilized to facilitate camera functions such as recording photographs and video clips. For example wired communication subsystem can include a Universal Serial Bus USB port for file transferring or a Ethernet port for connection to a local area network LAN .

Wireless communication subsystem can be designed to operate over one or more wireless networks for example a wireless PAN WPAN such as for example a BLUETOOTH WPAN an infrared PAN a WI FI network such as for example an 802.11a b g n WI FI network an 802.11s mesh network a WI MAX network a cellular telephone network such as for example a Global System for Mobile Communications GSM network an Enhanced Data Rates for GSM Evolution EDGE network a Universal Mobile Telecommunications System UMTS network and or a Long Term Evolution LTE network . Additionally wireless communication subsystem may include hosting protocols such that computing platform may be configured as a base station for other wireless devices.

Sensor subsystem may include one or more sensor devices to provide additional input and facilitate multiple functionalities of computing platform . For example sensor subsystems may include GPS sensor for location positioning altimeter for altitude positioning motion sensor for determining orientation of a mobile device light sensor for photographing function with camera subsystem temperature sensor for measuring ambient temperature and or biometric sensor for security application e.g. fingerprint reader .

In particular embodiments various components of computing platform may be operably connected together by one or more buses including hardware and or software . As an example and not by way of limitation the one or more buses may include an Accelerated Graphics Port AGP or other graphics bus an Enhanced Industry Standard Architecture EISA bus a front side bus FSB a HYPERTRANSPORT HT interconnect an Industry Standard Architecture ISA bus an INFINIBAND interconnect a low pin count LPC bus a memory bus a Micro Channel Architecture MCA bus a Peripheral Component Interconnect PCI bus a PCI Express PCI X bus a serial advanced technology attachment SATA bus a Video Electronics Standards Association local VLB bus a Universal Asynchronous Receiver Transmitter UART interface a Inter Integrated Circuit IC bus a Serial Peripheral Interface SPI bus a Secure Digital SD memory interface a MultiMediaCard MMC memory interface a Memory Stick MS memory interface a Secure Digital Input Output SDIO interface a Multi channel Buffered Serial Port McBSP bus a Universal Serial Bus USB bus a General Purpose Memory Controller GPMC bus a SDRAM Controller SDRC bus a General Purpose Input Output GPIO bus a Separate Video S Video bus a Display Serial Interface DSI bus an Advanced Microcontroller Bus Architecture AMBA bus or another suitable bus or a combination of two or more of these.

Herein reference to a computer readable non transitory storage medium may include a semiconductor based or other integrated circuit IC such as for example a field programmable gate array FPGA or an application specific IC ASIC a hard disk drive HDD a hybrid hard drive HHD an optical disc an optical disc drive ODD a magneto optical disc a magneto optical drive a floppy disk a floppy disk drive FDD magnetic tape a holographic storage medium a solid state drive SSD a RAM drive a SECURE DIGITAL card a SECURE DIGITAL drive another suitable computer readable non transitory storage medium or a suitable combination of these where appropriate. A computer readable non transitory storage medium may be volatile non volatile or a combination of volatile and non volatile where appropriate.

This disclosure contemplates one or more computer readable storage media implementing any suitable storage. In particular embodiments a computer readable storage medium implements one or more portions of processor such as for example one or more internal registers or caches one or more portions of memory one or more portions of storage or a combination of these where appropriate. In particular embodiments a computer readable storage medium implements RAM or ROM. In particular embodiments a computer readable storage medium implements volatile or persistent memory. In particular embodiments one or more computer readable storage media embody software. Herein reference to software may encompass one or more applications bytecode one or more computer programs one or more executables one or more instructions logic machine code one or more scripts or source code and vice versa where appropriate. In particular embodiments software includes one or more application programming interfaces APIs . This disclosure contemplates any suitable software written or otherwise expressed in any suitable programming language or combination of programming languages. In particular embodiments software is expressed as source code or object code. In particular embodiments software is expressed in a higher level programming language such as for example C Perl JavaScript or a suitable extension thereof. In particular embodiments software is expressed in a lower level programming language such as assembly language or machine code . In particular embodiments software is expressed in JAVA. In particular embodiments software is expressed in Hyper Text Markup Language HTML Extensible Markup Language XML or other suitable markup language.

The present disclosure encompasses all changes substitutions variations alterations and modifications to the example embodiments herein that a person having ordinary skill in the art would comprehend. Similarly where appropriate the appended claims encompass all changes substitutions variations alterations and modifications to the example embodiments herein that a person having ordinary skill in the art would comprehend.

