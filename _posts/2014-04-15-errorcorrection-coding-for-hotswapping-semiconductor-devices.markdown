---

title: Error-correction coding for hot-swapping semiconductor devices
abstract: A memory read operation is directed at a group of semiconductor devices from which a first semiconductor device has been removed. An error in data for the memory read operation is detected based on error-correction coding (ECC). The error is caused at least in part by the first semiconductor device having been removed. ECC is used to determine corrected data for the memory read operation.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09484113&OS=09484113&RS=09484113
owner: ADVANCED MICRO DEVICES, INC.
number: 09484113
owner_city: Sunnyvale
owner_country: US
publication_date: 20140415
---
This invention was made with Government support under Prime Contract Number DE AC52 07NA27344 Subcontract Number B600716 awarded by DOE. The Government has certain rights in this invention.

The present embodiments relate generally to error correction in semiconductor devices and more specifically to replacing semiconductor devices in a system.

Memory devices in electronic systems may wear out over time such that failure levels associated with the memory devices may reach an unacceptable level. When the failure level of a particular memory device reaches an unacceptable level it is desirable to replace the memory device. However replacing the memory device may stop or interrupt program execution.

In some embodiments a method of hot swapping includes performing a memory read operation directed at a group of semiconductor devices from which a first semiconductor device has been removed. An error in data for the memory read operation is detected based on error correction coding ECC . The error is caused at least in part by the first semiconductor device having been removed. ECC is used to determine corrected data for the memory read operation.

In some embodiments a system includes a group of memories to store code words. Each memory of the group of memories is situated in a respective semiconductor device of a group of semiconductor devices. The system also includes a plurality of buffers. Each buffer of the plurality of buffers electrically isolates a respective semiconductor device when the buffer is enabled to allow the respective semiconductor device to be removed from the system. The system further includes an ECC module to detect and correct errors in code words read from the group of memories including code words read from the group of memories after a buffer of the plurality of buffers has been enabled and before the respective semiconductor device corresponding to the buffer has been replaced.

In some embodiments a non transitory computer readable storage medium stores one or more programs configured to be executed by a processor in a system that includes the processor a group of semiconductor devices having respective memories and an ECC module coupled to the group of semiconductor devices. The one or more programs include instructions to electrically isolate a specified semiconductor device of the group of semiconductor devices to allow the specified semiconductor device to be removed. The one or more programs also include instructions to perform an operation referencing data stored in the respective memories of the group of semiconductor devices. The operation is to be performed after the specified semiconductor device has been electrically isolated to allow for its removal and before the specified semiconductor device has been replaced. The ECC coding module is to correct errors in the data.

These embodiments allow semiconductor devices that include memory to be removed and replaced without interrupting system operation.

Reference will now be made in detail to various embodiments examples of which are illustrated in the accompanying drawings. In the following detailed description numerous specific details are set forth in order to provide a thorough understanding of the disclosure. However some embodiments may be practiced without these specific details. In other instances well known methods procedures components and circuits have not been described in detail so as not to unnecessarily obscure aspects of the embodiments.

The semiconductor devices in each of the ranks and may be mounted on a respective module e.g. dual in line memory module DIMM or other circuit board. For example each of the semiconductor devices may be situated in a respective socket not shown that couples the semiconductor device to the module . Placing the semiconductor devices in sockets as opposed to directly soldering them to the modules allows for easy removal and replacement of the semiconductor devices .

Each of the semiconductor devices includes or is coupled to a buffer that when enabled electrically isolates the semiconductor device from the module on which it is mounted. Each buffer which is implemented for example using tri state logic or relays thus may be internal or external to its corresponding semiconductor device . When a buffer is enabled e.g. when its relays are opened the corresponding semiconductor device is de coupled from signal lines on the module and may also be decoupled from power supplies. When a buffer is disabled e.g. when its relays are closed the corresponding semiconductor device is coupled to signal lines on the module and to power supplies. Examples of signal lines on the modules to which the semiconductor devices may be selectively coupled through the buffers include but are not limited to a data bus a command and address C A bus a clock signal line and one or more signal lines to provide various enable signals. The buffers allow for hot swapping of the semiconductor devices after a buffer has been enabled the corresponding semiconductor device may be removed and replaced with a new semiconductor device while the module is powered up e.g. while the module is operating without damaging either the semiconductor device being removed or the new semiconductor device being installed. Once the new semiconductor device has been installed e.g. in its socket its buffer may be disabled thereby electrically coupling the new semiconductor device with the module .

Each of the ranks and stores code words that have been encoded using error correction coding ECC . In some embodiments the ECC uses a burst error correcting code e.g. a Reed Solomon code for which the code words are divided into symbols. Each semiconductor device on a respective module and thus in a respective rank or stores a distinct symbol of a code word. The symbols include data symbols which are made up of data bits and check symbols which are made up of check bits used for ECC. In the example of each rank includes a first set of 16 semiconductor devices that store respective data symbols D through D and a second set of two semiconductor devices that store respective check symbols ECC and ECC. Each symbol may include a plurality of bits in one example each symbol includes four bits such that each code word includes 64 data bits and 8 check bits. Each of the semiconductor devices thus has a 4 bit data width in this example. The check bits and thus the check symbols are sufficient to allow correct data to be recovered assuming an error on any number of bits of a single symbol in the code word e.g. assuming a single symbol is lost . Since removal of one of the semiconductor devices from a module will cause an entire symbol associated with the removed semiconductor device to be lost for each code word the ECC scheme of allows each module to continue to operate when a semiconductor device has been removed e.g. is being replaced assuming no errors occur for the symbols stored in the other semiconductor devices on the module . Accordingly the ECC scheme of permits hot swapping of a semiconductor device without pausing operation.

Each of the semiconductor devices on a respective module and thus in a respective rank or couples to a distinct set of signal lines in a data bus . The symbols for a given code word are written to and read from the semiconductor devices on a respective module in parallel using the data bus .

In some embodiments code words written to a rank or are initially encoded using a first ECC scheme sufficient to allow correct data to be recovered assuming that a single symbol in the code word is lost as described above. Before hot swapping is performed to replace a first semiconductor device however the code words may be re encoded using a second ECC scheme to provide additional error protection. This additional error protection allows correct data to be recovered in the event of an error in a symbol from another semiconductor device while the first semiconductor device is being replaced. The second ECC scheme thus is more robust than the first ECC scheme. Re encoding increases the number of check symbols in the code words and therefore the data width of the code words. In some embodiments the number of additional check symbols divided by two equals the number of additional symbols for which the loss of data or check bits can be tolerated. In some embodiments the additional check symbols may be stored in available memory outside of the rank or .

In some embodiments instead of re encoding data with a more robust ECC scheme in anticipation of hot swapping the same ECC scheme is continuously used for data stored in the ranks and . For example a single ECC scheme is continuously used that accommodates the loss of a single symbol per code word. Alternatively a single ECC scheme is continuously used that accommodates the loss of up to a specified number of symbols e.g. two symbols per code word.

The ranks and are merely examples of groups of semiconductor devices that use ECC for continued operation during hot swapping of a semiconductor device . Other examples are possible.

The memory controller issues commands to the ranks and to perform memory access operations including read and write operations. The memory access operations are performed in accordance with instructions executed by the one or more processors and or requests from peripherals . Memory access operations may be performed even if a semiconductor device in a rank or has been removed and not yet replaced or has been electrically isolated in preparation for removal.

The memory controller includes an ECC module that implements ECC for the ranks and . For write commands the ECC module encodes data to be written to the ranks and thereby generating code words that the memory controller writes to the ranks and . For read commands the ECC module detects and corrects errors in code words that the memory controller reads from the ranks and . The ECC module performs this error detection and correction within the limits of the particular ECC scheme being used. The ECC module thus extracts data from code words and corrects the data when possible. In some embodiments the ECC module uses a burst error correcting code e.g. a Reed Solomon code as described with respect to .

In some embodiments when the ECC module detects an error in a symbol read from a semiconductor device it determines the correct value of the symbol and writes the correct value back to the semiconductor device . If the semiconductor device has been removed however or has been electrically isolated in preparation for removal then the ECC module does not attempt to write back the correct value since the attempt would fail. By suppressing writing back the correct value at times when a semiconductor device has been removed or electrically isolated the ECC module saves power and memory bandwidth.

The ECC module may determine whether or not to write back a corrected symbol to a semiconductor device in a rank or based on a value stored in the mode registers . The mode registers may include a respective bit for each semiconductor device in the ranks and . This bit is asserted e.g. set to a first value such as 1 or alternately 0 when the buffer for a semiconductor device is enabled in preparation for hot swapping and is de asserted e.g. reset to a second value such as 0 or alternately 1 once the semiconductor device has been replaced and the corresponding buffer disabled. The ECC module will write back a corrected symbol to a semiconductor device for a first mode in which the respective bit is de asserted and will suppress writing back the corrected symbol to the semiconductor device for a second mode in which the respective bit is asserted.

In some embodiments the memory controller includes error tracking registers that track error counts for semiconductor devices in the ranks and . For example the error tracking registers may include a counter for each semiconductor device in the ranks and . When the ECC module detects an error in a symbol received from a semiconductor device the corresponding counter is incremented. A semiconductor device may be selected for replacement if its error count satisfies e.g. equals or exceeds a threshold.

The software may include instructions to track the error counts e.g. by polling the error tracking registers or by maintaining the error counts in software to determine whether an error count for a respective semiconductor device satisfies the threshold and or to select the respective semiconductor device for replacement based on a determination that its error count satisfies the threshold. The software may also include instructions to electrically isolate the respective semiconductor device e.g. in response to the determination that its error count satisfies the threshold for example by enabling the corresponding buffer as well as instructions to disable the buffer for a newly installed semiconductor device .

The software may further include instructions to specify a first mode in which the ECC module provides corrected data to a specified semiconductor device in response to an error in data from the specified semiconductor device and instructions to specify a second mode in which the ECC module suppresses providing corrected data to the specified semiconductor device once the specified semiconductor device has been electrically isolated. The instructions to specify the second mode and the first mode may include respectively instructions to set and reset a bit for the specified semiconductor device in the mode registers .

The software may additionally include instructions to perform operations referencing data stored in the ranks and including operations to be performed after a semiconductor device has been electrically isolated to allow for its removal from the rank or and before the semiconductor device has been replaced e.g. while the semiconductor device is being replaced .

In some embodiments each of the replaceable units is situated in a socket mounted on a circuit board. The use of sockets allows for easy removal and replacement of the replaceable units .

An interconnect couples the replaceable units to a global scheduler and a global memory . The global scheduler assigns tasks to respective replaceable units thereby scheduling work performed in the system . The global memory may include main memory and non volatile memory . The non volatile memory includes a non transitory computer readable storage medium storing software which includes one or more programs with instructions configured for execution by the compute units through .

The global scheduler includes an ECC module that functions by analogy to the ECC module . For example the ECC module implements a burst error correcting code e.g. a Reed Solomon code . In this example the replaceable units store code words with embedded memory in each replaceable unit storing a respective symbol of each code word. The ECC module generates the code words to be written to the replaceable units and detects and corrects errors in code words read from the replaceable units . In one example the replaceable units include 16 units that store data symbols and two units that store check symbols. Such an ECC scheme allows correct data to be recovered when one of the replaceable units has been removed or electrically isolated in preparation for removal e.g. assuming no errors from other replaceable units . In some embodiments code words may be re encoded with a more robust ECC scheme before a replaceable unit is removed e.g. by analogy to the ECC scheme described with respect to . Additional check symbols used for the more robust ECC scheme may be stored for example in the main memory .

The replaceable units are thus an example of a group of semiconductor devices that uses ECC for continued operation during hot swapping of a semiconductor device in the group.

The ECC module may include mode registers which function by analogy to the mode registers . When the ECC module detects and corrects an error it may write a corrected symbol back to a replaceable unit or suppress writing a corrected symbol back to the replaceable unit depending on whether a corresponding bit in the mode registers is asserted.

The global scheduler may include error tracking registers which function by analogy to the error tracking registers . A replaceable unit may be selected for replacement when its error count as recorded in the error tracking registers satisfies a threshold.

In some embodiments a code word is generated using a first ECC scheme that can correct an error resulting from a single incorrect symbol of the code word. For example the first ECC scheme is a burst ECC scheme as described with respect to . The code word is generated by applying the first ECC scheme to a data word. The code word is stored in a group of semiconductor devices e.g. with each semiconductor device in the group storing a respective symbol of the code word . For example the code word is stored in a rank or of semiconductor devices or in a group of replaceable units .

In some embodiments the group of semiconductor devices includes a first set of semiconductor devices and a second set of semiconductor devices. Each semiconductor device of the first set stores a respective data symbol of the code word e.g. as shown for data symbols D D in . Each semiconductor device of the second set stores a respective check symbol of the code word e.g. as shown for check symbols ECC and ECC in . Each of the data symbols and check symbols includes multiple bits e.g. four bits .

The code word is optionally re encoded using a second ECC scheme e.g. a burst ECC scheme as described with respect to that can correct an error resulting from multiple e.g. two incorrect symbols of the code word. In some embodiments re encoding the code word includes generating additional check symbols for the code word e.g. check symbols ECC and ECC .

The re encoded code word is stored in semiconductor devices that include at least the group of semiconductor devices. For example respective symbols of the re encoded code word are stored in the semiconductor devices of the rank and two semiconductor devices of the rank . In another example respective symbols of the re encoded code word may be stored in the replaceable units and the main memory . The additional check symbols may be stored in one or more semiconductor devices outside of the group e.g. in the two semiconductor devices of the rank or in the main memory .

In some embodiments the code word is initially generated using the second ECC scheme. In some embodiments the code word is initially generated using the first ECC scheme and is not re encoded.

A first semiconductor device of the group is electrically isolated and disabled . In some embodiments the first semiconductor device includes or is coupled to a buffer circuit or which is enabled to electrically isolate the first semiconductor device. In some embodiments before the first semiconductor device is electrically isolated and disabled a determination is made that a failure level satisfies a threshold. This determination is made for example based on an error count for the first semiconductor device as stored in an error tracking register or or as stored in software. The first semiconductor device may be electrically isolated and disabled in response to this determination.

With the first semiconductor device removed or isolated and or disabled in preparation for being removed a memory read operation directed at the group is performed . For example the memory read operation reads the code word.

Based on ECC an error is detected in data for the memory read operation e.g. in the code word . The error is caused at least in part by the first semiconductor device having been removed or electrically isolated . The error is detected for example by an ECC module or .

ECC is used to determine corrected data for the memory read operation. The corrected data are determined for example by the ECC module or . In some embodiments the corrected data include a symbol corresponding to the first semiconductor device.

In some embodiments a write operation to provide the symbol to the first semiconductor device is suppressed while the first semiconductor device is removed or when the first semiconductor device has been electrically isolated and disabled in preparation for being removed . The decision to suppress the write operation may be based for example on assertion of a bit corresponding to the first semiconductor device in a mode register or .

A second semiconductor device e.g. a semiconductor device such as a replaceable unit is installed to replace the first semiconductor device.

In some embodiments with the second semiconductor device installed a plurality of memory read operations is performed directed at the group of semiconductor devices. Based on ECC errors in data e.g. in code words for respective memory read operations of the plurality of memory read operations are detected . The errors result at least in part from data e.g. respective symbols that had been stored in the first semiconductor device not being stored in the second semiconductor device. ECC is used to determine corrected data. The corrected data include the data e.g. the respective symbols that had been stored in the first semiconductor device but are not stored in the second semiconductor device. The data e.g. the respective symbols that had been stored in the first semiconductor device as obtained from the corrected data are written to the second semiconductor device in response to the errors. In this manner data are stored to the second semiconductor device over time instead of in an initial batch of writes that might be performed when the second semiconductor device is first installed thereby avoiding the performance penalty that would result from performing the initial batch of writes.

While the method includes a number of operations that appear to occur in a specific order it should be apparent that the method can include more or fewer operations. Two or more operations may be combined into a single operation and performance of two or more operations may overlap.

In some embodiments the software and or includes one or more programs with instructions that when executed result in performance of all or a portion of the method .

The foregoing description for purpose of explanation has been described with reference to specific embodiments. However the illustrative discussions above are not intended to be exhaustive or to limit all embodiments to the precise forms disclosed. Many modifications and variations are possible in view of the above teachings. The disclosed embodiments were chosen and described to best explain the underlying principles and their practical applications to thereby enable others skilled in the art to best implement various embodiments with various modifications as are suited to the particular use contemplated.

