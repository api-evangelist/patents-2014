---

title: End-to end route tracing over a named-data network
abstract: A route-tracing application can measure the performance of a path in a named-data network using trace agents deployed across various network nodes. During operation, a network node can process a route-tracing Interest by performing a lookup operation in a forwarding information base (FIB) using the Interest's name, in which a respective FIB entry may map the name to a forwarding rule. If the FIB does not include an entry for the Interest's route-tracing name, a trace agent at the network node determines one or more outbound interfaces for the route-tracing operation based on the Interest's name, and creates new route-tracing FIB entries that each maps the Interest's name to a forwarding rule for the determined interfaces. The network node returns a Content Object that satisfies the Interest, in which the Content Object includes the names of the new FIB entries, as well as performance information for the path.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09374304&OS=09374304&RS=09374304
owner: PALO ALTO RESEARCH CENTER INCORPORATED
number: 09374304
owner_city: Palo Alto
owner_country: US
publication_date: 20140124
---
The present disclosure generally relates to analyzing a network path of a computer network. More specifically the present disclosure relates to a method and apparatus for measuring the performance of a path in a named data network NDN .

Internet Protocol IP networks use a tool called traceroute to gather information about the paths taken by packets when traversing a network. During traceroute a source node can send an echo request packet across a network toward a destination address and receives an echo reply message from network nodes along a path toward the destination e.g. router .

Traceroute exploits a time to live TTL field on the packet to specify a maximum number of hops for the packet s path which the traceroute tool uses to measure transit delays. At each hop toward the destination node the packet arrives at a new node that decreases the TTL before forwarding the packet. When a packet reaches a TTL of 0 at a node the node creates and returns an error packet that informs the source node that there is an error with the packet.

The traceroute application exploits error packets from a path s nodes to generate a trace of the path. In a first iteration the traceroute application sends a packet to a destination node with a TTL of 1 to obtain an error packet from the first hop node. Traceroute can determine which node corresponds to the first hop from the return message. Traceroute then repeats the process increasing the TTL value by 1 for each iteration. After N iterations for a path of length N traceroute receives a reply from nodes at each hop along the path and analyzes these replies to generate a trace of the path.

Unfortunately the trace route technique does not work in computer networks where a packet does not include a TTL field such as in a content centric network CCN or a named data network NDN . In CCN a network node can request content by disseminating an Interest packet that includes a name for the requested content. Other nodes can either forward the Interest based on the content s name or can return a Content Object that includes the requested content to satisfy the Interest.

One embodiment of the present invention provides a system for measuring the performance of a path in a named data network. During operation a source node can disseminate a route tracing Interest to determine information for paths to a content producer associated with a given piece of data. A network node that receives the Interest can determine whether the Interest s name is associated with a namespace not provided by the network node. If the Interest s name is not provided by the network node the network node can determine one or more outbound interfaces for the route tracing operation based on the Interest s name and creates one or more new forwarding information base FIB entries for the outbound interfaces. A FIB entry can map the Interest s name to a forwarding rule that includes a corresponding outbound interface. Subsequently the network node returns a Content Object that satisfies the Interest and that includes at least the names of the new FIB entries.

In one variation on this embodiment the system determines trace information for the local network node. The trace information can include a timestamp a total transit time for the path an average reply time for Interests issued by a node under a namespace a transit time to each neighbor and a set of links to neighboring nodes. The trace information can also include a number of content objects cached under a traced prefix names for the cached content objects an amount of free space or churn congestion information power status information location information a node identifier and a number of pending Interests for the namespace.

In a further variation the network node generates the Content Object to also include the trace information.

In a further variation the network node receives a second Interest that includes a name associated with a second route tracing operation. If the local network node determines that the second Interest s name corresponds to a namespace that is provided by the local network node the network node generates a second Content Object that includes at least trace information associated with the second route tracing operation. The network node can then return the second Content Object to satisfy the second Interest.

In a further variation if the network node determines that an outbound interface exists for the second route tracing operation based on the second Interest s name the network node can create a forwarding information base FIB entry for the outbound interface. Hence by creating the FIB entry the network node creates a path that punches through to a neighboring node associated with the namespace. The network node can also create the second Content Object to include a name for the new FIB entry which allows the network node to return both the trace information from the local network node as well as information on outbound interfaces to one or more neighboring nodes associated with the namespace.

In a further variation determining that the Interest s name is associated with a route tracing operation involves determining that a component of the Interest s name matches a predetermined name for a route tracing operation or application.

In one variation on this embodiment creating the new FIB entry involves determining an interface identifier for the outbound interface. The network node generates a trace name that includes the Interest s name and the interface identifier. The network node then creates the FIB entry to map the trace name to the forwarding rule that includes the outbound interface.

In one variation on this embodiment the network node removes a FIB entry after determining that a corresponding timeout period has been reached after detecting that a corresponding route tracing operation has completed or after receiving from a trace program a message that includes instructions to remove the FIB entry.

In one variation on this embodiment the name includes a set of one or more name components. Each name component indicates one or more of a traceroute application for processing the Interest a name for a piece of data for which to perform the route tracing operation an outgoing interface for one or more nodes along a path and a forwarding rule to enter into the FIB.

In one variation on this embodiment determining whether the Interest s name is associated with a namespace provided by the network node involves performing a lookup operation in the FIB using the Interest s name in which a respective FIB entry maps a name to a forwarding rule.

The following description is presented to enable any person skilled in the art to make and use the invention and is provided in the context of a particular application and its requirements. Various modifications to the disclosed embodiments will be readily apparent to those skilled in the art and the general principles defined herein may be applied to other embodiments and applications without departing from the spirit and scope of the present invention. Thus the present invention is not limited to the embodiments shown but is to be accorded the widest scope consistent with the principles and features disclosed herein.

The data structures and code described in this detailed description are typically stored on a computer readable storage medium which may be any device or medium that can store code and or data for use by a computer system. The computer readable storage medium includes but is not limited to volatile memory non volatile memory magnetic and optical storage devices such as disk drives magnetic tape CDs compact discs DVDs digital versatile discs or digital video discs or other media capable of storing computer readable media now known or later developed.

Embodiments of the present invention solve the problem of measuring the correct forwarding performance of network nodes in a content centric network CCN . For example the CCN nodes can include a trace agent application that adds forwarding rule entries to FIBs of nodes that form part of the path. These entries allow Interests to directly flow through nodes during subsequent path traversals thereby avoiding unnecessary processing by the trace agents at the nodes and any associated delays as the Interests head toward their destination node.

A trace program can determine a performance of a path toward a network node that can satisfy a given Interest by disseminating a path tracing Interest to this destination node. However a typical trace program may send an Interest that flows from one trace agent to another along a path of intermediate nodes toward the destination node. Using the trace agent to process the Interest at intermediate nodes adds to each node s overall forwarding time which makes it difficult to measure the correct forwarding performance of the nodes along the path. This results in an inaccurate propagation delay that not only includes the time to forward the Interest toward the destination node but also includes the amount of time each intermediate node consumed to process the Interest at the trace agent.

To solve this problem when an Interest arrives at an intermediate node the node directly forwards the Interest to the next node if a rule entry exists in the FIB for forwarding the Interest. This avoids unnecessary overhead due to trace agent processing. On the other hand if the FIB does not include a rule entry for forwarding the Interest then the node forwards the Interest to a trace agent running on the local node that creates the FIB entry.

The trace agent can create one or more forwarding rule entries for reaching neighboring nodes and adds them to the local FIB. The trace agent also generates a Content Object for the source trace program and returns the Content Object to satisfy the Interest. The Content Object can include the FIB entry name and trace information from the local node. After receiving a reply from a node the trace program at the source node can generate a new Interest with the FIB entry name. The new Interest allows the trace program to perform a trace that reaches an additional node along the path.

When the new Interest arrives at the same intermediate described above node the node s trace agent will not need to perform any additional processing on the Interest as there will be an entry in the FIB that the forwarding node can use to forward the Interest. This allows the Interest to propagate toward the destination node without incurring additional processing overhead at each intermediate node.

In some embodiments the trace program at the source node can trace a path toward a content producer associated with a given name by adding a path tracing prefix to the name and creating a path tracing Interest that includes the modified name. For example the prefix can be trace agent . Trace agents can register themselves as a default destination for the namespace trace agent . If an incoming Interest has the prefix trace agent Interface2 but the FIB does not include a forwarding rule entry for this prefix then the network node may forward the Interest to the local trace agent e.g. based on the prefix trace agent . The trace agent adds new forwarding rule entries to the local FIB.

After the trace program at the source node receives the reply from each network node along the path the trace program may compute the correct forwarding performance of these nodes. For example the network path can include a source node A that includes the trace program intermediate nodes B and C and a destination node D. When node C sends the reply to node A the trace program may compute the correct forwarding performance of node B based on the time required for an Interest packet to arrive at node C. Also when node D sends a reply to node A the trace program may also compute the correct forwarding performance for nodes B and C together. The trace program can derive the performance for node C based on the known performance for node B.

The examples hereinafter describe using a path tracing prefix to escape normal CCN operation and trigger the path tracing operations e.g. the prefix trace agent without interrupting the flow of regular traffic through the nodes. However in some embodiments alternative path tracing indicators are possible such as by adding a path tracing suffix to a Content Object s name e.g. . . . trace .

In a CCN communication is driven by the consumers of data. The CCN architecture provides two packet types an Interest packet and a Content Object e.g. data packet. An Interest packet also called a query is a request for some content. An Interest packet encodes a special form of query that expresses what content is desired and what content is not desired. A Content Object packet includes a unit of content. Content Object packets are self identifying by carrying within them their full name. A consumer asks for content by broadcasting its Interest over the content centric network and any recipient of the Interest that can satisfy the Interest can respond with a Content object. Content Objects are transmitted only in response to an Interest and consumes that Interest. Both Interest and Content objects identify the content being exchanged by the content name or CCN name . In one embodiment a Content Object can satisfy an Interest if the CCN name in the Interest packet is a prefix of the CCN name in the data packet. The following terms describe elements of a named data network NDN architecture such as a content centric network CCN 

Content Object A single piece of named data which is bound to a unique name. Content Objects are persistent which means that a Content Object can move around within a computing device or across different computing devices but does not change. If any component of the Content Object changes the entity that made the change creates a new Content Object that includes the updated content and binds the new Content Object to a new unique name.

Name A name in an NDN is typically location independent and uniquely identifies a Content Object. A data forwarding device can use the name or name prefix to forward an Interest packet toward a network node that generates or stores the Content Object regardless of a network address or physical location for the Content Object. In some embodiments the name may be a hierarchically structured variable length identifier HSVLI . The HSVLI can be divided into several hierarchical components which can be structured in various ways. For example the individual name components parc home ndn and test.txt can be structured in a left oriented prefix major fashion to form the name parc home ndn test.txt. Thus the name parc home ndn can be a parent or prefix of parc home ndn test.txt. Additional components can be used to distinguish between different versions of the content item such as a collaborative document.

In some embodiments the name can include a non hierarchical identifier such as a hash value that is derived from the Content Object s data e.g. a checksum value and or from elements of the Content Object s name. A description of a hash based name is described in U.S. patent application Ser. No. 13 847 814 entitled ORDERED ELEMENT NAMING FOR NAME BASED PACKET FORWARDING by inventor Ignacio Solis filed 20 Mar. 2013 which is hereby incorporated by reference. A name can also be a flat label. Hereinafter name is used to refer to any name for a piece of data in a name data network such as a hierarchical name or name prefix a flat name a fixed length name an arbitrary length name or a label e.g. a Multiprotocol Label Switching MPLS label .

Interest A packet that indicates a request for a piece of data and includes a name or a name prefix for the piece of data. A data consumer can disseminate a request or Interest across an information centric network which NDN routers can propagate toward a storage device e.g. a cache server or a data producer that can provide the requested data to satisfy the request or Interest.

In some embodiments the NDN system can include a content centric networking CCN architecture. However the methods disclosed herein are also applicable to other NDN or other information centric network ICN architectures as well. A description of a CCN architecture is described in U.S. patent application Ser. No. 12 338 175 entitled CONTROLLING THE SPREAD OF INTERESTS AND CONTENT IN A CONTENT CENTRIC NETWORK by inventors Van L. Jacobson and Diana K. Smetters filed 18 Dec. 2008 which is hereby incorporated by reference.

In addition each device may have a trace agent a trace program a FIB and a forwarder among other components. An example of the components is illustrated for media server including a trace agent a trace program a FIB and a forwarder . Trace program submits Interests to the network in order to request content stored on nodes of the CCN. Trace agent facilitates path tracing and measuring the forwarding performance of nodes. FIB is a forwarding table. The forwarding table contains information for a node to determine to which neighbor node or nodes an Interest should be sent. Forwarder forwards Interests and or packets on the network. The interaction between a trace program and trace agents located on a trace path is discussed with respect to and further details are provided with the descriptions accompanying and .

In some implementations a trace agent can register itself as a default destination for the namespace trace agent . If an incoming Interest has the prefix trace agent but the FIB does not include a forwarding rule entry for the Interest s full name e.g. trace agent Interface2 then the network node may forward the Interest to the local trace agent to create the necessary FIB entries.

The trace agent then generates a Content Object that contains the names of the forwarding rule entries in the FIB as well as other trace information and returns the Content Object to the trace program. The trace program generates a new Interest with the names of the forwarding rule entries and sends the new Interest to the CCN. The forwarding rule entries allow the new Interest to flow directly through the node without processing by the trace agent thereby facilitating correct forwarding performance measurements.

In each of nodes A G includes a trace agent that has registered itself as a default destination for the namespace trace agent . Node A includes a trace program that initiates the route tracing process and node G serves as the destination node for the route tracing process. When the trace agent at an intermediate node receives an Interest in the namespace the trace agent processes the Interest and adds a FIB entry to an associated FIB. For example a trace agent running at node A may create a FIB entry that points to the interface AB and returns a Content Object with the FIB entry name to trace program at node A.

After receiving the Content Object the trace program generates a new Interest with the FIB entry name and sends Interest to node B. The steps performed between the trace program and each of the individual nodes are discussed in greater detail with respect to . Node B also performs steps illustrated in to add a FIB entry to its FIB and returns a Content Object with a FIB entry name to trace program.

The trace program can then generate and disseminates another Interest for the received FIB entry name which is propagated to node C. Interest flows through node B without the additional overhead of agent processing. Node C performs steps illustrated in to add a FIB entry to its FIB and returns a Content Object with a FIB entry name for the trace program. Hence the trace program can now compute the correct forwarding performance of node B without the computation being affected by the overhead of the trace agent processing at node B.

After iteratively sending Interests for nodes D E and F the trace program computes correct forwarding performance for each of nodes F E and D without the overhead of the trace agent. Trace program then generates and sends another Interest toward the destination node G and node G receives Interest over the network. Node G may respond with a Content Object that satisfies Interest and also includes trace information for node A. The trace program at node A can compute the correct forwarding performance of nodes F E D C and B without the overhead of trace agent processing at intermediate nodes influencing the computation results.

At each node a trace agent appends the trace name to include the id component of the next hop. At the end of the trace process the final Interest includes all the nodes ids links as name components. Note that this type of tracing can also be adapted to other networks that are not content based or name based.

At every step in the process each hop in the network also returns trace information to node A. This trace information can include the time it took for the Interest to reach the trace agent and the name and number of Content Objects cached under the traced prefix. The information can include various items related to the namespace like the average reply times for Interests issued by that node under that namespace or the number of pending Interests for that namespace. The trace information can also include information that is specific to that node but not to the namespace such as a set of links of the node an amount of free space or churn a congestion a power status a location a node identifier ID etc. The trace program can present the path information in various ways. For example the trace program can present the trace result as a set of node identifiers. Alternatively the trace program can display a set of interface or face identifiers. The term face hereinafter refers to an interface or a virtual interface.

The trace program initially sends an Interest to the trace agent. The trace agent extracts a name determines the next node for forwarding generates a FIB entry and adds the entry to a FIB. The trace agent then generates a Content Object that includes the FIB entry name and trace information and sends the Content Object to trace program. The trace program generates and submits to the network a new Interest with the FIB entry name. A similar process is repeated with each trace agent located at each intermediate node of the trace path as the Interests propagate along the trace path.

As depicted in the trace program initially generates and disseminates a traceroute Interest operation . The generated Interest includes a prefix trace agent and the name being traced. For example if the trace program wants to trace company path content object then the trace program generates a traceroute Interest for the requested content with name trace agent company path content object. The trace program disseminates the traceroute Interest to a trace agent. Initially the trace program sends an Interest to the trace agent located on the same node e.g. source node A as the trace program. The nodes along the path being traced propagate subsequent Interests to the destination node.

The trace program can receive a Content Object for an Interest operation and determines whether the Content Object is from a destination node operation . The Content Object from the destination node can include trace information and the requested content. If the Content Object is from the destination node the trace program does not generate another Interest. The previous Interest has already reached the destination node and path measurements are complete.

If the Content Object is not from the destination node the trace program selects a FIB entry of the end node using the Content Object operation . The trace program may extract a FIB entry name from the Content Object and also generates and disseminates another traceroute Interest operation . The trace program may generate the Interest based on one or more FIB entry names in the Content Object. In some implementations if there are multiple FIB entry names the trace program may generate an Interest by choosing one of the FIB entry names that forwards to a single next hop. If there is only a single FIB entry the trace program generates an Interest for that FIB entry. For example trace program may generate an Interest for a FIB entry name 

 trace agent company path content object id AB id BC . The process then continues with the trace program receiving another Content Object from the next node in the trace path.

The trace program may generate a new Interest e.g. company path content object for every hop in the path from the originating node of the trace up to the destination node. Also the trace program may repeat operations to until an Interest arrives at a destination node that stores the content that may satisfy the Interest. Note that the Interest is forwarded toward the destination node based on the same type of rules and consuming the same amount of time as a non traceroute Interest.

As depicted in the node initially receives an Interest operation . The node determines if the Interest s name corresponds to the local network node operation . If the Interest s name corresponds to the local network node the node replies to the Interest with the requested content operation . The node can generate a Content Object with trace information and the requested content and then return the Content Object. The trace information can include a list of neighboring nodes a time delay a timestamp a transit time to each neighbor and other information.

In some embodiments the node can also generate and return a Content Object that includes information about new FIB entries. For example if the node determines that an outbound interface exists to a neighboring node that can provide content for a namespace specified in the Interest the network node can create a forwarding information base FIB entry for the outbound interface. Hence by creating the FIB entry the local node creates a path that punches through to a neighboring node that can also reply with additional content for the namespace. The local node can create the Content Object to include trace information from the local node as well as include information on the new FIB entry to the neighboring node that can also provide content for the Interest s namespace.

If the Interest s name does not correspond to the local network node then the node determines whether there is an existing FIB entry forwarding rule associated with the name of the Interest operation . If there is an existing FIB entry then the node forwards the Interest to the next node in the path operation . For example if the Interest arrives with a name of trace agent company path content object id AB id BC and the name is in the local FIB then node A forwards the Interest to node B via the interface identified by id AB . Note that in this scenario the trace agent is not involved in processing the Interest. Operations and can be performed by a forwarder although different implementations may vary in the details. By bypassing the trace agent if there is already a forwarding rule entry in the FIB there is no delay at the node due to agent processing.

On the other hand if the FIB does not include a matching entry the node sends the Interest to the trace agent at the node operation . The trace agent extracts the name being traced e.g. company path content object and determines the next node to forward the Interest to operation . The trace agent may reference the FIB to determine to which node it should forward an Interest with this name. An example of a FIB for node C is depicted in and . In the present example the Interest should be forwarded to node B and the link from node A to node B is represented as AB.

The trace agent generates a new FIB entry and adds the FIB entry to the FIB operation . The trace agent may determine an interface identifier for an outbound interface which corresponds to the next node in the trace path. For example the trace agent can generate a trace name that includes the Interest s name and the interface identifier create an id component for the interface and append the id component to the trace name. The trace agent then creates the FIB entry to map the trace name to a forwarding rule that includes the outbound interface and adds the FIB entry to the FIB.

For example a trace agent at a node B may add trace agent company path content object id AB id BC as a FIB entry to the FIB and sets the FIB entry to point to the interface BC. In some implementations the trace agent may set the FIB entry to point to the next hop. By adding the FIB entry to the FIB the next time that an Interest with a name of trace agent company path content object id AB id BC arrives the forwarder at node B will automatically forward the Interest to node C without using the trace agent to process the Interest.

In some embodiments the trace agent can generate and create multiple FIB entries and or can create a FIB entry whose forwarding rule includes multiple outbound interfaces. These multiple FIB entries and or multiple outbound interfaces allow a trace to propagate via a tree pattern rather than via a single path.

The trace agent then assembles a response for the trace program and generates a Content Object that includes this response operation . This Content Object contains trace information as well as the information needed to continue to the next hop in the path. The Content Object may include the name of the FIB entry generated such as 

 trace agent company path content object id AB id BC id CD . For example the trace agent may generate a Content Object with the name trace agent company path content object which corresponds to the name of the Interest requesting content. The trace agent may then return the Content Object to satisfy the Interest operation .

In some embodiments a node may have multiple forwarding entries for a namespace. Hence the trace agent may add multiple entries to the FIB. One FIB entry may include a rule that forwards the Interest to one node e.g. node B and another entry may include a rule that forwards the Interest to another node e.g. node C . Moreover a FIB entry may include a rule that forwards the Interest to more than one node e.g. to node B and node C or to multiple alternative nodes e.g. to node B or node C . The trace agent can generate a Content Object that includes these multiple forwarding entries that the trace program at the source node can use to generate another Interest. The type and number of entries may depend on parameter settings at the intermediate node and may vary according to different forwarding strategies and implementations. The trace program running at the originating node e.g. trace program can decide which forwarding rules to follow or simply terminate the trace.

In some implementations the trace program may run multiple times so that the differences between the replies on each run yield more information. This information may include for example the rate of change or the number of Interests that arrive for a certain namespace during the time between trace program executions.

The trace agents may remove the tracing FIB entries after a predetermined timeout period or the FIB entries may be associated with an automatic timeout value . In some implementations a trace agent can detect when the trace operation has finished and can immediately remove the tracing FIB entries at that point. For example trace program may send a final message round possibly in reverse that removes all the tracing FIB entries at the intermediate nodes.

Some implementations may also allow for establishing persistent paths. The FIB entries can remain in the FIB after a path has been established and the trace program at the source node can monitor the path over time and at any time. If the path s FIB entries expire the trace program can subsequently reestablish the same path at any time. Alternatively trace agents within nodes along the path can periodically update the FIB entries to re establish the trace path. The path information can be stored in the FIB or at the trace agent. The trace program can send messages to trigger trace agents to set up a previously stored node state associated with a path which can be convenient to re establish an optimal path. In some implementations the trace program can also propagate the path information in compressed form in a packet to re create the path.

In some implementations the system can skip some nodes that may not have a trace agent running. For example node A and node C may be hubs or nodes before hubs that have agents running but node B may be a third party device that does not have an agent running. Hence a trace program at node A can generate a route tracing Interest that can skip route tracing operations at node B. This can be achieved by pre populating FIB entries in node B or by establishing a tunnel through node B.

Alternatively a trace agent may monitor an Interest s complete name to search for trace queries rather than monitoring the prefix alone. For example the tracing program may send an Interest with a name that ends with a suffix trace e.g. company path content object trace . When a matching name is detected the trace agent may add a forwarding entry for the next node to the FIB e.g. company path content object trace id AB . This allows a node to forward the trace packet as usual when the node is not running a trace agent and allows a node that is running the trace agent to return the requested trace information. The trace program can also avoid modifying the name prefix by using other techniques to indicate the name is being traced. For example the packet encoding may allow for tracing a packet e.g. via some flag or via some DTAG value or other TLV value .

In some implementations a node may also fork a trace agent process only upon receiving an Interest with a predetermined prefix. The trace agent may be associated with a traceability flag indicating that the trace agent is traceable. One can then trace the path of the Interest from the trace agent s node to the originating node and obtain the performance measurements only between the originating node and the node with the trace agent. An Interest can also include a report route flag and as each forwarder receives the Interest and detects this flag the forwarder adds a node identifier to the Interest before forwarding the Interest to the next hop node. When a node receives and processes the Interest at a trace agent the trace agent can obtain a record of the trace path from the Interest and can add this trace path to the Content Object to return to the trace program at the source node.

In some embodiments a forwarder can add information to an Interest by appending the information to the Interest s name. This information can include for example node identifiers link identifiers transmit times query parameters etc. Also the identifiers used to describe links can be global persistent identifiers local persistent identifiers or ephemeral identifiers. The trace agent can decide on the type of identifier to return in the Content Object.

 trace agent company path content object id AB id BC the local trace agent determines that a next hop node D can satisfy an Interest for trace agent company path content object and creates a FIB entry for 

 trace agent company path content object id AB id BC id CD . Both FIB entries company path content object and trace agent company path content object id AB id BC id CD are mapped to an interface CD for node D. When a future Interest arrives at node C with a name or name prefix 

 trace agent company path content object id AB id BC id CD the node will directly forward the Interest to node D based on the FIB entry.

In a computer and communication system includes a processor a memory and a storage device . Storage device stores programs to be executed by processor . Specifically storage device stores a trace agent a trace program a forwarder a FIB as well as other applications such as applications and . During operation trace agent forwarder FIB and optionally trace program are loaded from storage device into memory and then executed by processor . While executing the program processor performs the aforementioned functions. Computer and communication system is coupled to an optional display keyboard and pointing device .

The methods and processes described in the detailed description section can be embodied as code and or data which can be stored in a computer readable storage medium as described above. When a computer system reads and executes the code and or data stored on the computer readable storage medium the computer system performs the methods and processes embodied as data structures and code and stored within the computer readable storage medium.

Furthermore the methods and processes described below can be included in hardware modules. For example the hardware modules can include but are not limited to application specific integrated circuit ASIC chips field programmable gate arrays FPGAs and other programmable logic devices now known or later developed. When the hardware modules are activated the hardware modules perform the methods and processes included within the hardware modules.

The foregoing descriptions of embodiments of the present invention have been presented for purposes of illustration and description only. They are not intended to be exhaustive or to limit the present invention to the forms disclosed. Accordingly many modifications and variations will be apparent to practitioners skilled in the art. Additionally the above disclosure is not intended to limit the present invention. The scope of the present invention is defined by the appended claims.

