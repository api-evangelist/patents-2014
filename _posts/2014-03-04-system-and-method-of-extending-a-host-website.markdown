---

title: System and method of extending a host website
abstract: Some embodiments of the present disclosure provide a system for providing access control. The system may include an extension module for extending a host website; and a marketplace server that is configured to: receive a request to access the extension module from a browsing device, the browsing device is for maintaining a browsing session with the host website, and the extension module is for exchanging data with the host website; generate a first authorization token that is associated with the browsing session; and send, to the browsing device, the first authorization token. The extension module may be configured to receive a second authorization token from the browsing device. One of the extension module or the marketplace server may then be further configured to: verify that the second authorization token matches the first authorization token; and if verification is successful, the extension module can be allowed to exchange data with the host website and communicate with the browsing device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09210155&OS=09210155&RS=09210155
owner: Stocktree Inc.
number: 09210155
owner_city: Toronto
owner_country: CA
publication_date: 20140304
---
This application claims the benefit of U.S. Provisional Application No. 61 774 908 filed on Mar. 8 2013 the entire contents of which is incorporated herein by reference.

The described embodiments are generally directed to websites and in particular systems and methods of extending a host website.

Host websites provide information and functionality to computing devices having a web browser application. The information and functionality is typically provided in the form of a series of web pages hosted on a web server that is accessible via a network.

Conventionally the content and functionality of a host website are created by the organization providing the host website. If it is desired for the host website to have additional content and or functionality the organization hosting the website would typically be required to undertake a time consuming and expensive task of creating the additional content and or functionality itself.

For example if the host website were a financial news website that provided stock price information and it was desired for the host website to have a new software tool to provides advanced stock price analysis the organization would typically have to hire software developers to create the new software tool. This would create costs for the organization. As well it would create delays for the host website because the software tool cannot be deployed until the software tool is created.

Some host websites address this shortcoming by providing a web platform that allows third party software developers to provide functionality for their host website. Such web platforms however may themselves be difficult time consuming and expensive to implement.

In a first aspect some embodiments of the present disclosure provide a method of providing access control. The method may include receiving a request to access an extension module from a browsing device the browsing device is for maintaining a browsing session with a host website and the extension module is for extending the host website by exchanging data with the host website generating a first authorization token that is associated with the browsing session sending to the browsing device the first authorization token receiving at the extension module a second authorization token from the browsing device verifying that the second authorization token matches the first authorization token and if verification is successful allowing the extension module to exchange data with the host website and communicate with the browsing device.

In various embodiments the method may include sending the first authorization token to the extension module so that the verifying can be performed by the extension module. In various embodiments the method may include receiving the second authorization token from the extension module and then performing the verifying.

When sending the first authorization token to the browsing device in various embodiments the method may further include sending to the browsing device a resource locator for the extension module.

In various embodiments the request to access the extension module is received from the browsing device via the host website and the host website acts as a proxy for the browsing device. In a similar vein the first authorization token can be sent to the browsing device via the host website.

In various embodiments the data exchanged between the extension module and the host website includes data associated with the browsing session. In various embodiments the browsing session may be an authenticated session and a user identifier may be used by the host website to authenticate the browsing device. In various embodiments this user identifier may be sent to the extension module and the extension module may use the user identifier to gain access to the data. In various embodiments the data may actually be associated with the user identifier.

In various embodiments the host website provides personal finance information and the data to be exchanged includes a portfolio a watchlist a list of debit transactions a list of credit transactions loan information asset information and a list of historical transactions.

In various embodiments the host website provides social media information and the data to be exchanged includes a name of a user an email address of a user a list of social media contacts and one or more messages sent using the social media website.

In various embodiments the host website provides news and opinion information and the data to be exchanged includes an article a headline a blog entry and a review.

In various embodiments the host website provides food information and the data to be exchanged includes an article a food recipe and a review.

In various embodiments the host website provides fitness information and the data to be exchanged includes an article a workout a blog entry and a review.

In various embodiments the host website provides travel information and the data to be exchanged includes an article a geographic location a blog entry and a review.

In various embodiments the host website provides movie and television information and the data to be exchanged includes an article information about a movie information about a television show information about an actor and a review.

In various embodiments the method may further include receiving from the extension module a request to access data from the host website determining if the extension module is authorized to access the requested data if the extension module is authorized to access the requested data generating a first data token associated with the browsing session and sending the first data token and a host website locator to the extension module so that the extension module can transmit the first data token to the host website when accessing the data. Moreover in various embodiments the method may then include receiving a second data token from the host website verifying that the second data token matches the first data token and if verification is successful sending a data descriptor for the data to the host website and upon receiving the data descriptor the host website transmits the data to the extension module.

In various embodiments the method may include receiving from the extension module a communication destined for the host website and relaying the communication to the host website. In some cases the communication may be a request to access data from the host website and the method may further include determining if the extension module is authorized to access the requested data and if the extension module is authorized to access the data relaying the request to the host website. The method may then further include receiving the requested data from the host website and transmitting the requested data to the extension module.

In some cases the communication from the host website may include connection data that allows the host website to establish a direct connection with the extension module.

In various embodiments the method may include receiving from the host website a communication destined for the extension module and relaying the request to the extension module. In some cases the communication may be a query for data from the extension module. In some cases the communication may be a query for data from all extension modules associated with the host website. In some cases the communication may include connection data that allows the extension module to establish a direct connection with the host website.

In a second aspect some embodiments of the present disclosure provide a computer readable medium storing instructions which when executed by a processor causes the processor to perform the methods described herein.

In a third aspect some embodiments of the present disclosure provide a system for providing access control. The system may include an extension module for extending a host website and a marketplace server comprising a processor and a memory storing instructions which when executed by the processor causes the processor to receive a request to access the extension module from a browsing device the browsing device is for maintaining a browsing session with the host website and the extension module is for exchanging data with the host website generate a first authorization token that is associated with the browsing session and send to the browsing device the first authorization token. The extension module may then be configured to receive a second authorization token from the browsing device. One of the extension module or the marketplace server may be further configured to verify that the second authorization token matches the first authorization token and if verification is successful allow the extension module to exchange data with the host website and communicate with the browsing device.

In various embodiments the marketplace server may be configured to send the first authorization token to the extension module so that the verifying can be performed by the extension module. In various embodiments the marketplace server may be configured to receive the second authorization token from the extension module so that it can perform the verifying itself.

When sending the first authorization token to the browsing device in various embodiments the marketplace server may be configured to send to the browsing device a resource locator for the extension module.

In various embodiments the request to access the extension module is received from the browsing device via the host website and the host website may act as a proxy for the browsing device. In a similar vein the first authorization token can be sent to the browsing device via the host website.

In various embodiments the data exchanged between the extension module and the host website includes data associated with the browsing session. In various embodiments the browsing session may be an authenticated session and a user identifier may be used by the host website to authenticate the browsing device. In various embodiments this user identifier may be sent to the extension module and the extension module may use the user identifier to gain access to the data. In various embodiments the data may actually be associated with the user identifier.

In various embodiments the host website provides personal finance information and the data to be exchanged includes a portfolio a watchlist a list of debit transactions a list of credit transactions loan information asset information and a list of historical transactions.

In various embodiments the host website provides social media information and the data to be exchanged includes a name of a user an email address of a user a list of social media contacts and one or more messages sent using the social media website.

In various embodiments the host website provides news and opinion information and the data to be exchanged includes an article a headline a blog entry and a review.

In various embodiments the host website provides food information and the data to be exchanged includes an article a food recipe and a review.

In various embodiments the host website provides fitness information and the data to be exchanged includes an article a workout a blog entry and a review.

In various embodiments the host website provides travel information and the data to be exchanged includes an article a geographic location a blog entry and a review.

In various embodiments the host website provides movie and television information and the data to be exchanged includes an article information about a movie information about a television show information about an actor and a review.

In various embodiments the marketplace server may be configured to receive from the extension module a request to access data from the host website determine if the extension module is authorized to access the requested data if the extension module is authorized to access the requested data generate a first data token associated with the browsing session and send the first data token and a host website locator to the extension module so that the extension module can transmit the first data token to the host website when accessing the data. Moreover in various embodiments the marketplace server may be configured to receive second data token from the host website verify that the second data token matches the first data token and if verification is successful send a data descriptor for the data to the host website so that upon receiving the data descriptor the host website transmits the data to the extension module.

In various embodiments the marketplace server may be configured to receive from the extension module a communication destined for the host website and relay the communication to the host website. In some cases the communication may be a request to access data from the host website and the marketplace server may be further configured to determine if the extension module is authorized to access the requested data and if the extension module is authorized to access the data relay the request to the host website. The marketplace server may then be configured to receive the requested data from the host website and transmit the requested data to the extension module.

In some cases the communication from the host website may include connection data that allows the host website to establish a direct connection with the extension module.

In various embodiments the marketplace server may be configured to receive from the host website a communication destined for the extension module and relay the request to the extension module. In some cases the communication may be a query for data from the extension module. In some cases the communication may be a query for data from all extension modules associated with the host website. In some cases the communication may include connection data that allows the extension module to establish a direct connection with the host website.

It will be appreciated that numerous specific details are set forth in order to provide a thorough understanding of the exemplary embodiments described herein. However it will be understood by those of ordinary skill in the art that the embodiments described herein may be practiced without these specific details. In other instances well known methods procedures and components have not been described in detail so as not to obscure the embodiments described herein. Furthermore this description is not to be considered as limiting the scope of the embodiments described herein in any way but rather as merely describing implementation of the various embodiments described herein.

The embodiments of the systems and methods described herein may be implemented in hardware or software or a combination of both. However these embodiments may be implemented in computer programs executing on programmable computers each computer including at least one processor a data storage system including volatile and non volatile memory and or storage elements and at least one communication interface. For example the programmable computers may be a server network appliance set top box embedded device computer expansion module personal computer laptop personal data assistant or mobile device. Program code is applied to input data to perform the functions described herein and to generate output information. The output information is applied to one or more output devices in known fashion. In some embodiments the communication interface may be a network communication interface. In embodiments in which elements of the invention are combined the communication interface may be a software communication interface such as those for inter process communication IPC . In still other embodiments there may be a combination of communication interfaces.

Each program may be implemented in a high level procedural or object oriented programming or scripting language or both to communicate with a computer system. However alternatively the programs may be implemented in assembly or machine language if desired. In any case the language may be a compiled or interpreted language. Each such computer program may be stored on a storage media or a device e.g. ROM or magnetic diskette readable by a general or special purpose programmable computer for configuring and operating the computer when the storage media or device is read by the computer to perform the procedures described herein. Embodiments of the system may also be considered to be implemented as a non transitory computer readable storage medium configured with a computer program where the storage medium so configured causes a computer to operate in a specific and predefined manner to perform the functions described herein.

Furthermore the system processes and methods of the described embodiments are capable of being distributed in a computer program product including a physical non transitory computer readable medium that bears computer usable instructions for one or more processors. The medium may be provided in various forms including one or more diskettes compact disks tapes chips magnetic and electronic storage media and the like. The computer useable instructions may also be in various forms including compiled and non compiled code.

From a high level perspective the present embodiments generally provide a standardized method of extending the functionality or content of a host website. By providing a centralized service that is able to catalogue the availability of and control access to extension modules for a number of different host websites the host websites may be able to benefit from the additional functionality content offered by the extension modules without implementing their own marketplace system.

Referring to shown there generally as is a block diagram of components of a system for extending a host website in accordance with an example embodiment. The system may include a browsing device a host website server a marketplace server and an extension module server .

The browsing device may be any computing device capable of executing a web browser application . As will be understood a web browser application may be a software application for viewing and interacting with information on the World Wide Web . The web browser application may be configured to communicate via web protocols such as Hypertext Transfer Protocol HTTP . As well the web browsing application may be configured to interpret information encoded using web technologies such as Hypertext Transfer Markup Language HTML Cascading Style Sheets CSS . JavaScript Extensible Markup Language XML .

Traditionally web browser applications have been configured to conform to the same origin policy. The same origin policy is a security policy that limits how a document or script loaded from one source e.g. a marketplace server can interact with resources from another source e.g. a host website server . For example when a web browser application that conforms to the same origin policy is executing a script from the host website server the web browser application may disallow a request from the marketplace server to access resources associated with the host website server .

Manufacturers of web browser applications have recognized that strict adherence to the same origin policy may be too restrictive. As such more recent web browser applications may adopt a web standard e.g. as published by the World Wide Web Consortium W3C that allows for Cross Origin Resource Sharing CORS . CORS allows a given host website to specify a number of other sources that are allowed to access the resources of the given host website. A CORS enabled web browser application may then be configured to interpret this information and allow scripts or documents loaded from the specified sources to access the resources associated with the CORS enabled host website.

As will be understood CORS may be considered one of many technologies that allow a web browser application to perform cross origin communications e.g. communications that do not conform to the same origin policy . It will be understood that the embodiments referring to CORS discussed herein may generally be implemented using any one or combination of these technologies. For example some of these additional technologies include JavaScript Object Notation with Padding JSONP Web Sockets and or iFrames.

As will be discussed in greater detail below whether or not the web browser application is configured to be CORS enabled may impact how the browsing device communicates with the marketplace server and or the extension module server . It will be understood that both types of web browser applications e.g. CORS enabled and non CORS enabled are contemplated by the present disclosure.

As will be understood the browsing device may include a processor a memory for storing instructions executable by the processor a display an input device e.g. a touchscreen or a physical keyboard and a network interface for communicating with external computing devices. Examples of a browsing device may include a desktop computer laptop computer laptop computer tablet computer personal digital assistant PDA smartphone and or cellular phone.

The host website server may be any computing device that hosts a website for consumption by the browsing device . The host website server may execute a web server application such as Apache or Microsoft Internet Information Services IIS . The web server application may be configured to provide webpage information or functionality using the web technologies described above.

The host website server may also include a user information database that stores information about registered users of the host website . This information may include user authentication information e.g. username password pairs that allows a user to log in for an authenticated browsing session with the host website server . The user information database may also include data associated with a given user account stored on the host website server . For example if the host website server is a financial news website that provides financial information the user information database may store a portfolio of stocks for each user account.

The host website server may implement a resource Application Programming Interface API that provides an interface for external software modules e.g. as may be executing on the marketplace server and or the extension module server to access resources available on the host website server . The particular interactions amongst the marketplace server the extension module server and the resource API when an extension module requests access to a resource stored on the host website server will be discussed below with respect to .

While the host website may generally refer to the actual content of the website and the host website server may generally refer to the physical computer executing the software to provide the website the two terms will be used interchangeably herein.

The marketplace server may be any computing device capable of executing a marketplace service software module. Generally the marketplace service acts as a gateway for controlling access between the host website server and a given extension module . For example the marketplace service may further be configured to coordinate the initialization process that authorizes an extension module to be accessed by a browsing device as is described with respect to below . As well the marketplace service may be configured to validate a request from an extension module to access data stored on a host website server as is described with respect to below . It will be understood that the steps indicated below as being performed by the marketplace server may generally be performed by the marketplace service executing on the marketplace server .

The marketplace service may include a marketplace API that is externally accessible by the browsing device the host website server and or the extension server . The marketplace API may be accessed when these various devices communicate with the marketplace server as discussed below .

The marketplace service may also contain an authentication module that is configured to perform various tasks associated with user authentication. When performing authentication the user authentication module may be configured to generate a number of different security tokens e.g. the authorization token and or the data token discussed below are transmitted to other computing devices to allow them to subsequently prove authentication. These tokens may be stored in the token database so that they are available for making a determination of whether any subsequently received token is valid.

The marketplace service may provide a centralized catalogue of available extension modules that can be used with the host website . In various embodiments the marketplace service may be electronic commerce store that allows users to purchase access to a given extension module for example. To allow a browsing device to determine the extension modules that are available for a given host website the marketplace service may be configured to provide a marketplace user interface UI that displays the available extension modules for a given host website . The catalogue of available extension modules may be stored in the extension module directory . In various embodiments the extension module directory may not store the actual software modules that provide the content functionality of an extension module. Rather the directory may simply store a locator e.g. a Uniform Resource Locator URL of where the extension module can be accessed.

Each entry within the extension module directory may contain a field that contains a class or category of an extension module. Such classification or categorization may allow a user of the browsing device to search for extension modules by category or classification. The classification or category may be used by the marketplace service to restrict the extension modules that are shown to a given browsing device. For example an extension module with a Food category may be restricted from being shown if the host website is a personal finance website.

Similar to the extension module directory the marketplace server may further contain a host website directory that allows the marketplace server to keep track of the host websites that have installed the marketplace service on their website.

The extension module server may contain an extension module that provides additional content or functionality for a host website . In various embodiments the extension module may be considered an application or an app that extends the content functionality of host website . The extension module may contain an API that allows external services to initiate communication with the extension module . For example as discussed below with respect to B A and B a browsing device may initiate communications with an extension module to access the content functionality provided by the extension module .

Some non limiting illustrative examples of the content functionality provided by an extension module may include a set of analytical tools for analyzing pre existing financial data stored on a personal finance website additional recipes for food review website and a new multi player game that allows members of a social network to play with each other.

It will be understood that each of the host website server the marketplace server and the extension module server may include one or more processors and one or more memories for storing instructions executable by the one or more processors. The various servers may also each include a network interface for connecting to network in order to communicate with other components of the system .

It will also be understood that the marketplace server and or the extension module may communicate with the browsing device using the same web technologies used by host website server as discussed above 

Network may be any network s capable of carrying data including the Internet Ethernet plain old telephone service POTS line public switch telephone network PSTN integrated services digital network ISDN digital subscriber line DSL coaxial cable fiber optics satellite mobile wireless e.g. Wi Fi WiMAX SS7 signaling network fixed line local area network wide area network and others including any combination of these.

It will be understood that although only a single host website server a single marketplace server and a single extension module server are shown in for clarity there may be multiple physical servers of each type distributed over a wide geographic area and connected via network for example. Similarly although only one browsing device has been illustrated any suitable number of browsing devices may connect each of the various illustrated servers.

In particular it will be understood that the marketplace server may serve as a standardized interface for extension modules to a number of different host websites . For example a single marketplace server may provide a uniform access to extension modules for one or more personal finance website one or more social media website and or one or more food review website simultaneously.

Various details about the interaction amongst the browsing device the host website server the marketplace server and the extension module server will now be discussed.

Referring to shown there generally as is a flowchart diagram of providing access to an extension module in accordance with an example embodiment. Reference will simultaneously be made to the components discussed above with respect to .

As noted above the marketplace server may make available to the browsing device a number of different available extension modules that can be used with a given host website . Generally the browsing device may display the extension modules that are available and then receive input selecting an extension module that is desired to be used. Referring briefly to shown there is an example screenshot of a marketplace UI that may allow the selection of an extension module to be used.

At step the browsing device may transmit a request to access a selected extension module to the marketplace server . This request may be received at step . The browsing device may be maintaining a browsing session with the host website when steps and are performed. As discussed below with respect to the extension module may exchange data with the host website .

At step the marketplace server may generate a first authorization token that is associated with the browsing session between the browsing device and the host website . At step the marketplace server may send to the browsing device the first authorization token and a resource locator for the extension module. The first authorization token may be a randomly generated cryptographic value that is difficult for another party to reproduce. The first authorization token may subsequently be used by the browsing device to prove that it has obtained authorization from the marketplace server to access the extension module it is requesting to access.

At step the browsing device receives the first authorization token and the resource locator. The resource locator may be a URL or an Internet Protocol IP address for the extension module for example. At step the browsing device may transmit the first authorization token to the extension module located by the resource locator.

At step the extension module may receive an authorization token. In the typical scenario where the browsing device attempts to access the extension module in a legitimate fashion the authorization token may be the first authorization token transmitted by the browsing device at step . In other scenarios the extension module may receive the authorization token from another device that has not obtained legitimate authorization from the marketplace server such that the authorization token may be illegitimate e.g. the authorization token may be forged or expired . In the context of as well as A and B discussed below the term second authorization token generally refers to the authorization token received by the extension module at step . From the perspective of the extension module the second authorization token is purported to be legitimate. However step may need to be performed to verify whether the second authorization token is in fact legitimate.

To validate the second authorization token the extension module may transmit the second authorization token to the marketplace server at step .

At step the marketplace server may receive the second authorization token from the extension module . At step the marketplace server may then proceed to verify whether the second authorization token received from the extension module at step matches the first authorization token generated at step . If the second authorization token does not match the first authorization token the NO branch where verification is unsuccessful then the marketplace server may indicate to the extension module that the second authorization token received by the extension module at step is not valid e.g. that the device that transmitted the second authorization token to the extension module should be refused access step .

If the second authorization token matches the first authorization token the YES branch at step where verification is successful the marketplace server may then transmit an approval message to the extension module to indicate that the browsing device seeking to access the extension module has been properly authorized by the marketplace server step . In various embodiments in addition to the approval message the marketplace server may also send a user identifier to the extension module . The user identifier may subsequently be used by the extension module to identify the user that is requesting access to the extension module . For example the user identifier may be associated with an authenticated browsing session between the browsing device and the host website and the extension module may use the user identifier to retrieve data associated with the authenticated browsing session from the host website .

At step the extension module may then initiate communications with the browsing device to provide the additional content functionality sought by the browsing device . In various embodiments the extension module may further generate a session token and communicate the session token to the browsing device . The session token may then be used by either or both of the browsing device and the extension module to identify communications therebetween.

Referring to shown there generally as is a flowchart diagram of a method of providing access to an extension module in accordance with another example embodiment. The method illustrated in is similar to the method illustrated in except that the step of verifying whether the second authorization token matches the first authorization token is performed at the extension module instead of at the marketplace server . When discussing the method of below reference will simultaneously be made to the components of .

In steps may be performed in a manner similar to the similarly numbered steps shown in . As discussed these steps may result in the marketplace server sending a first authorization token to the browsing device .

At step the marketplace server may also transmit the first authorization token directly to the extension module . The extension module receives the first authorization token at step . As discussed below having received the first authorization token the extension module may then compare a later received second authorization token against the first authorization token.

At step the browsing device may transmit the first authorization token to the extension module . At step the extension module may receive an authorization token. Similar to the discussion with respect to this authorization token may or may not be legitimate and the term second authorization token is used to refer to the authorization token received by the extension module at step .

At step the extension module may proceed to determine if the first authorization token e.g. as received at step matches the second authorization token e.g. as received at step . If they match the extension module may begin exchanging data with the host website and or communicating with the browsing device step . If they do not match the browsing device may be denied access to the extension module step . As will be understood steps and may be performed in a manner similar to the similarly numbered steps shown in .

By performing the verification of the second authorization token at the extension module the method of may allow the marketplace server to operate more efficiently. This is because the processing burden associated with performing the verification can be offloaded to the extension module . However by relinquishing control of the verification decision to the extension module the marketplace server may have less control with respect to whether or not a browsing device is ultimately allowed access to the extension module .

Referring to shown there generally as is a flowchart diagram of a method of providing access to an extension module in accordance with another example embodiment. When discussing below reference will also simultaneously be made to the components in .

The embodiment shown in is generally similar to that which is shown in except that it is designed to operate with a web browser application on the browsing device that is not enabled to communicate using CORS technologies. As discussed above a CORS enabled browsing application allows documents or scripts loaded from a source that is different from the host website to access resources that would otherwise be prohibited from being accessed under the same origin policy. In the embodiment of the host website may have already indicated to the CORS enabled browser application that marketplace server is a source that can access data associated with the host website . This may allow the direct communication between the browsing device and the marketplace server in steps .

In the method of as well as discussed below however the web browser application on the browsing device may not be CORS enabled and as such the browsing device may not be able to communicate directly with the marketplace server . As a result the host website may be configured to be a proxy that relays communications between the marketplace server and the browsing device .

As illustrated the steps performed in the method of generally achieve a similar result as the method illustrated in . For example the steps of the method may similarly provide a method of allowing a browsing device to access a particular given extension module that is selected to be accessed by a user of the browsing device .

At step the browsing device transmits a request to access the extension module . In the method of however since the browsing device cannot communicate directly with the marketplace server the browsing device transmits the request to the host website with which it is having a browsing session. The host website then relays the request to the marketplace server at step . At step the marketplace server may then receive the request to access the extension module .

In a manner similar to step in the marketplace server may generate a first authorization token at step .

Similar to step in at step the marketplace server may then transmit the first authorization token and a resource locator. However since the browsing device in is not configured to communicate directly with marketplace server the marketplace server may first transmit the first authorization token and the resource locator to the host website . The host website may then receive and relay the first authorization token and resource locator to the browsing device at step . At step the first authorization token and the resource locator may then be received at the browsing device .

The remaining steps of steps in may be performed in similar manner to the steps with the same reference numerals in discussed above.

Referring to shown there generally as is a flowchart diagram of a method of providing access to an extension module in accordance with a further example embodiment. The method illustrated in can be considered as having features of both the methods of . For example the method of is similar to the method of in that the host website may be configured to act as a proxy that relays communications between the marketplace server and the browsing device . At the same time the method of is similar to the method of in that the step of verifying whether the second authorization token matches the first authorization token is performed at the extension module instead of at the marketplace server .

Particularly steps may be performed in a manner similar to the steps with the same reference numerals shown in . As discussed these steps may result in the marketplace server sending a first authorization token to host website which may relay the first authorization token to the browsing device .

Steps may then be performed in a manner similar to the steps with the same reference numerals shown in . As discussed these steps may result in the marketplace server sending the first authorization token to the extension module so that the extension module may itself directly verify whether a later received second authorization token matches the first authorization token.

Referring to shown there generally as are flowchart diagrams for a method of processing a request from an extension module for data stored on a host website in accordance with an example embodiment. Reference will simultaneously be made to the components of .

Once an extension module has been authorized to be accessed by a browsing device e.g. by performing the steps of the method of or above the extension module may begin providing the additional functionality or content to the browsing device . In various embodiments the extension module may exchange data with host website . show how the marketplace server may be able to control whether an extension module is to be granted access to the data stored on the host website .

At step the extension module may transmit to the marketplace server a request to access data stored on the host website . This request may be received at step . In various embodiments the request may include a user identifier that identifies an authenticated browsing session between the host website and the browsing device .

At step the marketplace server may determine whether the extension module has access to the requested resource s . For example the marketplace may be configured to lookup the resources that a user has granted the extension module access to. If the user has not granted access to the requested resource the marketplace server may refuse the request at step the NO branch at step .

It will be understood that when an extension module is first registered to be available on the marketplace server the extension module may provide a list of resources of the host website that it desires access to e.g. in an application manifest in order to operate. Subsequently when a user of the browsing device requests to use the extension module the marketplace server may send a request to the browsing device to inquire whether the user of the browsing device allows or denies the given extension module access to the requested resources.

For example in the example where the extension module provides advanced analytical tools for a personal finance host website the extension module may have indicated that it would like access to the portfolio or watchlist data items stored on the personal finance host website . The marketplace server may then have requested a user of the mobile device to indicate whether they approve or deny access by the extension module to these data items. Referring briefly to shown there generally as is an example screenshot of such an inquiry provided by the marketplace server that asks a user whether they would like to grant an extension module access to Watchlist and Portfolio resources.

Referring back to if the marketplace server determines that the extension module does have access to the requested data the marketplace may then proceed to step the YES branch at step .

At step the marketplace server may generate a first data token and at step the marketplace server may then send the first data token and a host website locator to the extension module . Similar to the authorization tokens discussed above with respect to the first data token may be a randomly generated cryptographic value that is difficult for another party to reproduce. The first data token may subsequently be used by the extension module to prove that it has obtained authorization from the marketplace server to access the requested data stored on the host website .

At step the extension module receives the first data token and the host website locator. The host website locator may be a URL or an Internet Protocol IP address for the host website for example. At step the extension module may then transmit the first data token to the host website located by the host resource locator.

At step the host website may receive a data token. In the typical scenario where the extension module attempts to access the host website in a legitimate fashion the data token may be the first data token transmitted by the extension module at step . In other scenarios the host website may receive the data token from another device that has not obtained legitimate authorization from the marketplace server such that the data token may be illegitimate e.g. the data token may be forged or expired . In the context of the term second data token generally refers to the data token received by the host website at step . From the perspective of the host website the second data token is purported to be legitimate. However steps to as shown in may need to be performed to verify whether the second data token is in fact legitimate.

To validate the second data token the host website may transmit the second data token to the marketplace server at step .

Referring now to the method of continues at step . At step the marketplace server may verify whether the second data token received from the host website at step in matches the first data token generated at step of . If the second data token does not match the first data token the NO branch where verification is unsuccessful then the marketplace server may indicate to the host website that the second data token received by the host website at step is not valid e.g. that the device that transmitted the second data token to the host website should be refused access step .

If the second data token matches the first data token the YES branch at step where verification is successful the marketplace server may send a data descriptor to the host website for the data that the extension module is requesting. The data descriptor may be generated based on information received in the request at step of . The data descriptor may be received at the host website at step .

At step the host website may then transmit the requested data that is identified by the data descriptor to the extension module . The requested data may then be received by the extension module at step .

It will be understood that the extension module may access different types of data stored on the host website depending on the nature of host website and or the type of content functionality provided by the extension module . For example in the scenario where the host website is a personal finance website and the extension module provides advanced analytical tools for analyzing financial information the data available to be exchanged between a host website and an extension module may include a portfolio a watchlist and or a list of historical transactions.

In another example the host website may provide social media information e.g. a social media website and the data available to be exchanged between a host website and an extension module may include a name of a user an email address of a user a list of social media contacts and or one or more messages sent using the social media website.

In another example the host website may provide food information e.g. a food restaurant review website and the data available to be exchanged between a host website and an extension module may include recipes comments on recipes food reviews and or restaurant reviews.

In yet another example the host website may provide news and opinion information e.g. the website of a news publication and the data available to be exchanged between a host website and an extension module may include an article a headline a blog entry and or a review.

In a further example the host website may provide fitness information e.g. a website for an athletic store or a physical exercise community and the data available to be exchanged between a host website and an extension module may include an article a workout a blog entry and or a review.

Moreover the host website may provide travel information e.g. an airline website or a travel booking website and the data available to be exchanged between a host website and an extension module may include an article a geographic location a blog entry and or a travel destination review.

Also the host website may provide movie and television information e.g. a website that provides a database containing information about movies and or television and the data available to be exchanged between a host website and an extension module may include an article information about a movie information about a television show information about an actor and or a review.

It may be noted that even though different types of example websites are discussed herein similar types of data may be exchanged between a host website and an extension module . For example both a travel website and a food website may provide blog entries. To facilitate the exchange of data between a host website and an extension module the host website and or the extension module may additionally or alternatively be able to indicate the type of data that can be exchanged e.g. available to be accessed or desired to be retrieved . For example the table below provides a non exhaustive list of general data types that may be exchanged as well as example data items that may be categorized as being of a particular data type.

Referring to shown there generally as is a flowchart diagram for a method of processing a request from an extension module for data stored on a host website in accordance with another example embodiment. The method illustrated in may serve a similar purpose as the method shown in in that the marketplace server may provide an extension module access to data of the host website . However in the method illustrated in instead of the marketplace server returning a token to the extension module so that the extension module can directly request the data from the host website the marketplace server may relay the request to the host website . In discussing below reference will simultaneously be made to the components of .

At step the extension module transmits a request to access data to the marketplace server . This request is received at step . While not illustrated in the marketplace server may perform steps to verify that the extension module has access to the data that is requested. For example these steps may be similar to steps and shown in .

At step the marketplace server may relay the request to access data to the host website . The request relayed to the host website may also include a data descriptor for the data that the extension module is requesting to access. Additionally the relayed request may also include a resource locator that allows the host website to locate the extension module for communication. For example the resource locator may be a URL or an IP address for the extension module .

In various embodiments optional steps to and as shown in dotted outline may be performed to enhance security.

At step in a manner similar to step in the marketplace server may generate a first data token. The marketplace server may transmit the first data token to both the host website and the extension module at step . The first data token may be received at the host website and the extension module at steps and respectively. Although step is illustrated as being sent as a separate message for ease of explanation it will be understood that in various embodiments the first data token may be transmitted together with the access data resource locator and or data descriptor sent in step .

At step the host website may transmit the requested data identified by the data descriptor to the extension module . For example the host website may be able to determine the location of the extension module using the resource locator. If step had been performed and a first data token had been received at the host website the host website may include the first data token with the data that is being transmitted at step .

If the optional security steps of generating and transmitting the first data token at steps and have been performed the extension module may be able to verify that the data received at step is authentic. For example if the optional security steps are performed the data received by the extension module at step may include a second data token .

In the context of the term second data token refers to a data token that may accompany the data received by the extension module at step . From the perspective of the extension module the second data token is purported to be legitimate e.g. having originated from the marketplace server . However step as shown in dotted outline may need to be performed to verify the legitimacy of the second data token.

At step the second data token is verified against the first data token as received by the extension module at step by determining if the second data token matches the first data token. In situations where the transmitted data is from a host website that has been legitimately authorized by the marketplace server to respond to the request of step e.g. a host website that has received the first data token at step and transmitted the first data token to the extension module at step such that the second data token is in fact the first data token the verification will be successful. In other situations the extension module may receive the second data token from another device that has not obtained legitimate authorization from the marketplace server to respond to the request at step such that the second data token is illegitimate e.g. the second data token may be forged or expired . In such case the second data token will not match the first data token. This latter scenario may arise for example if a nefarious device attempts to trick the extension module into accepting faulty data.

If the second data token matches the first data token then the extension module may be assured that the requested data accompanying the second data token is authentic. That is the inclusion of a data token that matches the first data token with the data transmitted at step allows the host website to prove to the extension module that the data it is sending corresponds to the data that the extension module requested from the marketplace server at step .

As illustrated in at step the marketplace server relays the request to access data from the extension module to the host website . As discussed above the relayed request may include a resource locator that allows the host website to directly transmit the requested data to the extension module at step . In variant embodiments however the relayed request at step may not include the resource locator at all. In such embodiments the host website may not transmit the requested data directly to the extension module . Instead the host website may simply transmit the requested data to the marketplace server and the marketplace serer may then further relay the requested data back to the extension module .

Marketplace Server Providing an Extension Module Access to User Data of the Host Website Based on User Permission

Referring to shown there generally as are flowchart diagram for a method of providing access to an extension module to user data of host website based on user permission in accordance with an example embodiment. Reference will simultaneously be made to the components of .

In various situations an extension module launched by a browsing device may require access to user data stored on host website server . The user data is stored in user information database located on the host website server and may include user authentication information and or other data associated with the registered user accounts.

As illustrated at step the browsing device transmits a request to launch an extension module to the marketplace server . This request is received by the marketplace server at step .

At step the marketplace server determines whether the extension module requires access to user data stored on the host website server . If the user data is not required by the extension module the NO branch the marketplace server provides the browsing device with an authentication token and a resource locator for example a URL or IP address for the extension module .

In this example embodiment the marketplace server provides the browsing device with the authentication token and the resource locator to launch the extension module according to steps to of . In some other embodiments the marketplace server may provide the browsing device with the authentication token and the resource locator to launch the extension module according to steps to of steps to of or steps to of .

If the user data is required by the extension module the YES branch the marketplace server determines whether the extension module already has access to user data step . If the extension module already has access to user data the YES branch the marketplace server provides the browsing device with an authentication token and a resource locator for example a URL or IP address for the extension module .

In this example embodiment the marketplace server provides the browsing device with the authentication token and the resource locator to launch the extension module according to steps to of . As mentioned above in some other embodiments the marketplace server may provide the browsing device with the authentication token and the resource locator to launch the extension module according to steps to of steps to of or steps to of .

If the extension module does not have access to the user data the NO branch the marketplace server transmits host website locator and extension module identifier to the browsing device at step which is received by the browsing device at step . The host website locator may be a URL or an IP address for the host website .

Referring now to the method of continues at step . At step the browsing device grants its permission to have the extension module access the user data from the host website server by calling the host website and providing the extension module identifier to the host website . As illustrated at step the browsing device transmits the received extension module identifier to the host website using the received host website locator.

At step the host website receives the extension module identifier from the browsing device . In response at step the host website transmits resource API credentials for the resource API implemented by the host website server to the marketplace server . As previously mentioned the host website server may implement a resource API that provides as interface for external software modules such as the extension module server to access resources available on the host website server . At step the resource API credentials are received by the marketplace server .

At step the marketplace server grants access to the extension module to the user data stored on the host website server . At step the extension module communicates with the host website server to access user data.

Reference is next made to illustrating a flowchart diagram for a method of accessing user data from a host device in accordance with an example embodiment.

At step the browsing device transmits request to access or launch extension module . This request is received by the marketplace server at step . In some other situations the method may begin with the extension module requesting access to user data stored on the host website server . The extension module may send this request to marketplace server .

At step the marketplace server determines whether the browsing device or the user associated with the browsing device has approved extension module to access user data from the host website server . If the browsing device has not approved the extension module to access user data from the host website server the NO branch the extension module is refused access at step .

If the marketplace server determines that the browsing device has granted access to the extension module to access user data the YES branch the marketplace server transmits resource API credentials corresponding to the host website server user identifier as used by the host website to authenticate the user for the user authenticated browsing session and an approval message at step .

In various situations the host website may be configured to request data from the extension modules that the host website is associated with. For example a host website may do this to determine if a given extension module is available to be accessed. Additionally or alternatively the host website may access additional data or content that is made accessible by the extension module . As discussed above with respect to the various example data items that may be exchanged between a host website and an extension module may conform to pre established data types e.g. messages reviews instructions etc. . For example the host website may be a website that provides food information and the extension module may provide access to additional recipes for creating baked goods. The host website may thus request the recipe data from the extension module to make it available to the users of the host website .

Referring to shown there generally as are flowchart diagrams for a method of providing a host website access to data of the extension module in accordance with an example embodiment. It will be understood that some of the steps shown in may be similar to the steps shown in except that instead of the extension module requesting data from the host website it is the host website requesting data from the extension module . In discussing reference will simultaneously be made to the components of .

At step the host website may send a request for data to the marketplace server . The request may include an identifier for the extension module that the host website is attempting to request data from. This request for data may be received at the marketplace server at step .

While not illustrated in the marketplace server may use the identifier for the extension module to determine if the host website has access to the data that it is requesting. For example this may involve the marketplace server performing a lookup into a database or other equivalent data store that allows the marketplace server to determine the extension modules that the host website is associated with. If the marketplace server determines that the host website should not have access to the data it is requesting it may not proceed to the next steps.

At step the marketplace server may generate a first data token and at step the marketplace server may transmit the first data token and a resource locator that allows the host website to determine how to communicate with the extension module to the host website . As in the scenarios discussed above the first data token may be a randomly generated cryptographic value that is difficult for another party to reproduce such that the first data token may subsequently be used by the host website to prove that it has obtained authorization from the marketplace server to access the requested data stored on the extension module .

At step the host website may receive the first data token and the resource locator. At step the host website may then transmit the first data token to the extension module located by the resource locator.

At step the extension module may receive a data token. In the typical scenario where the host website attempts to access the extension module in a legitimate fashion the data token may be the first data token transmitted by the host website at step . In other scenarios the extension module may receive the data token from another device that has not obtained legitimate authorization from the marketplace server such that the data token may be illegitimate e.g. the data token may be forged or expired . In the context of the term second data token generally refers to the data token received by the extension module at step . From the perspective of the extension module the second data token is purported to be legitimate. However steps to may need to be performed to verify whether the second data token is in fact legitimate.

To validate the second data token the extension module may transmit the second data token to the marketplace server at step .

At step the marketplace server may verify whether the second data token received from the extension module at step matches the first data token generated at step . If the second data token does not match the first data token the NO branch where verification is unsuccessful then the marketplace server may indicate to the extension module that the second data token received by the extension module at step is not valid e.g. that the device that transmitted the second data token to the extension module should be refused access step .

If the second data token matches the first data token the YES branch at step where verification is successful the method of may proceed to step in .

Referring now to at step the marketplace server may send a data descriptor to the extension module for the data that the host website is requesting. The data descriptor may be generated based on information received in the request for data at step of . The data descriptor may be received at the extension module at step .

At step the extension module may then transmit the requested data that is identified by the data descriptor to the host website . The requested data may be received by the host website at step .

Referring to shown there generally as is a flowchart diagram for a method of processing a request from a host website for data from an extension module in accordance with another example embodiment. The method illustrated in may serve a similar purpose as the method shown in in that the marketplace server may provide a host website access to data of the extension module . However in the method illustrated in instead of the marketplace server returning a token to the host website so that the host website can directly request the data from the extension module the marketplace server relays the request to the extension module . In discussing below reference will simultaneously be made to the components of .

Viewed another way the steps in the method of may also be considered to be similar to the method shown in in that the marketplace server performs steps to relay a request to access data. The difference between the method of and the method of however is that the host website requests data from the extension module instead of the extension module requesting data from the host website .

At step the host website transmits a request to access data to the marketplace server . This request is received at step . As with above while not illustrated in the marketplace server may perform steps to verify that the host website has access to the data that is requested.

At step the marketplace server may relay the request to access data to the extension module . The request relayed to the extension module may also include a data descriptor for the data that the host website is requesting. Additionally the relayed request may include a host resource locator that allows the extension module to locate the host website for communication. For example the host resource locator may be a URL or an IP address for the host website .

In various embodiments optional steps to and as shown in dotted outline may be performed to enhance security.

At step the marketplace server may generate a first data token. The marketplace server may transmit the first data token to both the host website and the extension module at step . The first data token may be received at the extension module and the host website at steps and respectively.

At step the extension module may transmit the requested data identified by the data descriptor to the extension module . For example the extension module may be able to determine the location of the host website using the host resource locator. If step had been performed and a first data token had been received at the extension module the extension module may include the first data token with the data that is being transmitted at step .

If the optional security steps of generating and transmitting the first data token at steps and have been performed the extension module may be able to verify that the data received at step is authentic. For example if the optional security steps are performed the data received by the host website at step may include a second data token .

In the context of the term second data token refers to a data token that may accompany the data received by the host website at step . From the perspective of the host website the second data token is purported to be legitimate e.g. having originated from the marketplace server . However step as shown in dotted outline may need to be performed to verify the legitimacy of the second data token.

At step the second data token is verified against the first data token as received by the host website at step by determining if the second data token matches the first data token. In situations where the transmitted data is from an extension module that has been legitimately authorized by the marketplace server to respond to the request of step e.g. an extension module that has received the first data token at step and transmitted the first data token to the host website at step such that the second data token is in fact the first data token the verification will be successful. In other situations the host website may receive the second data token from another device that has not obtained legitimate authorization from the marketplace server to respond to the request at step such that the second data token is illegitimate e.g. the second data token may be forged or expired . In such case the second data token will not match the first data token. This latter scenario may arise for example if a nefarious device attempts to trick the host website into accepting faulty data.

If the second data token matches the first data token then the host website may be assured that the requested data accompanying the second data token is authentic. That is the inclusion of a data token that matches the first data token with the data transmitted at step allows the extension module to prove to the host website that the data it is sending corresponds to the data that the host website requested from the marketplace server at step .

As illustrated in at step the marketplace server relays the request to access data from the host website to the extension module . As discussed above the relayed request may include a host resource locator that allows the extension module to directly transmit the requested data to the host website at step . In variant embodiments however the relayed request at step may not include the host resource locator at all. In such embodiments the extension module may not transmit the requested data directly to the host website . Instead the extension module may simply transmit the requested data to the marketplace server and the marketplace serer may then further relay the requested data back to the host website .

The discussion above has been with regards to the marketplace server controlling access i of the browsing device to the extension module e.g. the methods of and ii of the extension module to the data stored on the host website e.g. the method of . However prior to the marketplace even being able to present available extension modules to the browsing device communication must be established amongst the marketplace server the browsing device and the host website.

It will be noted that for the purposes of illustration show embodiments in which a CORS enabled browser application as shown in is provided such that the browsing device may be able to communicate directly with the marketplace server . However as discussed above a non CORS enabled browser application e.g. a browser application that enforces the same origin policy and may not be able to communicate with the marketplace server directly may also be used. In such case for the communications shown in that are shown as being directly between the browsing device and the marketplace server the host website may act as a proxy to relay messages between the browsing device and the marketplace server .

Also as explained below illustrates a simpler situation where the establishment of communication amongst the browsing device host website and marketplace server is for the case where the browsing session between the browsing device and the host website is anonymous. shows a more complicated scenario where the establishment of communication is for the case where the browsing session between the browsing device and the host website is a user authenticated session.

Referring first to shown there generally as is a flowchart diagram for initializing the communications amongst the browsing device the host website and the marketplace server . Reference will also be made to the components in

At step the browsing device may send a request for the marketplace user interface UI to the host website . The host website may receive this request at step . As explained above the marketplace UI may display the different extension modules available for the browsing device to access in the context of the browsing device s browsing session with the host website .

At step the host website may transmit a host identifier to the browsing device . The host identifier may be a unique value used by the marketplace server to identify a particular host website . The host identifier can be transmitted in a variety of ways. For example the host identifier may be embedded into a webpage stored in a cookie etag pixel tag or any other medium which allows the values to be stored transported.

As explained below the marketplace may subsequently use the host identifier to determine the extension modules that are available for use by the browsing device . The host identifier may then be received at step .

At step the browsing device may then send the host identifier to the marketplace server . The marketplace server may receive the host identifier at step . Based on this communication the marketplace server may be able to determine that the browsing device would like to view the available extension modules for the host website associated with the host identifier.

At step the marketplace server may generate a session token and transmit it to the browsing device . The session token may be received at the browsing device at step .

The session token may be used by one or both of the browsing device and the marketplace server to identify the session between the marketplace server and the browsing device in which the marketplace server provides marketplace UI to the browsing device .

At step the browsing device may communicate with the marketplace server using the session token received at step . This communication may result in the browsing device retrieving the list of available extension modules that it can access for the host website .

As noted the method shown in illustrates a simple example in which the original browsing session between the browsing device and the host website is anonymous. This may mean that the user has not logged in to the host website to set up any personalized data that can be tracked by the host website . For example in the scenario where the host website is a personal finance website an authenticated user may be able set up a portfolio or a watchlist that stores a list of stocks that the user is interested in. In another example where the host website is a social media website an authenticated user may have access to their social media contacts. An anonymous user who has not authenticated with the host website may not have access to this personalized data.

Referring to shown there generally as is a flowchart diagram for initializing the communications amongst the browsing device the host website and the marketplace server in accordance with an embodiment of the present disclosure. The method of may achieve a similar result as the method of but the method of may be for a scenario where the browsing session between the browsing device and the host website is a user authenticated browsing session.

In reference numerals to those in are used where appropriate e.g. step in is similar to step in . However reference numerals starting with a 6 e.g. steps and do not have a corresponding step in and are in illustrated to address the user authenticated browsing session.

At the mobile device may send a request for the marketplace UI to the host website . The request may then be received at step . As will be understood these steps may be performed in a manner that is similar to steps and respectively of .

At step the host website may generate a cryptographic nonce value. A cryptographic nonce value is an arbitrary typically random value that is used in secure communications generally to prevent replay attacks.

At the host website may transmit the following data items to the marketplace server the nonce generated at step the host identifier as used by the marketplace server to identify the host website and the user identifier as used by the host website to authenticate the user for the user authenticated browsing session . These data items may be received at the marketplace server at step . These data items may be stored at the marketplace server .

At step the host website may transmit the generated nonce and the host identifier but not the user identifier to the browsing device . As with step in the nonce and the host identifier can be transmitted in a variety of ways. For example the nonce and host identifier may be embedded into a webpage stored in a cookie etag pixel tag or any other medium which allows the values to be stored transported. The host identifier and nonce are received at the browsing device at step .

At step the browsing device may transmit the host identifier and nonce to the marketplace server and at step the marketplace server may receive a test nonce and a test host identifier.

At step the marketplace server may search for a user identifier using the test nonce and test host identifier. The searching may be performed on the same storage medium that stored the host identifier nonce and user identifier received at step .

In a situation where the browsing device has legitimately requested access to the marketplace server from the host website the test nonce and the test host identifier may be the same nonce and host identifier that was transmitted from the browsing device at step e.g. that which originated from the host website at step . Using this information the searching at step would be able to locate the corresponding user identifier because the marketplace server would have stored the nonce and host identifier with the corresponding user identifier when these three data items were received e.g. also from the host website at step .

However if the marketplace server happens to receive the test nonce and the test host identifier from an illegitimate browsing device e.g. a device who may be trying to surreptitiously gain access to a user s data on the host website the test nonce may be invalid and the searching at step may not result in the finding any user identifiers.

At step if the user identifier is found a user session token is returned to the browsing device . If no user identifier is found an anonymous session token similar to the one transmitted at step in may be returned to the browsing device . The session token either a user session token or an anonymous session token as the case may be is received at the browsing device at step .

At step the browsing device may communicate with the marketplace server using the session token received at step . For example the marketplace server may only allow access to a protected resource if the request was with respect to a user token. If the request was associated with an anonymous session token the marketplace server may only allow access to unprotected resources.

As noted above the user identifier in the method of is not transmitted to the browsing device at step such that the user identifier is not directly provided by the browsing device to the marketplace server to identify itself. Instead a generated nonce is transmitted to the browsing device steps which is then passed to the marketplace server steps so that the marketplace server can look up the user identifier at step . This indirect method of providing a user identifier to the marketplace server may protect the user identifier from being compromised. For example since the actual user identifier is not actually provided to the browsing device it is unlikely that a surreptitious party may be able to somehow steal the user identifier. Further providing the nonce may prevent replay attacks by configuring the nonce to timeout after a period of time e.g. such that if the marketplace server does not receive the nonce from a browsing device within a period of time the nonce can no longer be used to lookup the user identifier for the browsing device .

While the methods illustrated in show the basic exchange of identifiers for the purpose of initializing communications amongst the browser device host website and marketplace server it will be understood that additional data may be sent with the various transmissions that are shown.

For example at step of FIG. and of the host website may be configured to also transmit the webpage for the marketplace UI which allows the browsing device to retrieve the resources for displaying the marketplace UI. The webpage may for example include the various resource locators that are to be used by the browsing device to build the marketplace UI. In one example embodiment upon receiving the webpage the browsing application on the browsing device may commence downloading or retrieving from a local cache the page resources identified by the resource locators. The page resources may include a Cascading Styles Sheet CSS file containing style information and a JavaScript file containing the code and functions for the embedded marketplace UI. In various embodiments these marketplace resources may be hosted on the marketplace server the host website or other third party servers. There may also be embedded on the page by the host website a JavaScript tag intended to configure and initialize the marketplace UI. In an example embodiment the JavaScript tag may look as follows 

As will be understood by a skilled person the above JavaScript block may provide the location where the marketplace UI will be placed e.g. the embedded app class the generated session token from e.g. userToken the host id e.g. host id a callback function which may be called by the marketplace UI in the event that an unauthenticated user attempts to access a protected resource e.g. as shown the call back function redirects the host website to the login page of the host website at the currentUrl and the server e.g. server responsible for handling the marketplace UI requests. In the scenario where the web browser application is CORS enabled the server may be the marketplace server .

In the scenario where the web browser application is CORS enabled the marketplace server may service the resource requests sent by the browsing device and the requested data may be transmitted to the browsing device along with CORS response headers. As will be understood by the skilled person CORS response headers allow the browsing device to ask the permission of the marketplace server in order to access resources from a cross domain source. Permission may be given only if the hosting website is within a domain white list located on the marketplace server . If the hosting domain is not on the CORS domain white list the browsing device may not allow the use of any data from the marketplace server .

As noted in the scenario where the web browser application on the browsing device is not CORS enabled the host website may act as a proxy and relay communications between the browsing device and the marketplace server . In various such embodiments the host website may be further configured to do more than just relay information to the browsing device . For example the host website may be configured to communicate directly with the marketplace server on behalf of the browsing device without involving the browsing device . Since the host website may already be in possession of the session token used by the marketplace server to identify communications with the browsing device as well as the host identifier that the host website itself is using the host website may be able to communicate with the marketplace server on behalf of the browsing device without involving the browsing device . Accordingly a JavaScript tag embedded into a webpage for initializing the marketplace UI that is provided by the host website to a browsing device may not need to contain fields for the host identifier e.g. hostId or the session token e.g. userToken . The example JavaScript tag for a non CORS enabled web browser application may thus look like 

The fields in this JavaScript tag may be similar to the one shown above for the CORS enabled web browser application except that the session token and host identifier fields are no longer present.

Referring to shown there generally as is an example screenshot of a marketplace UI that may be shown as being embedded on a host website. The host website may provide access to the marketplace UI which as illustrated shows the available extension modules for the website in a grid format. A number of example extension modules such as Stock Stats Capital Hive are shown. While the example marketplace UI in is shown in a grid format it will be understood that other visual formats for displaying extension modules may also be possible.

Referring to shown there generally as is an example screenshot of a marketplace UI after the marketplace UI receives input selecting a given extension module . As illustrated a popup window may be shown to provide information to the user. The popup window may contain a number of different options that allow a user to learn more about the extension module . For example there may be a number of tabs Summary Details and Reviews that provide information about the extension module . As shown the Reviews tab is selected for the Contractually extension module .

Referring to shown there generally as is an example screenshot of a marketplace UI of a popup window similar to the one shown in except that the Summary tab is shown. As illustrated the contents of the Summary tab may provide a preview of the user interface that the extension module provides. The popup window may also provide a user selectable option that when selected adds the extension module for the browsing session between the browsing device and the host website .

Referring to shown there generally as is an example screenshot that may be displayed after the user selectable option e.g. option in to add an extension module is selected. As shown a further popup window may be shown to the user that asks the user to confirm that they would like to add the extension module . The popup window may contain a list of the data items of the host website that the extension module requires access to e.g. as illustrated this data includes the Watchlist and Portfolio data items of a personal finance host website that the user may approve access to as a condition of adding the extension module .

It has been assumed in the discussion above that secure communications may take place between the host website and the marketplace server . Details about how secure communications between these two devices may be established will now be discussed. When the marketplace server is first installed to be used with a host website the host website may be given a unique host identifier the use of which has been discussed above . The marketplace server may also generate and provide the host website with a cryptographically strong secret value. In a manner similar to a username and password pair the host identifier and secret value may then be used by the host website to subsequently authenticate with the marketplace server . Communications between the marketplace server and the host website may also be encrypted e.g. using known encrypted communications technologies such as Secure Sockets Layer SSL .

With respect to the marketplace server and the extension module when an extension module is first registered to be available on the marketplace server the extension module may be given a unique extension module identifier. In various embodiments this identifier may be called an application identifier. The marketplace server may also generate and provide the extension module with a cryptographically strong secret value. In a manner similar to a username and password pair the extension module identifier and secret value may then be used by the extension module to subsequently authenticate with the marketplace server . Communications between the marketplace server and the extension module may also be encrypted e.g. using known encrypted communications technologies such as Secure Sockets Layer SSL .

Additionally an extension module may be associated with a classification or category so that the extension module may be displayed properly in the marketplace UI. For example as indicated above this may prevent an extension module directed towards nutrition from appearing on a personal finance website.

Further as noted above in various embodiments the extension module may be considered an application or app that may be selected to be added by a user of the browsing device when they are accessing the host website . The marketplace server may thus be considered to be an application store where users are able to explore purchase and or download available extension modules . During registration of an extension module for use with the marketplace server the provider of the extension module may be able to specify the pricing of the extension module . For example the provider of the extension module may specify that the extension module can be downloaded completely free of charge free of charge only for a period of time for a specific price and or on a subscription basis. The browsing device may then be presented with these options when viewing available extension modules for a given host website . The marketplace server may also be configured to receive payment information if needed.

In various embodiments the marketplace server and the host website server facilitate processing of payment made by the user to purchase extension modules . illustrate flowchart diagrams for a method of processing payment by a host website server in accordance with an example embodiment.

At step the browsing device transmits a request to purchase an extension module to the marketplace server . The request is received by the marketplace server at step .

In response the marketplace server generates a payment token at step . The payment token may be a randomly generated cryptographic value that is difficult for another party to reproduce. The payment token and a host website locator for example a URL or an Internet Protocol IP address for the host website are transmitted by the marketplace server to the browsing device at step .

The payment token and the host website locator are received by the browsing device at step . At step the user calls the host website using the host website locator and transmits the payment token to the host website .

The host website relays the payment token and a request for payment details associated with the payment token to the marketplace server at step . Payment details may include information related to purchasing of the extension module such as cost of purchasing the extension module any additional one time or recurring fee amounts associated with the extension module etc.

Upon receiving the payment token and the request for payment details from the host website the marketplace server retrieves the payment details at step which are then transmitted to the host website at step . The payments details are received by the host website server at step .

The method continues at step in . At step the host website server displays a payment web page to the user at the browsing device . The payment web page allows the user to enter billing or payment information to finalize the purchase of the extension module . As illustrated the user enters payment information on the payment web page at step and the entered payment information is transmitted to the host website server from the browsing device at step . The browsing device may transmit the payment information to the host website server after the user confirms that the user wants to proceed with the purchase for example by clicking on an Accept button on the payment web page.

In some other situations the payment web page may be pre populated with payment details. The host website may pre populate the payment web page based on relevant user information previously stored on the host website server . In such situations the user indicates his intention to proceed with the purchase of the extension module by accepting the pre populated billing information on the payment web page.

At step the payment is processed by the host website server . Once the payment is processed the host website server generates and transmits a payment approval message for the marketplace server at step . The payment approval message indicates that the payment has been successfully made.

Upon receiving the payment approval message at step the marketplace server transmits a locator for example a URL of where the purchased extension module can be accessed at step . The purchased extension module locator redirects the browsing device to the purchased extension module .

At step the host website server receives and relays the extension module locator to the browsing device . The browsing device accesses the purchased extension module at step using the purchased extension module locator.

In various embodiments the marketplace server may perform one or more tests on submitted extension modules or when the marketplace is being installed to be used with a host website . These tests may validate that the entities providing the host website or the extension module conform to acceptable standards. Tests may be performed upon during initial installation of the marketplace server or registration of the extension module . As well tests may be performed periodically during the lifetime of the extension module or the host website in order to validate the entity and to ensure the availability and smooth operation of the marketplace server . The various tests may be for one or more of errors unavailable links high latency viruses worms trojan horses adware malware or any other problem that might adversely affect the operation of the marketplace server .

In various embodiments the a host website or an extension module may be configured to automatically report errors and statistics to the marketplace server for troubleshooting purposes during the normal course of operation. The marketplace server may monitor error and statistics data in order to detect and help troubleshoot any problems that may arise.

Some of the errors that may be submitted to the marketplace server for monitoring include but are not limited to resource request errors authentication errors or marketplace communication errors. Some statistics that may be submitted to the marketplace server for monitoring include but are not limited to resource request latency authentication latency or marketplace communication latency.

Marketplace Server Providing a User Interface that Allows Setup of Host Websites and Extension Modules

In various embodiments the marketplace server may provide a website that allows an operator of a host website and or a provider of an extension module to submit their respective requests to the marketplace server . The marketplace server website user interface may provide the operator and or provider with key details about their host website or extension module as the case maybe . This information may allow their host website and or extension module to improve performance with the marketplace server .

In various embodiments extension modules may be subject to approval by the marketplace server before being allowed to become listed on the marketplace server . Similarly a host website requesting to provide access to the marketplace UI through its website may also require approval before being allowed to host the marketplace on their website.

As discussed above with respect to in various embodiments the marketplace server may be configured to relay communications between the host website and the extension module . The communications may be initiated by either the host website or the extension module .

In the case where the communication is initiated from the extension module the marketplace server may receive the communication destined for the host website and relay the communication to the host website .

In some embodiments the communication initiated from the extension module may be a request for data stored on the host website e.g. step of and the marketplace server may be configured to determine if the extension module is authorized to access the data. If the extension module is authorized to access the data the marketplace server may then relay the request to the host website e.g. step of . The host website may retrieve the data and transmit it to the marketplace server which then further transmits the requested data to the extension module .

In some embodiments the communication initiated from the extension module may include connection data that allows the host website to establish a direct connection with the extension module .

In the case where the communication is initiated from the host website the marketplace server may receive the communication destined for the extension module and relay the communication to the extension module .

In some embodiments the communication may be a query for data from the extension module e.g. step in . In some embodiments the communication may be a query for data from all extension modules associated with the host website . For example since the extension module may be able to provide additional content e.g. depending on the nature of the host website this content may include food reviews recipes weather information coupon listings real estate listings the host website may use this mechanism to query for data stored on the extension module .

Further similar to the communication that may be initiated from the extension module the host website may also provide connection data to the marketplace server that is to be relayed to the extension module . The extension module may then use this connection data to establish a direct connection with the host website .

While the above description provides examples of the embodiments it will be appreciated that some features and or functions of the described embodiments are susceptible to modification without departing from the spirit and principles of operation of the described embodiments. Accordingly what has been described above has been intended to be illustrative of the invention and non limiting and it will be understood by persons skilled in the art that other variants and modifications may be made without departing from the scope of the invention as defined in the claims appended hereto.

