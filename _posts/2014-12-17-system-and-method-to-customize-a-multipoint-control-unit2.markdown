---

title: System and method to customize a multipoint control unit
abstract: Various disclosed embodiments include methods and systems for constructing a multipoint control unit (MCU). The method includes generating an abstract multipoint control unit (MCU) process at an electronic device, the abstract MCU process comprising an identification of MCU resources for instantiating the abstract MCU process. The method includes transmitting, from the electronic device, the abstract MCU process to a server, and receiving, from the server in response to the transmitted abstract MCU process, a concrete MCU process at the electronic device, the concrete MCU process comprising the identified plurality of MCU resources.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09654524&OS=09654524&RS=09654524
owner: FUTUREWEI TECHNOLOGIES, INC.
number: 09654524
owner_city: Plano
owner_country: US
publication_date: 20141217
---
The present disclosure relates generally to a multipoint control unit MCU and more particularly to a system and method of customizing an MCU.

An MCU is a device commonly used to bridge multiparty audio video conferences to connect and process multiple real time media streams. One challenge that exists with MCUs includes the difficulty in changing MCU topology e.g. how the MCU is connected in the network . Another challenge that exists includes the difficulty in changing a media process at runtime e.g. supporting an audio conference with three parties where the three parties do not have a common audio codec inside the MCU . Another challenge that exists includes the difficulty in adding new media functions such as automatic speech recognition automatic face recognition etc. during the audio video conference. Yet another challenge is the difficulty in accessing the core functions within the MCU e.g. the core media functions inside the MCU are fixed one size fits all .

According to one embodiment there is provided a method for constructing a multipoint control unit MCU . The method includes generating an abstract multipoint control unit MCU process at an electronic device the abstract MCU process comprising an identification of a plurality of MCU resources for instantiating the abstract MCU process transmitting from the electronic device the abstract MCU process to a server and receiving from the server in response to the transmitted abstract MCU process a concrete MCU process at the electronic device the concrete MCU process comprising the identified plurality of MCU resources.

In another embodiment there is provided an apparatus for constructing a multipoint control unit MCU . The apparatus comprises a processor and memory coupled to the processor. The apparatus is configured to generate an abstract multipoint control unit MCU process by a web browser of the apparatus the abstract MCU process comprising MCU resources that will be needed to instantiate the abstract MCU process and receive a concrete MCU process by the web browser of the apparatus the concrete MCU process comprising the needed MCU resources.

In this example the communication system includes electronic devices ED radio access networks RANs a core network a public switched telephone network PSTN the Internet and other networks one or more servers and one or more multipoint control units . While certain numbers of these components or elements are shown in any number of these components or elements may be included in the system .

The EDs are configured to operate and or communicate in the system . For example the EDs are configured to transmit and or receive via wireless or wired communication channels. Each ED represents any suitable end user device and may include such devices or may be referred to as a user equipment device UE wireless transmit receive unit WTRU mobile station fixed or mobile subscriber unit cellular telephone personal digital assistant PDA smartphone laptop computer touchpad wireless sensor or consumer electronics device all which include and incorporate a browser application.

The RANs here include base stations respectively. Each base station is configured to wirelessly interface with one or more of the EDs to enable access to the core network the PSTN the Internet and or the other networks . For example the base stations may include or be one or more of several well known devices such as a base transceiver station BTS a Node B NodeB an evolved NodeB eNodeB a Home NodeB a Home eNodeB a site controller an access point AP or a wireless router. EDs are configured to interface and communicate with the internet and may access the core network the PSTN and or the other networks which may include communicating with the server and the MCU .

In the embodiment shown in the base station forms part of the RAN which may include other base stations elements and or devices. Also the base station forms part of the RAN which may include other base stations elements and or devices. Each base station operates to transmit and or receive wireless signals within a particular geographic region or area sometimes referred to as a cell. In some embodiments multiple input multiple output MIMO technology may be employed having multiple transceivers for each cell.

The base stations communicate with one or more of the EDs over one or more air interfaces using wireless communication links. The air interfaces may utilize any suitable radio access technology.

It is contemplated that the system may use multiple channel access functionality including such schemes as described above. In particular embodiments the base stations and EDs implement LTE LTE A and or LTE B. Of course other multiple access schemes and wireless protocols may be utilized.

The RANs are in communication with the core network to provide the EDs with voice data application Voice over Internet Protocol VoIP or other services. Understandably the RANs and or the core network may be in direct or indirect communication with one or more other RANs not shown . The core network may also serve as a gateway access for other networks such as PSTN Internet and other networks . In addition some or all of the EDs may include functionality for communicating with different wireless networks over different wireless links using different wireless technologies and or protocols. Instead of wireless communication or in addition thereto the EDs may communicate via wired communication channels to a service provider or switch not shown and to the internet .

Although illustrates one example of a communication system various changes may be made to . For example the communication system could include any number of EDs base stations networks or other components in any suitable configuration.

As shown in the ED includes at least one processing unit . The processing unit implements various processing operations of the ED . For example the processing unit could perform signal coding data processing power control input output processing or any other functionality enabling the ED to operate in the system . The processing unit also supports the methods and teachings described in more detail above. Each processing unit includes any suitable processing or computing device configured to perform one or more operations. Each processing unit could for example include a microprocessor microcontroller digital signal processor field programmable gate array or application specific integrated circuit.

The ED also includes at least one transceiver . The transceiver is configured to modulate data or other content for transmission by at least one antenna or NIC Network Interface Controller . The transceiver is also configured to demodulate data or other content received by the at least one antenna . Each transceiver includes any suitable structure for generating signals for wireless or wired transmission and or processing signals received wirelessly or by wire. Each antenna includes any suitable structure for transmitting and or receiving wireless or wired signals. One or multiple transceivers could be used in the ED and one or multiple antennas could be used in the ED . Although shown as a single functional unit a transceiver could also be implemented using at least one transmitter and at least one separate receiver.

The ED further includes one or more input output devices or interfaces such as a wired interface to the internet . The input output devices facilitate interaction with a user or other devices network communications in the network. Each input output device includes any suitable structure for providing information to or receiving providing information from a user such as a speaker microphone keypad keyboard display or touch screen including network interface communications.

In addition the ED includes at least one memory . The memory stores instructions and data used generated or collected by the ED . For example the memory could store software or firmware instructions executed by the processing unit s and data used to reduce or eliminate interference in incoming signals. Each memory includes any suitable volatile and or non volatile storage and retrieval device s . Any suitable type of memory may be used such as random access memory RAM read only memory ROM hard disk optical disc subscriber identity module SIM card memory stick secure digital SD memory card and the like.

As shown in the server includes at least one processing unit at least one transmitter at least one receiver one or more antennas one or more wired network interfaces and at least one memory . The processing unit implements various processing operations of the server such as signal coding data processing power control input output processing or any other functionality. The processing unit can also support the methods and teachings described in more detail above. Each processing unit includes any suitable processing or computing device configured to perform one or more operations. Each processing unit could for example include a microprocessor microcontroller digital signal processor field programmable gate array or application specific integrated circuit.

Each transmitter includes any suitable structure for generating signals for wireless or wired transmission to one or more EDs or other devices. Each receiver includes any suitable structure for processing signals received wirelessly or by wire from one or more EDs or other devices. Although shown as separate components at least one transmitter and at least one receiver could be combined into a transceiver. Each antenna includes any suitable structure for transmitting and or receiving wireless or wired signals. While a common antenna is shown here as being coupled to both the transmitter and the receiver one or more antennas could be coupled to the transmitter s and one or more separate antennas could be coupled to the receiver s . Each memory includes any suitable volatile and or non volatile storage and retrieval device s .

Additional details regarding EDs and server are known to those of skill in the art. As such these details are omitted here for clarity.

Turning to high level system architectures are shown that illustrate exemplary embodiments of customized MCUs in a multi party conference. According to one embodiment an architecture illustrates a first MCU that operates as a separate process under the control of a browser through control path and processes media from browser through media path media from browser through media path and media from an MCU through media path . A second MCU operates as a separate server under the control of a web server through control path and processes media from MCU through media path and media from MCU through media path . A third MCU operates as a component of a browser and processes media from MCU through media path media from browser through internal media path and media from a browser through media path . Browsers and are also under the control of a web server that manages the conference through control paths and .

For example a first decoder is configured to decode the first media stream a to generate a first decoded media stream r a second decoder is configured to decode the second media stream b to generate a second decoded media stream r and a third decoder is configured to decode the third media stream c to generate a third decoded media stream r . A first exploder is configured to forward the first decoded media stream r to a second mixer and a third mixer . A second exploder is configured to forward the second decoded media stream r to a first mixer and the third mixer . A third exploder is configured to forward the third decoded media stream r to the first mixer and the second mixer .

Each of the mixers is configured to mix streams together and generate a corresponding mixed stream. For example the first mixer is configured to mix streams together and generate a first mixed stream r the second mixer is configured to mix streams together and generate a second mixed stream r and the third mixer is configured to mix streams together and generate a third mixed stream r .

A first encoder is configured to encode the first mixed stream and generate a first encoded stream a that is sent back to the first participant P . A second encoder is configured to encode the second mixed stream and generate a second encoded stream b that is sent back to the second participant P . A third encoder is configured to encode the third mixed stream and generate a third encoded stream c that is sent back to the third participant P .

Each of the participants is associated with an endpoint that connects to the MCU. Each of the participants is associated with a media stream that is processed by components within the MCU. For example the first participant P is associated with a first media stream a the second participant P is associated with the first media stream a and the third participant P is associated with the first media stream a . In the illustrated embodiment the first media stream a is an audio stream.

A decoder is configured to decode the first media stream a to generate a first decoded media stream r to generate a second decoded media stream r and to generate a third decoded media stream r . A first exploder is configured to forward the first decoded media stream r to a second mixer and a third mixer . A second exploder is configured to forward the second decoded media stream r to a first mixer and the third mixer . A third exploder is configured to forward the third decoded media stream r to the first mixer and the second mixer .

Each of the mixers is configured to mix streams together and generate a corresponding mixed stream. For example the first mixer is configured to mix streams together and generate a first mixed stream r the second mixer is configured to mix streams together and generate a second mixed stream r and the third mixer is configured to mix streams together and generate a third mixed stream r .

An encoder is configured to encode the first mixed stream and generate a first encoded stream a that is sent back to the first participant P . The encoder is configured to encode the second mixed stream and generate a second encoded stream a that is sent back to the second participant P . The encoder is configured to encode the third mixed stream and generate a third encoded stream a that is sent back to the third participant P .

As an illustrative example the three participants may be a teacher a first student and a second student . To support this application some of the components incorporated within the MCU are different as compared to those components incorporated and described above with respect to . For example one or more translators may be included if the audio stream of the teacher is to be translated. In addition one or more recorders may be included if the first student and or the second student desires to record private audio notes related to the teacher s lecture.

For example an exploder is configured to receive an audio stream from the teacher and to forward the received audio stream to one or more translators . Each translator is configured to translate the forwarded audio stream and to generate a respective translated audio stream e.g. translated audio streams and that is sent back to the corresponding participant e.g. the first student and a second student . One or more recorders are configured to receive an audio stream from a respective student if the first student and or the second student desires to record private audio notes related to the teacher s lecture.

In order to perform MCU customization as described above with respect to the present disclosure describes a web based system that allows users to dynamically search for and identify one or more MCU components on the web and then assemble or incorporate the identified components into the MCU as desired. For example a first XML language may describe a configuration of the MCU e.g. define what resources components are required or desired and how to connect the resources components together. It may be beneficial for the user to be able to modify the configuration of the MCU as user requirements change. As such the first XML language may describe modifications to the MCU process. In addition a second XML language may describe MCU resources on the web so that an MCU process can search for and identify the best matched MCU resources for insertion within the MCU. In other words the components on the web should be described in a way so that a determination can be made as to whether they match the components the user desires. Web browsers and web servers can be utilized to support the customization process for the user to dynamically define the MCU process search for the best matched MCU resources and load assemble the matched resources into the defined process for execution in the resulting assembled MCU. Although an XML language is referenced above it will be appreciated that other alternatives such as JavaScript Object Notation JSON may be utilized.

To illustrate the web browser can create an MCU media process and deploy it through the MCU shell . The user uses the web browser to define the process and to define the media components within the process. Thereafter the web server searches for the matched components for that process and the web server will download the matched components to the MCU resource cache for deployment to the MCU shell . The web browser may use the Representational State Transfer Application Programming Interface REST API of the MCU shell to create and update MCU processes using the MCU resources in the MCU resource cache .

Now turning to there is illustrated a process for generating an MCU process in accordance with one embodiment of the present disclosure. As shown the process is implemented among various devices or components including an MCU shell a browser a cache one or more web servers and MCU resources . In a particular embodiment the MCU shell may correspond to the MCU shell the browser may correspond to the web browser the cache may correspond to the MCU resource cache each of the one or more web servers may correspond to the web servers and the MCU resources may correspond to the MCU resources all as shown in .

According to the present disclosure during operation a user of an electronic device opens the browser and connects to an MCU website step hosted by the web server and retrieves MCU pages step from the web server that are related to the MCU. In a particular embodiment the MCU website may be a website dedicated to MCU customization.

Thereafter the user may compose an abstract MCU process step via the browser . For example the user may determine that he she needs media components that include three decoders three exploders three mixers and three encoders may indicate how these media components are connected to each other and or to the MCU and may indicate such through a graphic interface. Once the media components are defined or identified the user submits the abstract MCU process e.g. abstract P to the web server step . With that information the web server searches for and identifies the requested resources or media components e.g. MCU resources for the process p step and returns the requested resources with the process e.g. concrete process P to the browser step .

As will be appreciated the main difference between an abstract process and a concrete process is that an abstract process does not have a resource association whereas a concrete process has a resource association.

Thereafter the browser may parse the concrete process P step to determine concrete resource associations and download the needed resources into the cache step . If the required resources are not already in the cache then the needed resources are downloaded via the MCU resources to the cache steps and and the cache locations of the needed resources are provided to the browser step .

At this point there exists a process with the resources downloaded into the cache and the browser is ready to deploy the concrete process to the MCU shell . The browser receives the concrete process P and replaces the location of the concrete resources to have them pointing to the cache rather than pointing to the original web server step e.g. P P.replace URIs by cache locations because the locations have already been downloaded from the original web server to the cache . Thereafter the browser generates a session with the MCU shell to separate the different processes steps and and then the concrete process whose resources are cached e.g. process P is sent to the MCU shell step and then the MCU shell will begin to load the MCU resources from the cache step .

According to the present disclosure during operation a user of an electronic device opens the browser to update a first MCU process e.g. process P to a second MCU process e.g. process P step . Thereafter the user may compose an abstract MCU process via the browser . In a particular implementation the abstract MCU process may comprise a difference between the first process P and the second process P e.g. abstract P and the abstract MCU process P may be submitted to the web server step . With that information the web server searches the MCU resources for the resources needed by MCU process P step . Once the web server finds the needed resources the web server returns the needed resources with the process e.g. concrete process P to the browser step .

Thereafter the browser may parse the concrete process P step to determine concrete resource associations and thereafter download the needed resources into the cache step . If the required resources are not already in the cache then these resources are downloaded via the MCU resources to the cache steps and and the cache locations are provided to the browser step .

After the process with the resources has been downloaded into the cache the browser receives the concrete process P and replaces the location of the concrete resources to have them pointing to the cache rather than pointing to the original web server step e.g. P P.replace remoteURIs by cache locations because the locations have already been downloaded from the original web server to the cache . Thereafter the browser sends an update command to the MCU shell e.g. P.updateP and then the updated concrete process whose resources are cached e.g. process P is sent to the MCU shell step . Thereafter the MCU shell will begin to load the MCU resources from the cache step .

The element makes 1 to n or n to 1 connections between resources. Assuming that the user wants the resource e connected to both resource t and to resource t then as illustrated the connection between resource e and the resources t and t is defined as . If an input to the MCU is to be connected to the resource e then as illustrated the connection between the input and the resource e is defined as . Similarly if an input to the MCU is to be connected to the resource r then as illustrated the connection between the input and the resource r is defined as etc.

During operation the user composes the abstract process via the web browser and sends the abstract process to the web server . Thereafter the web server searches the repository e.g. MCU resources and finds the resources adds the bindings to the found resources and then sends the resources with the bindings back to the web browser e.g. the concrete process .

Thereafter the browser receives the XML document parses the XML document tries to find matching resources and downloads the concrete resources from the web. The resources are downloaded into the MCU cache from the repository e.g. MCU resources . Once the download succeeds the browser executes a Java script function to update these processes within the MCU shell . For example the translator in the MCU shell corresponds to the new resource t in the XML document . Similarly the speech recognition engine in the MCU shell corresponds to the new resource a in the XML document . As illustrated the speech recognition engine and the translator module are the new resources that have been added to the MCU process illustrated in .

The way media components process media streams also is finite. In general there are four operations for any media stream at any of the three levels described above 1 explode takes a stream and makes a duplication of it 2 merge same source merge stream from the same source 3 merge different sources merge stream from different sources and 4 translate changes format of the media stream. Based on this observation any media component can be described in relation to what is input to the media component and what is output by the media component using the illustrated table. In addition this allows for type checking of the MCU process where connectivity between components is checked to verify that the components are connected correctly and that the media types are compatible. If there is a misconnection the MCU process may not work.

The following are examples of MCU components and how their function can be described in XML. It will be appreciated that more MCU components than those described below can be described in XML JSON or other alternative formats. For example a selector resource whose basic function is to select N sink streams from M source streams may be described using the selector resource XML representation 

As illustrated the selector resource XML representation includes a source attribute to define the source a sink attribute to define the sink and a media type attribute to define the media type. A constraints attribute may be used to define the number of ports between the two components e.g. source and sink .

A multicast resource whose basic function is to duplicate one stream to m streams may be described using the multicast resource XML representation 

A switch resource whose basic function is to rearrange m source streams into m sink streams may be described using the switch resource XML representation 

A bundle resource whose basic function is to compose multiple media frames of a source stream into a single packet in the sink stream batch media frames may be described using the bundle resource XML representation 

An unbundle resource whose basic function is to decompose a single frame in the source stream into multiple frames in the sink stream may be described using the unbundle resource XML representation 

A mixer resource whose basic function is to compose frames from multiple source streams into a single frame in the sink stream in the decompressed domain may be described using the mixer resource XML representation 

A transcoder resource whose basic function is to change the encoding of the source stream to a different one may be described using the transcoder resource XML representation 

A bridge resource whose basic function is to change the transport e.g. RTP UDP IPv4 of the source stream to a different transport e.g. RTP UDP IPv6 may be described using the bridge resource XML representation 

A decoder resource whose basic function is to decode one stream may be described using the decoder resource XML representation 

An encoder resource whose basic function is to encode one stream may be described using the encoder resource XML representation 

A mux resource whose basic function is to send m source streams to the same transport port may be described using the mux resource XML representation 

The method includes transmitting from the electronic device the abstract MCU process to a server at step . For example once the media components are defined or identified the user submits the abstract MCU process to the web server .

The method includes receiving from the server in response to the transmitted abstract MCU process a concrete MCU process at the electronic device the concrete MCU process comprising the identified plurality of MCU resources at step . For example with the abstract process information the web server searches for and identifies the requested resources or media components for the process and returns the requested resources with the process to the browser . Thereafter the web browser may parse the concrete process to determine concrete resource associations and download the defined resources.

In accordance with this disclosure users can create customized MCU networks and processes using the MCU resources e.g. building blocks available on the web to reduce cost and increase performance of a prebuilt MCU with limited configuration options. In addition an MCU resource cache can increase download performance for multiple MCU shells and isolate MCU shells from the web for security reasons. Further the present disclosure supports a dynamic MCU process update without necessarily stopping the entire MCU process. In addition the MCU processes can be shared between applications to save development cost.

In some embodiments some or all of the functions or processes of the one or more of the devices are implemented or supported by a computer program that is formed from computer readable program code and that is embodied in a computer readable medium. The phrase computer readable program code includes any type of computer code including source code object code and executable code. The phrase computer readable medium includes any type of medium capable of being accessed by a computer such as read only memory ROM random access memory RAM a hard disk drive a compact disc CD a digital video disc DVD or any other type of memory.

It may be advantageous to set forth definitions of certain words and phrases used throughout this patent document. The terms include and comprise as well as derivatives thereof mean inclusion without limitation. The term or is inclusive meaning and or. The phrases associated with and associated therewith as well as derivatives thereof mean to include be included within interconnect with contain be contained within connect to or with couple to or with be communicable with cooperate with interleave juxtapose be proximate to be bound to or with have have a property of or the like.

While this disclosure has described certain embodiments and generally associated methods alterations and permutations of these embodiments and methods will be apparent to those skilled in the art. Accordingly the above description of example embodiments does not define or constrain this disclosure. Other changes substitutions and alterations are also possible without departing from the spirit and scope of this disclosure as defined by the following claims.

