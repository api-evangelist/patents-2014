---

title: Cut-through forwarding of CCNx message fragments with IP encapsulation
abstract: One embodiment provides a system that facilitates cut-through forwarding of message fragments over a network. During operation, the system receives a packet that corresponds to a fragment of a message and contains a fragment header. The system stores in a data structure a mapping relationship between the fragment header and a hierarchically structured variable-length identifier (HSVLI), wherein the HSVLI comprises contiguous name components ordered from a most general level to a most specific level. The system makes a forwarding decision for the packet based on the fragment header prior to receiving all fragment packets associated with the message, thereby facilitating cut-through forwarding of the message fragments over a network.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09516144&OS=09516144&RS=09516144
owner: PALO ALTO RESEARCH CENTER INCORPORATED
number: 09516144
owner_city: Palo Alto
owner_country: US
publication_date: 20140619
---
This disclosure is generally related to efficient communication over a data network. More specifically this disclosure is related to cut through forwarding of CCN message fragments using IP encapsulation.

The proliferation of the Internet and e commerce continues to create a vast amount of digital content. Content centric network CCN architectures have been designed to facilitate accessing and processing such digital content. A CCN includes entities or nodes such as network clients forwarders e.g. routers and content producers which communicate with each other by sending interest packets for various content items and receiving content object packets in return. CCN interests and content objects are identified by their unique names which are typically hierarchically structured variable length identifiers HSVLI . Generally interests and content objects travel through a number of links before they can reach their destination. Each link can have its own maximum transmission unit MTU where the differing MTU limits impose different fragmentation requirements. End to end CCN fragmentation is described in the following applications 

In a heterogeneous network comprised of both CCN and Internet Protocol IP nodes or forwarding devices such as routers a piece of CCN content requested in an interest or received in a content object may be larger than the maximum transmission unit MTU of the network. One solution is to use IP at the network layer and rely on IP fragmentation. A CCN message interest or content object can be carried as the IP payload and fragmented by currently known IP fragmentation methods as it travels hop by hop to the next CCN router. The CCN nodes can rely on a standard IPv4 or IPv6 protocol stack to reassemble the fragments at each CCN hop. However this solution introduces delay because the CCN router needs to wait for all the IP fragments to arrive in order to reassemble the entire CCN message and determine the next CCN hop. Furthermore this solution introduces additional delay because upon reassembly the IP packet may need to be re fragmented for subsequent travel across the network.

One embodiment provides a system that facilitates cut through forwarding of message fragments over a network. During operation the system receives a packet that corresponds to a fragment of a message and contains a fragment header. The system stores in a data structure a mapping relationship between the fragment header and a hierarchically structured variable length identifier HSVLI wherein the HSVLI comprises contiguous name components ordered from a most general level to a most specific level. The system makes a forwarding decision for the packet based on the fragment header prior to receiving all fragment packets associated with the message thereby facilitating cut through forwarding of the message fragments over a network.

In some embodiments the fragment header includes a flow identifier that indicates that the fragment corresponds to the message a fragment count that indicates a total number of fragments which correspond to the message and a fragment number that indicates the index of the fragment.

In some embodiments the data structure further comprises a fragment stream identifier which corresponds to a tuple that includes an Internet Protocol IP source address an IP destination address a protocol field that indicates a higher layer protocol carried in an IP packet and a flow identifier that indicates that the fragment corresponds to the message.

In some embodiments the system maintains a pending interest table PIT where a respective entry in the PIT indicates a pending interest the flow identifier a hierarchically structured variable length identifier HSVLI that identifies the interest and corresponds to the flow identifier and a fragment bitmap that indicates a number of corresponding content fragments that have been provided for the interest.

In some embodiments the system encapsulates the packet using an outer IP header to transmit the packet across a mixed network where the mixed network is comprised of nodes associated with one or more of a content centric network CCN a network running a version four of IP and a network running a version six of IP thereby facilitating cut through forwarding of the message fragments using IP encapsulation over the network.

In some embodiments the packet contains a content object in response to an interest in the content where the size of the packet containing the content object is equal in size to or smaller than the largest fragment corresponding to an interest in the content based on the same flow identifier in the fragment header.

In some embodiments the system determines by a requesting node a maximum transmission unit MTU of a network. The system fragments a message into one or more packets where the size of each packet is less than or equal to the MTU of the network. The system generates a fragment header which identifies the one or more packets as corresponding to the message.

In some embodiments the system generates a flow identifier which corresponds to an HSVLI of the message. Furthermore the fragment header includes the flow identifier a fragment count that indicates the total number of fragments which correspond to the message and a fragment number that indicates the index of the fragment.

The following description is presented to enable any person skilled in the art to make and use the embodiments and is provided in the context of a particular application and its requirements. Various modifications to the disclosed embodiments will be readily apparent to those skilled in the art and the general principles defined herein may be applied to other embodiments and applications without departing from the spirit and scope of the present disclosure. Thus the present invention is not limited to the embodiments shown but is to be accorded the widest scope consistent with the principles and features disclosed herein.

Embodiments of the present invention provide a system which facilitates cut through forwarding of CCN message fragments using IP encapsulation in a heterogeneous network comprised of both CCN and IP nodes. In such a network when a CCN interest or content object message is larger than the maximum transmission unit MTU of the underlying network the network provides the fragmentation services e.g. IP fragmentation. The CCN message is carried as the payload in an IP packet which is then fragmented using IP fragmentation and sent from the requesting CCN node to the CCN node at the destination IP address. The receiving CCN node can use a standard IPv4 or IPv6 protocol stack to reassemble the fragments at each CCN hop. However this method incurs delay because 1 the CCN node needs to wait for all of the IP packet fragments to arrive in order to reassemble the CCN message and determine the next CCN hop and 2 upon reassembly the CCN message may need to be re fragmented for subsequent transmission across the network.

The present invention solves the problem of delay and inefficiency due to reassembly and re fragmentation by pre fragmenting the CCN message into fragments that are the same size as or smaller than the MTU of the underlying network and including a fragment header in the payload of each message fragment. The fragment header identifies the fragment as belonging to the CCN message. During operation a CCN node sends a first fragment associated with a CCN message which can be a CCN interest or content object which contains the HSVLI that uniquely identifies a piece of content along with the fragment header. Subsequent fragments sent by the CCN node contain portions of the same CCN message and the appropriate fragment header which indicates a flow identifier corresponding to the CCN message a total fragment count and an index number. The fragments are passed to the IP layer and encapsulated with the appropriate IP header.

An intermediate CCN node receives the first fragment maps the flow identifier to the HSVLI updates its Pending Interest Table PIT and forwards the fragment to the next CCN hop in the CCN data path by passing the fragment back to the IP layer. When this intermediate CCN node receives subsequent fragments of the same CCN message it simply checks the flow identifier and forwards the fragment to the next CCN hop in the same manner as the first fragment without having to wait for all fragments belonging the same CCN message to be received before making a forwarding decision. This system thus facilitates cut through forwarding of CCN message fragments with underlying IP encapsulation.

Content Object A single piece of named data which is bound to a unique name. Content Objects are persistent which means that a Content Object can move around within a computing device or across different computing devices but does not change. If any component of the Content Object changes the entity that made the change creates a new Content Object that includes the updated content and binds the new Content Object to a new unique name.

Unique Names A name in a CCN is typically location independent and uniquely identifies a Content Object. A data forwarding device can use the name or name prefix to forward a packet toward a network node that generates or stores the Content Object regardless of a network address or physical location for the Content Object. In some embodiments the name may be a hierarchically structured variable length identifier HSVLI . The HSVLI can be divided into several hierarchical components which can be structured in various ways. For example the individual name components parc home ccn and test.txt can be structured in a left oriented prefix major fashion to form the name parc home ccn test.txt. Thus the name parc home ccn can be a parent or prefix of parc home ccn test.txt. Additional components can be used to distinguish between different versions of the content item such as a collaborative document.

In some embodiments the name can include a non hierarchical identifier such as a hash value that is derived from the Content Object s data e.g. a checksum value and or from elements of the Content Object s name. A description of a hash based name is described in U.S. patent application Ser. No. 13 847 814 entitled ORDERED ELEMENT NAMING FOR NAME BASED PACKET FORWARDING by inventor Ignacio Solis filed 20 Mar. 2013 which is hereby incorporated by reference. A name can also be a flat label. Hereinafter name is used to refer to any name for a piece of data in a name data network such as a hierarchical name or name prefix a flat name a fixed length name an arbitrary length name or a label e.g. a Multiprotocol Label Switching MPLS label .

Interest A packet that indicates a request for a piece of data and includes a name or a name prefix for the piece of data. A data consumer can disseminate a request or Interest across an information centric network which CCN routers can propagate toward a storage device e.g. a cache server or a data producer that can provide the requested data to satisfy the request or Interest.

The methods disclosed herein are not limited to CCN networks and are applicable to other architectures as well. A description of a CCN architecture is described in U.S. patent application Ser. No. 12 338 175 entitled CONTROLLING THE SPREAD OF INTERESTS AND CONTENT IN A CONTENT CENTRIC NETWORK by inventors Van L. Jacobson and Diana K. Smetters filed 18 Dec. 2008 which is hereby incorporated by reference.

Content producer can receive the interest fragments pre fragment the requested content object add a fragment header to each of the fragment packets and forward the content object fragments back along the reverse path of the interest. CCN router can receive the fragments and forward the content object fragments by continuing to follow the reverse path of the interest e.g. to CCN router and on to requesting node . Requesting node receives all the content object fragments and reassembles the content object.

If the flow identifier exists in the data structure decision a mapping relationship between the HSVLI and the flow identifier has already been created indicating that the fragment or fragments containing the HSVLI has already been received by the intermediate router. In this case the system performs cut through forwarding of the interest message fragment by forwarding the fragment to the next hop in the CCN data path operation prior to receiving all fragment packets associated with the message. The intermediate CCN router forwards the fragment by sending the CCN fragment to the underlying IP layer which re writes the IP header based on the IP address of the next hop CCN node.

If the received fragment does contain the HSVLI decision and the content does not reside in the cache of the intermediate router decision the intermediate router creates a data structure mapping the flow identifier from the fragment header to the HSVLI operation . The intermediate router updates the Pending Interest Table PIT by adding an entry which corresponds to the interest operation and forwards the fragment by rewriting the outer IP header for the next hop in the CCN routing path operation . In some embodiments the PIT includes an interest fragment bitmap column which is updated each time a corresponding interest fragment is received by the intermediate router.

Content processing system can include instructions which when executed by computer and communication system can cause computer and communication system to perform methods and or processes described in this disclosure. Specifically content processing system may include instructions for receiving a packet that corresponds to a fragment of a message and contains a fragment header communication mechanism . Content processing system can also include instructions for making a forwarding decision for the packet based on the fragment header prior to receiving all fragments associated with the message forwarding mechanism .

Content processing system can further include instructions for in response to identifying a maximum transmission unit MTU of a network fragmenting a message into one or more packets where the size of each packet is less than or equal to the MTU of the network fragmentation mechanism . Content processing system can also contain instructions for generating a fragment header which identifies the one or more packets as corresponding to the message fragment header generation mechanism and can further generate a flow identifier which corresponds to a hierarchically structured variable length identifier HSVLI of the message fragment header generation mechanism .

Content processing system can include instructions for storing in a data structure a mapping relationship between the fragment header and an HSVLI where the HSVLI comprises contiguous name components ordered from a most general level to a most specific level data structure maintenance mechanism . Content processing system can also include instructions for maintaining a pending interest table PIT where a respective PIT entry indicates a pending interest a flow identifier an HSVLI that identifies the interest and corresponds to the flow identifier and a fragment bitmap column that indicates a number of corresponding content fragments that have been provided for the interest data structure maintenance mechanism . Content processing system can further include instructions for encapsulating a packet using an outer Internet Protocol IP header to transmit the packet across a mixed network where the mixed network is comprised of nodes associated with one or more of a CCN an IPv4 network and an IPv6 network encapsulation mechanism .

Data can include any data that is required as input or that is generated as output by the methods and or processes described in this disclosure. Specifically data can store at least a packet that corresponds to a fragment of a message and contains a fragment header a fragment header a flow identifier that indicates that the fragment corresponds to a message a fragment count that indicates a total number of fragments which correspond to a message a fragment number that indicates the index of the fragment in the stream a fragment stream identifier which corresponds to a tuple comprised of an IP source address an IP destination address a protocol field that indicates a higher layer protocol carried in an IP packet and a flow identifier that indicates that the fragment corresponds to a message a hierarchically structured variable length identifier HSVLI comprising contiguous name components ordered from a most general level to a most specific level a data structure containing a mapping relationship between a fragment header and an HSVLI a pending interest table PIT a fragment bitmap that indicates a number of corresponding content fragments that have been provided for an interest a fragment bitmap that indicates a number of corresponding interest fragments that have been received by an intermediate node and an IP header sufficient to encapsulate an IP packet and transmit the packet across a mixed network comprised of CCN IPv4 and or IPv6 nodes.

The data structures and code described in this detailed description are typically stored on a computer readable storage medium which may be any device or medium that can store code and or data for use by a computer system. The computer readable storage medium includes but is not limited to volatile memory non volatile memory magnetic and optical storage devices such as disk drives magnetic tape CDs compact discs DVDs digital versatile discs or digital video discs or other media capable of storing computer readable media now known or later developed.

The methods and processes described in the detailed description section can be embodied as code and or data which can be stored in a computer readable storage medium as described above. When a computer system reads and executes the code and or data stored on the computer readable storage medium the computer system performs the methods and processes embodied as data structures and code and stored within the computer readable storage medium.

Furthermore the methods and processes described above can be included in hardware modules or apparatus. The hardware modules or apparatus can include but are not limited to application specific integrated circuit ASIC chips field programmable gate arrays FPGAs dedicated or shared processors that execute a particular software module or a piece of code at a particular time and other programmable logic devices now known or later developed. When the hardware modules or apparatus are activated they perform the methods and processes included within them.

The foregoing descriptions of embodiments of the present invention have been presented for purposes of illustration and description only. They are not intended to be exhaustive or to limit the present invention to the forms disclosed. Accordingly many modifications and variations will be apparent to practitioners skilled in the art. Additionally the above disclosure is not intended to limit the present invention. The scope of the present invention is defined by the appended claims.

