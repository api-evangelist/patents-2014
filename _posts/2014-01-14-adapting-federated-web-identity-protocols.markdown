---

title: Adapting federated web identity protocols
abstract: A method of performing a Real-Time Communication in Web-browsers (RTCWEB) identity authentication based on an authentication of a non-RTCWEB compliant Identity Provider (IdP) server comprising receiving, by an RTCWEB IdP client, an RTCWEB identity authentication request from a user agent, creating a session resource with a Relying Party (RP) client, wherein the RP client guards the session resource, instructing the user agent to authenticate with the RP client by employing a non-RTCWEB identity protocol to access the session resource, receiving authentication results from the non-RTCWEB compliant IdP server via the RP client, and sending an RTCWEB authentication to the user agent via the session resource.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09258292&OS=09258292&RS=09258292
owner: Futurewei Technologies, Inc.
number: 09258292
owner_city: Plano
owner_country: US
publication_date: 20140114
---
The present application claims priority to U.S. Provisional Patent Application 61 752 254 filed Jan. 14 2013 by Li Li et al. and entitled A System and Method to Adapt Federated Web Identity Protocols which is incorporated herein by reference as if reproduced in its entirety.

Web based applications have been developed to support video and or audio calls between user devices. For example a local user may wish to call a remote user via a web browser. The user may employ a web based application with a user interface. The user may interact with the interface to determine that the remote user is available. The user may then make the call. The remote user may then accept or deny the call request. Various security protocols may be employed to assure the local user that the party appearing as the remote user is actually the remote user and not a malicious entity and vice versa. Real Time Communication in Web browsers RTCWEB may be a standardized protocol suite which may support web based user to user interaction. However RTCWEB may not be completely backwards compatible with legacy security devices as such security devices may not support all protocols required for full RTCWEB functionality.

In one embodiment the disclosure includes an apparatus comprising one or more receivers configured to receive an RTCWEB identity authentication request from a user agent one or more transmitters configured to transmit messages to the user agent and an Identity Provider IdP server that supports a non RTCWEB Identity protocol a processor coupled to the receivers and the transmitters and configured to create a Relying Party RP client in a non RTCWEB layer wherein the RP client is configured to perform a non RTCWEB authentication by authenticating the user agent with the IdP server via the transmitters and receivers using the non RTCWEB protocol and create an IdP client in an RTCWEB layer wherein the IdP client is configured to communicate with the user agent via the transmitters using an RTCWEB protocol to instruct the user agent to communicate with the RP client by employing the non RTCWEB protocol for user authentication and provide an RTCWEB identity authentication to the user agent based on results of the RP client non RTCWEB authentication.

In another embodiment the disclosure includes a method of performing an RTCWEB authentication based on an authentication of a non RTCWEB compliant IdP server comprising receiving by an RTCWEB IdP client an RTCWEB identity authentication request from a user agent creating a session resource with a RP client wherein the RP client guards the session resource instructing the user agent to authenticate with the RP client by employing a non RTCWEB protocol to access the session resource receiving authentication results from the non RTCWEB compliant IdP server via the RP client and sending an RTCWEB authentication to the user agent via the session resource.

In another embodiment the disclosure includes a method of obtaining an RTCWEB identity authentication from an Identity Adaptation Provider IdAP based on an authentication of a non RTCWEB compliant IdP server comprising creating an RTCWEB proxy and a non RTCWEB proxy based on instructions from an IdP client of an IdAP transmitting an RTCWEB identity authentication request to the IdP client from the RTCWEB proxy forwarding session data from the RTCWEB proxy to the non RTCWEB proxy transmitting a non RTCWEB authentication request to a RP client of the IdAP for authentication with the non RTCWEB compliant IdP server wherein the non RTCWEB authentication request is transmitted from the non RTCWEB proxy and wherein the non RTCWEB authentication request comprises the session data and receiving an RTCWEB identity authentication from the IdAP.

These and other features will be more clearly understood from the following detailed description taken in conjunction with the accompanying drawings and claims.

It should be understood at the outset that although an illustrative implementation of one or more embodiments are provided below the disclosed systems and or methods may be implemented using any number of techniques whether currently known or in existence. The disclosure should in no way be limited to the illustrative implementations drawings and techniques illustrated below including the exemplary designs and implementations illustrated and described herein but may be modified within the scope of the appended claims along with their full scope of equivalents.

RTCWEB may be a secure communication protocol suite as set forth in Internet Engineering Task Force IETF document draft ietf rtcweb security arch 07 and World Wide Web Consortium W3C document WebRTC 1.0 Real time Communication Between Browsers W3C Working Draft 10 both of which are hereby incorporated by reference. RTCWEB also known as WebRTC may allow browser to browser communications such as voice calling video chat peer to peer P2P file sharing audio calls etc. without requiring web browser plugins. For example RTCWEB may be a protocol suite that supports direct real time media transfer between web browsers by employing Ecma International Scripting language ECMAScript based Application Programming Interfaces APIs in Web interface definition language WebIDL . RTCWEB may be based on federated identity systems where user agents can authenticate themselves to each other through IdPs that may not be controlled by associated calling sites for example OpenID OAuth and or Mozilla Persona. However RTCWEB may not interact seamlessly with all identity protocols. For example RTCWEB may require that all IdPs sign an arbitrary string such as a Datagram Transport Layer Security DTLS fingerprint to cryptographically bind Secure Real time Transport Protocol SRTP and or DTLS to a particular user identity. RTCWEB may also require that all IdPs be configured to verify signatures even though some protocols such as WebID may not support such verification. RTCWEB may also require that all IdPs return a JavaScript module to encapsulate an associated protocol stack. However some IdPs such as Persona or OAuth version 2.0 may not support such a feature. RTCWEB may allow the use of Third Party IdPs but may not describe how such IdPs interact with authoritative IdP to provide the associated authorization services.

Disclosed herein is a mechanism to allow a user agent e.g. a web browser to obtain an RTCWEB identity signature and or RTCWEB identity verification from an IdP server that does not support RTCWEB protocols. The user agent may login to an IdAP. The IdAP may comprise an IdP client for communicating with the user agent using RTCWEB protocols and an RP client for communicating with the user agent in a non RTCWEB protocol supported by the IdP server. The IdAP may instruct the user agent to create an RTCWEB proxy for RTCWEB communications with the IdP client and a non RTCWEB proxy for communications with the RP client. The IdP client may receive RTCWEB compliant identifying data from the RTCWEB proxy. The IdP client may then create a session with the RP to hold the identifying data. The RP client may guard access to the data in the session. The RP client may communicate with the non RTCWEB proxy and or the IdP server in a protocol native to the IdP server. The RP client may facilitate authentication of the user agent by the IdP server but may not receive user secrets e.g. passwords associated with the IdP server. The RP client may receive the results of the IdP server authentication and forward them to the IdP client via the session. The IdP client may then issue an RTCWEB compliant identity signature and or verification to the session for transmittal to the user agent. The RTCWEB identity signature may be used by a local user agent for security purposes when making an RTCWEB based call to a remote user agent. The remote user agent may then verify the RTCWEB identity signature of the local user agent via the IdAP the IdP server or combinations thereof.

User agents and may each be any device and or software that may act as a source and or destination of an RTCWEB based connection. For example user agents and may comprise personal computers PCs smart phones tablet PCs web browsing software etc. User agents and or may communicate and or call one another via servers and or . Servers and or may be any hardware and or software component configured to initiate maintain and or host such an RTCWEB communication for example a web server data center component file server application server communication server etc. It should be noted that while network employs two servers any number of servers may be used depending on network implementation.

IdPs and or may be any hardware and or software component configured to issue identification authentication information to identify a user agent and or for security purposes. An IdP and or may be for example web servers data center components application servers communication servers etc. For example user agent may send sign requests to IdPs and IdPs may issue identification authentication information to user agent via IdAP . IdPs may then receive a verification message from user agent comprising the identification authentication information. IdPs may verify that the identification authentication information matches the identification authentication information issued to user agent and that the entity transmitting the identification authentication information to user agent is user agent and not some other entity. IdPs may perform a substantially similar function for user agent . IdPs and or may not support RTCWEB. As such IdPs and or may not respond directly to a RTCWEB sign request. IdPs and or may instead be configured for some other non RTCWEB protocol and or protocol suite. As such IdPs and or may be non RTCWEB compliant. It should be noted that while three IdPs and or are employed in network any number of IdPs may be used as needed for a particular embodiment.

IdAP and or may be any hardware and or software component configured to support RTCWEB security authentication via a non RTCWEB compliant IdP such as IdPs and or . An IdAP and or may be for example web servers data center components application servers communication servers hardware adaptors connected to an IdP etc. IdAPs and or may comprise functionality as discussed in greater detail herein below.

In an embodiment user agent and or may employ the components of network to make an RTCWEB based call by employing a security handshake. In an embodiment user agent may initiate the call. User agent may obtain a signature from IdPs via IdAP as discussed below. User agent may transmit an offer to user agent via servers and . The offer may comprise the signature from IdPs . User agent may verify the signature from the offer via IdAP and or IdPs . User agent may then obtain a signature from IdPs via IdAP in a manner substantially similar to user agent and IdPs . User agent may then transmit the signature to user agent as part of an answer. User agent may then verify the signature with IdAP and or IdPs . User agents and may then communication directly and or via servers and or .

It is understood that by programming and or loading executable instructions onto the NE at least one of the processor RTCWEB module non RTCWEB module Tx Rxs memory downstream ports and or upstream ports are changed transforming the NE in part into a particular machine or apparatus e.g. a multi core forwarding architecture having the novel functionality taught by the present disclosure. It is fundamental to the electrical engineering and software engineering arts that functionality that can be implemented by loading executable software into a computer can be converted to a hardware implementation by well known design rules. Decisions between implementing a concept in software versus hardware typically hinge on considerations of stability of the design and numbers of units to be produced rather than any issues involved in translating from the software domain to the hardware domain. Generally a design that is still subject to frequent change may be preferred to be implemented in software because re spinning a hardware implementation is more expensive than re spinning a software design. Generally a design that is stable that will be produced in large volume may be preferred to be implemented in hardware for example in an ASIC because for large production runs the hardware implementation may be less expensive than the software implementation. Often a design may be developed and tested in a software form and later transformed by well known design rules to an equivalent hardware implementation in an application specific integrated circuit that hardwires the instructions of the software. In the same manner as a machine controlled by a new ASIC is a particular machine or apparatus likewise a computer that has been programmed and or loaded with executable instructions may be viewed as a particular machine or apparatus.

IdAP may act as both an IdP and a Relying Party RP . IdAP may be configured to act as a IdP by receiving RTCWEB sign requests from user agent and issuing RTCWEB signatures. IdAP may be configured to act as an RP by relying on IdP to provide authentication credentials for the user agent . IdAP may comprise an IdP client which may operate in the RTCWEB layer and an RP client which may operate in the non RTCWEB layer. The IdP client may create a session with the RP client or vice versa. Session may contain authentication information relevant to the user agent and may be guarded by the RP client .

The user agent browser may request the IdAP provide an RTCWEB based signature by logging into the IdAP . The IdAP may transmit instructions to the user agent to create the RTCWEB proxy and the Non RTCWEB proxy . The RTCWEB proxy may communicate with the IdP client to request an RTCWEB signature. The IdP client may create session and store associated data in the session . The IdP client may then direct the RTCWEB proxy to seek further authentication in the non RTCWEB layer via the non RTCWEB proxy and RP client . The non RTCWEB proxy may then communicate with the RP client to request authentication using a non RTCWEB protocol for example a protocol employed by IdP . RP client may communicate the Non RTCWEB proxy to indicate that the Non RTCWEB proxy should authenticate through IdP for example by sending an authentication Uniform Resource Locator URL . Non RTCWEB Proxy may authenticate with IdP . As such the RP client may not receive a user password or other data associated with the IdP . IdP may return an authentication to RP client . Upon receiving the authentication results from the IdP the RP client may forward the authentication results to the IdP client via the session . The IdP client may then issue the RTCWEB signature to the session based on the IdP authentication results received from the IdP via the RP client . The IdAP may then forward the RTCWEB signature to the user agent via the session the IdP client the RP client or combinations thereof. It should be noted that the dotted line between IdP and user agent may indicate a communication that may not be automated and may require user input such as a login.

IdP client may provide RTCWEB services for RTCWEB proxy such as providing a signature upon request and verifying a signature. For example an IdP client may issue a signature for a local user agent and receive a request to verify the signature from a remote user agent. If the signature to be verified matches the signature issued to the local user agent the value of verify signature is true. Otherwise the value is false and the signature may not be associated with the local user agent. IdP client may also interact with RP client via session to obtain an authentication for a user agent from a non RTCWEB compliant IdP server.

Non RTCWEB proxy may operate on a user agent e.g. browser and may interact with an RP client in a protocol that is compatible with a non RTCWEB compliant IdP server. Non RTCWEB proxy may also interact with the non RTCWEB compliant IdP server. For example the Non RTCWEB proxy may initiate user agent access to a Uniform Resource Identifier URI associated with the non RTCWEB compliant IdP server using an identity of a type employed by the non RTCWEB compliant IdP for example a non RTCWEB version of Hypertext Transfer Protocol HTTP . In an embodiment the Non RTCWEB proxy may cause a browser to access an HTTP link directed to the non RTCWEB compliant IdP and submit a signature. The signature may be produced by function call signature login URI id where the login function authorizes a logical identifier of the user agent to access the URI of the non RTCWEB compliant IdP server.

RP client may interact with the non RTCWEB proxy and the non RTCWEB compliant IdP server to obtain authentication of the user agent by using a non RTCWEB protocol employed by the IdP server. The RP client may rely on the authentication results of the IdP server. The results may be received from the IdP server by the function call result authenticate id where the authenticate function checks the logical identifier of the user agent and indicates whether the authentication is successful.

Session may be a data object created by the IdP client to allow communication between the RTCWEB protocol layer and the non RTCWEB protocol layer. The session may hold user identity e.g. fingerprint protocol and or id for the duration of the authentication process. Session may be guarded by the RP client and may only be accessed through successful authentication by the RP client e.g. as received by the non RTCWEB compliant IdP server . Session may receive the RTCWEB signature from IdP client after the RP client indicates successful authentication at the non RTCWEB layer. Session may be created at the start of the signature request process and deleted once the signature is transmitted to the user agent.

It should be noted that RTCWEB proxy non RTCWEB proxy IdP client session and RP client may all be configured to not receive a user password or other secret information associated with the non RTCWEB compliant IdP server. Such information may be input into a web browser and received by the IdP server. Network components may direct the browser to the IdP server and employ the authentication result of the IdP server without receiving the associated password to further protect a user s secrets. RTCWEB proxy and or IdP client may receive and or employ a password or other user secret information associated with the IdAP to allow the user to login to the IdAP. In such an embodiment the user may employ two separate passwords to complete the RTCWEB authentication process.

At step PeerConnection object may receive a request from a user to call a remote user agent. At step the PeerConnection may create a fingerprint e.g. a DTLS fingerprint and bind the fingerprint to a user id. At step the PeerConnection may transmit a HTTP get request to the IdAP to obtain a URI indicating the login page for the IdAP. The get request may be received by the IdP client. At step the IdP client may transmit the login page to the PeerConnection along with instructions to create the RTCWEB proxy and the non RTCWEB proxy. The PeerConnection may create the proxies and display the IdAP login page to the user at step .

At step the PeerConnection may receive IdAP login data from the user and or from another user agent function. The login data may comprise a selected authentication protocol e.g. a protocol that may be employed by IdP and a user identifier. At step the PeerConnection may transmit a signature request also known as a sign request to the RTCWEB proxy. The signature request may be a JavaScript Object Notation JSON signature request and may comprise the fingerprint the authentication protocol and the user identity. At step the RTCWEB proxy may transmit a post message to the IdP client that comprises the fingerprint the authentication protocol and the user identity. At step the IdP client may create a session to hold the fingerprint and the user identity as data elements. At step the IdP client may guard the session by setting a session data to a value associated with the authentication protocol selected by the user and granting access to the session to the RP client. The RP client may act as a guard for the session by allowing access to the session upon authentication by the IdP server. At step the IdP client may transmit data identifying the session to the RTCWEB proxy.

At step the RTCWEB proxy forwards a login request to the non RTCWEB proxy. The login request may be a JSON login request and may indicate the session data and the user identifier. At step the non RTCWEB proxy may transmit a get request to the RP client. The get request may be transmitted in a non RTCWEB protocol employed by the IdP server and may comprise the session data and the user identifier. At step the RP client may authenticate the user agent with the IdP server. It should be noted that additional user interaction may be needed between the user and the IdP server if the RP client does not receive the user s IdP server password. For example the RP client may transmit to the user a login page for the IdP server and invite the user to login. At step the RP client may receive the results of the authentication for example a successful authentication. At step the RP client may transmit the authentication results to the IdP client e.g. via the session . At step the IdP client may issue an RTCWEB signature to the session where the signature may comprise the fingerprint and the user identifier as elements. At step the session may transmit the signature to the non RTCWEB proxy. At step the non RTCWEB proxy may forward the signature to the RTCWEB proxy. At step the non RTCWEB proxy may forward the signature to the PeerConnection to be included in a call to a remote user such as an offer SDP message and or an answer message as discussed with respect to network .

It should be noted that in alternate embodiments the session may transmit the signature directly to the RTCWEB proxy and or directly to the PeerConnection. In other alternate embodiments the IdP client may instead transmit the signature directly to the RTCWEB proxy and or directly to the PeerConnection without passing through the session.

At least one embodiment is disclosed and variations combinations and or modifications of the embodiment s and or features of the embodiment s made by a person having ordinary skill in the art are within the scope of the disclosure. Alternative embodiments that result from combining integrating and or omitting features of the embodiment s are also within the scope of the disclosure. Where numerical ranges or limitations are expressly stated such express ranges or limitations should be understood to include iterative ranges or limitations of like magnitude falling within the expressly stated ranges or limitations e.g. from about 1 to about 10 includes 2 3 4 etc. greater than 0.10 includes 0.11 0.12 0.13 etc. . For example whenever a numerical range with a lower limit R and an upper limit Ru is disclosed any number falling within the range is specifically disclosed. In particular the following numbers within the range are specifically disclosed R R k Ru R wherein k is a variable ranging from 1 percent to 100 percent with a 1 percent increment i.e. k is 1 percent 2 percent 3 percent 4 percent 7 percent . . . 70 percent 71 percent 72 percent . . . 97 percent 96 percent 97 percent 98 percent 99 percent or 100 percent. Moreover any numerical range defined by two R numbers as defined in the above is also specifically disclosed. The use of the term about means 10 of the subsequent number unless otherwise stated. Use of the term optionally with respect to any element of a claim means that the element is required or alternatively the element is not required both alternatives being within the scope of the claim. Use of broader terms such as comprises includes and having should be understood to provide support for narrower terms such as consisting of consisting essentially of and comprised substantially of. Accordingly the scope of protection is not limited by the description set out above but is defined by the claims that follow that scope including all equivalents of the subject matter of the claims. Each and every claim is incorporated as further disclosure into the specification and the claims are embodiment s of the present disclosure. The discussion of a reference in the disclosure is not an admission that it is prior art especially any reference that has a publication date after the priority date of this application. The disclosure of all patents patent applications and publications cited in the disclosure are hereby incorporated by reference to the extent that they provide exemplary procedural or other details supplementary to the disclosure.

While several embodiments have been provided in the present disclosure it may be understood that the disclosed systems and methods might be embodied in many other specific forms without departing from the spirit or scope of the present disclosure. The present examples are to be considered as illustrative and not restrictive and the intention is not to be limited to the details given herein. For example the various elements or components may be combined or integrated in another system or certain features may be omitted or not implemented.

In addition techniques systems and methods described and illustrated in the various embodiments as discrete or separate may be combined or integrated with other systems modules techniques or methods without departing from the scope of the present disclosure. Other items shown or discussed as coupled or directly coupled or communicating with each other may be indirectly coupled or communicating through some interface device or intermediate component whether electrically mechanically or otherwise. Other examples of changes substitutions and alterations are ascertainable by one skilled in the art and may be made without departing from the spirit and scope disclosed herein.

