---

title: Selectively multiplexing incoming WebRTC traffic and/or de-multiplexing outgoing WebRTC traffic by a client-based WebRTC proxy on behalf of a WebRTC multimedia client application
abstract: In an embodiment, a first WebRTC proxy module on a first UE receives a multiplexed stream from a first WebRTC multimedia client application on the first UE. The first WebRTC proxy module de-multiplexes into at least first and second de-multiplexed streams. The first WebRTC proxy module sends the first de-multiplexed stream to a second WebRTC proxy module on a second UE via a first set of links with QoS, and sends a second de-multiplexed stream to the second WebRTC proxy module on a second set of links. The second WebRTC proxy module re-multiplexes the first and second de-multiplexed streams to obtain either an original or compressed version of the multiplexed stream, and then delivers the re-multiplexed stream to a second WebRTC multimedia client application on the second UE.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09467480&OS=09467480&RS=09467480
owner: QUALCOMM Incorporated
number: 09467480
owner_city: San Diego
owner_country: US
publication_date: 20140911
---
The present application for patent claims priority to Provisional Application No. 61 878 510 entitled SELECTIVELY MULTPLEXING INCOMING WEBRTC TRAFFIC AND OR DE MULTIPLEXING OUTGOING WEBRTC TRAFFIC BY A CLIENT BASED WEBRTC PROXY ON BEHALF OF A WEBRTC MULTIMEDIA CLIENT APPLICATION filed Sep. 16 2013 by the same inventors as the subject application assigned to the assignee hereof and hereby expressly incorporated by reference herein in its entirety.

Embodiments of the invention relate to selectively multiplexing incoming Web Real Time Communication WebRTC traffic and or de multiplexing outgoing WebRTC traffic by a client based WebRTC proxy on behalf of a WebRTC multimedia client application.

Wireless communication systems have developed through various generations including a first generation analog wireless phone service 1G a second generation 2G digital wireless phone service including interim 2.5G and 2.75G networks and third generation 3G and fourth 4G high speed data Internet capable wireless services. There are presently many different types of wireless communication systems in use including Cellular and Personal Communications Service PCS systems. Examples of known cellular systems include the cellular Analog Advanced Mobile Phone System AMPS and digital cellular systems based on Code Division Multiple Access CDMA Frequency Division Multiple Access FDMA Time Division Multiple Access TDMA the Global System for Mobile access GSM variation of TDMA and newer hybrid digital communication systems using both TDMA and CDMA technologies.

More recently Long Term Evolution LTE has been developed as a wireless communications protocol for wireless communication of high speed data for mobile phones and other data terminals. LTE is based on GSM and includes contributions from various GSM related protocols such as Enhanced Data rates for GSM Evolution EDGE and Universal Mobile Telecommunications System UMTS protocols such as High Speed Packet Access HSPA .

The Worldwide Web Consortium W3C along with the Internet Engineering Task Force IETF started development in 2011 of a web developer technology called Web Real Time Communication WebRTC . WebRTC is a protocol that permits a browser or endpoint to engage in peer to peer P2P real time communication with one or more other endpoints regardless of the relative location of the endpoints e.g. whether the respective endpoints on the same device in the same private network both behind distinct Network Address Translation NATs and or firewalls etc. .

WebRTC leverages the Real Time Transport Protocol RTP for the transmission of real time media. RTP is a flexible protocol that can serve as a transport protocol for many different media types. These media types can be broadly classified as mapping to audio or video or can be more specific by designating information such as an associated audio or video codec bandwidth requirements audio or video resolution etc. Moreover in a mesh conferencing model multiple media streams may be sent P2P to enable client based audio mixing or video compositing.

Because endpoints communicating via WebRTC can be separated by one or more NATs and or firewalls that limit the number of end to end connections between the respective endpoints WebRTC allows for multiplexing of RTP streams through a single IP address and port. Due in part to this limitation existing WebRTC specifications recommend that multiplexing be employed for RTP and RTP control protocol RTCP communications. When streams of multiple types are multiplexed through one IP address and port offering differentiated Quality of Service QoS to different types of media becomes more challenging.

In an embodiment a first WebRTC proxy module on a first UE receives a multiplexed stream from a first WebRTC multimedia client application on the first UE. The first WebRTC proxy module de multiplexes into at least first and second de multiplexed streams. The first WebRTC proxy module sends the first de multiplexed stream to a second WebRTC proxy module on a second UE via a first set of links with QoS and sends a second de multiplexed stream to the second WebRTC proxy module on a second set of links. The second WebRTC proxy module re multiplexes the first and second de multiplexed streams to obtain either an original or compressed version of the multiplexed stream and then delivers the re multiplexed stream to a second WebRTC multimedia client application on the second UE.

Aspects of the invention are disclosed in the following description and related drawings directed to specific embodiments of the invention. Alternate embodiments may be devised without departing from the scope of the invention. Additionally well known elements of the invention will not be described in detail or will be omitted so as not to obscure the relevant details of the invention.

The words exemplary and or example are used herein to mean serving as an example instance or illustration. Any embodiment described herein as exemplary and or example is not necessarily to be construed as preferred or advantageous over other embodiments. Likewise the term embodiments of the invention does not require that all embodiments of the invention include the discussed feature advantage or mode of operation.

Further many embodiments are described in terms of sequences of actions to be performed by for example elements of a computing device. It will be recognized that various actions described herein can be performed by specific circuits e.g. application specific integrated circuits ASICs by program instructions being executed by one or more processors or by a combination of both. Additionally these sequence of actions described herein can be considered to be embodied entirely within any form of computer readable storage medium having stored therein a corresponding set of computer instructions that upon execution would cause an associated processor to perform the functionality described herein. Thus the various aspects of the invention may be embodied in a number of different forms all of which have been contemplated to be within the scope of the claimed subject matter. In addition for each of the embodiments described herein the corresponding form of any such embodiments may be described herein as for example logic configured to perform the described action.

A client device referred to herein as a user equipment UE may be mobile or stationary and may communicate with a radio access network RAN . As used herein the term UE may be referred to interchangeably as an access terminal or AT a wireless device a subscriber device a subscriber terminal a subscriber station a user terminal or UT a mobile terminal a mobile station and variations thereof. Generally UEs can communicate with a core network via the RAN and through the core network the UEs can be connected with external networks such as the Internet. Of course other mechanisms of connecting to the core network and or the Internet are also possible for the UEs such as over wired access networks WiFi networks e.g. based on IEEE 802.11 etc. and so on. UEs can be embodied by any of a number of types of devices including but not limited to PC cards compact flash devices external or internal modems wireless or wireline phones and so on. A communication link through which UEs can send signals to the RAN is called an uplink channel e.g. a reverse traffic channel a reverse control channel an access channel etc. . A communication link through which the RAN can send signals to UEs is called a downlink or forward link channel e.g. a paging channel a control channel a broadcast channel a forward traffic channel etc. . As used herein the term traffic channel TCH can refer to either an uplink reverse or downlink forward traffic channel.

Referring to UEs 1 . . . N are configured to communicate with an access network e.g. the RAN an access point etc. over a physical communications interface or layer shown in as air interfaces and or a direct wired connection. The air interfaces and can comply with a given cellular communications protocol e.g. CDMA EVDO eHRPD GSM EDGE W CDMA LTE etc. while the air interface can comply with a wireless IP protocol e.g. IEEE 802.11 . The RAN includes a plurality of access points that serve UEs over air interfaces such as the air interfaces and . The access points in the RAN can be referred to as access nodes or ANs access points or APs base stations or BSs Node Bs eNode Bs and so on. These access points can be terrestrial access points or ground stations or satellite access points. The RAN is configured to connect to a core network that can perform a variety of functions including bridging circuit switched CS calls between UEs served by the RAN and other UEs served by the RAN or a different RAN altogether and can also mediate an exchange of packet switched PS data with external networks such as Internet . The Internet includes a number of routing agents and processing agents not shown in for the sake of convenience . In UE N is shown as connecting to the Internet directly i.e. separate from the core network such as over an Ethernet connection of WiFi or 802.11 based network . The Internet can thereby function to bridge packet switched data communications between UE N and UEs 1 . . . N via the core network . Also shown in is the access point that is separate from the RAN . The access point may be connected to the Internet independent of the core network e.g. via an optical communication system such as FiOS a cable modem etc. . The air interface may serve UE 4 or UE 5 over a local wireless connection such as IEEE 802.11 in an example. UE N is shown as a desktop computer with a wired connection to the Internet such as a direct connection to a modem or router which can correspond to the access point itself in an example e.g. for a WiFi router with both wired and wireless connectivity .

Referring to an application server is shown as connected to the Internet the core network or both. The application server can be implemented as a plurality of structurally separate servers or alternately may correspond to a single server. As will be described below in more detail the application server is configured to support one or more communication services e.g. Voice over Internet Protocol VoIP sessions Push to Talk PTT sessions group communication sessions social networking services etc. for UEs that can connect to the application server via the core network and or the Internet .

Examples of protocol specific implementations for the RAN and the core network are provided below with respect to to help explain the wireless communications system in more detail. In particular the components of the RAN and the core network corresponds to components associated with supporting packet switched PS communications whereby legacy circuit switched CS components may also be present in these networks but any legacy CS specific components are not shown explicitly in .

In the core network includes the above noted SGSN B and potentially a number of other SGSNs as well and a GGSN B. Generally GPRS is a protocol used in GSM for routing IP packets. The GPRS core network e.g. the GGSN B and one or more SGSNs B is the centralized part of the GPRS system and also provides support for W CDMA based 3G access networks. The GPRS core network is an integrated part of the GSM core network i.e. the core network that provides mobility management session management and transport for IP packet services in GSM and W CDMA networks.

The GPRS Tunneling Protocol GTP is the defining IP protocol of the GPRS core network. The GTP is the protocol which allows end users e.g. UEs of a GSM or W CDMA network to move from place to place while continuing to connect to the Internet as if from one location at the GGSN B. This is achieved by transferring the respective UE s data from the UE s current SGSN B to the GGSN B which is handling the respective UE s session.

Three forms of GTP are used by the GPRS core network namely i GTP U ii GTP C and iii GTP GTP Prime . GTP U is used for transfer of user data in separated tunnels for each packet data protocol PDP context. GTP C is used for control signaling e.g. setup and deletion of PDP contexts verification of GSN reach ability updates or modifications such as when a subscriber moves from one SGSN to another etc. . GTP is used for transfer of charging data from GSNs to a charging function.

Referring to the GGSN B acts as an interface between a GPRS backbone network not shown and the Internet . The GGSN B extracts packet data with associated a packet data protocol PDP format e.g. IP or PPP from GPRS packets coming from the SGSN B and sends the packets out on a corresponding packet data network. In the other direction the incoming data packets are directed by the GGSN connected UE to the SGSN B which manages and controls the Radio Access Bearer RAB of a target UE served by the RAN . Thereby the GGSN B stores the current SGSN address of the target UE and its associated profile in a location register e.g. within a PDP context . The GGSN B is responsible for IP address assignment and is the default router for a connected UE. The GGSN B also performs authentication and charging functions.

The SGSN B is representative of one of many SGSNs within the core network in an example. Each SGSN is responsible for the delivery of data packets from and to the UEs within an associated geographical service area. The tasks of the SGSN B includes packet routing and transfer mobility management e.g. attach detach and location management logical link management and authentication and charging functions. The location register of the SGSN B stores location information e.g. current cell current VLR and user profiles e.g. IMSI PDP address es used in the packet data network of all GPRS users registered with the SGSN B for example within one or more PDP contexts for each user or UE. Thus SGSNs B are responsible for i de tunneling downlink GTP packets from the GGSN B ii uplink tunnel IP packets toward the GGSN B iii carrying out mobility management as UEs move between SGSN service areas and iv billing mobile subscribers. As will be appreciated by one of ordinary skill in the art aside from i iv SGSNs configured for GSM EDGE networks have slightly different functionality as compared to SGSNs configured for W CDMA networks.

The RAN e.g. or UTRAN in UMTS system architecture communicates with the SGSN B via a Radio Access Network Application Part RANAP protocol. RANAP operates over a Iu interface Iu ps with a transmission protocol such as Frame Relay or IP. The SGSN B communicates with the GGSN B via a Gn interface which is an IP based interface between SGSN B and other SGSNs not shown and internal GGSNs not shown and uses the GTP protocol defined above e.g. GTP U GTP C GTP etc. . In the embodiment of the Gn between the SGSN B and the GGSN B carries both the GTP C and the GTP U. While not shown in the Gn interface is also used by the Domain Name System DNS . The GGSN B is connected to a Public Data Network PDN not shown and in turn to the Internet via a Gi interface with IP protocols either directly or through a Wireless Application Protocol WAP gateway.

In the core network includes a plurality of Mobility Management Entities MMEs D and D a Home Subscriber Server HSS D a Serving Gateway S GW D a Packet Data Network Gateway P GW D and a Policy and Charging Rules Function PCRF D. Network interfaces between these components the RAN and the Internet are illustrated in and are defined in Table 1 below as follows 

A high level description of the components shown in the RAN and core network of will now be described. However these components are each well known in the art from various 3GPP TS standards and the description contained herein is not intended to be an exhaustive description of all functionalities performed by these components.

Referring to the MMEs D and D are configured to manage the control plane signaling for the EPS bearers. MME functions include Non Access Stratum NAS signaling NAS signaling security Mobility management for inter and intra technology handovers P GW and S GW selection and MME selection for handovers with MME change.

Referring to the S GW D is the gateway that terminates the interface toward the RAN . For each UE associated with the core network for an EPS based system at a given point of time there is a single S GW. The functions of the S GW D for both the GTP based and the Proxy Mobile IPv6 PMIP based S5 S8 include Mobility anchor point Packet routing and forwarding and setting the DiffServ Code Point DSCP based on a QoS Class Identifier QCI of the associated EPS bearer.

Referring to the P GW D is the gateway that terminates the SGi interface toward the Packet Data Network PDN e.g. the Internet . If a UE is accessing multiple PDNs there may be more than one P GW for that UE however a mix of S5 S8 connectivity and Gn Gp connectivity is not typically supported for that UE simultaneously. P GW functions include for both the GTP based S5 S8 Packet filtering by deep packet inspection UE IP address allocation setting the DSCP based on the QCI of the associated EPS bearer accounting for inter operator charging uplink UL and downlink DL bearer binding as defined in 3GPP TS 23.203 UL bearer binding verification as defined in 3GPP TS 23.203. The P GW D provides PDN connectivity to both GSM EDGE Radio Access Network GERAN UTRAN only UEs and E UTRAN capable UEs using any of E UTRAN GERAN or UTRAN. The P GW D provides PDN connectivity to E UTRAN capable UEs using E UTRAN only over the S5 S8 interface.

Referring to the PCRF D is the policy and charging control element of the EPS based core network . In a non roaming scenario there is a single PCRF in the HPLMN associated with a UE s Internet Protocol Connectivity Access Network IP CAN session. The PCRF terminates the Rx interface and the Gx interface. In a roaming scenario with local breakout of traffic there may be two PCRFs associated with a UE s IP CAN session A Home PCRF H PCRF is a PCRF that resides within a HPLMN and a Visited PCRF V PCRF is a PCRF that resides within a visited VPLMN. PCRF is described in more detail in 3GPP TS 23.203 and as such will not be described further for the sake of brevity. In the application server e.g. which can be referred to as the AF in 3GPP terminology is shown as connected to the core network via the Internet or alternatively to the PCRF D directly via an Rx interface. Generally the application server or AF is an element offering applications that use IP bearer resources with the core network e.g. UMTS PS domain GPRS domain resources LTE PS data services . One example of an application function is the Proxy Call Session Control Function P CSCF of the IP Multimedia Subsystem IMS Core Network sub system. The AF uses the Rx reference point to provide session information to the PCRF D. Any other application server offering IP data services over cellular network can also be connected to the PCRF D via the Rx reference point.

In the eHRPD RAN includes a plurality of base transceiver stations BTSs E E and E which are connected to an enhanced BSC eBSC and enhanced PCF ePCF E. The eBSC ePCF E can connect to one of the MMEs D or D within the EPS core network A over an S101 interface and to an HRPD serving gateway HSGW E over A10 and or A11 interfaces for interfacing with other entities in the EPS core network A e.g. the S GW D over an S103 interface the P GW D over an S2a interface the PCRF D over a Gxa interface a 3GPP AAA server not shown explicitly in over an STa interface etc. . The HSGW E is defined in 3GPP2 to provide the interworking between HRPD networks and EPS LTE networks. As will be appreciated the eHRPD RAN and the HSGW E are configured with interface functionality to EPC LTE networks that is not available in legacy HRPD networks.

Turning back to the eHRPD RAN in addition to interfacing with the EPS LTE network A the eHRPD RAN can also interface with legacy HRPD networks such as HRPD network B. As will be appreciated the HRPD network B is an example implementation of a legacy HRPD network such as the EV DO network from . For example the eBSC ePCF E can interface with an authentication authorization and accounting AAA server E via an A12 interface or to a PDSN FA E via an A10 or A11 interface. The PDSN FA E in turn connects to HA E through which the Internet can be accessed. In certain interfaces e.g. A13 A16 H1 H2 etc. are not described explicitly but are shown for completeness and would be understood by one of ordinary skill in the art familiar with HRPD or eHRPD.

Referring to it will be appreciated that LTE core networks e.g. and HRPD core networks that interface with eHRPD RANs and HSGWs e.g. can support network initiated Quality of Service QoS e.g. by the P GW GGSN SGSN etc. in certain cases.

While internal components of UEs such as the UEs A and B can be embodied with different hardware configurations a basic high level UE configuration for internal hardware components is shown as platform in . The platform can receive and execute software applications data and or commands transmitted from the RAN that may ultimately come from the core network the Internet and or other remote servers and networks e.g. application server web URLs etc. . The platform can also independently execute locally stored applications without RAN interaction. The platform can include a transceiver operably coupled to an application specific integrated circuit ASIC or other processor microprocessor logic circuit or other data processing device. The ASIC or other processor executes the application programming interface API layer that interfaces with any resident programs in the memory of the wireless device. The memory can be comprised of read only or random access memory RAM and ROM EEPROM flash cards or any memory common to computer platforms. The platform also can include a local database that can store applications not actively used in memory as well as other data. The local database is typically a flash memory cell but can be any secondary storage device as known in the art such as magnetic media EEPROM optical media tape soft or hard disk or the like.

Accordingly an embodiment of the invention can include a UE e.g. UE A B etc. including the ability to perform the functions described herein. As will be appreciated by those skilled in the art the various logic elements can be embodied in discrete elements software modules executed on a processor or any combination of software and hardware to achieve the functionality disclosed herein. For example ASIC memory API and local database may all be used cooperatively to load store and execute the various functions disclosed herein and thus the logic to perform these functions may be distributed over various elements. Alternatively the functionality could be incorporated into one discrete component. Therefore the features of the UEs A and B in are to be considered merely illustrative and the invention is not limited to the illustrated features or arrangement.

The wireless communication between the UEs A and or B and the RAN can be based on different technologies such as CDMA W CDMA time division multiple access TDMA frequency division multiple access FDMA Orthogonal Frequency Division Multiplexing OFDM GSM or other protocols that may be used in a wireless communications network or a data communications network. As discussed in the foregoing and known in the art voice transmission and or data can be transmitted to the UEs from the RAN using a variety of networks and configurations. Accordingly the illustrations provided herein are not intended to limit the embodiments of the invention and are merely to aid in the description of aspects of embodiments of the invention.

Referring to the communication device includes logic configured to receive and or transmit information . In an example if the communication device corresponds to a wireless communications device e.g. UE A or B one of BSs A through A one of Node Bs B through B one of eNodeBs D through D etc. the logic configured to receive and or transmit information can include a wireless communications interface e.g. Bluetooth WiFi 2G CDMA W CDMA 3G 4G LTE etc. such as a wireless transceiver and associated hardware e.g. an RF antenna a MODEM a modulator and or demodulator etc. . In another example the logic configured to receive and or transmit information can correspond to a wired communications interface e.g. a serial connection a USB or Firewire connection an Ethernet connection through which the Internet can be accessed etc. . Thus if the communication device corresponds to some type of network based server e.g. PDSN SGSN GGSN S GW P GW MME HSS PCRF the application etc. the logic configured to receive and or transmit information can correspond to an Ethernet card in an example that connects the network based server to other communication entities via an Ethernet protocol. In a further example the logic configured to receive and or transmit information can include sensory or measurement hardware by which the communication device can monitor its local environment e.g. an accelerometer a temperature sensor a light sensor an antenna for monitoring local RF signals etc. . The logic configured to receive and or transmit information can also include software that when executed permits the associated hardware of the logic configured to receive and or transmit information to perform its reception and or transmission function s . However the logic configured to receive and or transmit information does not correspond to software alone and the logic configured to receive and or transmit information relies at least in part upon hardware to achieve its functionality.

Referring to the communication device further includes logic configured to process information . In an example the logic configured to process information can include at least a processor. Example implementations of the type of processing that can be performed by the logic configured to process information includes but is not limited to performing determinations establishing connections making selections between different information options performing evaluations related to data interacting with sensors coupled to the communication device to perform measurement operations converting information from one format to another e.g. between different protocols such as .wmv to .avi etc. and so on. For example the processor included in the logic configured to process information can correspond to a general purpose processor a digital signal processor DSP an ASIC a field programmable gate array FPGA or other programmable logic device discrete gate or transistor logic discrete hardware components or any combination thereof designed to perform the functions described herein. A general purpose processor may be a microprocessor but in the alternative the processor may be any conventional processor controller microcontroller or state machine. A processor may also be implemented as a combination of computing devices e.g. a combination of a DSP and a microprocessor a plurality of microprocessors one or more microprocessors in conjunction with a DSP core or any other such configuration. The logic configured to process information can also include software that when executed permits the associated hardware of the logic configured to process information to perform its processing function s . However the logic configured to process information does not correspond to software alone and the logic configured to process information relies at least in part upon hardware to achieve its functionality.

Referring to the communication device further includes logic configured to store information . In an example the logic configured to store information can include at least a non transitory memory and associated hardware e.g. a memory controller etc. . For example the non transitory memory included in the logic configured to store information can correspond to RAM memory flash memory ROM memory EPROM memory EEPROM memory registers hard disk a removable disk a CD ROM or any other form of storage medium known in the art. The logic configured to store information can also include software that when executed permits the associated hardware of the logic configured to store information to perform its storage function s . However the logic configured to store information does not correspond to software alone and the logic configured to store information relies at least in part upon hardware to achieve its functionality.

Referring to the communication device further optionally includes logic configured to present information . In an example the logic configured to present information can include at least an output device and associated hardware. For example the output device can include a video output device e.g. a display screen a port that can carry video information such as USB HDMI etc. an audio output device e.g. speakers a port that can carry audio information such as a microphone jack USB HDMI etc. a vibration device and or any other device by which information can be formatted for output or actually outputted by a user or operator of the communication device . For example if the communication device corresponds to UE A or UE B as shown in the logic configured to present information can include the display A of UE A or the touchscreen display B of UE B. In a further example the logic configured to present information can be omitted for certain communication devices such as network communication devices that do not have a local user e.g. network switches or routers remote servers etc. . The logic configured to present information can also include software that when executed permits the associated hardware of the logic configured to present information to perform its presentation function s . However the logic configured to present information does not correspond to software alone and the logic configured to present information relies at least in part upon hardware to achieve its functionality.

Referring to the communication device further optionally includes logic configured to receive local user input . In an example the logic configured to receive local user input can include at least a user input device and associated hardware. For example the user input device can include buttons a touchscreen display a keyboard a camera an audio input device e.g. a microphone or a port that can carry audio information such as a microphone jack etc. and or any other device by which information can be received from a user or operator of the communication device . For example if the communication device corresponds to UE A or UE B as shown in the logic configured to receive local user input can include the keypad A any of the buttons A or B through B the touchscreen display B etc. In a further example the logic configured to receive local user input can be omitted for certain communication devices such as network communication devices that do not have a local user e.g. network switches or routers remote servers etc. . The logic configured to receive local user input can also include software that when executed permits the associated hardware of the logic configured to receive local user input to perform its input reception function s . However the logic configured to receive local user input does not correspond to software alone and the logic configured to receive local user input relies at least in part upon hardware to achieve its functionality.

Referring to while the configured logics of through are shown as separate or distinct blocks in it will be appreciated that the hardware and or software by which the respective configured logic performs its functionality can overlap in part. For example any software used to facilitate the functionality of the configured logics of through can be stored in the non transitory memory associated with the logic configured to store information such that the configured logics of through each performs their functionality i.e. in this case software execution based in part upon the operation of software stored by the logic configured to store information . Likewise hardware that is directly associated with one of the configured logics can be borrowed or used by other configured logics from time to time. For example the processor of the logic configured to process information can format data into an appropriate format before being transmitted by the logic configured to receive and or transmit information such that the logic configured to receive and or transmit information performs its functionality i.e. in this case transmission of data based in part upon the operation of hardware i.e. the processor associated with the logic configured to process information .

Generally unless stated otherwise explicitly the phrase logic configured to as used throughout this disclosure is intended to invoke an embodiment that is at least partially implemented with hardware and is not intended to map to software only implementations that are independent of hardware. Also it will be appreciated that the configured logic or logic configured to in the various blocks are not limited to specific logic gates or elements but generally refer to the ability to perform the functionality described herein either via hardware or a combination of hardware and software . Thus the configured logics or logic configured to as illustrated in the various blocks are not necessarily implemented as logic gates or logic elements despite sharing the word logic. Other interactions or cooperation between the logic in the various blocks will become clear to one of ordinary skill in the art from a review of the embodiments described below in more detail.

Sessions that operate over networks such as 1 EV DO in UMTS based W CDMA in LTE in and eHRPD in can be supported on channels e.g. RABs flows etc. for which a guaranteed quality level is reserved which is referred to as Quality of Service QoS . For example establishing a given level of QoS on a particular channel may provide one or more of a minimum guaranteed bit rate GBR on that channel a maximum delay jitter latency bit error rate BER and so on. QoS resources can be reserved or setup for channels associated with real time or streaming communication sessions such as Voice over IP VoIP sessions group communication sessions e.g. PTT sessions etc. online games IP TV and so on to help ensure seamless end to end packet transfer for these sessions.

Conventionally when a QoS bearer is setup or activated for a communication session associated with a particular application e.g. VoIP PTT etc. denoted herein as App QoS is setup on both uplink and downlink channels for the entire duration of the communication session. However as will be appreciated by one of ordinary skill in the art a client application on a given UE participating in the App communication session may not have high priority traffic to transmit and or receive on both the uplink and downlink channels for the communication sessions continuously and or concurrently.

For example in a half duplex App communication session e.g. a 1 1 or direct call or a group call such as PTT a floorholder may have high priority traffic to transmit on the uplink channel i.e. to the non floorholders but the floorholder will not typically have high priority traffic to receive on the downlink channel due to the half duplex nature of the App session. Similarly in the half duplex App communication session noted above non floorholder s may have high priority traffic to receive on the downlink channel i.e. from the floorholder but the non floorholder s will not typically have high priority traffic to transmit on the uplink channel due to the half duplex nature of the App session. Further during a half duplex App session there are times when no one holds the floor e.g. no high priority traffic in either direction except for floor requests . Turning to full duplex App communication sessions e.g. a 1 1 or direct call a given party in the call may have their session muted or may simply not be talking so that the given party does not have high priority traffic to transmit on the uplink channel. As will be appreciated during at least a portion of the half duplex or full duplex App sessions noted above reserving QoS for the respective session participant in both directions i.e. uplink and downlink continuously throughout the App communication session can be inefficient because each QoS reservation reduces the overall resource capacity of the system .

Accordingly embodiments of the invention relate to selectively increasing or decreasing an allocation of QoS resources to uplink and or downlink channels for an App communication session in a dynamic manner based on a direction e.g. uplink and or downlink that high priority traffic is expected to flow or is actually flowing during the App communication session. In particular the embodiments of the invention described below are directed to QoS based communication sessions that are configured to be arbitrated by the application server across one or more of the core networks shown in above.

For example in a case where the QoS based App communication sessions correspond to VoIP sessions that are mediated between one or more UEs over the 1 EV DO core network shown in each VoIP session managed by the application server may be associated with three 3 flows that are potentially allocated QoS i.e. a call setup signaling flow an incall signaling flow and a media traffic flow . The 1 EV DO core network does not recognize GBR QoS as a reservable parameter such that QoS setup for EV DO is implemented at the RAN .

In another example in a case where the QoS based App communication sessions correspond to VoIP sessions that are mediated between one or more UEs over a UMTS based W CDMA core network as shown in or each VoIP session can be configured with an Interactive traffic class QoS and can receive the GBR QoS at the RAN i.e. the UTRAN and over the air interface by configuring the MAC es MAC hs GBR and using non scheduled Transmission Grant for UL. Similar to the example above related to the 1 EV DO core network the GBR QoS resources are not reserved and cannot be configured in the W CDMA core network of for the Interactive traffic class only the RAN because the W CDMA core network does not recognize GBR QoS as a reservable parameter such that only the logical connections are maintained. Alternatively when the Conversational traffic class is used instead of the Interactive traffic class GBR QoS resources can be negotiated modified by both the UE and the W CDMA core network. Typically VoIP sessions use the Conversational traffic class in W CDMA.

In another example in a case where the QoS based App communication sessions correspond to VoIP sessions that are mediated between one or more UEs over the LTE core network shown in the VoIP sessions managed by the application server use a QoS Class Identifier QCI of 1 or an application specific QCI for the App GBR QoS bearer denoted as QCI on a dedicated application specific PDN connection denoted as PDN and requires the S5 connection either to be maintained even when the UE is in an RRC Idle state or to be quickly setup after an RRC Idle to Connected transition. Accordingly unlike the 1 EV DO core network of and the W CDMA core network of the LTE core network of thereby supports GBR QoS at the core network in addition to the RAN .

The embodiments of the invention which will be described in more detail below are each configured for operation within one or more of the core networks from as summarized in Table 2 below as follows 

Referring to a client application for App on the given UE determines to initiate an App communication session e.g. a VoIP session a PTT session etc. . The determination of can be based upon a request by an operator of the given UE to originate the communication session in which case the given UE is an originating UE. Alternatively the determination of can be based upon a call announce message received at the given UE that announces the App communication session originated by some other entity in which case the given UE is a target UE. In the embodiment of assume that the App client application that is executing on the given UE and is configured to handle client side operations associated with App communication sessions e.g. VoIP sessions PTT sessions etc. .

At the App client application determines whether the App communication session to be initiated is half duplex or full duplex. If the App client application determines that the App communication session is half duplex at e.g. a PTT call the App client application determines whether the given UE currently has the floor or is the current floorholder for the half duplex App session . If the App client application determines that the given UE has the floor at the App client application determines whether a threshold level of uplink UL QoS resources e.g. GBR set to a threshold date rate or kpbs are established for supporting uplink media transmissions by the given UE for the half duplex App session . As will be appreciated the floorholder for the half duplex App session is likely to be transmitting high priority media on a UL channel for distribution to target UE s participating in the half duplex App session as non floorholders or listeners such that QoS on the UL channel from the floorholder can improve session quality for the half duplex App session. As will be explained in more detail below with respect to the uplink QoS resource determination of can include i if the given UE is served by a 1 EV DO network as in or an eHRPD network as in determining whether QoS for a UL media traffic flow is setup ii if the given UE is served by a W CDMA network as in or an LTE network as in whether a UL media bearer is configured with at least a threshold GBR for supporting the half duplex session.

If the App client application on the given UE determines that the threshold UL QoS resources are not already setup for the half duplex App session at the given UE requests that UL QoS resources be activated and or increased at . For example if the given UE is served by a 1 EV DO network as in the given UE can request that QoS for the UL media traffic flow be activated at . In another example if the given UE is served by a W CDMA network as in or an LTE network as in the given UE can request to modify its current GBR on its UL media bearer to a higher GBR e.g. Xkpbs where Xkpbs corresponds to an application specific dynamic data rate for App communication sessions at .

Further if the given UE is determined to have the floor for the half duplex App session at it will be appreciated that the given UE may not require QoS for downlink DL media. Accordingly in addition to selectively setting up or increasing QoS for the UL channel if necessary at the given UE will also selectively tear down or reduce existing QoS resources for the DL channel if necessary for the App bearer at . Thus the App client application determines whether a threshold level of DL QoS resources are established for supporting DL media reception at the given UE for the half duplex App session . As will be explained in more detail below with respect to the DL QoS resource determination of can include i if the given UE is served by a 1 EV DO network as in or an eHRPD network as in determining whether QoS for a DL media traffic flow is setup ii if the given UE is served by a W CDMA network as in or an LTE network as in whether a DL App media bearer is configured with at least a threshold GBR.

If the App client application on the given UE determines that the threshold DL QoS resources are already setup for the half duplex App session at the App client application on the given UE requests that the DL QoS resources be deactivated and or decreased at . For example if the given UE is served by a 1 EV DO network as in or an eHRPD network as in the given UE can request that QoS for the DL media traffic flow be deactivated or turned off at . In another example if the given UE is served by a W CDMA network as in or an LTE network as in the App client application on the given UE can request to modify its current GBR on its DL media bearer to a lower GBR at .

Still referring to and turning back to the half duplex floorholder determination of if the App client application determines that the given UE does not have the floor at the App client application determines whether another session participant holds the floor i.e. whether media from some entity is being received over the DL channel for the half duplex App session . As will be appreciated non floorholders or target UEs for the half duplex App session are likely to be receiving high priority media on a DL such that QoS on the DL channel for the non floorholders or target UE s can improve session quality for the half duplex App session. Accordingly if the App client application determines that another entity holds the floor at i.e. media is being received at the given UE for the half duplex App session the App client application determines whether a threshold level of DL QoS resources is established for supporting DL media reception at the given UE for the half duplex session similar to .

If the App client application on the given UE determines that the threshold DL QoS resources is not already setup for the half duplex App session at the App client application on the given UE requests that DL QoS resources be activated and or increased at . For example if the given UE is served by a 1 EV DO network as in or an eHRPD network as in the given UE can request that QoS for the DL media traffic flow be activated at . In another example if the given UE is served by a W CDMA network as in or an LTE network as in the App client application on the given UE can request to modify its current GBR on its DL media bearer to a higher GBR e.g. Xkpbs at .

Further if the given UE is determined not to have the floor for the half duplex App session at it will be appreciated that the given UE may not require QoS for UL media. Accordingly in addition to selectively setting up QoS for the DL channel if necessary at the given UE will also selectively tear down or reduce existing QoS resources for the UL channel if necessary at . Thus the App client application determines whether a threshold level of UL QoS resources are established for supporting UL media reception at the given UE for the half duplex session similar to .

If the App client application on the given UE determines that the threshold UL QoS resources are already setup for the half duplex App session at the given UE requests that the UL QoS resources be deactivated and or decreased at . For example if the given UE is served by a 1 EV DO network as in or an eHRPD network as in the App client application on the given UE can request that QoS for the UL media traffic flow be deactivated or turned off at . In another example if the given UE is served by a W CDMA network as in or an LTE network as in the App client application on the given UE can request to modify its current GBR on its UL media bearer to a lower GBR e.g. 1 kpbs or some other nominal data rate at .

Still referring to and turning back to the determination of whereby the App client application determines whether another floorholder is present after determining that the given UE itself does not hold the floor at if the App client application determines that no one holds the floor at the App client application determines to decrease or deactivate both DL and UL QoS resources for the half duplex App session at least until one of the session participants is granted the floor . Accordingly after the process advances to both and where the DL and UL QoS resources are decreased and or deactivated if necessary .

Still referring to and turning back to the duplex determination of if the App client application determines that the communication session is full duplex e.g. a VoIP call instead of half duplex the App client application determines whether audio is muted for the full duplex App session . As will be appreciated if audio is muted the operator of the given UE is listening to the other UE s in the full duplex App session but does not actually want his her own audio conveyed to the other UE s . If the App client application determines that the full duplex App session is not muted at both UL and DL QoS resources for the full duplex App session are activated or increased if necessary . For example can correspond to an execution of and in an example. Otherwise if the App client application determines that the full duplex App session is muted at the process advances to where the DL QoS resources are increased or activated if necessary and the UL QoS resources are decreased or deactivated if necessary .

Referring to the App client application on the given UE eventually releases the floor A and the App client application determines that another UE has the floor for the App PTT session A similar to and of . Accordingly the given UE turns on the DL QoS reservation for the DL media flow A A and the given UE tears down the UL QoS reservation for the UL media flow A A similar to of .

Referring to the other UE eventually releases the floor A and the App client application determines that no UE has the floor for the App PTT session A similar to and of . Accordingly the App client application on the given UE tears down both the DL QoS reservation for the DL media flow and the UL QoS reservation for the UL media flow A A similar to and of .

While is directed to an example where the given UE is the originator for the App PTT call it will be appreciated that could be modified to accommodate a scenario where the given UE is a call target for the App PTT call instead. In a call target implementation of the App client application on the call target UE becomes aware of the App PTT call via a call announcement message instead of a PTT button push as in A and the call target UE will begin the App PTT call as a non floorholder instead of a floorholder as in . Other than these differences the UL and DL QoS for the App Media QoS flow can be managed for the call target UE in a similar manner as in . Also while not shown explicitly in could be expanded so as to cover additional use cases from such as a full duplex example e.g. etc. from instead of the half duplex session example in . Further while is described with the App PTT call being originated at A when the given UE is idle i.e. no traffic channel TCH it will be appreciated that could be modified so that the App PTT call is originated at the given UE while the given UE is already allocated a TCH or announced to the given UE over the pre established TCH a target UE implementation .

Referring to assume that the App client application determines that another UE has the floor for the App PTT session B similar to and of . Accordingly because the given UE was already allocated the threshold GBR at B the App client application determines to maintain the GBR allocated to the DL media bearer at Xkpbs but to reduce the GBR allocated to the UL media bearer e.g. to 1 kpbs or some other nominal level similar to of . The GBR reduction to the UL media bearer is shown in in the signaling between B through B and this signaling will be readily understood by one of ordinary skill in the art familiar with UMTS and or W CDMA.

While is directed to an example where the given UE is a call target UE for the App PTT call it will be appreciated that could be modified to accommodate a scenario where the given UE is a call originator of the App PTT call instead. In a call originator implementation of the App client application on the call originator UE can become aware of the App PTT call via a PTT button push instead of a page announce procedure as in B and the call originator UE will begin the App PTT call as a floorholder instead of a non floorholder as in . Other than these differences the UL and DL QoS for the App Media QoS flow can be managed for the call target UE in a similar manner as in . Also while not shown explicitly in could be expanded so as to cover additional use cases from such as a full duplex example e.g. etc. from instead of the half duplex session example in . Further while is described with the App PTT call being originated at B based on a page received while the given UE is in URA PCH CELL PCH state it will be appreciated that could be modified so that the App PTT call the call announcement for the App PTT session arrives while the given UE is already in CELL DCH state or a PTT button push for App is detected at the given UE while in CELL DCH state for an originating UE implementation .

Referring to assume that the App client application determines that the given UE will begin the half duplex App PTT session with the floor C e.g. similar to in . Because the given UE already has QoS setup for its UL media bearer e.g. the Xkpbs of GBR allocated to the UL media bearer by the eNodeB D at C the App client application on the given UE requests QoS reduction for the DL media bearer from Xkpbs to a kpbs level below the GBR threshold e.g. a nominal kpbs level such as 1 kpbs . The GBR reduction to the DL media bearer is shown in in the signaling between C and C and this signaling will be readily understood by one of ordinary skill in the art familiar with LTE.

While is directed to an example where the given UE is the originator for the App PTT call it will be appreciated that could be modified to accommodate a scenario where the given UE is a call target for the App PTT call instead. In a call target implementation of the App client application on the call target UE becomes aware of the App PTT call via a call announcement message instead of a PTT button push as in C and the call target UE will begin the App PTT call as a non floorholder instead of a floorholder as in . Other than these differences the UL and DL QoS for the App Media QoS flow can be managed for the call target UE in a similar manner as in . Also while not shown explicitly in could be expanded so as to cover additional use cases from such as a full duplex example e.g. etc. from instead of the half duplex session example in . Further while is described with the App PTT call being originated at C when the given UE is in RCC Idle state it will be appreciated that could be modified so that the App PTT call is originated at the given UE while in RRC Connected state or announced to the given UE while in RRC Connected state for a target UE implementation .

While are described with respect to a UE side or client application based procedure for selective QoS control on the UL and DL channels of an App communication session are directed to a similar selective QoS control procedure that is implemented at the application server e.g. the server configured to arbitrate the App communication session instead of the UEs participating in the App communication session. As explained in Table 2 above the application server assisted directional QoS management procedure i.e. 2 from Table 2 can be implemented in the LTE core network of but may not be capable of standard compliant implementation in the 1 EV DO core network of or the W CDMA core network of or the eHRPD network of .

To condense the description of of is similar to through of respectively except as noted hereafter. in its entirety is implemented at a given UE participating in an App communication session whereas is implemented at the application server configured to arbitrate the App communication session. is representative of a procedure executed by an App client application at one particular UE whereas is representative of a procedure that can be executed at the application server for each UE participating in the communication session although the application server need not perform the process of for each of the participating UEs in at least one embodiment . While the App client application on the given UE in may determine to initiate the App communication session at of based upon a user request or receipt of a call announce message at the given UE the application server at of may determine to initiate the App communication session based upon receipt of a call request message from an originating UE and or a call accept message from target UE s that indicates acceptance to an announced App communication session. Further it will be appreciated that some UEs in a full duplex App session may have their sessions muted and others may not and that some UEs may be floorholders to a half duplex App session and other UEs may be non floorholders. Thus the various decision blocks shown in may result in different procedural pathways being taken for each of the UEs being evaluated by the application server . Finally because the procedure is relevant to LTE the various QoS evaluations and modifications shown in may map to LTE specific core network elements. For example the request at to increase the UL QoS for the App GBR QoS bearer may correspond to a request issued from the application server to the PCRF D or P GW D to raise the UL GBR on the App GBR QoS bearer to Xkpbs the request at to decrease the DL QoS on the App GBR QoS bearer may correspond to a request issued from the application server to the PCRF D or P GW D to decrease the DL GBR on the App GBR QoS bearer to a kpbs below a GBR threshold e.g. 1 kpbs or some other nominal data rate and so on. Aside from these differences the remaining operation of is similar to and an LTE implementation of could be similar to except for certain operations being moved from the given UE to the application server and potentially being performed for more UEs . B through B of illustrates an even more detailed implementation of through of respectively whereby LTE specific components and messages are referenced.

Referring to in response to detection of setup of a GBR media bearer for an App communication session e.g. a half duplex session a full duplex session etc. the core network starts data inactivity timers that monitor UL and DL traffic on the App GBR media bearer . In either case as will be explained below the data inactivity timers begin running once the App GBR media bearer is activated for the App session.

At the core network determines whether UL or DL traffic is detected on the App GBR media bearer for the communication session. In particular the core network determines whether App traffic associated with an access point name APN for the App communication session i.e. App is detected in the UL or DL direction at . If UL or DL traffic is detected by the core network at the traffic inactivity timer for each direction UL and or DL on which the traffic was detected is reset . At for each direction UL and or DL in which traffic inactivity timers are still running i.e. not yet expired the core network determines whether a threshold GBR is already setup for the App GBR media bearer in the respective direction e.g. similar to and of . If not the core network increases the GBR e.g. to Xkpbs in each direction UL or DL for which the associated traffic inactivity timer is still running that does not yet have the threshold GBR . As will be appreciated the UE can be notified with respect to the QoS adjustment or GBR increase of via an end to end communication as shown below in between C C and or in between D D.

Referring to the core network monitors the UL and DL traffic inactivity timers to determine whether the UL and DL traffic inactivity timers expire . If expiration is detected at the core network determines whether a threshold GBR is already setup for the App GBR media bearer in the respective direction for which expiration is detected e.g. similar to and of . If so the core network decreases the GBR e.g. to 1 kpbs or some other nominal level in each direction UL or DL for which expiration is detected that has the threshold GBR after which the core network monitors whether new traffic arrives on the directional channel that was decreased at and the core network can also continue to monitor whether expiration occurs for the other directional channel that was not decreased at if any . As will be appreciated the UE can be notified with respect to the QoS adjustment or GBR decrease of via an end to end communication as shown below in between C C and or in between D D. B through B of illustrates an even more detailed implementation of through of respectively whereby LTE specific and W CDMA specific components and messages are referenced more explicitly.

Referring to in response to detection of setup of an App GBR media bearer for an App communication session e.g. a half duplex App session a full duplex App session etc. both the serving eNodeBs s within the RAN for a particular UE participating in the communication session and the core network e.g. the S GW D as well as the P GW D start data inactivity timers that monitor UL and DL traffic on the App GBR media bearer . Generally corresponds to an LTE implementation that is similar to except that the RAN also maintains UL and DL traffic inactivity timers for controlling the QoS resources e.g. GBR on the UL and DL channels. In other words the RAN and the LTE core network components independently execute their respective timers and make their own GBR or QoS adjustments such that coordination between the RAN and the LTE core network e.g. signaling messages need not be used to implement the QoS adjustments at the different entities i.e. each LTE component can independently or unilaterally make QoS decisions based on its own traffic inactivity timer s . As will be appreciated this means that each LTE component can change the GBR or QoS in an independent manner such that the UE or client device to which the bearer with the adjusted QoS is assigned need not be notified of the QoS adjustment s implemented at the core network although the UE would still be aware of QoS adjustment s implemented by the RAN with respect to its air interface resources. Accordingly aside from the dual RAN and core network implementation of is similar to of respectively and will not be described further for the sake of brevity. B through B of illustrates an even more detailed implementation of through of respectively whereby LTE specific components and messages are referenced more explicitly.

Referring to which describes the W CDMA specific implementation in response to detection of setup of an App data RAB for a communication session e.g. a half duplex App session a full duplex App session etc. the RAN i.e. the UTRAN starts data inactivity timers that monitor UL and DL traffic on the App data RAB A. In particular the App data RAB is configured with the Interactive traffic class signaling indication Yes and ARP attributes at A or alternatively the App data RAB can be configured with the Conversational traffic class if the RAN is capable of being reconfigured so that the GBR parameters associated with the Conversational traffic class can be modified.

At A the RAN determines whether UL or DL traffic is detected on the App data RAB for the communication session. In particular the RAN determines whether traffic for the App communication session is detected in the UL or DL direction at A. If UL or DL traffic is detected by the RAN at A the traffic inactivity timer for each direction UL and or DL on which the traffic was detected is reset A. At A for each direction UL and or DL in which traffic inactivity timers are still running i.e. not yet expired the RAN determines whether a threshold GBR is already setup for the App data RAB in the respective direction e.g. similar to and of . For example at A the RAN can check whether MAC es MAC hs GBR is set to Xkpbs on the UL and or DL of the data RAB. If not the RNC B requests the serving Node B s within the RAN to increase the GBR e.g. to Xkpbs in each direction UL or DL for which the associated traffic inactivity timer is still running that does not yet have the threshold GBR A. As will be appreciated the UE can be notified with respect to the QoS adjustment or GBR increase of A because the QoS adjustment is implemented with respect to an air interface resource i.e. the connection between the UE and the RAN .

Referring to at A the RAN further determines if UL data traffic is detected on the App data RAB the serving Node B checks whether the App data RAB is configured with non scheduled transmission grant to support GBR for the UL A. If so no further action is necessary for setting up the UL GBR at the serving Node B for the App data RAB A. If not the serving Node B reconfigures the App data RAB for non scheduled transmission grant on the UL A.

Referring to the RAN monitors the UL and DL traffic inactivity timers to determine whether the UL and DL traffic inactivity timers expire A. If expiration is detected at A the RAN determines whether a threshold GBR is not already setup for the GBR media bearer in the respective direction for which expiration is detected A e.g. similar to and of . For example at A the RAN can check whether MAC es MAC hs GBR is set to Xkpbs on the UL and or DL of the App data RAB. If the threshold GBR is not setup for the UL or DL in an expired direction the process returns to A. Otherwise if the threshold GBR is setup for the UL or DL in an expired direction the RNC B requests the serving Node B s within the RAN to decrease the GBR e.g. to Xkpbs in each direction UL or DL for which the associated traffic inactivity timer is expired and has the threshold GBR A. As will be appreciated the UE can be notified with respect to the QoS adjustment or GBR decrease of A because the QoS adjustment is implemented with respect to an air interface resource i.e. the connection between the UE and the RAN .

Referring to at A if the UL traffic inactivity timer expires at A for the data RAB the serving Node B checks whether the App data RAB is configured with non scheduled transmission grant to support GBR for the UL A. If not no further action is necessary A. If so the serving Node B reconfigures the App data RAB for scheduled transmission grant on the UL A.

Turning to which describes the 1 EV DO specific implementation in response to detection of setup of a media QoS flow for an App communication session e.g. a half duplex session a full duplex session etc. the RAN starts data inactivity timers that monitor UL and DL traffic on the App media QoS flow B.

At B the RAN determines whether UL or DL traffic is detected on the App media QoS flow for the communication session. If UL or DL traffic is detected by the RAN at B the traffic inactivity timer for each direction UL and or DL on which the traffic was detected is reset B. At B for each direction UL and or DL in which traffic inactivity timers are still running i.e. not yet expired the RAN determines whether QoS is already setup or turned on for the App media QoS flow in the respective direction e.g. similar to and of . If so the process returns to B. If not the RAN sends a ReservationOnMessage to activate the App media QoS flow in the direction for which activity was detected B. As will be appreciated the UE can be notified with respect to the QoS flow activation of B because the QoS flow activation is implemented with respect to an air interface resource i.e. the connection between the UE and the RAN .

Referring to the RAN monitors the UL and DL traffic inactivity timers to determine whether the UL and DL traffic inactivity timers expire B. If expiration is detected at B the RAN determines whether QoS is already setup or turned on for the App media QoS flow in the respective direction for which expiration is detected B e.g. similar to and of . If so the process returns to B. Otherwise if the QoS is setup for the App media QoS flow in a direction for which the associated traffic inactivity timer has expired the RAN sends a ReservationOffMessage to deactivate the media QoS flow in the direction for which expiration was detected B. As will be appreciated the UE can be notified with respect to the QoS flow deactivation of B because the QoS flow deactivation is implemented with respect to an air interface resource i.e. the connection between the UE and the RAN .

The Worldwide Web Consortium W3C along with the Internet Engineering Task Force IETF started development in 2011 of a web developer technology called Web Real Time Communication WebRTC . WebRTC is a protocol that permits a browser or endpoint to engage in peer to peer P2P real time communication with one or more other endpoints regardless of the relative location of the endpoints e.g. whether the respective endpoints on the same device in the same private network both behind distinct Network Address Translation NATs and or firewalls etc. .

WebRTC leverages the Real Time Transport Protocol RTP for the transmission of real time media. RTP is a flexible protocol that can serve as a transport protocol for many different media types. These media types can be broadly classified as mapping to audio or video or can be more specific by designating information such as an associated audio or video codec bandwidth requirements audio or video resolution etc. Moreover in a mesh conferencing model multiple media streams may be sent P2P to enable client based audio mixing or video compositing.

Because endpoints communicating via WebRTC can be separated by one or more NATs and or firewalls that limit the number of end to end connections between the respective endpoints WebRTC allows for multiplexing of RTP streams through a single IP address and port. Due in part to this limitation existing WebRTC specifications recommend that multiplexing be employed for RTP and RTP control protocol RTCP communications. When streams of multiple types are multiplexed through one IP address and port number offering differentiated Quality of Service QoS to different types of media becomes more challenging.

For example in non WebRTC video conferencing sessions it is typical for the audio stream to be kept separate from the video stream whereby the audio stream is allocated to a QoS link and the video stream is allocated to a non QoS link. This is because the audio stream generally consumes less bandwidth than the video stream and because the video stream can be helped by procedures such as error concealment strategies at the receiver use of forward error correction codes lowering the video resolution and so on.

A conventional approach for obtaining QoS differentiation for different media types in WebRTC is to disable multiplexing in the browser itself. However this requires modifications to the browser and also assumes that the browser will be capable of establishing multiple end to end connections i.e. distinct IP addresses and port numbers for the different media types.

Other conventional approaches for obtaining QoS differentiation for different media types in WebRTC is to allow 3GPP defined QoS enabled traffic flows to trigger off of IP packet Differentiated Services Code Point markings DSCP markings or to allow 3GPP defined QoS enabled traffic flows to trigger off of the RTP synchronization source SSRC . However each of these conventional approaches changes in 3GPP standards that would affect packet filters and traffic flow templates as a result.

Yet another conventional approach is for the browser itself to leverage the above described UE initiated QoS feature whereby the browser on the UE would attempt to set up a QoS link and bypass multiplexing at least for audio media. However this approach requires both changes to the browser as well as to the WebRTC API to permit flows to be identified by application type for triggering the UE initiated QoS feature.

Embodiments of the invention are directed to obtaining QoS differentiation for communication sessions that utilize WebRTC without requiring modification to a WebRTC multimedia client application e.g. a browser and or to 3GPP signaling or network design. At a high level the embodiments of the invention described below provision the UE with a proxy module that selectively de multiplexes certain media component s from a multiplexed RTP stream obtained from the WebRTC multimedia client application and also selectively re multiplexes incoming media into a multiplexed format that is expected by the WebRTC multimedia client application.

Referring to in an example the first WebRTC multimedia client application can be configured similarly or even identically to the WebRTC multimedia client application from . In other words the embodiment of does not strictly require any changes to existing WebRTC multimedia client applications for operation and WebRTC endpoints can continue to operate normally while relying upon the WebRTC proxy module to implement the selective de multiplexing and or re multiplexing of media streams for leveraging a QoS link if available .

Accordingly the first WebRTC multimedia client application multiplexes media e.g. audio video etc. into a single multiplexed stream MUX for the WebRTC session and attempts to transmit MUX within one or more RTP RTPC packets to a serving network e.g. a WiFi network the RAN etc. . However in instead of transmitting MUX to the serving network as in the WebRTC proxy module intercepts MUX for special handling i.e. de multiplexing .

More specifically in it is assumed that UE 1 is able to obtain both a QoS link e.g. via proxy initiated UE initiated and or NW initiated QoS acquisition procedures as will be discussed below in more detail with respect to and a non QoS link. As used herein the term non QoS link can refer to any connection bearer or channel that has zero QoS or GBR or alternatively a connection bearer or channel that has an intermediate level of QoS or GBR that is less than a threshold of QoS by which QoS links are defined while still being above zero whereby the QoS link has a level of QoS that greater than or equal to the threshold .

The first WebRTC proxy module applies a set of QoS rules to identify higher priority media that was already multiplexed into the multiplexed stream by the first WebRTC multimedia client application . Table 3 below provides a few examples of QoS rules that can be enforced by the first WebRTC proxy module as part of a selective de multiplexing procedure in accordance with embodiments of the invention 

With respect to Table 3 above it will be appreciated that certain non audio data can be mapped to a QoS link instead of a non QoS link based on certain rules such as moving non audio data to the QoS link during periods of silence or periods of audio activity if sufficient QoS is available on the QoS link and these same rules summarized in Table 3 above can also be used as part of the set of QoS rules for determining which media types are de multiplexed for transmission on the QoS link instead of the non QoS link. Thus the media transmitted on the QoS link does not need to be strictly limited to audio but could include certain higher priority types of video media and or non video file media as well.

Turning back to if the first WebRTC proxy module is able to identify higher priority media present within the multiplexed stream based on the set of QoS rules the first WebRTC proxy module de multiplexes or strips out the higher priority media e.g. audio media and or a limited amount of video media such as video control frames I frames etc. from lower priority media e.g. bulk video media etc. . It will be appreciated that functionally the lower priority media could also be stripped out or de multiplexed from the multiplexed stream so long as the first WebRTC proxy module produces a first de multiplexed WebRTC stream DE MUX1 that includes the higher priority media and a second de multiplexed WebRTC stream DE MUX2 that includes the lower priority media. The first WebRTC proxy module transmits DE MUX1 to a serving network on the QoS link and transmits DE MUX2 to the serving network on the non QoS link.

In a further embodiment the de multiplexing operation that produces DE MUX1 and DE MUX2 from MUX can include transcoding. If this is the case as part of an offer answer exchange e.g. in of of etc. a codec supported by WebRTC enabled browsers e.g. G.711 Opus etc. can be selected by the WebRTC proxy module . For example if spectral efficiency were desired then G.711 which is essentially companded PCM can be selected for transcoding a spectrally efficient narrowband codec such AMR NB. On the other hand if both spectral efficiency and audio quality are desired then one of the wideband Opus codec modes could be selected for transcoding to AMR WB. In an example Opus could be selected by default for VoLTE bearers if VoLTE is used to support the WebRTC session.

Referring to assume that a second UE or UE 2 is provisioned with a second WebRTC multimedia client application or second WebRTC endpoint and a second WebRTC proxy module which can each be configured similarly or even identically to the first WebRTC multimedia client application and the first WebRTC proxy module respectively on UE 1. Further assume that similar to UE 1 UE 2 is able to obtain both a QoS link e.g. via a UE initiated or NW initiated QoS acquisition procedure as will be discussed below in more detail with respect to and a non QoS link.

In the embodiment of both UEs 1 and 2 are served by the same serving network such that DE MUX1 and DE MUX2 need not traverse the NAT firewall . Instead the serving network transmits DE MUX1 to UE 2 on UE 2 s QoS link and transmits DE MUX2 to UE 2 on UE 2 s non QoS link. The second WebRTC proxy module receives DE MUX1 and DE MUX2 and then re multiplexes DE MUX1 and DE MUX2 to reconstruct or reconstitute the multiplexed stream MUX that was initially provided to the first WebRTC proxy module by the first WebRTC multimedia client application . In other words the second WebRTC proxy module reverses the de multiplexing procedure performed by the first WebRTC proxy module in order to reconstruct MUX. The second WebRTC proxy module then provides the reconstructed or re multiplexed MUX to the WebRTC multimedia client application .

As will be appreciated by one of ordinary skill in the art QoS is used to transfer part of the media e.g. audio media higher priority video media etc. for the WebRTC session in in part because UEs 1 and 2 are both served by the same serving network and can obtain end to end QoS. This is not possible in because WebRTC multimedia client applications would conventionally default to exchanging MUX without setting up QoS for any portion of the multiplexed media within MUX.

In the serving network A does not directly transmit DE MUX1 and or DE MUX2 to UE 2 because the serving network A is not serving UE 2. Instead the serving network A uses NAT firewall traversal techniques to punch through or open at least one connection through the NAT firewall in order to deliver DE MUX1 and DE MUX2 to the serving network B. In an example the serving network A can bundle DE MUX1 and DE MUX2 into a single stream so that a single IP address and port number can be used to pass both DE MUX1 and DE MUX2 to the serving network B whereby the serving network B then de bundles the single stream to reconstitute DE MUX1 and DE MUX2. Alternatively the serving network A can simply use two distinct IP addresses and port numbers for DE MUX1 and DE MUX2. In any case even if QoS is unavailable over the trunk from the serving network A to the serving network B QoS is at least obtained within the serving networks so that a portion of the end to end WebRTC media transfer is allocated QoS.

The serving network B transmits DE MUX1 to UE 2 on UE 2 s QoS link and transmits DE MUX2 to UE 2 on UE 2 s non QoS link. The second WebRTC proxy module receives DE MUX1 and DE MUX2 and then re multiplexes DE MUX1 and DE MUX2 to reconstruct or reconstitute the multiplexed stream MUX that was initially provided to the first WebRTC proxy module by the first WebRTC multimedia client application . In other words the second WebRTC proxy module reverses the de multiplexing procedure performed by the first WebRTC proxy module in order to reconstruct MUX e.g. either the original version of MUX or a different version of MUX such as a compressed or reduced resolution version of MUX including compressed versions of some or all of the media components from the original MUX etc. . The second WebRTC proxy module then provides the reconstructed or re multiplexed MUX to the WebRTC multimedia client application .

The de multiplexing and re multiplexing operations described with respect to the WebRTC streams of are based upon UEs 1 and 2 being able to obtain a QoS link to carry the higher priority de multiplexed WebRTC flow or DE MUX1. In it is simply assumed that the QoS link is available but typically the WebRTC multimedia client application does not attempt to acquire QoS for MUX in part because MUX includes components that typically would not receive QoS such as bulk video content and also because the WebRTC multimedia client application does not even necessarily have the capacity to identify the QoS resources available at its respective UE.

With this in mind illustrate processes of selectively establishing QoS for a WebRTC session in conjunction with the de multiplexing and or re multiplexing operations described above in accordance with embodiments of the invention. In particular illustrates a high level process of setting up a QoS link for the WebRTC session followed by de multiplexing at the source UE in the WebRTC session in accordance with an embodiment of the invention.

With respect to signaling is exchanged between a WebRTC multimedia client application e.g. either the first WebRTC multimedia client application or the second WebRTC multimedia client application from or provisioned at a given UE a WebRTC proxy module provisioned at the given UE the RAN that is serving the given UE the core network and or the application server that indicates initiation or potential initiation of a WebRTC session involving the given UE . Based on the signaling from the WebRTC proxy module on the given UE the RAN the core network and or the application server initiate a QoS setup procedure for allocating a QoS link to the given UE at or respectively.

In an example in the WebRTC session may be originated by the given UE in which case the signaling of can include a session initiation message that is generated by the WebRTC multimedia client application and intercepted by the WebRTC proxy module for UE initiated QoS at . In this case is somewhat similar to the UE initiated QoS procedures described above with respect to and is described in more detail below specifically with respect to the WebRTC de multiplexing implementation in . Alternatively the UE initiated QoS procedure of can be implemented in a scenario where the WebRTC session is originated by a different UE. In this case a session announcement message for the WebRTC session and or a session acceptance message transmitted by the WebRTC multimedia client application can be used by the WebRTC proxy module at the given UE for triggering the UE initiated QoS procedure.

In a further example need not be implemented as a UE initiated QoS procedure whereby the given UE triggers the RAN and or the core network to set up QoS on its behalf. Instead in another LTE specific embodiment the WebRTC proxy module can instead negotiate an end to end VoLTE connection if the other endpoint is VoLTE compatible and or is executing its own WebRTC proxy module. Establishing end to end VoLTE connections in this manner restricts the flexibility of QoS bearer negotiation for WebRTC but also obviates the need to implement UE initiated and or NW initiated QoS procedures. As used herein an end to end VoLTE implementation for QoS setup is referred to as a proxy initiated QoS procedure.

In another example in the WebRTC session may be originated by the given UE in which case the signaling of can include a session initiation message that is generated by the WebRTC multimedia client application and intercepted by the WebRTC proxy module. The WebRTC proxy module then sends a message to the application server to prompt the application server to implement a NW initiated QoS procedure at that results in the given UE being allocated the QoS link. In this case is somewhat similar to the server based NW initiated QoS procedures described above with respect to and is described in more detail below specifically with respect to the WebRTC de multiplexing implementation in . Alternatively the server based NW initiated QoS procedure of can be implemented in a scenario where the WebRTC session is originated by a different UE. In this case a session announcement message for the WebRTC session and or a session acceptance message transmitted by the WebRTC multimedia client application can be used by the WebRTC proxy module at the given UE for triggering the message to the application server that prompts the application server to start the server based NW initiated QoS procedure.

In another example in irrespective of whether the given UE is the originator of the WebRTC session the RAN and or the core network can evaluate application identifying information and or can perform deep packet inspection for triggering the NW initiated QoS procedure at and or . For example the WebRTC session can be interpreted as an App session which triggers QoS setup at the RAN and or the core network as described above with respect to . In another example any of the WebRTC traffic can be inspected via deep packet inspection by the RAN and or the core network . In this case if the RAN and or core network identify the session as involving WebRTC the RAN and or core network can trigger the NW initiated QoS procedure for allocating the QoS link to the given UE. The aspects of and are somewhat similar to the NW initiated QoS procedures described above with respect to and are described in more detail below specifically with respect to the WebRTC de multiplexing implementation in .

Accordingly after and or are implemented the given UE is allocated both a QoS link and a non QoS link . The WebRTC multimedia client application obtains different types e.g. audio video etc. of media for transmission during the WebRTC session and the WebRTC multimedia client application multiplexes the different types of media into a multiplex stream MUX . While attempting to transmit MUX MUX is instead intercepted by the WebRTC proxy module on the given UE . The WebRTC proxy module executes the set of QoS rules described above to identify higher priority media e.g. audio media a limited amount of video media etc. that is contained within MUX . The WebRTC proxy module then de multiplexes the higher priority media identified at to generate a first de multiplexed WebRTC stream DE MUX1 that includes the higher priority media and a second de multiplexed WebRTC stream DE MUX2 that includes any remaining lower priority media . The WebRTC proxy module transmits DE MUX1 to the RAN over the QoS link and the WebRTC proxy module also transmits DE MUX2 to the RAN on the non QoS link . While not shown explicitly in DE MUX1 and DE MUX2 can then be conveyed to a target UE not shown in as in and also described in more detail below with respect to .

Referring to the given UE is in an RRC Idle state when a WebRTC web browsing application browser on the given UE sends a Call Initiation message that is intercepted by the WebRTC proxy module . Receipt of the Call Initiation message triggers the WebRTC proxy module to send a proprietary message to the application server to request that the application server trigger a NW initiated QoS procedure . In response to the proprietary message the application server initiates bearer negotiation over an Rx connection to the P GW D and PCRF D .

Turning back to the given UE receipt of the Call Initiation message also triggers the given UE to perform an RRC setup procedure for transitioning the given UE from the RRC Idle state to the RRC Connected state . When the RRC setup completes at such that the given UE enters an RRC Connected state and the WebRTC proxy module delivers a Connection Indication to the browser . At this point the given UE has a non GBR bearer i.e. the non QoS link but does not yet have the QoS link because the bearer negotiation has not yet completed . The browser and WebRTC proxy module execute an offer answer exchange e.g. whereby the WebRTC proxy module can select a transcoding codec to be used for DE MUX1 and or DE MUX2 after which the browser begins to configure media for transmission during the WebRTC session .

Turning back to the network the P GW D sends an update bearer request to the MME D the MME D sends a bearer modify request to the eNB D which prompts the eNB D and the given UE to reconfigure the RRC connection e.g. RRC Connection Reconfiguration Complete . The eNB D then transmits a bearer modify response back to the MME D and the MME D transmits an update bearer response back to the P GW D. While triggered differently are somewhat similar to C C of . Also if the WebRTC session is an App session the GBR established for the GBR bearer can be configured as in C of with a QoS configuration that is specific for App or in this case WebRTC .

After obtaining the GBR bearer or QoS link via the signaling of the browser begins to send MUX e.g. a stream of RTP RTCP packets with multiplexed media components for transmission to the WebRTC proxy module the WebRTC proxy module de multiplexes MUX to generate DE MUX1 and DE MUX2 and then transmits DE MUX1 on the GBR bearer and transmits DE MUX2 on the non GBR bearer .

Referring to the given UE is in an RRC Idle state when a WebRTC web browsing application browser on the given UE sends a Call Initiation message that is intercepted by the WebRTC proxy module . The Call Initiation message triggers the given UE to perform an RRC setup procedure for transitioning the given UE from the RRC Idle state to the RRC Connected state . When the RRC setup completes at the given UE enters an RRC Connected state and the WebRTC proxy module delivers a Connection Indication to the browser . At this point the given UE has a non GBR bearer i.e. the non QoS link but does not yet have the QoS link because the bearer negotiation has not yet completed .

In the embodiment of the WebRTC proxy module determines to execute a UE initiated QoS procedure to obtain a QoS link. In an example the UE initiated QoS procedure can be used as a fallback mechanism if a NW initiated QoS procedure as in fails to obtain the QoS link. For example while not shown in the WebRTC proxy module can send the proprietary message as in of and then start a timer and if the QoS link is not obtained prior to expiration of the timer the WebRTC proxy module can then execute the UE initiated QoS procedure. Alternatively the WebRTC proxy module can automatically determine to execute the UE initiated QoS procedure without waiting to first attempt the NW initiated QoS procedure based on the session type being WebRTC.

In any case irrespective of how the WebRTC proxy module reaches the decision to implement the UE initiated QoS procedure the UE initiated QoS procedure is implemented by transmitting a Request Bearer Resource Modification message from the given UE to the MME D via the eNB D . The Request Bearer Resource Modification message of is configured to request the GBR bearer for an audio media component of the WebRTC session e.g. and potentially other media components as well such as a limited amount of video media and or file content . The MME D receives the Request Bearer Resource Modification message and delivers a Bearer Resource Command to the P GW D via the S GW D . At this point substantially correspond of respectively except that is triggered by a message delivered by the given UE to the LTE core network whereas is triggered by a message delivered by the application server to the LTE core network .

In particular the RAN and or the core network can identify that the session being established is WebRTC and this identification can prompt the RAN and or the core network to trigger the NW initiated QoS procedure. The identification of the session as being a WebRTC session can be performed in a number of ways. For example the WebRTC application can correspond to App which is described above in detail such that the WebRTC nature of the session can be identified based on application identifying information e.g. the APN etc. . In another example the RAN and or the core network can perform deep packet inspection on one or more signaling packets being exchanged during setup of the WebRTC session and the deep packet inspection may be used to infer that the session is a WebRTC session. The signaling evaluated at can be associated with uplink and or downlink signaling traffic.

While focuses on the de multiplexing that occurs at the source UE in the WebRTC session is directed to a high level process of setting up a QoS link for the WebRTC session followed by re multiplexing at the target UE in the WebRTC session. Of course a UE in the WebRTC can be both a source UE and a target UE for a bidirectional or two way media session such that the processes of can be implemented in parallel at both the source and target UEs.

Referring to correspond to and will not be described further for the sake of brevity. After the core network obtains DE MUX1 and DE MUX2 from another UE e.g. served by the same core network as in or a different serving network as in . At the core network transmits via the RAN DE MUX1 to the given UE on the QoS link and DE MUX2 to the given UE on the non QoS link . The WebRTC proxy module intercepts DE MUX1 and DE MUX2 prior to their delivery to the WebRTC multimedia client application and the WebRTC proxy module re multiplexes DE MUX1 and DE MUX2 to reconstruct MUX . To put another way as described above the WebRTC proxy module on the reconstructs MUX by reversing the de multiplexing performed by the WebRTC proxy module on the other UE to re obtain MUX as initially prepared by the WebRTC multimedia client application on the other UE. The WebRTC proxy module then delivers MUX to the WebRTC multimedia client application on the given UE .

Further while describe detailed implementations of the process of with respect to how the QoS link is established for the given UE in a de multiplexing context it will be appreciated that these same QoS setup procedures can be used in context with with respect to a re multiplexing context. In other words the QoS link established between can be setup via a server based NW initiated QoS procedure as in a UE initiated QoS procedure as in and or by a NW initiated QoS procedure that is independent of a server based trigger as in . Also as noted above the same UE can perform the processes of both and in parallel such that the WebRTC proxy module provisioned at the given UE can be responsible for de multiplexing an outgoing MUX as in while also re multiplexing incoming de multiplexed stream in order to reconstruct an incoming MUX from another UE as in .

Further while the embodiments of refer to an original or source MUX and a re multiplexed or reconstructed MUX it will be appreciated that the original and reconstructed versions of MUX can be identical or alternatively can be somewhat different e.g. the reconstructed MUX may be compressed so as to have a lower resolution for certain media components as compared to the original MUX due to transcoding or other factors etc. .

Further while the embodiments of generally refer to two 2 de multiplexed streams i.e. DE MUX1 and DE MUX2 it will be appreciated that other embodiments can be directed to three 3 or more de multiplexed streams e.g. DE MUX3 DE MUX4 etc. depending on the number of available QoS and or non QoS links. For example if the UE has access to a first QoS link with high QoS a second QoS link with low QoS and a non QoS link the WebRTC proxy module can generate DE MUX1 with high priority media DE MUX2 with intermediate priority media and DE MUX3 with low priority media. The WebRTC proxy module can then send DE MUX1 on the first QoS link DE MUX2 on the second QoS link and DE MUX3 on the non QoS link and so on.

In a further example the QoS link can correspond to a first set of links and the non QoS link can correspond to a second set of links. The first set of links can include one or more QoS links and the second set of links can include one or more non QoS links. Each link in the first set of links can carry a DE MUX stream and each link in the second set of links can also carry a DE MUX stream. Generally higher priority media is transported via the DE MUX stream s on the first set of links while lower priority media is transported via the DE MUX stream s on the second set of links. Thus in scenarios where the UE has access to multiple QoS links and or multiple non QoS links the UE can leverage these multiple links to send multiple DE MUX streams or even the same DE MUX stream redundantly . Thereby the embodiments are not limited to a single DE MUX stream being sent on the QoS link and a single DE MUX stream being sent on the non QoS link when additional links QoS and or non QoS are available. In particular additional de multiplexed media components from MUX can be carried on any of the aforementioned extra DE MUX streams. Likewise at the target UE any of the extra DE MUX streams can be re multiplexed along with DE MUX1 and DE MUX2 to reconstruct MUX.

In another embodiment of the invention it is possible for browser originated multimedia traffic to not be multiplexed or to be partially multiplexed. In other words the output from the WebRTC multimedia client application need not be MUX but could be non MUX1 and non MUX2 i.e. two non multiplexed RTP streams MUX1 and MUX2 e.g. two partially multiplexed RTP streams or non MUX1 and MUX1 e.g. a non multiplexed RTP stream and a multiplexed RTP stream . In these cases the WebRTC proxy module can still handle the mapping of the respective RTP streams to the non QoS and QoS links. As an example assume a multiparty video call where the browser sends receives audio traffic over one RTP stream and also sends receives multiple video tracks over another RTP stream where the video tracks would be unique to each participant in the call . The WebRTC proxy module may be aware that the UE has access to both QoS and non QoS links but the browser or WebRTC multimedia client application does not necessarily have the ability to detect this information. Thus the WebRTC multimedia client applications can RTP streams that do not require de multiplexing while the WebRTC proxy module instead of performing a de multiplexing operation simply maps the respective RTP streams to the appropriate link i.e. the QoS link or the non QoS link .

While the embodiments above have been described primarily with reference to 1 EV DO architecture in CDMA2000 networks GPRS architecture in W CDMA or UMTS networks and or EPS architecture in LTE based networks it will be appreciated that other embodiments can be directed to other types of network architectures and or protocols.

Those of skill in the art will appreciate that information and signals may be represented using any of a variety of different technologies and techniques. For example data instructions commands information signals bits symbols and chips that may be referenced throughout the above description may be represented by voltages currents electromagnetic waves magnetic fields or particles optical fields or particles or any combination thereof.

Further those of skill in the art will appreciate that the various illustrative logical blocks modules circuits and algorithm steps described in connection with the embodiments disclosed herein may be implemented as electronic hardware computer software or combinations of both. To clearly illustrate this interchangeability of hardware and software various illustrative components blocks modules circuits and steps have been described above generally in terms of their functionality. Whether such functionality is implemented as hardware or software depends upon the particular application and design constraints imposed on the overall system. Skilled artisans may implement the described functionality in varying ways for each particular application but such implementation decisions should not be interpreted as causing a departure from the scope of the present invention.

The various illustrative logical blocks modules and circuits described in connection with the embodiments disclosed herein may be implemented or performed with a general purpose processor a digital signal processor DSP an application specific integrated circuit ASIC a field programmable gate array FPGA or other programmable logic device discrete gate or transistor logic discrete hardware components or any combination thereof designed to perform the functions described herein. A general purpose processor may be a microprocessor but in the alternative the processor may be any conventional processor controller microcontroller or state machine. A processor may also be implemented as a combination of computing devices e.g. a combination of a DSP and a microprocessor a plurality of microprocessors one or more microprocessors in conjunction with a DSP core or any other such configuration.

The methods sequences and or algorithms described in connection with the embodiments disclosed herein may be embodied directly in hardware in a software module executed by a processor or in a combination of the two. A software module may reside in RAM memory flash memory ROM memory EPROM memory EEPROM memory registers hard disk a removable disk a CD ROM or any other form of storage medium known in the art. An exemplary storage medium is coupled to the processor such that the processor can read information from and write information to the storage medium. In the alternative the storage medium may be integral to the processor. The processor and the storage medium may reside in an ASIC. The ASIC may reside in a user terminal e.g. UE . In the alternative the processor and the storage medium may reside as discrete components in a user terminal.

In one or more exemplary embodiments the functions described may be implemented in hardware software firmware or any combination thereof. If implemented in software the functions may be stored on or transmitted over as one or more instructions or code on a computer readable medium. Computer readable media includes both computer storage media and communication media including any medium that facilitates transfer of a computer program from one place to another. A storage media may be any available media that can be accessed by a computer. By way of example and not limitation such computer readable media can comprise RAM ROM EEPROM CD ROM or other optical disk storage magnetic disk storage or other magnetic storage devices or any other medium that can be used to carry or store desired program code in the form of instructions or data structures and that can be accessed by a computer. Also any connection is properly termed a computer readable medium. For example if the software is transmitted from a website server or other remote source using a coaxial cable fiber optic cable twisted pair digital subscriber line DSL or wireless technologies such as infrared radio and microwave then the coaxial cable fiber optic cable twisted pair DSL or wireless technologies such as infrared radio and microwave are included in the definition of medium. Disk and disc as used herein includes compact disc CD laser disc optical disc digital versatile disc DVD floppy disk and blu ray disc where disks usually reproduce data magnetically while discs reproduce data optically with lasers. Combinations of the above should also be included within the scope of computer readable media.

While the foregoing disclosure shows illustrative embodiments of the invention it should be noted that various changes and modifications could be made herein without departing from the scope of the invention as defined by the appended claims. The functions steps and or actions of the method claims in accordance with the embodiments of the invention described herein need not be performed in any particular order. Furthermore although elements of the invention may be described or claimed in the singular the plural is contemplated unless limitation to the singular is explicitly stated.

