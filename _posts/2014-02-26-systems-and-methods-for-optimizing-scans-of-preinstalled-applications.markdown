---

title: Systems and methods for optimizing scans of pre-installed applications
abstract: A computer-implemented method for optimizing scans of pre-installed applications may include (1) identifying, on a client device, a plurality of applications that are subject to scan-based assessments, (2) determining that the plurality of applications were pre-installed on the client device via a system image for the client device, (3) generating a fingerprint that represents the system image, and (4) fulfilling the scan-based assessments for the plurality of applications by transmitting the fingerprint that represents the system image to an assessment server and receiving, in response, an assessment of the system image. Various other methods, systems, and computer-readable media are also disclosed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09197662&OS=09197662&RS=09197662
owner: Symantec Corporation
number: 09197662
owner_city: Mountain View
owner_country: US
publication_date: 20140226
---
Consumers and businesses face a growing tide of malicious software that threatens the stability and performance of their computing devices and the security of their data. Computer programmers with malicious motivations have created and continue to create viruses Trojan horses worms and other programs collectively known as malware in an attempt to compromise computing devices. In an attempt to evade detection malicious programmers may inject malware into or among legitimate programs.

Many security software companies attempt to combat malware by creating and deploying malware signatures e.g. hash functions that uniquely identify malware to their customers on a regular basis. However performing signature based security assessments may consume a significant amount of computing resources particularly in the case of mobile computing devices where network resources and other computational resources may be in limited supply. In addition many computing systems including mobile computing devices may come with several pre installed applications placing a computational burden on both mobile computing devices and security servers that supply security assessments for applications installed on the mobile computing devices.

Accordingly the instant disclosure identifies and addresses a need for additional and improved systems and methods for optimizing scans of pre installed applications.

As will be described in greater detail below the instant disclosure describes various systems and methods for optimizing scans of pre installed applications by performing a single look up for a system image to retrieve an assessment of the system image in place of performing separate look ups for each pre installed application included in the system image.

In one example a computer implemented method for optimizing scans of pre installed applications may include 1 identifying on a client device a plurality of applications that are subject to scan based assessments 2 determining that the plurality of applications were pre installed on the client device via a system image for the client device 3 generating a fingerprint that represents the system image and 4 fulfilling the scan based assessments for the plurality of applications by transmitting the fingerprint that represents the system image to an assessment server and receiving in response an assessment of the system image.

In some examples the scan based assessments may include 1 an assessment of whether an application within the plurality of applications comprises malware and or 2 a performance assessment of an application within the plurality of applications. In some embodiments the scan based assessments may include an assessment of an application within the plurality of applications based on a permission assigned to the application on the client device that enables the application to access a feature of the client device. In some examples only a publisher may be allowed to modify any application within the plurality of applications.

In some embodiments the method may also include 1 identifying on the client device an individual application that is subject to at least one scan based assessment 2 determining that the individual application was not pre installed on the client device via the system image for the client device 3 generating based on determining that the individual application was not preinstalled on the client device via the system image for the client device an individual fingerprint that represents the individual application and no other application and 4 fulfilling the scan based assessments for the individual application by transmitting the individual fingerprint that represents the individual application to the assessment server and receiving in response an assessment of the individual application.

In some examples 1 the assessment of the system image may include an assessment of an individual application within the plurality of applications and 2 the assessment of the individual application may indicate that the individual application is subject to a remediation action. In these examples the method may also include performing the remediation action. Additionally or alternatively in these examples the method may also include 1 determining based on the assessment of the individual application that transmitting the fingerprint that represents the system image to the assessment server will not suffice for fulfilling subsequent scan based assessments for the plurality of applications and 2 fulfilling the subsequent scan based assessments for the plurality of applications by transmitting an individual fingerprint for each application within the plurality of applications to the assessment server in response to determining that transmitting the fingerprint that represents the system image to the assessment server will not suffice for fulfilling the subsequent scan based assessments.

In some embodiments generating the fingerprint that represents the system image may include combining an individual fingerprint for each application within the plurality of applications. Additionally or alternatively generating the fingerprint that represents the system image may include using as input for generating the fingerprint a public key that is included with the system image for verifying the system image. In some examples generating the fingerprint that represents the system image may include generating the fingerprint based on a version of the system image and a build number of the system image.

In one embodiment a system for implementing the above described method may include 1 an identification module stored in memory that identifies on a client device a plurality of applications that are subject to scan based assessments 2 a determination module stored in memory that determines that the plurality of applications were pre installed on the client device via a system image for the client device 3 a generation module stored in memory that generates a fingerprint that represents the system image 4 a fulfilling module stored in memory that fulfills the scan based assessments for the plurality of applications by transmitting the fingerprint that represents the system image to an assessment server and receiving in response an assessment of the system image and 5 at least one physical processor that executes the identification module the determination module the generation module and the fulfilling module.

In some examples the above described method may be encoded as computer readable instructions on a non transitory computer readable medium. For example a computer readable medium may include one or more computer executable instructions that when executed by at least one processor of a computing device may cause the computing device to 1 identify on a client device a plurality of applications that are subject to scan based assessments 2 determine that the plurality of applications were pre installed on the client device via a system image for the client device 3 generate a fingerprint that represents the system image and 4 fulfill the scan based assessments for the plurality of applications by transmitting the fingerprint that represents the system image to an assessment server and receiving in response an assessment of the system image.

Features from any of the above mentioned embodiments may be used in combination with one another in accordance with the general principles described herein. These and other embodiments features and advantages will be more fully understood upon reading the following detailed description in conjunction with the accompanying drawings and claims.

Throughout the drawings identical reference characters and descriptions indicate similar but not necessarily identical elements. While the exemplary embodiments described herein are susceptible to various modifications and alternative forms specific embodiments have been shown by way of example in the drawings and will be described in detail herein. However the exemplary embodiments described herein are not intended to be limited to the particular forms disclosed. Rather the instant disclosure covers all modifications equivalents and alternatives falling within the scope of the appended claims.

The present disclosure is generally directed to systems and methods for optimizing scans of pre installed applications. As will be explained in greater detail below by performing a single look up for a system image to retrieve an assessment of the system image in place of performing separate look ups for each pre installed application included in the system image the systems and methods described herein may reduce the computational burden on both computing devices with pre installed applications and security servers that supply security assessments for applications installed on the computing devices.

The following will provide with reference to and detailed descriptions of exemplary systems for optimizing scans of pre installed applications. Detailed descriptions of corresponding computer implemented methods will also be provided in connection with . In addition detailed descriptions of an exemplary computing system and network architecture capable of implementing one or more of the embodiments described herein will be provided in connection with respectively.

In certain embodiments one or more of modules in may represent one or more software applications or programs that when executed by a computing device may cause the computing device to perform one or more tasks. For example and as will be described in greater detail below one or more of modules may represent software modules stored and configured to run on one or more computing devices such as the devices illustrated in e.g. computing device and or assessment server computing system in and or portions of exemplary network architecture in . One or more of modules in may also represent all or portions of one or more special purpose computers configured to perform one or more tasks.

As illustrated in exemplary system may also include one or more databases such as database . In one example database may be configured to store one or more application signatures and or system image signatures.

Database may represent portions of a single database or computing device or a plurality of databases or computing devices. For example database may represent a portion of assessment server in computing system in and or portions of exemplary network architecture in . Alternatively database in may represent one or more physically separate devices capable of being accessed by a computing device such as assessment server in computing system in and or portions of exemplary network architecture in .

Exemplary system in may be implemented in a variety of ways. For example all or a portion of exemplary system may represent portions of exemplary system in . As shown in system may include a computing device in communication with an assessment server via a network . In one example computing device may be programmed with one or more of modules and or may store all or a portion of the data in database . Additionally or alternatively assessment server may be programmed with one or more of modules and or may store all or a portion of the data in database .

In one embodiment one or more of modules from may when executed by at least one processor of computing device and or assessment server enable computing device and or assessment server to optimize scans of pre installed applications on computing device . For example and as will be described in greater detail below one or more of modules may cause computing device and or assessment server to 1 identify on computing device a plurality of applications that are subject to scan based assessments 2 determine that applications were pre installed on computing device via a system image for computing device 3 generate a fingerprint that represents system image and 4 fulfill the scan based assessments for applications by transmitting fingerprint that represents system image to assessment server and receiving in response an assessment of system image .

Computing device generally represents any type or form of computing device capable of reading computer executable instructions. Examples of computing device include without limitation laptops tablets desktops servers cellular phones Personal Digital Assistants PDAs multimedia players embedded systems wearable devices e.g. smart watches smart glasses etc. gaming consoles combinations of one or more of the same exemplary computing system in or any other suitable computing device.

Assessment server generally represents any type or form of computing device that is capable of providing assessments of applications and or system images based on fingerprints of the applications and or system images. Examples of assessment server include without limitation application servers and database servers configured to provide various database services and or run certain software applications. For example assessment server may include a security server.

Network generally represents any medium or architecture capable of facilitating communication or data transfer. Examples of network include without limitation an intranet a Wide Area Network WAN a Local Area Network LAN a Personal Area Network PAN the Internet Power Line Communications PLC a cellular network e.g. a Global System for Mobile Communications GSM network exemplary network architecture in or the like. Network may facilitate communication or data transfer using wireless or wired connections. In one embodiment network may facilitate communication between computing device and assessment server .

As illustrated in at step one or more of the systems described herein may identify on a client device a plurality of applications that are subject to scan based assessments. For example identification module may as part of computing device in identify on computing device applications that are subject to scan based assessments.

The client device may include any computing device that may include pre installed applications. For example the client device may include a mobile computing device. Examples of mobile computing devices include without limitation mobile phones tablet computers e book readers personal digital assistants GPS devices messaging devices smartwatches and head mounted computing devices.

As used herein the term application may refer to any application program module and or package that may be installed on and or that may execute on a computing device. As used herein the phrase scan based assessment may refer to any assessment of an application that may facilitate gathering information about the application and or determining a disposition of an application on a computing device e.g. whether to remove the application to modify the access of the application to the computing device to monitor the application to trust the application to leave the application intact to warn a user about the application to modify a setting of the application etc. . In some examples a scan based assessment may analyzing an application installed on a device. Additionally or alternatively a scan based assessment may include generating a fingerprint of an application and querying an assessment server with the fingerprint to receive an assessment of the application in response. For example the assessment server may store assessments of previously scanned and or analyzed applications in conjunction with the corresponding fingerprints of the applications.

In some examples the scan based assessments may include an assessment of whether an application within the plurality of applications includes malware. As used herein the term malware may refer to any virus worm Trojan horse spyware and or any other malicious illegitimate and or unauthorized software and or data object. In some examples the scan based assessment may include a security assessment such as an intrusion prevention analysis e.g. indicating whether the application includes a vulnerability that may be exploited . In some examples the scan based assessments may include a performance assessment of an application within the plurality of applications. For example the performance assessment may indicate what impact the application has or is expected to have on the performance of the computing device e.g. whether the application has a negative impact on performance slowing the computing environment of the computing device contributing to errors and or crashes etc. . In some examples the scan based assessments may include an assessment of an application within the plurality of applications based on a permission assigned to the application on the client device that enables the application to access a feature of the client device. For example the assessment may include a determination of which permissions the application requests whether the permissions requested by the application are necessary and or appropriate for the application whether the application is to be trusted with the permissions the risk that the application having the permissions may pose etc.

As used herein the term permission may refer to any permission privilege designated access right and or authentication for accessing using manipulating and or viewing a computing resource and or capability. In some examples the permission may be granted by a user at the time of installation of the application or in some examples in the case of a pre installed application granted by default . For example a platform of the computing device may be configured to display one or more permissions required and or used by the application and to receive verification that the user will grant the permissions to the application before installing and or executing the application. In some examples a platform of the computing device may divide a set of capabilities of the mobile computing system into a set of permissions to access the capabilities and grant a subset of permissions to each installed application.

Identification module may identify the plurality of applications in any suitable context. For example identification module may identify the plurality of applications in the course of a comprehensive scan of the computing device. In some examples identification module may identify the plurality of applications by identifying a system image that includes the plurality of applications.

As an example of identification module operating in one context illustrates an exemplary system for optimizing scans of pre installed applications. As shown in exemplary system may include a computing device in communication with an assessment server via a network . Using as an example at step identification module may identify applications and that are subject to a security scan e.g. along with applications which may also be subject to the security scan .

Returning to at step one or more of the systems described herein may determine that the plurality of applications were pre installed on the client device via a system image for the client device. For example determination module may as part of computing device in determine that applications were pre installed on computing device via system image for computing device .

As used herein the phrase system image may refer to any image that may include pre installed applications. For example a system image may include a Read Only Memory ROM image. As used herein the phrase Read Only Memory may refer to any storage medium that is designed to not be frequently modified or modified at all . Additionally or alternatively a system image may include firmware.

As used herein the phrase pre installed application may refer to any application that is installed via a system image e.g. instead of a user individually selecting the application for installation . In some examples the phrase pre installed application may refer to applications that are installed on a computing device from the first end user operation of the computing device. Additionally or alternatively the phrase pre installed application may refer to applications that are included in system image updates. In some examples only a publisher of a system image may be allowed to modify any application within the system image e.g. to remove update and or overwrite the application . In some examples the publisher of a system image may include a manufacturer of the computing device and or a partner of the manufacturer of the computing device. Accordingly in some examples the system image and the pre installed applications included in the system image may tend to be trustworthy and the pre installed applications may tend to require fewer individuated scanning operations.

Determination module may determine that the plurality of applications were pre installed on the client device via the system image in any suitable manner. For example determination module may identify a flag associated with each application indicating that the application corresponds to the system image. Additionally or alternatively determination module may query a platform of the computing device e.g. via an application programming interface API to retrieve a list of applications that were pre installed via the system image.

Using as an example determination module may as a part of computing device determine that applications and were pre installed on computing device via system image .

Returning to at step one or more of the systems described herein may generate a fingerprint that represents the system image. For example generation module may as part of computing device in generate fingerprint that represents system image .

As used herein the term fingerprint may refer to any abbreviated representation of an application e.g. in its current version . For example the term fingerprint may refer to the outputs of one or more hash functions applied to various portions of the application values extracted from the application a name of the application a version number of the application a publisher of the application files included in the application checksums application metadata and or any other type of application identifiers that identify an application. Generally the fingerprint may include any information tending to identify the application including any of the aforementioned examples alone or in combination. The hash values may be generated by any of a variety of cryptographic hash functions including e.g. MD5 and or SHA256 . In some examples the term fingerprint as it relates to a given file may refer to a single value that consistently represents the application over time and that does not vary unless the content of the application being fingerprinted varies e.g. due to updates . In some examples the term fingerprint may refer to a signature of an application.

Generation module may generate the fingerprint of the system image in any suitable manner. For example generation module may generate the fingerprint of the system image by combining an individual fingerprint for each application within the plurality of applications. For example generation module may generate a fingerprint for each application on the computing device and combine those fingerprints corresponding to applications pre installed via the system image to create a fingerprint of the system image. Additionally or alternatively generation module may generate the fingerprint that represents the system image by using a public key of the system image as input. For example the system image may include a public key for verifying the system image. Accordingly the public key may also be useful for distinctly identifying the system image in the context of the system image having been verified and or validated. In some examples in addition to and or as an alternative to the foregoing possibilities generation module may generate the fingerprint of the system image based at least in part on a version of the system image and a build number of the system image. In this manner the fingerprint of the system image may correspond to the particular version of the system image should the system image be updated.

Using as an example at step generation module may generate a fingerprint of system image . For example generation module may use metadata pertaining to system image to generate the fingerprint. Additionally or alternatively generation module may generate the fingerprint of system based on fingerprints of applications and .

Returning to at step one or more of the systems described herein may fulfill the scan based assessments for the plurality of applications by transmitting the fingerprint that represents the system image to an assessment server and receiving in response an assessment of the system image. For example fulfilling module may as part of computing device in fulfill the scan based assessments for applications by transmitting fingerprint that represents system image to assessment server and receiving in response assessment of system image .

The assessment server may include any type of fingerprint look up system that may provide assessments of applications and or system images in response to receiving fingerprints of applications and or system images. For example the assessment server may include and or have access to a database correlating current assessments of applications and or system images with the fingerprints of the applications and or system images. In some examples the assessment server may provide application assessments of applications and or system images to many e.g. thousands or millions of client devices. Thus by reducing the number of look ups to the assessment server that are required the systems and methods described herein may significantly reduce computational resources consumed by the assessment server.

The assessment of the system image may include any of a variety of information. For example the assessment of the system image may include an assessment of an individual application within the plurality of applications. In some examples the assessment of the individual application may indicate that the individual application is subject to a remediation action. For example the assessment of the individual application may indicate that the individual application includes malware includes a security vulnerability may negatively impact system performance and or has inappropriate permissions. In this example fulfilling module may perform the remediation on the individual application. For example fulfilling module may remove the individual application halt execution of the individual application quarantine the individual application warn a user about the individual application analyze actions taken by the individual application on the computing device and or remove permissions from the individual application.

In some examples upon receiving an adverse assessment for the system image e.g. by receiving an adverse assessment for an individual application within the system image fulfilling module may stop treating the system image as a single entity for scanning and revert to treating the pre installed applications on an individual basis. For example fulfilling module may determine based on the assessment of the individual application that transmitting the fingerprint that represents the system image to the assessment server will not suffice for fulfilling subsequent scan based assessments for the plurality of applications. Fulfilling module may then fulfill the subsequent scan based assessments for the plurality of applications by transmitting an individual fingerprint for each application within the plurality of applications to the assessment server in response to determining that transmitting the fingerprint that represents the system image to the assessment server will not suffice for fulfilling the subsequent scan based assessments. In some examples other events may cause fulfilling module to stop treating the system image as a single entity for scanning and to revert to treating the pre installed applications on an individual basis. For example fulfilling module may receive a message indicating that the system image is at risk for being compromised e.g. via an undiscoverable and or difficult to observe malware variant .

In some examples while treating the system image as a single entity for scanning purposes the systems described herein may treat applications outside the system image e.g. that weren t pre installed by the system image on an individual basis for scanning purposes. For example identification module may identify on the client device an individual application that is subject to at least one scan based assessment. Determination module may determine that the individual application was not pre installed on the client device via the system image for the client device. Generation module may generate based on determining that the individual application was not preinstalled on the client device via the system image for the client device an individual fingerprint that represents the individual application and no other application. Fulfilling module may then fulfill the scan based assessments for the individual application by transmitting the individual fingerprint that represents the individual application to the assessment server and receiving in response an assessment of the individual application.

Using as an example of step in fulfilling module may as a part of computing device fulfill the scan based assessments for applications and by transmitting the fingerprint of system image to assessment server . Assessment server may look up the fingerprint of system image within fingerprints and find the corresponding assessment in assessments . Assessment server may then return the assessment of system image . In one example the assessment may indicate that application includes malware. Fulfilling module may then fulfill subsequent scan based assessments of applications and individually e.g. by sending individual fingerprints for application and to assessment server . In some examples fulfilling module may also fulfill scan based assessments for applications and e.g. that are not a part of system image on an individual basis.

In one example systems described herein may build a unique identifier e.g. a fingerprint for each known ROM image e.g. system image . With the unique identifier for all applications that come with the system image systems described herein may only perform one scan. If a cloud lookup is performed as a part of the scan the cloud lookup may be performed only once. Systems described herein may monitor the ROM distribution and if a problem is detected may roll out a signature that targets the ROM image and the specific application with the problem. Additionally or alternatively these systems may invalidate the ROM and instruct each client device to switch to scanning the applications on an individual basis. Since the majority of ROMs may be expected to be clean and because pre installed applications may make up a large proportion of all applications these systems and methods may save a significant amount of computing resources.

To build a unique identifier for a ROM image the systems described herein may identify a hash of every pre installed application and generate a hash based on these identified hashes. In addition these systems may include information about one or more core system files and or the version of the ROM image when calculating the hash. Additionally or alternatively the systems described herein may build the unique identifier for the ROM image by reading the public key that comes with the ROM and generating the unique identifier from the public key the ROM version and the ROM build number. The public key may also be used to validate a ROM update package. In some examples the systems described herein may build the unique identifier for the ROM image by detecting that the device has not been compromised and or e.g. is trusted to not be compromised with a customized ROM. In this example these systems may use the device hardware model in combination with the ROM version and ROM build number to generate a unique identifier for the ROM image.

In some examples the systems described herein may selectively target a specific set of computing device models for scanning by system image. In one example these systems may stop scanning by the unique identifier of the ROM image if an application is discovered which could use an exploit to change the underlying system of a computing device. In this example these systems may revert to scanning applications on an individual basis.

Computing system broadly represents any single or multi processor computing device or system capable of executing computer readable instructions. Examples of computing system include without limitation workstations laptops client side terminals servers distributed computing systems handheld devices or any other computing system or device. In its most basic configuration computing system may include at least one processor and a system memory .

Processor generally represents any type or form of physical processing unit e.g. a hardware implemented central processing unit capable of processing data or interpreting and executing instructions. In certain embodiments processor may receive instructions from a software application or module. These instructions may cause processor to perform the functions of one or more of the exemplary embodiments described and or illustrated herein.

System memory generally represents any type or form of volatile or non volatile storage device or medium capable of storing data and or other computer readable instructions. Examples of system memory include without limitation Random Access Memory RAM Read Only Memory ROM flash memory or any other suitable memory device. Although not required in certain embodiments computing system may include both a volatile memory unit such as for example system memory and a non volatile storage device such as for example primary storage device as described in detail below . In one example one or more of modules from may be loaded into system memory .

In certain embodiments exemplary computing system may also include one or more components or elements in addition to processor and system memory . For example as illustrated in computing system may include a memory controller an Input Output I O controller and a communication interface each of which may be interconnected via a communication infrastructure . Communication infrastructure generally represents any type or form of infrastructure capable of facilitating communication between one or more components of a computing device. Examples of communication infrastructure include without limitation a communication bus such as an Industry Standard Architecture ISA Peripheral Component Interconnect PCI PCI Express PCIe or similar bus and a network.

Memory controller generally represents any type or form of device capable of handling memory or data or controlling communication between one or more components of computing system . For example in certain embodiments memory controller may control communication between processor system memory and I O controller via communication infrastructure .

I O controller generally represents any type or form of module capable of coordinating and or controlling the input and output functions of a computing device. For example in certain embodiments I O controller may control or facilitate transfer of data between one or more elements of computing system such as processor system memory communication interface display adapter input interface and storage interface .

Communication interface broadly represents any type or form of communication device or adapter capable of facilitating communication between exemplary computing system and one or more additional devices. For example in certain embodiments communication interface may facilitate communication between computing system and a private or public network including additional computing systems. Examples of communication interface include without limitation a wired network interface such as a network interface card a wireless network interface such as a wireless network interface card a modem and any other suitable interface. In at least one embodiment communication interface may provide a direct connection to a remote server via a direct link to a network such as the Internet. Communication interface may also indirectly provide such a connection through for example a local area network such as an Ethernet network a personal area network a telephone or cable network a cellular telephone connection a satellite data connection or any other suitable connection.

In certain embodiments communication interface may also represent a host adapter configured to facilitate communication between computing system and one or more additional network or storage devices via an external bus or communications channel. Examples of host adapters include without limitation Small Computer System Interface SCSI host adapters Universal Serial Bus USB host adapters Institute of Electrical and Electronics Engineers IEEE 1394 host adapters Advanced Technology Attachment ATA Parallel ATA PATA Serial ATA SATA and External SATA eSATA host adapters Fibre Channel interface adapters Ethernet adapters or the like. Communication interface may also allow computing system to engage in distributed or remote computing. For example communication interface may receive instructions from a remote device or send instructions to a remote device for execution.

As illustrated in computing system may also include at least one display device coupled to communication infrastructure via a display adapter . Display device generally represents any type or form of device capable of visually displaying information forwarded by display adapter . Similarly display adapter generally represents any type or form of device configured to forward graphics text and other data from communication infrastructure or from a frame buffer as known in the art for display on display device .

As illustrated in exemplary computing system may also include at least one input device coupled to communication infrastructure via an input interface . Input device generally represents any type or form of input device capable of providing input either computer or human generated to exemplary computing system . Examples of input device include without limitation a keyboard a pointing device a speech recognition device or any other input device.

As illustrated in exemplary computing system may also include a primary storage device and a backup storage device coupled to communication infrastructure via a storage interface . Storage devices and generally represent any type or form of storage device or medium capable of storing data and or other computer readable instructions. For example storage devices and may be a magnetic disk drive e.g. a so called hard drive a solid state drive a floppy disk drive a magnetic tape drive an optical disk drive a flash drive or the like. Storage interface generally represents any type or form of interface or device for transferring data between storage devices and and other components of computing system . In one example database from may be stored in primary storage device .

In certain embodiments storage devices and may be configured to read from and or write to a removable storage unit configured to store computer software data or other computer readable information. Examples of suitable removable storage units include without limitation a floppy disk a magnetic tape an optical disk a flash memory device or the like. Storage devices and may also include other similar structures or devices for allowing computer software data or other computer readable instructions to be loaded into computing system . For example storage devices and may be configured to read and write software data or other computer readable information. Storage devices and may also be a part of computing system or may be a separate device accessed through other interface systems.

Many other devices or subsystems may be connected to computing system . Conversely all of the components and devices illustrated in need not be present to practice the embodiments described and or illustrated herein. The devices and subsystems referenced above may also be interconnected in different ways from that shown in . Computing system may also employ any number of software firmware and or hardware configurations. For example one or more of the exemplary embodiments disclosed herein may be encoded as a computer program also referred to as computer software software applications computer readable instructions or computer control logic on a computer readable medium. The phrase computer readable medium as used herein generally refers to any form of device carrier or medium capable of storing or carrying computer readable instructions. Examples of computer readable media include without limitation transmission type media such as carrier waves and non transitory type media such as magnetic storage media e.g. hard disk drives tape drives and floppy disks optical storage media e.g. Compact Disks CDs Digital Video Disks DVDs and BLU RAY disks electronic storage media e.g. solid state drives and flash media and other distribution systems.

The computer readable medium containing the computer program may be loaded into computing system . All or a portion of the computer program stored on the computer readable medium may then be stored in system memory and or various portions of storage devices and . When executed by processor a computer program loaded into computing system may cause processor to perform and or be a means for performing the functions of one or more of the exemplary embodiments described and or illustrated herein. Additionally or alternatively one or more of the exemplary embodiments described and or illustrated herein may be implemented in firmware and or hardware. For example computing system may be configured as an Application Specific Integrated Circuit ASIC adapted to implement one or more of the exemplary embodiments disclosed herein.

Client systems and generally represent any type or form of computing device or system such as exemplary computing system in . Similarly servers and generally represent computing devices or systems such as application servers or database servers configured to provide various database services and or run certain software applications. Network generally represents any telecommunication or computer network including for example an intranet a WAN a LAN a PAN or the Internet. In one example client systems and or and or servers and or may include all or a portion of system from .

As illustrated in one or more storage devices N may be directly attached to server . Similarly one or more storage devices N may be directly attached to server . Storage devices N and storage devices N generally represent any type or form of storage device or medium capable of storing data and or other computer readable instructions. In certain embodiments storage devices N and storage devices N may represent Network Attached Storage NAS devices configured to communicate with servers and using various protocols such as Network File System NFS Server Message Block SMB or Common Internet File System CIFS .

Servers and may also be connected to a Storage Area Network SAN fabric . SAN fabric generally represents any type or form of computer network or architecture capable of facilitating communication between a plurality of storage devices. SAN fabric may facilitate communication between servers and and a plurality of storage devices N and or an intelligent storage array . SAN fabric may also facilitate via network and servers and communication between client systems and and storage devices N and or intelligent storage array in such a manner that devices N and array appear as locally attached devices to client systems and . As with storage devices N and storage devices N storage devices N and intelligent storage array generally represent any type or form of storage device or medium capable of storing data and or other computer readable instructions.

In certain embodiments and with reference to exemplary computing system of a communication interface such as communication interface in may be used to provide connectivity between each client system and and network . Client systems and may be able to access information on server or using for example a web browser or other client software. Such software may allow client systems and to access data hosted by server server storage devices N storage devices N storage devices N or intelligent storage array . Although depicts the use of a network such as the Internet for exchanging data the embodiments described and or illustrated herein are not limited to the Internet or any particular network based environment.

In at least one embodiment all or a portion of one or more of the exemplary embodiments disclosed herein may be encoded as a computer program and loaded onto and executed by server server storage devices N storage devices N storage devices N intelligent storage array or any combination thereof. All or a portion of one or more of the exemplary embodiments disclosed herein may also be encoded as a computer program stored in server run by server and distributed to client systems and over network .

As detailed above computing system and or one or more components of network architecture may perform and or be a means for performing either alone or in combination with other elements one or more steps of an exemplary method for optimizing scans of pre installed applications.

While the foregoing disclosure sets forth various embodiments using specific block diagrams flowcharts and examples each block diagram component flowchart step operation and or component described and or illustrated herein may be implemented individually and or collectively using a wide range of hardware software or firmware or any combination thereof configurations. In addition any disclosure of components contained within other components should be considered exemplary in nature since many other architectures can be implemented to achieve the same functionality.

In some examples all or a portion of exemplary system in may represent portions of a cloud computing or network based environment. Cloud computing environments may provide various services and applications via the Internet. These cloud based services e.g. software as a service platform as a service infrastructure as a service etc. may be accessible through a web browser or other remote interface. Various functions described herein may be provided through a remote desktop environment or any other cloud based computing environment.

In various embodiments all or a portion of exemplary system in may facilitate multi tenancy within a cloud based computing environment. In other words the software modules described herein may configure a computing system e.g. a server to facilitate multi tenancy for one or more of the functions described herein. For example one or more of the software modules described herein may program a server to enable two or more clients e.g. customers to share an application that is running on the server. A server programmed in this manner may share an application operating system processing system and or storage system among multiple customers i.e. tenants . One or more of the modules described herein may also partition data and or configuration information of a multi tenant application for each customer such that one customer cannot access data and or configuration information of another customer.

According to various embodiments all or a portion of exemplary system in may be implemented within a virtual environment. For example the modules and or data described herein may reside and or execute within a virtual machine. As used herein the phrase virtual machine generally refers to any operating system environment that is abstracted from computing hardware by a virtual machine manager e.g. a hypervisor . Additionally or alternatively the modules and or data described herein may reside and or execute within a virtualization layer. As used herein the phrase virtualization layer generally refers to any data layer and or application layer that overlays and or is abstracted from an operating system environment. A virtualization layer may be managed by a software virtualization solution e.g. a file system filter that presents the virtualization layer as though it were part of an underlying base operating system. For example a software virtualization solution may redirect calls that are initially directed to locations within a base file system and or registry to locations within a virtualization layer.

In some examples all or a portion of exemplary system in may represent portions of a mobile computing environment. Mobile computing environments may be implemented by a wide range of mobile computing devices including mobile phones tablet computers e book readers personal digital assistants wearable computing devices e.g. computing devices with a head mounted display smartwatches etc. and the like. In some examples mobile computing environments may have one or more distinct features including for example reliance on battery power presenting only one foreground application at any given time remote management features touchscreen features location and movement data e.g. provided by Global Positioning Systems gyroscopes accelerometers etc. restricted platforms that restrict modifications to system level configurations and or that limit the ability of third party software to inspect the behavior of other applications controls to restrict the installation of applications e.g. to only originate from approved application stores etc. Various functions described herein may be provided for a mobile computing environment and or may interact with a mobile computing environment.

In addition all or a portion of exemplary system in may represent portions of interact with consume data produced by and or produce data consumed by one or more systems for information management. As used herein the phrase information management may refer to the protection organization and or storage of data. Examples of systems for information management may include without limitation storage systems backup systems archival systems replication systems high availability systems data search systems virtualization systems and the like.

In some embodiments all or a portion of exemplary system in may represent portions of produce data protected by and or communicate with one or more systems for information security. As used herein the phrase information security may refer to the control of access to protected data. Examples of systems for information security may include without limitation systems providing managed security services data loss prevention systems identity authentication systems access control systems encryption systems policy compliance systems intrusion detection and prevention systems electronic discovery systems and the like.

According to some examples all or a portion of exemplary system in may represent portions of communicate with and or receive protection from one or more systems for endpoint security. As used herein the phrase endpoint security may refer to the protection of endpoint systems from unauthorized and or illegitimate use access and or control. Examples of systems for endpoint protection may include without limitation anti malware systems user authentication systems encryption systems privacy systems spam filtering services and the like.

The process parameters and sequence of steps described and or illustrated herein are given by way of example only and can be varied as desired. For example while the steps illustrated and or described herein may be shown or discussed in a particular order these steps do not necessarily need to be performed in the order illustrated or discussed. The various exemplary methods described and or illustrated herein may also omit one or more of the steps described or illustrated herein or include additional steps in addition to those disclosed.

While various embodiments have been described and or illustrated herein in the context of fully functional computing systems one or more of these exemplary embodiments may be distributed as a program product in a variety of forms regardless of the particular type of computer readable media used to actually carry out the distribution. The embodiments disclosed herein may also be implemented using software modules that perform certain tasks. These software modules may include script batch or other executable files that may be stored on a computer readable storage medium or in a computing system. In some embodiments these software modules may configure a computing system to perform one or more of the exemplary embodiments disclosed herein.

In addition one or more of the modules described herein may transform data physical devices and or representations of physical devices from one form to another. For example one or more of the modules recited herein may receive a fingerprint of a system image to be transformed transform the fingerprint of the system image into an assessment of one or more pre installed applications output a result of the transformation to a security system use the result of the transformation to address a security issue and store the result of the transformation to a storage device. Additionally or alternatively one or more of the modules recited herein may transform a processor volatile memory non volatile memory and or any other portion of a physical computing device from one form to another by executing on the computing device storing data on the computing device and or otherwise interacting with the computing device.

The preceding description has been provided to enable others skilled in the art to best utilize various aspects of the exemplary embodiments disclosed herein. This exemplary description is not intended to be exhaustive or to be limited to any precise form disclosed. Many modifications and variations are possible without departing from the spirit and scope of the instant disclosure. The embodiments disclosed herein should be considered in all respects illustrative and not restrictive. Reference should be made to the appended claims and their equivalents in determining the scope of the instant disclosure.

Unless otherwise noted the terms connected to and coupled to and their derivatives as used in the specification and claims are to be construed as permitting both direct and indirect i.e. via other elements or components connection. In addition the terms a or an as used in the specification and claims are to be construed as meaning at least one of. Finally for ease of use the terms including and having and their derivatives as used in the specification and claims are interchangeable with and have the same meaning as the word comprising. 

