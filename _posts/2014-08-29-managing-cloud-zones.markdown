---

title: Managing cloud zones
abstract: Methods and systems for managing cloud zones are described herein. A management server for a cloud of computing resources may add private zones to the cloud. The private zones may contain computers owned and operated by a user of the cloud, such as a cloud customer, rather than the cloud operator. The management server may manage the computing resources in the private zone by sending commands to an agent, which in turn relays the management server's commands to the individual computing resources. The agent may be authenticated using a token.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09276925&OS=09276925&RS=09276925
owner: Citrix Systems, Inc.
number: 09276925
owner_city: Fort Lauderdale
owner_country: US
publication_date: 20140829
---
This application is a continuation of and claims priority to U.S. patent application Ser. No. 13 459 830 filed Apr. 30 2012 and entitled MANAGING CLOUD ZONES the disclosure of which is incorporated by reference herein in its entirety and made part hereof.

This application generally relates to creating and managing virtual machines. In particular this application relates to provisioning virtual machines on a cloud customer s physical resources by adding the cloud customer s physical resources to a cloud as a private zone.

Traditionally personal computers included operating systems applications and user settings for a single user. Personal computers were generally both used and managed by their owners. However many organizations are now using clouds of computing resources to fulfill their computing needs. The clouds of computing resources generally allow for the operating systems applications and user settings of multiple users to be included on a single physical machine. Desktop virtualization technology allows multiple instances of an operating system to be kept separate so the activities of one user may not affect the experience of other users. Cloud computing environments allow for computers owned by the cloud operator to be managed by the cloud operator but used by cloud users who may be customers of the cloud operator.

In light of the foregoing background the following presents a simplified summary of the present disclosure in order to provide a basic understanding of some aspects described herein. This summary is not an extensive overview and it is not intended to identify key or critical elements or to delineate the scope of the claims. The following summary merely presents various described aspects in a simplified form as a prelude to the more detailed description provided below.

According to one aspect of the disclosure a management server for a cloud of physical computing resources may manage private resources of a cloud customer in addition to the resources of the cloud operator. The private resources may be organized into one or more private zones of the cloud.

According to another aspect of the disclosure one or more of the private zones may be located behind a firewall thereby making the resources inaccessible to the management server. One or more agents may initiate a communications session with the management server. The communications session may be maintained continuously thereby enabling communications from the management server to reach the agent. The agent may relay communications from the management server to the appropriate physical resources.

According to a still further aspect of the disclosure the management server may provide a token for use by an authorized agent. The management server may authenticate an agent using the token before managing the resources behind the agent.

In the following description of the various embodiments reference is made to the accompanying drawings which form a part hereof and in which is shown by way of illustration various embodiments in which aspects described herein may be practiced. It is to be understood that other embodiments may be utilized and structural and functional modifications may be made without departing from the scope and spirit of the present disclosure.

As will be appreciated by one of skill in the art upon reading the following disclosure various aspects described herein may be embodied as a method a data processing system or a computer program product. Accordingly those aspects may take the form of an entirely hardware embodiment an entirely software embodiment or an embodiment combining software and hardware aspects. Furthermore such aspects may take the form of a computer program product stored by one or more computer readable storage media having computer readable program code or instructions embodied in or on the storage media. Any suitable computer readable storage media may be utilized including hard disks CD ROMs optical storage devices magnetic storage devices and or any combination thereof. In addition various signals representing data or events as described herein may be transferred between a source and a destination in the form of electromagnetic waves traveling through signal conducting media such as metal wires optical fibers and or wireless transmission media e.g. air and or space .

I O module may include a mouse keypad touch screen scanner optical reader and or stylus or other input device s through which a user of generic computing device may provide input and may also include one or more of a speaker for providing audio output and a video display device for providing textual audiovisual and or graphical output. Software may be stored within memory and or other storage to provide instructions to processor for enabling generic computing device to perform various functions. For example memory may store software used by the generic computing device such as an operating system application programs and an associated database . Alternatively some or all of the computer executable instructions for generic computing device may be embodied in hardware or firmware not shown .

The generic computing device may operate in a networked environment supporting connections to one or more remote computers such as terminals also referred to as client devices . The terminals may be personal computers or servers that include many or all of the elements described above with respect to the generic computing device . The network connections depicted in include a local area network LAN and a wide area network WAN but may also include other networks. When used in a LAN networking environment the generic computing device may be connected to the LAN through a network interface or adapter . When used in a WAN networking environment the generic computing device may include a modem or other network interface for establishing communications over the WAN such as computer network e.g. the Internet . It will be appreciated that the network connections shown are illustrative and other means of establishing a communications link between the computers may be used.

Generic computing device and or terminals may also be mobile terminals e.g. mobile phones smartphones PDAs notebooks etc. including various other components such as a battery speaker and antennas not shown .

The disclosure is operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems environments and or configurations that may be suitable for use with the disclosure include but are not limited to personal computers server computers hand held or laptop devices multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics network PCs minicomputers mainframe computers distributed computing environments that include any of the above systems or devices and the like.

As shown in one or more client devices may be in communication with one or more servers generally referred to herein as server s . In one embodiment the computing environment can include an appliance installed between the server s and client machine s . This appliance can manage client server connections and in some cases can load balance client connections amongst a plurality of backend servers .

The client machine s can in some embodiment be referred to as a single client machine or a single group of client machines while server s may be referred to as a single server or a single group of servers . In one embodiment a single client machine communicates with more than one server while in another embodiment a single server communicates with more than one client machine . In yet another embodiment a single client machine communicates with a single server .

A client machine can in some embodiments be referenced by any one of the following terms client machine s client s client computer s client device s client computing device s local machine remote machine client node s endpoint s endpoint node s or a second machine. The server in some embodiments may be referenced by any one of the following terms server s local machine remote machine server farm s host computing device s or a first machine s .

In one embodiment the client machine may be a virtual machine. The virtual machine may be any virtual machine while in some embodiments the virtual machine may be any virtual machine managed by a hypervisor developed by Citrix Systems IBM VMware or any other hypervisor. In some aspects the virtual machine may be managed by a hypervisor while in aspects the virtual machine may be managed by a hypervisor executing on a server or a hypervisor executing on a client .

The client machine may execute operate or otherwise provide an application that can be any one of the following software a program executable instructions a virtual machine a hypervisor a web browser a web based client a client server application a thin client computing client an ActiveX control a Java applet software related to voice over internet protocol VoIP communications like a soft IP telephone an application for streaming video and or audio an application for facilitating real time data communications a HTTP client a FTP client an Oscar client a Telnet client or any other set of executable instructions. Still other embodiments include a client device that displays application output generated by an application remotely executing on a server or other remotely located machine. In these embodiments the client device can display the application output in an application window a browser or other output window. In one example the application is a desktop while in other examples the application is an application that generates a desktop. A desktop may include a graphical shell providing a user interface for an instance of an operating system in which local and or remote applications can be integrated. Applications as used herein are programs that execute after an instance of an operating system and optionally also the desktop has been loaded.

The server in some embodiments executes a remote presentation client or other client or program that uses a thin client or remote display protocol to capture display output generated by an application executing on a server and transmits the application display output to a remote client . The thin client or remote display protocol can be any one of the following protocols the Independent Computing Architecture ICA protocol manufactured by Citrix Systems Inc. of Ft. Lauderdale Fla. or the Remote Desktop Protocol RDP manufactured by the Microsoft Corporation of Redmond Wash.

The computing environment can include more than one server A N such that the servers A N are logically grouped together into a server farm for example in a cloud computing environment. The server farm can include servers that are geographically dispersed and logically grouped together in a server farm or servers that are located proximate to each other and logically grouped together in a server farm . Geographically dispersed servers A N within a server farm can in some embodiments communicate using a WAN MAN or LAN where different geographic regions can be characterized as different continents different regions of a continent different countries different states different cities different campuses different rooms or any combination of the preceding geographical locations. In some embodiments the server farm may be administered as a single entity while in other embodiments the server farm can include multiple server farms .

In some embodiments a server farm can include servers that execute a substantially similar type of operating system platform e.g. WINDOWS NT manufactured by Microsoft Corp. of Redmond Wash. UNIX LINUX or SNOW LEOPARD. In other embodiments the server farm can include a first group of servers that execute a first type of operating system platform and a second group of servers that execute a second type of operating system platform. The server farm in other embodiments can include servers that execute different types of operating system platforms.

The server in some embodiments can be any server type. In other embodiments the server can be any of the following server types a file server an application server a web server a proxy server an appliance a network appliance a gateway an application gateway a gateway server a virtualization server a deployment server a SSL VPN server a firewall a web server an application server or as a master application server a server executing an active directory or a server executing an application acceleration program that provides firewall functionality application functionality or load balancing functionality. In some embodiments a server may be a RADIUS server that includes a remote authentication dial in user service. In embodiments where the server comprises an appliance the server can be an appliance manufactured by any one of the following manufacturers the Citrix Application Networking Group Silver Peak Systems Inc. Riverbed Technology Inc. F5 Networks Inc. or Juniper Networks Inc. Some embodiments include a first server A that receives requests from a client machine forwards the request to a second server and responds to the request generated by the client machine with a response from the second server . The first server A can acquire an enumeration of applications available to the client machine and well as address information associated with an application server hosting an application identified within the enumeration of applications. The first server A can then present a response to the client s request using a web interface and communicate directly with the client to provide the client with access to an identified application.

The server can in some embodiments execute any one of the following applications a thin client application using a thin client protocol to transmit application display data to a client a remote display presentation application any portion of the CITRIX ACCESS SUITE by Citrix Systems Inc. like the METAFRAME or CITRIX PRESENTATION SERVER MICROSOFT WINDOWS Terminal Services manufactured by the Microsoft Corporation or an ICA client developed by Citrix Systems Inc. Another embodiment includes a server that is an application server such as an email server that provides email services such as MICROSOFT EXCHANGE manufactured by the Microsoft Corporation a web or Internet server a desktop sharing server a collaboration server or any other type of application server. Still other embodiments include a server that executes any one of the following types of hosted servers applications GOTOMEETING provided by Citrix Online Division Inc. WEBEX provided by WebEx Inc. of Santa Clara Calif. or Microsoft Office LIVE MEETING provided by Microsoft Corporation.

Client machines can in some embodiments be a client node that seeks access to resources provided by a server . In other embodiments the server may provide clients or client nodes with access to hosted resources. The server in some embodiments functions as a master node such that it communicates with one or more clients or servers . In some embodiments the master node can identify and provide address information associated with a server hosting a requested application to one or more clients or servers . In still other embodiments the master node can be a server farm a client a cluster of client nodes or an appliance.

One or more clients and or one or more servers can transmit data over a network installed between machines and appliances within the computing environment . The network can comprise one or more sub networks and can be installed between any combination of the clients servers computing machines and appliances included within the computing environment . In some embodiments the network can be a local area network LAN a metropolitan area network MAN a wide area network WAN a primary network comprised of multiple sub networks located between the client machines and the servers a primary public network e.g. the Internet with a private sub network a primary private network with a public sub network or a primary private network with a private sub network. Still further embodiments include a network that can be any of the following network types a point to point network a broadcast network a telecommunications network a data communication network a computer network an ATM Asynchronous Transfer Mode network a SONET Synchronous Optical Network network a SDH Synchronous Digital Hierarchy network a wireless network a wireline network or a network that includes a wireless link where the wireless link can be an infrared channel or satellite band. The network topology of the network can differ within different embodiments possible network topologies include a bus network topology a star network topology a ring network topology a repeater based network topology or a tiered star network topology. Additional embodiments may include a network of mobile telephone networks that use a protocol to communicate among mobile devices where the protocol can be any one of the following AMPS TDMA CDMA GSM GPRS UMTS or any other protocol able to transmit data among mobile devices.

Illustrated in is an embodiment of a computing device where the client machine and server illustrated in may be deployed as and or executed on any embodiment of the computing device illustrated and described herein. Included within the computing device is a system bus that communicates with the following components a central processing unit a main memory storage memory an input output I O controller display devices A N an installation device and a network interface . In one embodiment the storage memory includes an operating system software routines and a client agent . The I O controller in some embodiments is further connected to a keyboard and a pointing device . Other embodiments may include an I O controller connected to more than one input output device A N.

Embodiments of the computing machine can include a central processing unit characterized by any one of the following component configurations logic circuits that respond to and process instructions fetched from the main memory unit a microprocessor unit such as those manufactured by Intel Corporation those manufactured by Motorola Corporation those manufactured by Transmeta Corporation of Santa Clara Calif. the RS 6000 processor such as those manufactured by International Business Machines a processor such as those manufactured by Advanced Micro Devices or any other combination of logic circuits. Still other embodiments of the central processing unit may include any combination of the following a microprocessor a microcontroller a central processing unit with a single processing core a central processing unit with two processing cores or a central processing unit with more than one processing core.

While illustrates a computing device that includes a single central processing unit in some embodiments the computing device can include one or more processing units . In these embodiments the computing device may store and execute firmware or other executable instructions that when executed direct the one or more processing units to simultaneously execute instructions or to simultaneously execute instructions on a single piece of data. In other embodiments the computing device may store and execute firmware or other executable instructions that when executed direct the one or more processing units to each execute a section of a group of instructions. For example each processing unit may be instructed to execute a portion of a program or a particular module within a program.

In some embodiments the processing unit can include one or more processing cores. For example the processing unit may have two cores four cores eight cores etc. In one embodiment the processing unit may comprise one or more parallel processing cores. The processing cores of the processing unit may in some embodiments access available memory as a global address space or in other embodiments memory within the computing device can be segmented and assigned to a particular core within the processing unit . In one embodiment the one or more processing cores or processors in the computing device can each access local memory. In still another embodiment memory within the computing device can be shared amongst one or more processors or processing cores while other memory can be accessed by particular processors or subsets of processors. In embodiments where the computing device includes more than one processing unit the multiple processing units can be included in a single integrated circuit IC . These multiple processors in some embodiments can be linked together by an internal high speed bus which may be referred to as an element interconnect bus.

In embodiments where the computing device includes one or more processing units or a processing unit including one or more processing cores the processors can execute a single instruction simultaneously on multiple pieces of data SIMD or in other embodiments can execute multiple instructions simultaneously on multiple pieces of data MIMD . In some embodiments the computing device can include any number of SIMD and MIMD processors.

The computing device in some embodiments can include a graphics processor or a graphics processing unit Not Shown . The graphics processing unit can include any combination of software and hardware and can further input graphics data and graphics instructions render a graphic from the inputted data and instructions and output the rendered graphic. In some embodiments the graphics processing unit can be included within the processing unit . In other embodiments the computing device can include one or more processing units where at least one processing unit is dedicated to processing and rendering graphics.

One embodiment of the computing machine includes a central processing unit that communicates with cache memory via a secondary bus also known as a backside bus while another embodiment of the computing machine includes a central processing unit that communicates with cache memory via the system bus . The local system bus can in some embodiments also be used by the central processing unit to communicate with more than one type of I O device . In some embodiments the local system bus can be any one of the following types of buses a VESA VL bus an ISA bus an EISA bus a MicroChannel Architecture MCA bus a PCI bus a PCI X bus a PCI Express bus or a NuBus. Other embodiments of the computing machine include an I O device that includes a video display that communicates with the central processing unit . Still other versions of the computing machine include a processor connected to an I O device via any one of the following connections HyperTransport Rapid I O or InfiniBand. Further embodiments of the computing machine include a processor that communicates with one I O device using a local interconnect bus and a second I O device using a direct connection.

The computing device in some embodiments includes a main memory unit and cache memory . The cache memory can be any memory type and in some embodiments can be any one of the following types of memory SRAM BSRAM or EDRAM. Other embodiments include cache memory and a main memory unit that can be any one of the following types of memory Static random access memory SRAM Burst SRAM or SynchBurst SRAM BSRAM Dynamic random access memory DRAM Fast Page Mode DRAM FPM DRAM Enhanced DRAM EDRAM Extended Data Output RAM EDO RAM Extended Data Output DRAM EDO DRAM Burst Extended Data Output DRAM BEDO DRAM Enhanced DRAM EDRAM synchronous DRAM SDRAM JEDEC SRAM PC100 SDRAM Double Data Rate SDRAM DDR SDRAM Enhanced SDRAM ESDRAM SyncLink DRAM SLDRAM Direct Rambus DRAM DRDRAM Ferroelectric RAM FRAM or any other type of memory. Further embodiments include a central processing unit that can access the main memory via a system bus a memory port or any other connection bus or port that allows the processor to access memory .

One embodiment of the computing device provides support for any one of the following installation devices a CD ROM drive a CD R RW drive a DVD ROM drive tape drives of various formats USB device a bootable medium a bootable CD a bootable CD for GNU Linux distribution such as KNOPPIX a hard drive or any other device suitable for installing applications or software. Applications can in some embodiments include a client agent or any portion of a client agent . The computing device may further include a storage device that can be either one or more hard disk drives or one or more redundant arrays of independent disks where the storage device is configured to store an operating system software programs applications or at least a portion of the client agent . A further embodiment of the computing device includes an installation device that is used as the storage device .

The computing device may further include a network interface to interface to a Local Area Network LAN Wide Area Network WAN or the Internet through a variety of connections including but not limited to standard telephone lines LAN or WAN links e.g. 802.11 T1 T3 56 kb X.25 SNA DECNET broadband connections e.g. ISDN Frame Relay ATM Gigabit Ethernet Ethernet over SONET wireless connections or some combination of any or all of the above. Connections can also be established using a variety of communication protocols e.g. TCP IP IPX SPX NetBIOS Ethernet ARCNET SONET SDH Fiber Distributed Data Interface FDDI RS232 RS485 IEEE 802.11 IEEE 802.11a IEEE 802.11b IEEE 802.11g CDMA GSM WiMax and direct asynchronous connections . One version of the computing device includes a network interface able to communicate with additional computing devices via any type and or form of gateway or tunneling protocol such as Secure Socket Layer SSL or Transport Layer Security TLS or the Citrix Gateway Protocol manufactured by Citrix Systems Inc. Versions of the network interface can comprise any one of a built in network adapter a network interface card a PCMCIA network card a card bus network adapter a wireless network adapter a USB network adapter a modem or any other device suitable for interfacing the computing device to a network capable of communicating and performing the methods and systems described herein.

Embodiments of the computing device include any one of the following I O devices a keyboard a pointing device mice trackpads an optical pen trackballs microphones drawing tablets video displays speakers inkjet printers laser printers and dye sublimation printers or any other input output device able to perform the methods and systems described herein. An I O controller may in some embodiments connect to multiple I O devices to control the one or more I O devices. Some embodiments of the I O devices may be configured to provide storage or an installation medium while others may provide a universal serial bus USB interface for receiving USB storage devices such as the USB Flash Drive line of devices manufactured by Twintech Industry Inc. Still other embodiments include an I O device that may be a bridge between the system bus and an external communication bus such as a USB bus an Apple Desktop Bus an RS 232 serial connection a SCSI bus a FireWire bus a FireWire 800 bus an Ethernet bus an AppleTalk bus a Gigabit Ethernet bus an Asynchronous Transfer Mode bus a HIPPI bus a Super HIPPI bus a SerialPlus bus a SCI LAMP bus a FibreChannel bus or a Serial Attached small computer system interface bus.

In some embodiments the computing machine can connect to multiple display devices in other embodiments the computing device can connect to a single display device while in still other embodiments the computing device connects to display devices that are the same type or form of display or to display devices that are different types or forms. Embodiments of the display devices can be supported and enabled by the following one or multiple I O devices the I O controller a combination of I O device s and the I O controller any combination of hardware and software able to support a display device any type and or form of video adapter video card driver and or library to interface communicate connect or otherwise use the display devices . The computing device may in some embodiments be configured to use one or multiple display devices A N these configurations include having multiple connectors to interface to multiple display devices A N having multiple video adapters with each video adapter connected to one or more of the display devices A N having an operating system configured to support multiple displays A N using circuits and software included within the computing device to connect to and use multiple display devices A N and executing software on the main computing device and multiple secondary computing devices to enable the main computing device to use a secondary computing device s display as a display device A N for the main computing device . Still other embodiments of the computing device may include multiple display devices A N provided by multiple secondary computing devices and connected to the main computing device via a network.

In some embodiments the computing machine can execute any operating system while in other embodiments the computing machine can execute any of the following operating systems versions of the MICROSOFT WINDOWS operating systems such as WINDOWS 3.x WINDOWS 95 WINDOWS 98 WINDOWS 2000 WINDOWS NT 3.51 WINDOWS NT 4.0 WINDOWS CE WINDOWS XP and WINDOWS VISTA the different releases of the Unix and Linux operating systems any version of the MAC OS manufactured by Apple Computer OS 2 manufactured by International Business Machines any embedded operating system any real time operating system any open source operating system any proprietary operating system any operating systems for mobile computing devices or any other operating system. In still another embodiment the computing machine can execute multiple operating systems. For example the computing machine can execute PARALLELS or another virtualization platform that can execute or manage a virtual machine executing a first operating system while the computing machine executes a second operating system different from the first operating system.

The computing machine can be embodied in any one of the following computing devices a computing workstation a desktop computer a laptop or notebook computer a server a handheld computer a mobile telephone a portable telecommunication device a media playing device a gaming system a mobile computing device a netbook a device of the IPOD family of devices manufactured by Apple Computer any one of the PLAYSTATION family of devices manufactured by the Sony Corporation any one of the Nintendo family of devices manufactured by Nintendo Co any one of the XBOX family of devices manufactured by the Microsoft Corporation or any other type and or form of computing telecommunications or media device that is capable of communication and that has sufficient processor power and memory capacity to perform the methods and systems described herein. In other embodiments the computing machine can be a mobile device such as any one of the following mobile devices a JAVA enabled cellular telephone or personal digital assistant PDA such as the i55sr i58sr i85s i88s i90c i95c1 or the im1100 all of which are manufactured by Motorola Corp the 6035 or the 7135 manufactured by Kyocera the i300 or i330 manufactured by Samsung Electronics Co. Ltd the TREO 180 270 600 650 680 700p 700w or 750 smart phone manufactured by Palm Inc any computing device that has different processors operating systems and input devices consistent with the device or any other mobile computing device capable of performing the methods and systems described herein. In still other embodiments the computing device can be any one of the following mobile computing devices any one series of Blackberry or other handheld device manufactured by Research In Motion Limited the iPhone manufactured by Apple Computer Palm Pre a Pocket PC a Pocket PC Phone or any other handheld mobile device.

In some embodiments the computing device may have different processors operating systems and input devices consistent with the device. For example in one embodiment the computing device is a TREO 180 270 600 650 680 700p 700w or 750 smart phone manufactured by Palm Inc. In some of these embodiments the TREO smart phone is operated under the control of the PalmOS operating system and includes a stylus input device as well as a five way navigator device.

In other embodiments the computing device is a mobile device such as a JAVA enabled cellular telephone or personal digital assistant PDA such as the i55sr i58sr i85s i88s i90c i95c1 or the im1100 all of which are manufactured by Motorola Corp. of Schaumburg Ill. the 6035 or the 7135 manufactured by Kyocera of Kyoto Japan or the i300 or i330 manufactured by Samsung Electronics Co. Ltd. of Seoul Korea. In some embodiments the computing device is a mobile device manufactured by Nokia of Finland or by Sony Ericsson Mobile Communications AB of Lund Sweden.

In still other embodiments the computing device is a Blackberry handheld or smart phone such as the devices manufactured by Research In Motion Limited including the Blackberry 7100 series 8700 series 7700 series 7200 series the Blackberry 7520 or the Blackberry Pearl 8100. In yet other embodiments the computing device is a smart phone Pocket PC Pocket PC Phone or other handheld mobile device supporting Microsoft Windows Mobile Software. Moreover the computing device can be any workstation desktop computer laptop or notebook computer server handheld computer mobile telephone any other computer or other form of computing or telecommunications device that is capable of communication and that has sufficient processor power and memory capacity to perform the operations described herein.

In some embodiments the computing device is a digital audio player. In one of these embodiments the computing device is a digital audio player such as the Apple IPOD IPOD Touch IPOD NANO and IPOD SHUFFLE lines of devices manufactured by Apple Computer of Cupertino Calif. In another of these embodiments the digital audio player may function as both a portable media player and as a mass storage device. In other embodiments the computing device is a digital audio player such as the DigitalAudioPlayer Select MP3 players manufactured by Samsung Electronics America of Ridgefield Park N.J. or the Motorola m500 or m25 Digital Audio Players manufactured by Motorola Inc. of Schaumburg Ill. In still other embodiments the computing device is a portable media player such as the Zen Vision W the Zen Vision series the Zen Portable Media Center devices or the Digital MP3 line of MP3 players manufactured by Creative Technologies Ltd. In yet other embodiments the computing device is a portable media player or digital audio player supporting file formats including but not limited to MP3 WAV M4A AAC WMA Protected AAC RIFF Audible audiobook Apple Lossless audio file formats and .mov .m4v and .mp4 MPEG 4 H.264 MPEG 4 AVC video file formats.

In some embodiments the computing device comprises a combination of devices such as a mobile phone combined with a digital audio player or portable media player. In one of these embodiments the computing device is a Motorola RAZR or Motorola ROKR line of combination digital audio players and mobile phones. In another of these embodiments the computing device is an iPhone smartphone manufactured by Apple Computer of Cupertino Calif.

Illustrated in is one embodiment of a computer device configured as a virtualization server in a virtualization environment for example a single server multi server or cloud computing environment. The virtualization server illustrated in can be deployed as and or implemented by one or more embodiments of the server illustrated in or the computing devices and illustrated in . Included in virtualization server is a hardware layer that can include one or more physical disks one or more physical devices one or more physical processors and a physical memory . In some embodiments firmware can be stored within a memory element in the physical memory and can be executed by one or more of the physical processors . The virtualization server may further include an operating system that may be stored in a memory element in the physical memory and executed by one or more of the physical processors . Still further a hypervisor may be stored in a memory element in the physical memory and can be executed by one or more of the physical processors . Executing on one or more of the physical processors may be one or more virtual machines A C generally . Each virtual machine may have a virtual disk A C and a virtual processor A C. In some embodiments a first virtual machine A may execute on a virtual processor A a control program that includes a tools stack . In other embodiments one or more virtual machines B C can executed on a virtual processor B C a guest operating system A B.

Further referring to and in more detail the virtualization server may include a hardware layer with one or more pieces of hardware. In some embodiments the hardware layer can include one or more physical disks one or more physical devices one or more physical processors and one or more memory . Physical components and may include for example any of the components described above in . For instance physical disks may include permanent memory storage temporary memory storage disk drives e.g. optical floppy tape hard disks external hard drives flash memory network attached storage a storage area network or any other storage repository that the virtualization server can access. Physical devices may include any device included in the virtualization server and or any combination of devices included in the virtualization server and external devices that communicate with the virtualization server . A physical device may be for example a network interface card a video card a keyboard a mouse an input device a monitor a display device speakers an optical drive a storage device a universal serial bus connection a printer a scanner a network element e.g. router firewall network address translator load balancer virtual private network VPN gateway Dynamic Host Configuration Protocol DHCP router etc. or any device connected to or communicating with the virtualization server . The physical memory in the hardware layer may include any type of memory. The physical memory may store data and in some embodiments may store one or more programs or set of executable instructions. illustrates an embodiment where firmware is stored within the physical memory of the virtualization server . Programs or executable instructions stored in the physical memory can be executed by the one or more processors of the virtualization server .

Virtualization server may also include a hypervisor . In some embodiments hypervisor may be a program executed by processors of the virtualization server to create and manage any number of virtual machines . The hypervisor can be referred to as a virtual machine monitor or platform virtualization software. In some embodiments a hypervisor can be any combination of executable instructions and hardware that monitors virtual machines executing on a computing machine. Hypervisor may be Type 2 hypervisor or a hypervisor that executes within an operating system executing on the virtualization server . A Type 2 hypervisor in some embodiments executes within an operating system environment and virtual machines execute at a level above the hypervisor. In many embodiments the Type 2 hypervisor executes within the context of a user s operating system such that the Type 2 hypervisor interacts with the user s operating system. In other embodiments one or more virtualization servers in a virtualization environment may include a Type 1 hypervisor Not Shown . A Type 1 hypervisor may execute on the virtualization server by directly accessing the hardware and resources within the hardware layer . That is while a Type 2 hypervisor accesses system resources through a host operating system a Type 1 hypervisor may directly access all system resources without needing a host operating system . Thus a host operating system may not be present. A Type 1 hypervisor may execute directly on one or more physical processors of the virtualization server and may include program data stored in the physical memory .

The hypervisor in some embodiments can provide virtual resources to operating systems or control programs executing on virtual machines in any manner that simulates the operating systems or control programs having direct access to system resources. System resources can include physical devices physical disks physical processors physical memory and any other component included in the virtualization server hardware layer . In these embodiments the hypervisor may be used to emulate virtual hardware partition physical hardware virtualize physical hardware or execute virtual machines that provide access to computing environments. In still other embodiments the hypervisor controls processor scheduling and memory partitioning for a virtual machine executing on the virtualization server . Hypervisor may include those manufactured by VMWare Inc. of Palo Alto Calif. the XEN hypervisor an open source product whose development is overseen by the open source Xen.org community HyperV VirtualServer or virtual PC hypervisors provided by Microsoft or others. In some embodiments a virtualization server executes a hypervisor that creates a virtual machine platform on which guest operating systems may execute. In these embodiments the virtualization server can be referred to as a host server. An example of such a virtualization server is the XEN SERVER provided by Citrix Systems Inc. of Fort Lauderdale Fla.

The hypervisor may create one or more virtual machines B C generally in which guest operating systems execute. In some embodiments the hypervisor may load a virtual machine image to create a virtual machine . In other embodiments the hypervisor may executes a guest operating system within the virtual machine . In still other embodiments the virtual machine may execute the guest operating system .

In addition to creating virtual machines the hypervisor may control the execution of at least one virtual machine . In other embodiments the hypervisor may present at least one virtual machine with an abstraction of at least one hardware resource provided by the virtualization server e.g. any hardware resource available within the hardware layer . In other embodiments the hypervisor may control the manner in which virtual machines access the physical processors available in the virtualization server . Controlling access to the physical processors may include determining whether a virtual machine should have access to a processor and how physical processor capabilities are presented to the virtual machine .

As shown in the example of the virtualization server may host or execute one or more virtual machines . A virtual machine is a set of executable instructions that when executed by a processor imitate the operation of a physical computer such that the virtual machine can execute programs and processes much like a physical computing device. While illustrates an embodiment where a virtualization server hosts three virtual machines in other embodiments the virtualization server can host any number of virtual machines . The hypervisor in some embodiments provides each virtual machine with a unique virtual view of the physical hardware memory processor and other system resources available to that virtual machine . In some embodiments the unique virtual view can be based on any of the following virtual machine permissions application of a policy engine to one or more virtual machine identifiers the user accessing a virtual machine the applications executing on a virtual machine networks accessed by a virtual machine or any other similar criteria. For instance the hypervisor may create one or more unsecure virtual machines and one or more secure virtual machines . Unsecure virtual machines may be prevented from accessing resources hardware memory locations and programs that secure virtual machines may be permitted to access. In other embodiments the hypervisor may provide each virtual machine with a substantially similar virtual view of the physical hardware memory processor and other system resources available to the virtual machines .

Each virtual machine may include a virtual disk A C generally and a virtual processor A C generally . The virtual disk in some embodiments is a virtualized view of one or more physical disks of the virtualization server or a portion of one or more physical disks of the virtualization server . The virtualized view of the physical disks can be generated provided and managed by the hypervisor . In some embodiments the hypervisor provides each virtual machine with a unique view of the physical disks . Thus in these embodiments the virtual disk included in each virtual machine can be unique when compared with the other virtual disks .

A virtual processor can be a virtualized view of one or more physical processors of the virtualization server . In some embodiments the virtualized view of the physical processors can be generated provided and managed by the hypervisor . In some embodiments the virtual processor has substantially all of the same characteristics of at least one physical processor . In other embodiments the virtual processor provides a modified view of the physical processors such that at least some of the characteristics of the virtual processor are different than the characteristics of the corresponding physical processor .

A user of a client computer may for example request access to one or more of the computing resources managed by management server . Management server may run for example CLOUDSTACK by Citrix System or OPENSTACK. It may manage computing resources such as host computers data storage devices and networking devices such as firewalls network address translators load balancers virtual private network VPN gateways Dynamic Host Configuration Protocol DHCP routers and the like.

A user of a client computer may request access to one of the computing resources managed by management server such as host computer . A host computer may be for example a virtualization server capable of running one or more virtual machines. A user of a client computer may request for example access to an existing virtual machine or that a virtual machine be created or destroyed. The physical resources selected to fulfill a user request may be governed solely by management server . However in some embodiments the user may identify a specific host or request that virtual resources be created within a specific group of hosts. A management server may allocate resources in the group requested or it may allocate resources in a different group of hosts to for example avoid overloading a physical computing resource. The management server then sends the appropriate commands to the selected resource. For example the management server may command a host or other resource to create start stop or delete a virtual machine to create alter or remove virtual disks to create alter or remove virtual network interfaces etc. These commands may include additional details. For example a command to create a virtual machine may specify the amount of memory and processing resources it will have available to it the software that will be included on it the virtual and or physical disk s it will have access to etc.

In a computing cloud such as the one managed by management server a zone is a collocated set of physical computing resources. Each zone may be geographically dispersed from each other zone. For example zone may be located in California and zone may be located in Maryland. Management sever may be located in a third zone not shown . Each zone may include an internal network that interfaces with devices that are outside of the zone such as management server through a gateway. Users of the computing cloud may be aware of the distinctions between zones but they do not need to be aware of the distinctions. For example a user may simply request that a virtual machine having a set amount of memory and processing power be allocated. Management server may present a user with the user interface illustrated in which shows two options and for virtual machines but does not indicate the location of the physical resources that would be used to create either virtual machine. Alternatively a user may be able to request that a virtual machine or other resource be allocated in a specific zone or subset of a zone.

The cloud illustrated in allows management server to perform all of the administrative tasks for the resources under its control. By providing a single interface for managing the resources of the cloud cloud users may achieve both improved scalability and reduced maintenance compared to managing resources individually or managing groups of resources such as zone or individually. The interface provided by management server may be a graphical user interface such as the one illustrated in . Other examples of interfaces that may be provided by management server include text based user interfaces and application programming interfaces APIs . The interface of management server may be public thereby allowing anyone to make requests of the management server.

The users of a cloud may be unrelated. For example users may be affiliated with different companies and the information on the virtual machines or storage of any one user may be hidden from any other user. By sharing a single management server or set of servers these users may further reduce maintenance costs by effectively sharing the burden of running management server and the resources it controls.

Some cloud users may wish to have their computing tasks performed on physical resources that the user controls instead of on the physical resources provided by a cloud operator. This may be due to for example a concern that data on a physical resource of the cloud operator may be compromised and made available to another cloud user. A cloud user may also wish to perform computing tasks on its own physical resources because those resources may be located nearer to the rest of the user s network thereby enabling faster connections lower latency etc. Finally a cloud user may wish to use its own physical resources because it can provide the resources at a lower cost than accessing equivalent resources from the cloud operator.

A cloud user desiring to have computing tasks performed on its own physical resources may still take advantage of the improved scalability and reduced maintenance of sharing management server . The cloud user can achieve these advantages by adding its physical resources to the pool of resources managed by management server .

In some cases management server may not place computing workloads from other users on the resources of zone . In other words the resources of zone may be reserved exclusively for use by the owner of the resources. Even where this exclusive arrangement is used the owner of the resources in zone may achieve the advantages of managing resources via management server and the advantages of having access to the rest of the cloud. For example the user may utilize all of the resources in zone but still need access to additional computing resources. Management server may direct requests for access to additional computing resources to hosts outside of zone such as to host .

As illustrated in a private zone such as zone may be located behind a firewall . Firewall may make the hosts of zone inaccessible from management server . Agent may be used to facilitate communications between management server and the hosts or other resources of zone . Although a single agent is illustrated in multiple agents may exist. Further the functionality of the agent may be combined with other devices. For example each host of zone may run an instance of the agent or the functionality of the agent may be combined with one or more gateways or network switches. The functionality of the agent may be implemented in software hardware or a combination thereof.

An agent may be located outside of firewall but be able to communicate with the resources within zone due to for example a rule on firewall allowing incoming traffic from the agent to pass. Alternatively an agent may be located inside of firewall . An agent inside of firewall may still be publically accessible even though the resources of zone might not be. Finally agent may be publically inaccessible. However despite blocking incoming connection requests to agent the firewall may allow outgoing communications from agent to pass. In this case because management server may not be able to initiate a connection with agent the agent may instead initiate a connection with management server . By maintaining this connection management server may pass instructions to the resources in zone via the open connection with agent . Agent may initiate a connection with management server using a certain port or protocol in order to ensure that the agent s outgoing communications are not blocked by the firewall. For example a firewall may restrict outgoing traffic to certain ports. A firewall may also block outgoing traffic that does not conform to certain protocols. Agent may avoid these rules by connecting on commonly used ports and or using commonly used protocols. For example agent may initiate an HTTP connection with management server using port . Another example is that agent may initiate an HTTPS connection with management server using port . An agent may support multiple protocols and or ports for communicating with management server . The protocols and or ports used by the agent may be user configurable. The protocols and or ports used by the agent may also be configured automatically. For example if a connection attempt using a first protocol and or port is unsuccessful the agent may attempt to use different communication protocols and or different ports until a connection with management server is established. An example of a method that may be used to initiate the connection between the management server and the agent is described below with reference to .

An agent such as agent might not provide a management interface. Instead an agent may merely facilitate management by server by allowing commands from management server to reach the resources of a private zone. An agent may translate commands from management server into another format but unlike management server the agent might not generate its own commands for allocating the physical resources of zone . Thus all of the resources of the cloud illustrated in may be controlled via a single management interface. Interactions with the management interface may result in management commands being issued from management server .

Although a single private zone is illustrated in a cloud may contain any number of private zones. Although some private zones may be associated with a single cloud user each private zone may be associated with a different user from each other private zone.

In step the management server sends the token to the cloud user. The token may be sent in the form of a series of bits. The token may also be incorporated in agent software. For example the management server may configure agent software with the token and send the configured software to the user in step .

In step the cloud user configures agent software with the token. If the software was sent to the user pre configured in step then the user only needs to run the agent software on an appropriate computer. Otherwise the user may input the token or otherwise provide the token to the agent.

In step the management server receives a connection request from the agent. By initiating the connection request the agent avoids the possibility of communications from the management server being blocked by a firewall. Where an agent is able to receive incoming connection requests from the management server the management server may initiate the connection. The connection may be a secure connection such as a secure VPN virtual private network connection an HTTPS secure hypertext transfer protocol connection or any other type of secure connection. The connection may be kept open continuously to allow for communications from the management server to be received by the agent at any time.

In step the management server receives the token from the agent. The management server authenticates the agent using the token in step . This authentication step allows the management server to know that the agent and the resources behind the agent are in fact authorized to receive computing workloads from one or more users who interact with the management server. Sending computing workloads to an unauthorized agent would risk exposing a user s potentially sensitive data to unauthorized parties. The token may be transmitted in its original form. The management server may authenticate the agent by checking that the token received from the agent matches the token that was sent in step . Alternatively the token may be used as a string that is then digitally signed by the agent. In this example the management server may authenticate the agent by verifying the token s digital signature. Where the token is digitally signed a new token may be provided to the agent for signing at the beginning of each connection. Also where the token is digitally signed steps and may involve configuring the management server and agent to use and verify a digital signature.

In step the management server manages the private zone by sending commands to resources in the private zone via the agent such as a command to start a virtual machine. In some instances these commands may include commands that cause the resources of the private zone to identify themselves and or report information about themselves. Information about the resources in the private zone may also be gathered by the agent and subsequently transmitted by the agent to the management server. Examples of the types of additional information that may be gathered includes hardware information such as the amount of memory or processing capacity of a host software information such as the hypervisor software or other operating system s running on a resource and utilization information such as information about the virtual machines or other virtual resources already running or allocated on a host. While this information may be automatically discovered some or all of this information may also be input by a user. Updates to the information about the resources of the private zone may be transmitted periodically. The updates may take the form of an entirely new dataset. Alternatively updates may indicate only information that has changed.

The management server may keep track of the above described information about the resources of the private zone using a database. By keeping track of each of the resources in the private zone and the hardware software and or utilization information for each resource the management server may allocate requests for resources appropriately. For example if one host is running five virtual machines and is low on memory the management server may select another host that is running fewer virtual machines and or has more memory available. If permitted by the rules governing the private zone the host that is selected may be located in another zone.

Aspects of the disclosure have been described in terms of illustrative embodiments thereof. Numerous other embodiments modifications and variations within the scope and spirit of the appended claims will occur to persons of ordinary skill in the art from a review of this disclosure. For example one of ordinary skill in the art will appreciate that the steps illustrated in the illustrative figures may be performed in other than the recited order and that one or more steps illustrated may be optional in accordance with aspects of the disclosure. Modifications may be made by those skilled in the art particularly in light of the foregoing teachings. For example each of the elements of the aforementioned embodiments may be utilized alone or in combination or sub combination with elements of the other embodiments. It will also be appreciated and understood that modifications may be made without departing from the spirit and scope of the following claims.

