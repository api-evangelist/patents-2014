---

title: Security system for data stored in the cloud
abstract: A cloud access security system provides security to data stored in the cloud. The cloud access security system maintains version service information that indicates servers that service web services calls to particular versions of a cloud application service. Upon detection of a web service call to an unknown version of the cloud application service, the cloud access security system redirects the web service call to a known good server that services web service calls that are made to a previous version of the cloud application service. The cloud access security system may employ an encryption scheme that allows for partial decryption.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09197419&OS=09197419&RS=09197419
owner: Trend Micro Incorporated
number: 09197419
owner_city: Tokyo
owner_country: JP
publication_date: 20140130
---
This application is a continuation of U.S. application Ser. No. 14 104 737 filed on Dec. 12 2013 which is incorporated herein by reference in its entirety.

The present invention relates generally to computer security and more particularly but not exclusively to systems and methods for securing data stored in the cloud.

Cloud based emails are examples of data that are stored in the cloud instead of locally in a user computer or server of a private e.g. enterprise computer network. Generally speaking cloud based email systems allow email users to send and receive emails without having to host and maintain their own email server. Examples of cloud based email systems include the Microsoft Office 365 email server and the Google Mail email server. A cloud based email system is in the cloud in that it is employed over a computer network such as the Internet. More particularly a user may communicate with the cloud based email system to send and receive emails over the Internet.

Although cloud based email systems provide numerous advantages over on premise self maintained email servers cloud based email systems are provided by a third party and thus raise security and privacy concerns. In particular potential users are concerned that emails stored in a cloud based email system are accessible to the cloud based email system provider and may be readily provided to other parties such as in response to a subpoena for example.

In one embodiment a cloud access security system provides security to data stored in the cloud. The cloud access security system maintains version service information that indicates servers that service web services calls to particular versions of a cloud application service. Upon detection of a web service call to an unknown version of the cloud application service the cloud access security system redirects the web service call to a known good server that services web service calls that are made to a previous version of the cloud application service. The cloud access security system may employ an encryption scheme that allows for partial decryption.

These and other features of the present invention will be readily apparent to persons of ordinary skill in the art upon reading the entirety of this disclosure which includes the accompanying drawings and claims.

In the present disclosure numerous specific details are provided such as examples of apparatus components and methods to provide a thorough understanding of embodiments of the invention. Persons of ordinary skill in the art will recognize however that the invention can be practiced without one or more of the specific details. In other instances well known details are not shown or described to avoid obscuring aspects of the invention.

Referring now to there is shown a schematic diagram of a computer that may be employed with embodiments of the present invention. The computer may be employed as a client computer or one of the computers of a cloud access security system for example. The computer may have fewer or more components to meet the needs of a particular application. The computer may include one or more processors . The computer may have one or more buses coupling its various components. The computer may include one or more user input devices e.g. keyboard mouse one or more data storage devices e.g. hard drive optical disk Universal Serial Bus memory a display monitor e.g. liquid crystal display flat panel monitor a computer network interface e.g. network adapter modem and a main memory e.g. random access memory . The computer network interface may be coupled to a computer network which in this example includes the Internet.

The computer is a particular machine as programmed with software modules . The software modules comprise computer readable program code stored non transitory in the main memory for execution by the processor . As an example the software modules may comprise protocol proxies a data indexer a cryptography component and an encryptor when the computer is employed as part of a cloud access security system.

The computer may be configured to perform its functions by executing the software modules . The software modules may be loaded from the data storage device to the main memory . An article of manufacture may be embodied as computer readable storage medium including instructions that when executed by a computer causes the computer to be operable to perform the functions of the software modules .

A client computer may comprise a computer employed by a user to access the cloud based email system . The client computer may comprise a desktop computer a laptop computer a smartphone or a mobile computing device e.g. a tablet for example. In the example of the client computers are part of a private computer network such as a computer network maintained and operated by an enterprise. In the example of the private computer network does not have an on premises email server. Instead the private computer network provides email services using the cloud based email system which is owned and operated by a third party i.e. not associated with the private computer network . In other embodiments the client computers are part of a public computer network.

The cloud access security system may comprise one or more computers that secure emails stored in the cloud based email system . In one embodiment the cloud access security system indexes unencrypted emails in an index replaces unencrypted emails stored in the cloud based email system with encrypted emails and provides the client computers an interface for accessing the cloud based email system . In one embodiment the cloud access security system receives all email communications between the cloud based email system and the client computers see arrow . The cloud access security system the cloud based email system and the client computers may communicate over the Internet.

In the example of the cloud access security system forwards and receives emails to and from client computers of the private computer network see arrow . In one embodiment the emails transferred between the client computers and the cloud access security system and emails transferred between the cloud based email system and other computers are unencrypted. However as will be more apparent below the cloud access security system simply provides another layer of encryption that is transparent to the cloud based email system the client computers and the other computers when the emails are encrypted by some other system. In this disclosure an email has not been encrypted by the cloud access security system unless specifically noted or referred to as an encrypted email e.g. encrypted outgoing email encrypted incoming email .

The cloud access security system may detect reception of an incoming email in the cloud based email system with the incoming email being sent by another computer e.g. an email server computer to a user of a client computer . The cloud access security system may retrieve the incoming email from the cloud based email system e.g. a copy in the inbox of the user s mailbox encrypt the incoming email to generate an encrypted incoming email and replace the incoming email with its corresponding encrypted incoming email in the cloud based email system . When the client computer requests to receive the incoming email the cloud access security system may retrieve the corresponding encrypted incoming email from the cloud based email system decrypt the encrypted incoming email back to the incoming email and provide the incoming email to the client computer .

The cloud access security system may receive a search request for particular emails from the client computer identify encrypted emails stored in the cloud based email system and responsive to the search request retrieve the identified encrypted emails from the cloud based email system decrypt the identified encrypted emails to decrypted emails and provide the decrypted emails to the client computer as search results responsive to the search request.

The cloud access security system may receive an outgoing email to be sent by the client computer to the other computer forward the outgoing email to the cloud based email system for forwarding to the other computer retrieve the outgoing email stored in the cloud based email system e.g. a copy in the sent folder of the user s mailbox encrypt the outgoing email to generate a corresponding encrypted outgoing email and replace the outgoing email stored in the cloud based email system with its corresponding encrypted outgoing email.

In the example of the cloud access security system communicates with the cloud based email system see arrow to forward and receive emails to receive email event notifications and to replace unencrypted emails stored in the cloud based email system with encrypted emails.

In one embodiment a protocol proxy comprises computer readable program code for monitoring and processing email communications between a client computer and the cloud based email system . In one embodiment all email communications between a client computer and the cloud based email system pass through and are thereby received by a protocol proxy . The particular protocol proxy that receives and processes email communications depend on the email communication protocol of the cloud based email system and the client computer . For example a protocol proxy may comprise a proxy for the Microsoft Outlook Web Access protocol the Microsoft Exchange ActiveSync protocol the Messaging Application Programming Interface MAPI protocol the Microsoft Exchange Web Services EWS protocol a protocol for accessing the Google Gmail email server etc. As a particular example a protocol proxy may comprise a proxy for the Microsoft Exchange ActiveSync protocol when the cloud based email system and the client computer communicates in accordance with the Microsoft Exchange ActiveSync protocol.

In one embodiment a protocol proxy processes email communications between the cloud based email system and the client computer to provide a seamless and transparent encryption service for emails stored in the cloud based email system . A protocol proxy receives email communications between the cloud based email system and the client computer and interprets the email communications in accordance with the email communication protocol employed. The protocol proxy may process the email communications to pass through outgoing emails i.e. emails sent by a user of the client computer to the cloud based email system for forwarding to recipients and to allow for decryption of encrypted emails stored in the cloud based email system and being accessed by the client computer such as encrypted incoming emails i.e. emails addressed to the user of the client computer and stored emails e.g. emails in sent folder inbox etc. being searched by the user of the client computer .

In one embodiment the encryption module comprises a data indexer and a cryptography component . The data indexer may comprise computer readable program code for indexing emails. The data indexer may create an index for individual mailboxes in the cloud based email system with the index comprising the searchable components of emails and identification of encrypted versions of the emails. The index may be consulted to identify encrypted emails that meet particular search criteria.

The data indexer may index an email for identification searching and location. In one embodiment the data indexer receives an email and indexes the email by storing the contents of the email that are typically searched by a user such as message body recipients sender attachments etc. The data indexer indexes emails in their unencrypted state i.e. emails that have not been encrypted by the cryptography component . The data indexer stores the searchable contents of the email in a compact format for relatively fast searching and low storage consumption such as by removing non essential data of the email e.g. spaces articles commonly used English or other language words etc. After the email has been encrypted by the cryptography component the data indexer also indexes the email by keeping track of the corresponding encrypted version of the email such as by mapping the encrypted and unencrypted versions of the email by their common message identifier ID . This allows for email search by consulting the index to identify the emails that meet search criteria and then identifying the corresponding encrypted emails stored in the cloud based email system for retrieval. As can be appreciated because emails stored in the cloud based email system have been encrypted by the cryptography component emails in the cloud based email system cannot be readily searched. The data indexer thus advantageously allows for searching of encrypted emails stored in the cloud based email system . The data indexer may be implemented using the open source SoIr indexer for example.

In one embodiment the cryptography component comprises computer readable program code for encrypting emails and decrypting encrypted emails. The cryptography component or another component of the encryption module may mark emails it encrypted to identify them as having been encrypted by the encryption module . In one embodiment the cryptography component only encrypts the user portions of the email such as the message body and attachments and other portions of the email that does not adversely affect format compatibility with the cloud based email system. More specifically the cryptography component may preserve the formatting of the email to maintain compatibility with the cloud based email system . For example when the cloud based email system comprises the Microsoft Office 365 email server the cryptography component may encrypt the email s text message body subject field and attachment without encrypting the headers e.g. recipient and sender information and item formatting. The email subject field and message body may be encrypted using separate techniques to support group by subject functionality of some cloud based email systems. The cryptography component may encrypt an email into an encrypted email and decrypt the encrypted email back to the unencrypted email. The cryptography component may use different cryptography seeds for different emails of the same user for improved security such as to prevent frequency analysis attacks. In one embodiment the cryptography component employs the AES 256 Advanced Encryption Standard encryption algorithm to encrypt emails and decrypt encrypted emails. Other encryption algorithms may also be employed without detracting from the merits of the present invention.

In one embodiment encryption keys for encrypting emails and decrypting encrypted emails are received by the cryptography component from a key manager . The key manager may comprise a key server running on one or more computers. In one embodiment the key manager is part of the cloud access security system . In other embodiments for more control of access to the emails the key manager may be hosted on premise i.e. within the private computer network see that includes the client computer .

In one embodiment the event listener comprises computer readable program code for communicating with the cloud based email system . In one embodiment the event listener receives email event notifications from the cloud based email system and issues email processing requests to the cloud based email system . The event listener may register with the cloud based email system to receive email event notifications for particular mailboxes such as notifications when a mailbox receives an incoming email and sends an outgoing email. The event listener may communicate with the cloud based email system using a protocol recognized by the cloud based email system . For example the event listener may communicate with the cloud based email system in accordance with the Microsoft Exchange Web Services protocol when the cloud based email system comprises the Microsoft Office 365 email server.

In one embodiment the administration portal comprises computer readable program code for allowing an administrator such as Information Technology IT personnel to configure the cloud access security system . For example the administrator may log onto the cloud access security system by way of the portal to enter particulars for mailboxes that will be provided encryption service. As a particular example when the cloud based email system comprises the Microsoft Office 365 email server a user s mailbox will have a corresponding service account information that identifies the mailbox and provides access privileges e.g. replacement of emails in the mailbox to the mailbox. An administrator may log onto the administration portal to provide service account information for a user s mailbox to the event listener which uses the service account information to register with the cloud based email system to receive email event notifications to gain access privileges to the mailbox.

Referring first to there is shown a flow diagram that schematically illustrates processing of an incoming email for a mailbox in accordance with an embodiment of the present invention. In the example of the incoming email is received in the cloud based email system see arrow with the incoming email being addressed to a user having a corresponding mailbox in the cloud based email system . Accordingly the incoming email is received in the mailbox of the user. The incoming email may be found in the inbox of the mailbox for example.

In the following examples the event listener has registered with the cloud based email system to receive notifications whenever a new incoming email is received in the mailbox . Accordingly as shown in the cloud based email system notifies the event listener when the incoming email is first received in the mailbox see arrow . The cloud based email system may also send a separate notification to the client computer of the user see arrow informing the user that there is a new incoming email in his mailbox . The notification for the user is received by the protocol proxy which forwards the notification to the client computer of the user.

In response to receiving the notification that a new incoming email has been received in the mailbox the event listener retrieves the incoming email from the cloud based email system see arrow . For example the event listener may request the cloud based email system to receive a copy of the incoming email or individual contents of the incoming email such as message body subject etc. from the inbox of the mailbox . The event listener receives the incoming email from the cloud based email system and forwards the incoming email to the encryption module . There the data indexer receives and indexes the incoming email see arrow in its unencrypted state i.e. not encrypted by the cryptography component . The data indexer indexes the incoming email in its unencrypted typically clear text state to allow for subsequent searching.

Continuing in the encryption module requests and receives an encryption key from the key manager see arrow . The event listener receives the incoming email from the event listener encrypts the incoming email using the encryption key received from the key manager and provides the resulting encrypted incoming email to the event listener see arrow . Upon receiving the encrypted incoming email the event listener replaces a copy of the incoming email stored in the mailbox e.g. in the inbox of the user with the encrypted incoming email see arrow . For example the event listener may delete the incoming email stored in the mailbox and replace that deleted incoming email with the corresponding encrypted incoming email. As can be appreciated the deletion and replacement of the incoming email may be performed in the same step. Accordingly the mailbox now only has an encrypted version of the incoming email. This advantageously protects against unauthorized viewing of the incoming email as stored in the cloud based email system .

In response to receiving the notification of arrival of the incoming email the user of the client computer may decide to retrieve the incoming email. For example the client computer may request the cloud based email system to provide the incoming email to the client computer see arrow . The protocol proxy receives the request for the incoming email identifies the request as a request for the incoming email and forwards the request to the cloud based email system see arrow . In response to receiving the request the cloud based email system retrieves the now encrypted incoming email and forwards the encrypted incoming email to the client computer see arrow . The protocol proxy receives the encrypted incoming email detects that the encrypted incoming email is in a format encrypted by the encryption module e.g. by checking for a mark placed by the encryption module on emails it encrypted and accordingly proceeds to facilitate decryption of the encrypted incoming email see arrow . For example in response to detecting that the incoming email is in a format encrypted by the encryption module the protocol proxy may forward the encrypted incoming email to the cryptography component . The cryptography component decrypts the encrypted incoming email back to the incoming email using an associated encryption key received from the key manager . The cryptography component returns the incoming email which has been decrypted to the protocol proxy see arrow . The protocol proxy provides the incoming email which is typically in clear text now that it has been decrypted to the client computer see arrow .

As can be appreciated incoming emails are encrypted as stored in the mailbox of the user. The encrypted incoming emails are decrypted before they are provided to the client computer . The encryption and decryption processes are performed in seamless transparent fashion to minimize disruption to the user experience of working with the cloud based email system . It is to be noted that a race condition may occur when the client computer receives the incoming email before the cloud access security system replaces the incoming email with its corresponding encrypted email. However there is a very short window of time when this can occur and only the user s client computer will receive the incoming email during that time.

In the example of the client computer sends out an outgoing email see arrow . The protocol proxy receives the outgoing email. In response to detecting that the email is outgoing the protocol proxy forwards the outgoing email to the cloud based email system see arrow . The protocol proxy may pass through the outgoing email without modification. The cloud based email system receives the outgoing email and forwards the outgoing email to its destination see arrow . The cloud based email system stores a copy of the outgoing email in the sent folder of the mailbox .

Having registered with the cloud based email system to receive email event notifications the event listener receives a notification from the cloud based email system that an outgoing email has been sent by the owner of the mailbox i.e. the user of the client computer see arrow . In response to receiving the notification the event listener retrieves the outgoing email from the cloud based email system see arrow . For example the event listener may request the cloud based email system to receive a copy of the outgoing email from the sent folder of the mailbox . The event listener receives the outgoing email from the cloud based email system and forwards the outgoing email to the encryption module . There the data indexer receives and indexes the outgoing email see arrow . The data indexer indexes the outgoing email in its unencrypted typically clear text state to allow for subsequent searching.

Continuing in the cryptography component requests and receives an encryption key from the key manager see arrow . The event listener receives the outgoing email from the event listener encrypts the outgoing email using the encryption key received from the key manager and provides the resulting encrypted outgoing email to the event listener see arrow . Upon receiving the encrypted outgoing email the event listener replaces a copy of the outgoing email stored in the mailbox e.g. in the sent folder of the mailbox with the encrypted outgoing email see arrow . For example the event listener may delete the outgoing email stored in the mailbox and replace that deleted outgoing email with the corresponding encrypted outgoing email. Accordingly the mailbox now only has an encrypted version of the outgoing email thereby protecting the outgoing email as stored in the cloud based email system . The user may obtain and read the outgoing email in its unencrypted form by requesting for the outgoing email and the cloud access security system receiving the corresponding encrypted outgoing email decrypting the encrypted outgoing email back to the outgoing email and providing the outgoing email to the client computer in a similar manner performed for encrypted incoming emails see arrows .

In the example of the user of the client computer is searching for particular emails that were previously received or sent by the user. Accordingly the user may send an email search query to the cloud based email system using his client computer see arrow . The email search query may include search criteria specified by the user such as keywords e.g. particular texts in the message body or subject field and or parameters e.g. sent by or received from a particular email address . The protocol proxy receives the email search query from the client computer determines from the email search query that the user is searching for emails and sends a request to the data indexer to identify emails in the mailbox that meet the search criteria see arrow . The data indexer searches its index for encrypted emails in the mailbox that meet the search criteria. The data indexer identifies to the protocol proxy the encrypted emails that meet the search criteria see arrow . The protocol proxy makes a request to the cloud based email system for the identified encrypted emails and receives the identified encrypted emails from the cloud based email system see arrow . Thereafter as shown in the protocol proxy forwards the encrypted emails to the cryptography component see arrow which decrypts the encrypted emails using associated encryption keys provided by the key manager see arrow . The cryptography component provides the resulting i.e. decrypted emails to the protocol proxy see arrow . The protocol proxy thereafter provides the emails to the client computer see arrow .

In the example of the cloud access security system performs an email related action to secure emails in the cloud access security system step . The email related action may involve encryption of an email and storage of the resulting encrypted email in the cloud based email system or retrieval of an encrypted email from the cloud based email system for example.

When the email related action involves encryption of an email and storage of the resulting encrypted email in the cloud based email system the cloud access security system receives the email from the cloud based email system step to step . This is the case when the cloud based email system receives an incoming email for the user or sends an outgoing email for the user for example. As a particular example the cloud access security system may request the cloud access security system for an incoming email or an outgoing email in response to receiving an email event notification. The cloud access security system may receive an encryption key from the key manager step and encrypt the email using the encryption key step . The cloud access security system replaces the email in the cloud based email system with a corresponding encrypted email step .

When the email related action involves retrieval of an encrypted email from the cloud based email system the cloud access security system identifies the encrypted email to be retrieved step to step . For example the email related action may involve providing an encrypted incoming email to the client computer of the user. As another example the email related action may involve providing the client computer encrypted incoming and or encrypted outgoing emails that are responsive to a search request. The cloud access security system receives the encrypted email from the cloud based email system step receives from the key manager an associated encryption key for decrypting the encrypted email step decrypts the encrypted email step and provides the resulting email to the client computer step .

Generally speaking a cloud access security system may be employed to secure various types of data stored in the cloud and not just cloud based emails. For example a cloud access security system may be employed to secure word processing files spreadsheet files and other documents stored in the cloud.

The cloud access security system may comprise one or more computers that secure data stored by the cloud application service for example in the cloud computing infrastructure hosting the cloud application service . The cloud access security system may include a protocol proxy and an encryption module . A protocol proxy may monitor and process data communications between the cloud application client and the cloud application service . In one embodiment all communications between the cloud application client and the cloud application service pass through and are thereby received by the protocol proxy . The protocol proxy communicates with the cloud application client and the cloud application service in accordance with the communication protocol employed by the cloud application client and the cloud application service . The protocol proxy may receive data e.g. in clear text from the cloud application client encrypt the data using the encryption module and provide the encrypted data to the cloud application service . The protocol proxy may receive encrypted data from the cloud application client decrypt the encrypted data using the encryption module and provide the now unencrypted data to the cloud application client . The encryption module may comprise computer readable program code for encrypting and decrypting data.

In one embodiment the cloud access security system is a particular implementation of the cloud access security system see . In that embodiment the cloud application service may comprise a cloud based email service of the cloud based email system and the cloud application client is an email client that runs on the client computer . Also in that embodiment the protocol proxy and the encryption module are particular implementations of and work in a similar manner as the protocol proxies and the encryption module respectively of the cloud access security system see .

To process data received from the cloud application client and the cloud application service the cloud access security system may be configured to work with a particular version of the cloud application service. In the example of the cloud access security system is configured to work with the cloud application service which is version 1 of the cloud application service. Compatibility with the current version of the cloud application service allows the cloud access security system to understand the communication format of the cloud application service. However the provider of the cloud application service may implement changes to the cloud application service as part of an update. The changes may alter the communication format of the cloud application service preventing the cloud access security system from processing data communications to and from the current version of the cloud application service. The update will rarely pose a problem with the functionality of the cloud access security system if announced in advance by the provider of the cloud application service so long as there is ample time between announcement and implementation. Unfortunately some providers make unannounced changes to their cloud application service e.g. updating the cloud application service from a previous version to a new version. In that case the cloud access security system may or may not work with the new version of the cloud application service. For example the cloud access security system may be unable to decrypt encrypted data when unannounced unanticipated changes are made the cloud application service.

In one embodiment the cloud access security system further includes version service information . The version service information may be stored in a database or other listing for example. The version service information may include information on identifiers locators e.g. Internet Protocol IP address URL Uniform Resource Locator path etc. of servers that provide functionality of the cloud application service for a particular version. More particularly the version service information may identify one or more servers that serves a particular web service call for a particular version of a cloud application service. A server of the cloud application service may comprise one or more computers that run server software for servicing web service calls that implement the functionality of the cloud application service.

The cloud access security system may receive e.g. by the protocol proxy a web service call from a client computer e.g. from the cloud application client determine that the web service call is for a service of an unknown version of a cloud application service consult the version service information to identify a server that services web services calls to a previous version of the cloud application service and redirect the web service call to that server of the previous version of the cloud application service. The cloud access security system may also receive partial encrypted data and decrypt the partial encrypted data e.g. by the encryption module without having to wait to receive the rest of the partial encrypted data. The partial encrypted data may comprise partial encrypted email data that may be employed as a message preview in risk mode when the cloud access security system detects an unknown version of the cloud application service etc.

In the example of the cloud application client runs on a client computer and accesses the cloud application service . The functionality of the cloud application service may be provided by one or more servers which are labeled as servers etc. In the example of cloud access security system is compatible with the current version of the cloud application service which in the example of is the cloud application service . The 6 cloud application service is also referred to as version 1 of the cloud application service. As will be more apparent below version 2 i.e. changed updated version of the cloud application service is referred to as the cloud application service . 

In the example of the cloud application client logs onto the cloud application service by way of the server see arrow . After authentication and or some other logon processing the server provides a communication to the cloud application client see arrow . The communication from the server to the cloud application client may comprise one or more web executable files such as a JavaScript file for example. The web executable file is received and executed in the client computer by the cloud application client . Executing the web executable file may result in the cloud application client making web service calls to servers that provide functionality of the cloud application service . For example the cloud application client may make a web service call to the server see arrow as dictated by computer readable program code in the web executable file. The web service call may include one or more identifiers of the designated server which in this example is the server that serves the web service call and other data or information concerning the service request such as an application programming interface API call an object oriented programming OOP the method call etc. The IP address of the server may be obtained from packets or other data of network traffic to the server . In response to the web service call the server provides a communication to the cloud application client see arrow . The communication from the server may include data e.g. requested data and or another web executable file. The cloud application client may also make a web service call to the server see arrow as per the service provided by the cloud application service and receive a communication from the server see arrow .

The cloud access security system receives and processes communications between the cloud application client and the cloud application service . In one embodiment the cloud access security system stores version related information detected in communications between the cloud application client and the cloud application service as version service information . The protocol proxy may identify the version of the cloud application service during the logon process see arrow . In the example of the cloud access security system may checksum communication paths e.g. series of URLs or other network addresses to arrive at a server data files e.g. JavaScript files etc. during the login process to identify particulars of the cloud application service . The cloud access security system may parse the filename or contents of a file e.g. JavaScript file to extract version information of the cloud application service . The cloud access security system is thus able to identify the version of the cloud application service of during initial communication between the cloud application client and the cloud application service .

The cloud access security system may also monitor web service calls made by the cloud application client to servers that serve the web service calls for the version of the cloud application service . In particular when the cloud application client makes a particular web service call to the server the cloud access security system stores the particular web service call and the network identifier such as the IP address and or URL communication path of the server as version service information for the identified version of the cloud application service see arrow . Similarly when the cloud application client makes another web service call to the server the cloud access security system stores the other web service call and the network identifier of the server as version service information for the identified version of the cloud application service see arrow . The version service information thus includes a mapping of servers that service particular web service calls for a version of the cloud application service . The version service information compiled by the cloud access security system may also include a mapping of OOP methods and the servers called by the OOP methods for the particular version of the cloud application service .

In the example of the cloud application client is running on a client computer and accesses the cloud application service which in this example has been updated to the cloud application service . The functionality of the cloud application service is provided by one or more servers which are labeled as servers etc. The functionality of the cloud application service are provided by one or more servers which are labeled as servers etc. as before.

In the example of the cloud access security system is compatible with the previous version i.e. the cloud application service of the cloud application service. Because the update to the cloud application service is unannounced the cloud access security system has not been adapted to work with the current version of the cloud application service which is the cloud application service in this example. Therefore the cloud access security system may not recognize the version of the cloud application service . Worse the cloud access security system may not be able to decrypt encrypted emails or other encrypted data that have been previously encrypted by the cloud access security system for storage in the cloud.

To log onto the cloud application service the cloud application client points to the URL assigned to the cloud application service without necessarily knowing the version of the cloud application service. The provider simply provides the latest version of the cloud application service on the assigned URL. In the example of the assigned URL now references a server of the cloud application service instead of the cloud application service . The cloud access security system receives the communication from the cloud application client detects that the cloud application client is attempting to log onto the cloud application service and forwards the communication to the cloud application service in accordance with the URL assigned to the cloud application service which is now the cloud application service see arrow .

After authentication and or some other logon processing the server provides a communication to the cloud application client see arrow . The communication from the server to the cloud application client may comprise one or more web executable files such as a JavaScript file for example. Based on a file received from the cloud application service or other data in the communication indicative of the version of the cloud application service as previously detected and stored as version service information the cloud access security system detects that the cloud application service has been updated from the cloud application service to some other current and unknown version which in this example is the cloud application service see arrow . In response the cloud access security system may send an alert or other message to a system administrator or other personnel to start analyzing the new version of the cloud application service so that the cloud access security system may be updated accordingly. The cloud access security system may also start to expect to receive web service calls to new versions of services that are served by new unknown servers.

An updated web executable file for the new version of the cloud application service i.e. the cloud application service is received and executed in the client computer by the cloud application client . Executing the updated web executable file results in the cloud application client making web service calls to servers that provide functionality of the cloud application service . For example the cloud application client may make a web service call to the server see arrow . The cloud access security system detects that the web service call is for a new unknown version of the cloud application service and may not be compatible with the cloud access security system . In response the cloud access security system looks up the last known good i.e. compatible and working version of the web service call to a last known good server of the previous version of the cloud application service. From the version service information the cloud access security system identifies the server as the last known good server that services the web service call in the previous version of the cloud application service see arrow . Accordingly the cloud access security system redirects the web service call to the server . The server instead of the intended server receives see arrow and services see arrow the web service call as in the previous version of the cloud application service which is the cloud application service .

Similarly when the cloud application client makes a web service call that is directed to the server which services the web service call for the cloud application service see arrow the cloud access security system detects that the web service call is to an unknown version of the cloud application service and is being made to the unknown server . In response the cloud access security system redirects the web service call to the server which is the last known good server that services the web service call in the previous version of the cloud application service in accordance with the version service information see arrow . The server instead of the intended server receives see arrow and services see arrow the web service call as per the cloud application service . Advantageously the above described procedure allows the cloud access security system to continue processing communications between the cloud application client and the cloud application service although possibly with some loss in functionality until such time that the cloud access security system is updated to recognize and be fully compatible with the cloud application service .

In the example of the cloud access security system receives a web service call sent by the cloud application client to a server of a cloud application service step . The web service call may be a request to receive an email for example. The cloud access security system processes the web service call as normal when the web service call is for a service of a version of the cloud application service that is known to the cloud access security system step to step . This is the case when the cloud access security system is compatible with the cloud application service and the web service call is for a service of the cloud application service as indicated by version information in the web service call.

When the cloud access security system detects that the web service call is for a service of an unknown version of the cloud application service the cloud access security system consults the version service information to determine if there is a known good server of the previous version of the cloud application service that may service the web service call step to step . This is the case when the cloud access security system is compatible with the cloud application service but not with the cloud application service and the web service call is for a service of the cloud application service .

The cloud access security system may also alert the system administrator of the cloud access security system such that an off line investigation of the unknown version of the cloud application service may be initiated step to step .

When the version service information indicates that a known good server of the previous version of the cloud application service may service the web service call the cloud access security system redirects the web service call to the known good server of the previous version of the cloud application service step to step . For example the cloud access security system may forward the web service call to a server that provides the service for the cloud application service instead of a server that provides the service for the cloud application service . This way the cloud access security system is assured that it will be able to handle data returned by the server in response to the web service call.

When the version service information has no entry as to a known good server that may be able to service the web service call the cloud access security system may enter a so called risk mode step to step . In risk mode the cloud access security system may forward the web service call to the server of the new version of the cloud application service. Because the cloud access security system has not been tested for compatibility with the new version of the cloud application service there is a likelihood that the cloud access security system may not be able to properly process data received from the server.

In risk mode the cloud access security system may detect if the web service call involves known API s application programming interface OOP methods function or other instruction that are known to be compatible with cloud access security system e.g. as indicated in the version service information . If so the cloud access security system may alert the user of the possible incompatibility with the cloud application service but the risk of incorrect processing is low step to step . Otherwise the cloud access security system may alert the user of the possible incompatibility with the cloud application service and the risk of incorrect processing is high step to . In either case the user is alerted of the incompatibility and may decide to wait until such time that the cloud access security system is updated or tested to work as compatible with the new version of the cloud application service.

As explained data may be encrypted by the cloud access security system prior to storage in the cloud. In one embodiment the cloud access security system performs the encryption such that partial decryption may be performed in cases where there might be incompatibility with the cloud application service as well as to support message previews or other truncated displaying of clear text portions of the encrypted data. For example in the case of the Microsoft Office 365 email server the subject field of the email is limited to 256 characters in length some of the lines of the message body are used as preview of the e mail and the email is sent in parts when the email is very large. Partial decryption advantageously allows for decryption of encrypted email in those cases where the entirety of the encrypted email is not received by the cloud access security system .

The email data to be encrypted stage may comprise a subject message preview or message body of the email e.g. see . For example the email data may be part of an incoming email for the cloud application client . The protocol proxy receives the email data in clear text and provides the email data to the encryption module . The encryption module initiates encryption by dividing the email data into a plurality chunks stage with each chunk having a predetermined size such as a predetermined number of characters bits bytes etc. All of the chunks may have the same size except for the last chunk. The encryption module encrypts each chunk separately stage . This allows the encryption module to subsequently decrypt each encrypted chunk independent of other encrypted chunks of the same email data in cases where the other encrypted chunks are not available. In the example of the encrypted chunks are shown with slashes. The encryption module adds a prefix and a stop indicator to the encrypted chunks which in the example of are a start marker and an end marker respectively stage . The encrypted email data which now include start and end markers may be stored in the cloud computing infrastructure of the cloud application service .

Subsequently the cloud access security system receives part of the encrypted email data from the cloud application service stage . The cloud access security system may not receive all of the encrypted email data for a variety of reasons including incompatibility with the cloud application service e.g. unannounced changes to the cloud application service the partial encrypted email data is for a message preview the partial encrypted email data is for a subject field etc. Because the encrypted email data is incomplete some of the encrypted chunks and the end marker of the email data may be missing stage . schematically shows partial i.e. incomplete email data in the JSON format top and HTML format bottom .

Continuing with the protocol proxy sends the partial encrypted email data to the encryption module for decryption stage . The encryption module looks for the start marker to detect the beginning of the partial encrypted email data and proceeds to decrypt each complete encrypted chunk following the start marker arrows and . The encryption module does not decrypt an incomplete encrypted chunk e.g. encrypted chunk with missing characters does not fill the chunk boundary . The encryption module may return the decrypted chunks and the incomplete encrypted chunk back to the protocol proxy . The protocol proxy may forward the decrypted chunks which are now in clear text to the cloud application client for displaying to the user as a preview of the message body subject or part of the message body etc. without waiting to receive and decrypt the rest of the encrypted email data.

The encryption module may return the incomplete encrypted chunk to the protocol proxy with an indicator or instruction to attach or concatenate the incomplete encrypted chunk to the remaining portions of the incomplete encrypted chunk. For example the protocol proxy may combine arrow a first portion of the encrypted chunk received in a first transmission of the encrypted chunk stage with a second portion of the encrypted chunk received in a second transmission of the encrypted chunk stage . In that example the encrypted chunk consists of only the first portion and the second portion so receiving the second portion completes the encrypted chunk. The protocol proxy provides the now complete encrypted chunk to the encryption module for decryption arrow along with other complete encrypted chunks arrow stage . The encryption module returns the decrypted chunks and any incomplete encrypted chunk to the protocol proxy as before. The just described decryption process for decrypting the encrypted email data may be repeated until receipt of the end marker which indicates that the entirety of the encrypted email data has been received stages and . The decryption process may also be ended without receiving the end marker when the protocol proxy determines that the cloud application service will no longer provide additional encrypted chunks such as in the case of receiving email data for message preview or subject field for example.

In the example of the steps are steps for encrypting email data to be stored in the cloud and the steps are steps for decrypting encrypted email data to be provided to the cloud application client for viewing by the user.

In the example of the protocol proxy receives the email data in clear text i.e. unencrypted and provides the email data to the encryption module . The encryption module divides the email data into a plurality of chunks step encrypts each chunk of the plurality of chunks step and places the encrypted chunks between a start marker and an end marker to generate a formatted encrypted email data step . The encryption module returns the formatted encrypted email data i.e. with the start and end markers to the protocol proxy which forwards the formatted encrypted email data to the cloud application service . The cloud application service stores the formatted encrypted email data in the cloud.

Subsequently the protocol proxy receives a portion i.e. not the entirety of the formatted encrypted email data over the Internet step . More specifically the formatted encrypted email data does not have an end marker. Regardless the protocol proxy provides the portion of the formatted encrypted email data to the encryption module for partial decryption. The encryption module begins the decryption process by looking for the start marker step . The encryption module identifies and decrypts complete encrypted chunks of the encrypted email data that follow the start marker step . The encryption module provides the decrypted encrypted chunks to the protocol proxy which provides them to the cloud application client for viewing by the user as a message preview subject field or some other reason. For example the partial formatted encrypted email data may be due to incompatibility of the cloud access security system because of unannounced changes to the cloud application service. In that case the cloud access security system is able to decrypt portions of the formatted encrypted email data even in risk mode.

In one embodiment the encryption module does not decrypt incomplete encrypted chunks. Instead the encryption module returns an incomplete encrypted chunk to the protocol proxy step . The protocol proxy may combine the returned incomplete encrypted chunk with the rest of the incomplete encrypted chunk if subsequently received e.g. see step . The decryption of the encrypted email data is ended when the end marker of the encrypted email data is received or when the protocol proxy determines that the cloud application service will not send additional portions of encrypted email data step to as is the case when the encrypted email data is for a message preview or a subject field for example. Otherwise the protocol proxy receives additional portions of the encrypted email data including remaining portions of the incomplete encrypted chunk that was not decrypted step . The protocol proxy combines the portions of the incomplete encrypted chunk to complete the encrypted chunk for decryption by the encryption module step . The decryption process is then repeated.

Systems and methods for securing data stored in the cloud have been disclosed. While specific embodiments of the present invention have been provided it is to be understood that these embodiments are for illustration purposes and not limiting. Many additional embodiments will be apparent to persons of ordinary skill in the art reading this disclosure.

