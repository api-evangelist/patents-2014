---

title: Network-level access control management for the cloud
abstract: A cloud access manager obtains input regarding access control for at least one application deployed on a plurality of virtual machine instances in a cloud computing environment; the virtual machine instances are divided into at least first and second access zones. A cloud access manager registrar located in the cloud computing environment registers internet protocol addresses of external clients as seen from the cloud computing environment; at least some of the addresses are assigned to the clients via network address translation (NAT). Session traversal utility for NAT (STUN) is carried out to determine public internet protocol addresses assigned to the clients via NAT. The cloud access manager controls (i) access of the external clients to the plurality of virtual machine instances; and (ii) access of the plurality of virtual machine instances to each other, based on the registered internet protocol addresses, in accordance with the access zones.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09300633&OS=09300633&RS=09300633
owner: INTERNATIONAL BUSINESS MACHINES CORPORATION
number: 09300633
owner_city: Armonk
owner_country: US
publication_date: 20140324
---
This application claims the benefit of U.S. Provisional Application Ser. No. 61 804 833 filed Mar. 25 2013 the complete disclosure of which is expressly incorporated herein by reference in its entirety for all purposes.

The present invention relates to the electrical electronic and computer arts and more particularly to cloud computing and the like.

One pertinent security issue that public cloud computing platforms face today is that the active cloud virtual machine instances are visible and accessible via the public internet which potentially allows hackers to carry out several types of attacks. Examples of such attacks include Denial of Service DoS and intrusion over long durations which increase the probability of successful penetration. Most systems running on public cloud instances today are not security hardened to withstand such persistent and long attacks. Attacks may potentially be harmful to the enterprise that uses such instances to deliver cloud services for the users that use such services and for the cloud provider that provides the cloud infrastructure.

Principles of the invention provide techniques for network level access control management for the cloud. In one aspect an exemplary method for managing control of access of servers by clients behind network address translation NAT includes the steps of obtaining at a cloud access manager executing on at least one hardware processor input regarding access control for at least one application deployed on a plurality of virtual machine instances in a cloud computing environment with the cloud access manager executing on the at least one hardware processor dividing the plurality of virtual machine instances into at least first and second access zones in accordance with the input and registering with a cloud access manager registrar located in the cloud computing environment internet protocol addresses of external clients as seen from the cloud computing environment. At least some of the registered internet protocol addresses comprising public internet protocol addresses assigned to the clients via network address translation. Further steps include carrying out session traversal utility for network address translation to determine the public internet protocol addresses assigned to the clients via the network address translation and with the cloud access manager executing on the at least one hardware processor controlling based on the registered internet protocol addresses i access of the external clients to the plurality of virtual machine instances and ii access of the plurality of virtual machine instances to each other in accordance with the access zones such that 

As used herein facilitating an action includes performing the action making the action easier helping to carry the action out or causing the action to be performed. Thus by way of example and not limitation instructions executing on one processor might facilitate an action carried out by instructions executing on a remote processor by sending appropriate data or commands to cause or aid the action to be performed. For the avoidance of doubt where an actor facilitates an action by other than performing the action the action is nevertheless performed by some entity or combination of entities.

One or more embodiments of the invention or elements thereof can be implemented in the form of a computer program product including a computer readable storage medium with computer usable program code for performing the method steps indicated. Furthermore one or more embodiments of the invention or elements thereof can be implemented in the form of a system or apparatus including a memory and at least one processor that is coupled to the memory and operative to perform exemplary method steps. Yet further in another aspect one or more embodiments of the invention or elements thereof can be implemented in the form of means for carrying out one or more of the method steps described herein the means can include i hardware module s ii software module s stored in a computer readable storage medium or multiple such media and implemented on a hardware processor or iii a combination of i and ii any of i iii implement the specific techniques set forth herein.

Techniques of the present invention can provide substantial beneficial technical effects. For example one or more embodiments may provide one or more of the following advantages 

These and other features and advantages of the present invention will become apparent from the following detailed description of illustrative embodiments thereof which is to be read in connection with the accompanying drawings.

It is understood in advance that although this disclosure includes a detailed description on cloud computing implementation of the teachings recited herein are not limited to a cloud computing environment. Rather embodiments of the present invention are capable of being implemented in conjunction with any other type of computing environment now known or later developed.

Cloud computing is a model of service delivery for enabling convenient on demand network access to a shared pool of configurable computing resources e.g. networks network bandwidth servers processing memory storage applications virtual machines and services that can be rapidly provisioned and released with minimal management effort or interaction with a provider of the service. This cloud model may include at least five characteristics at least three service models and at least four deployment models.

On demand self service a cloud consumer can unilaterally provision computing capabilities such as server time and network storage as needed automatically without requiring human interaction with the service s provider.

Broad network access capabilities are available over a network and accessed through standard mechanisms that promote use by heterogeneous thin or thick client platforms e.g. mobile phones laptops and PDAs .

Resource pooling the provider s computing resources are pooled to serve multiple consumers using a multi tenant model with different physical and virtual resources dynamically assigned and reassigned according to demand. There is a sense of location independence in that the consumer generally has no control or knowledge over the exact location of the provided resources but may be able to specify location at a higher level of abstraction e.g. country state or datacenter .

Rapid elasticity capabilities can be rapidly and elastically provisioned in some cases automatically to quickly scale out and rapidly released to quickly scale in. To the consumer the capabilities available for provisioning often appear to be unlimited and can be purchased in any quantity at any time.

Measured service cloud systems automatically control and optimize resource use by leveraging a metering capability at some level of abstraction appropriate to the type of service e.g. storage processing bandwidth and active user accounts . Resource usage can be monitored controlled and reported providing transparency for both the provider and consumer of the utilized service.

Software as a Service SaaS the capability provided to the consumer is to use the provider s applications running on a cloud infrastructure. The applications are accessible from various client devices through a thin client interface such as a web browser e.g. web based email . The consumer does not manage or control the underlying cloud infrastructure including network servers operating systems storage or even individual application capabilities with the possible exception of limited user specific application configuration settings.

Platform as a Service PaaS the capability provided to the consumer is to deploy onto the cloud infrastructure consumer created or acquired applications created using programming languages and tools supported by the provider. The consumer does not manage or control the underlying cloud infrastructure including networks servers operating systems or storage but has control over the deployed applications and possibly application hosting environment configurations.

Infrastructure as a Service IaaS the capability provided to the consumer is to provision processing storage networks and other fundamental computing resources where the consumer is able to deploy and run arbitrary software which can include operating systems and applications. The consumer does not manage or control the underlying cloud infrastructure but has control over operating systems storage deployed applications and possibly limited control of select networking components e.g. host firewalls .

Private cloud the cloud infrastructure is operated solely for an organization. It may be managed by the organization or a third party and may exist on premises or off premises.

Community cloud the cloud infrastructure is shared by several organizations and supports a specific community that has shared concerns e.g. mission security requirements policy and compliance considerations . It may be managed by the organizations or a third party and may exist on premises or off premises.

Public cloud the cloud infrastructure is made available to the general public or a large industry group and is owned by an organization selling cloud services.

Hybrid cloud the cloud infrastructure is a composition of two or more clouds private community or public that remain unique entities but are bound together by standardized or proprietary technology that enables data and application portability e.g. cloud bursting for load balancing between clouds .

A cloud computing environment is service oriented with a focus on statelessness low coupling modularity and semantic interoperability. At the heart of cloud computing is an infrastructure comprising a network of interconnected nodes.

Referring now to a schematic of an example of a cloud computing node is shown. Cloud computing node is only one example of a suitable cloud computing node and is not intended to suggest any limitation as to the scope of use or functionality of embodiments of the invention described herein. Regardless cloud computing node is capable of being implemented and or performing any of the functionality set forth hereinabove.

In cloud computing node there is a computer system server which is operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems environments and or configurations that may be suitable for use with computer system server include but are not limited to personal computer systems server computer systems thin clients thick clients handheld or laptop devices multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics network PCs minicomputer systems mainframe computer systems and distributed cloud computing environments that include any of the above systems or devices and the like.

Computer system server may be described in the general context of computer system executable instructions such as program modules being executed by a computer system. Generally program modules may include routines programs objects components logic data structures and so on that perform particular tasks or implement particular abstract data types. Computer system server may be practiced in distributed cloud computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed cloud computing environment program modules may be located in both local and remote computer system storage media including memory storage devices.

As shown in computer system server in cloud computing node is shown in the form of a general purpose computing device. The components of computer system server may include but are not limited to one or more processors or processing units a system memory and a bus that couples various system components including system memory to processor .

Bus represents one or more of any of several types of bus structures including a memory bus or memory controller a peripheral bus an accelerated graphics port and a processor or local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA local bus and Peripheral Component Interconnect PCI bus.

Computer system server typically includes a variety of computer system readable media. Such media may be any available media that is accessible by computer system server and it includes both volatile and non volatile media removable and non removable media.

System memory can include computer system readable media in the form of volatile memory such as random access memory RAM and or cache memory . Computer system server may further include other removable non removable volatile non volatile computer system storage media. By way of example only storage system can be provided for reading from and writing to a non removable non volatile magnetic media not shown and typically called a hard drive . Although not shown a magnetic disk drive for reading from and writing to a removable non volatile magnetic disk e.g. a floppy disk and an optical disk drive for reading from or writing to a removable non volatile optical disk such as a CD ROM DVD ROM or other optical media can be provided. In such instances each can be connected to bus by one or more data media interfaces. As will be further depicted and described below memory may include at least one program product having a set e.g. at least one of program modules that are configured to carry out the functions of embodiments of the invention.

Program utility having a set at least one of program modules may be stored in memory by way of example and not limitation as well as an operating system one or more application programs other program modules and program data. Each of the operating system one or more application programs other program modules and program data or some combination thereof may include an implementation of a networking environment. Program modules generally carry out the functions and or methodologies of embodiments of the invention as described herein.

Computer system server may also communicate with one or more external devices such as a keyboard a pointing device a display etc. one or more devices that enable a user to interact with computer system server and or any devices e.g. network card modem etc. that enable computer system server to communicate with one or more other computing devices. Such communication can occur via Input Output I O interfaces . Still yet computer system server can communicate with one or more networks such as a local area network LAN a general wide area network WAN and or a public network e.g. the Internet via network adapter . As depicted network adapter communicates with the other components of computer system server via bus . It should be understood that although not shown other hardware and or software components could be used in conjunction with computer system server . Examples include but are not limited to microcode device drivers redundant processing units external disk drive arrays RAID systems tape drives and data archival storage systems etc.

Referring now to illustrative cloud computing environment is depicted. As shown cloud computing environment comprises one or more cloud computing nodes with which local computing devices used by cloud consumers such as for example personal digital assistant PDA or cellular telephone A desktop computer B laptop computer C and or automobile computer system N may communicate. Nodes may communicate with one another. They may be grouped not shown physically or virtually in one or more networks such as Private Community Public or Hybrid clouds as described hereinabove or a combination thereof. This allows cloud computing environment to offer infrastructure platforms and or software as services for which a cloud consumer does not need to maintain resources on a local computing device. It is understood that the types of computing devices A N shown in are intended to be illustrative only and that computing nodes and cloud computing environment can communicate with any type of computerized device over any type of network and or network addressable connection e.g. using a web browser .

Hardware and software layer includes hardware and software components. Examples of hardware components include mainframes in one example IBM zSeries systems RISC Reduced Instruction Set Computer architecture based servers in one example IBM pSeries systems IBM xSeries systems IBM BladeCenter systems storage devices networks and networking components. Examples of software components include network application server software in one example IBM WebSphere application server software and database software in one example IBM DB2 database software. IBM zSeries pSeries xSeries BladeCenter WebSphere and DB2 are trademarks of International Business Machines Corporation registered in many jurisdictions worldwide .

Virtualization layer provides an abstraction layer from which the following examples of virtual entities may be provided virtual servers virtual storage virtual networks including virtual private networks virtual applications and operating systems and virtual clients.

In one example management layer may provide the functions described below. Resource provisioning provides dynamic procurement of computing resources and other resources that are utilized to perform tasks within the cloud computing environment. Metering and Pricing provide cost tracking as resources are utilized within the cloud computing environment and billing or invoicing for consumption of these resources. In one example these resources may comprise application software licenses. Security provides identity verification for cloud consumers and tasks as well as protection for data and other resources. User portal provides access to the cloud computing environment for consumers and system administrators. Service level management provides cloud computing resource allocation and management such that required service levels are met. Service Level Agreement SLA planning and fulfillment provide pre arrangement for and procurement of cloud computing resources for which a future requirement is anticipated in accordance with an SLA.

Workloads layer provides examples of functionality for which the cloud computing environment may be utilized. Examples of workloads and functions which may be provided from this layer include mapping and navigation software development and lifecycle management virtual classroom education delivery data analytics processing transaction processing and mobile desktop.

As noted one pertinent security issue that public cloud computing platforms face today is that the active cloud virtual machine instances are visible and accessible via the public internet which potentially allows hackers to carry out several types of attacks. Examples of such attacks include Denial of Service DoS and intrusion over long durations which increase the probability of successful penetration. Most systems running on public cloud instances today are not security hardened to withstand such persistent and long attacks. Attacks may potentially be harmful to the enterprise that uses such instances to deliver cloud services for the users that use such services and for the cloud provider that provides the cloud infrastructure.

One or more embodiments advantageously provide a network level access control solution that facilitates delivery of cloud services while protecting the network perimeter of the solution in a useable and dynamically customizable manner. One or more embodiments are applicable to any of the various cloud platforms available today. One or more embodiments provide not only a high level of security with no security attacks via network exposure on the services but also significant savings on the cost of maintaining the security of such instances and services. One or more embodiments also address the challenges that network address translators NATs pose for network based access control on public clouds.

Adoption of public computing models such as offered with today s cloud computing environments brings with it new challenges of access control. Running in the public domain means anyone with internet access has access to your compute systems and their services for bad or good. In traditional information technology IT environments that are on the customer s premises firewalls and NATs prevent external unauthorized users from accessing the IT systems servers and computing storage network nodes. However cloud computing which provides more cost effective approaches to IT services hosting and management makes the servers computing storage network nodes visible to the external unauthorized users.

It is hard to keep a functional service running with strongest security measures in place. This is because cloud security is not a mature technology as of yet and the interplay between reliability and security and interoperability is not well studied and well developed in technologies as of yet.

One or more embodiments advantageously provide a network level access control solution that facilitates delivery of cloud services while protecting the network perimeter of the solution in a useable and dynamically customizable manner. If the network perimeter is assured as secure with respect to the threat models adopted by the solution administration group then the vulnerabilities cannot be exploited as easily as earlier. Following the defense in depth principle it is important to secure network interfaces by using strong firewall based security. The main question is can we have a tool that is delivered as a service and is capable of applying access control what hosts can access and what hosts cannot access by managing the firewalls of a cloud based solution in several levels of granularity from solution level to instance level and with ease. Such a service can be used to register a solution and its instances create security zones based on different levels of trust between the application components as well as update the access control policy efficiently and easily.

There are several challenges in getting such an access control technology developed and used some of them are how to apply access control policies on each instance how to manage the policies among different parts of the application how to handle network address translators and how and when to schedule applying the policies and their updates.

Network address translators NATs influence the way such access control is carried out. NATs are used to hide the internal network manage the network address space by using only a few public addresses and to control how a remote host can connect to a host behind the NAT. While NATs support security and certain network functionalities their non standard implementations pose significant challenges on how to provide certain other functionalities such as VoIP services as well as network based access control technologies. For a host A behind a NAT to access a service at address B on cloud A needs to have been registered allowed access by the network access control service for B. However in the presence of NAT address A is not what is visible to B or to the remote access control service. NAT translates A to A which is a publicly routeable address and the binding A to A is of limited lifetime. In order to B to be accessed by A instead of the address A A should be used. Moreover A changes dynamically and is assigned differently for different NATs. The question is how do we use the network level access control for cloud services for clients behind NATs 

One or more embodiments provide such a network based access control solution for public cloud services applicable to any of the various cloud platforms available today. One or more embodiments provide not only high level of security with no security attacks via network exposure on the services but also significant savings on the cost of maintaining the security of such instances and services. One or more embodiments also address the challenges that network address translators NATs pose for network based access control on public cloud. One or more embodiments address one some or all of 

An exemplary Cloud Access Manager CAM is a working implementation of the public network access control functionality that is disclosed herein. The Cloud Access Manager provides policy zoned network level access control as well as user registration capabilities that allow the dynamic and adaptable access control that are appropriate for use cases running on public networks that is in the type of networks used for public clouds.

The data center of a cloud service provider provides IaaS PaaS and SaaS among other services. The objective of an attacker is to gain access to a VM instance or a service hosted on it in an unauthorized manner to carry out denial of service attacks to determine the way a cloud behaves. Suppose that a cloud delivered service does not enforce network level access control on some or all of its IP addresses. External hosts may carry out DoS attacks port scanning as well as exploitation of vulnerable services running on the cloud based host.

The least complex use case is that of deploying application instances to a single public cloud where the application has little to no requirement for access control from other than public IP addresses that is either access by other instances on the same cloud or access from general internet clients coming from non translated public IP addresses. In these cases CAM can be used directly to establish access control using its control methods of zones policies and application registrations.

The examples are many for this single cloud deployment case. There are a set of cloud instances running on a public cloud such as IBM s SmartCloud Enterprise or Amazon s Elastic Compute Cloud EC2 that make up an application workload running with public IP addresses with access control essential to put up a network level perimeter around those instances so that unwanted probing or attacks are thwarted. One of the attractions to such public cloud scenarios is that the set of workload instances that make up the application will likely grow and shrink based on demand this calls for automation such as CAM provides to update and maintain the membership of these transient cloud instances. CAM updates the firewall settings of all member instances in the application to include or remove these demand driven instances thus maintaining the access control necessary to have them participate fully in the intra cloud communications required by the application. CAM policies can be defined to permit more general internet access such as opening port 80 of a public web service application to serve the general public with access control in this case provided by standard authentication methods and use of SSL for encrypted exchanged of any credentials. Further the CAM registrations can be used to provide access to the cloud application for specific public IP addresses.

Given there is overlap with this use case and a more complex case of the hybrid cloud now consider that case for more contrasting considerations.

A hybrid cloud is an integration of traditional datacenter based IT environment with one or more clouds on premise and or off premise. A hybrid cloud can also be an integrated environment including private and public clouds multiple private clouds or multiple public clouds. A typical hybrid cloud scenario is the combination of private and public clouds that interoperate allowing users of the private cloud to move some of the processing to the public cloud. This type integration helps users manage their peak workloads in the public cloud while processing normal and sensitive workloads on premise. An example of a hybrid cloud environment is an integration of on premise private cloud such as IBM PureSystems with a public cloud as referred to in the prior use case above. Hybrid cloud integration is facilitated by the hybrid cloud solution offering from IBM called IBM Service Management Extensions for Hybrid Cloud.

A workload may be processed using multiple virtual machine instances some of which may be running web servers application servers Lightweight Directory Access Protocol LDAP and other management servers while some other instances may be used to run databases and other data sources. In a hybrid cloud scenario all or a part of this topology of instances may be provisioned in the public cloud. In many cases databases or management components used in the workload topology may be shared with other workloads or services that must remain on premise. In such cases the workload processed in the cloud may use existing data sources and management services provided from the existing on premise components. In some other cases these may be provisioned in the on premise or private cloud environment for security privacy or compliance reasons.

In a multi instance workload environment such as the one described above security and isolation requirements vary across the topology of the instances depending on the functionality provided by the component and depending on the set of workloads served by that component. Proper administrative steps must be taken to ensure security and isolation policies are enforced at all times so that none of workloads or data sources are compromised and at the same time services are shared by multiple workloads. In particular management instances have additional security constraints since these components run with higher privileges.

To minimize risk of exposure from the instances running in the inherently less secure public cloud environment the establishment of role based security zones within a workload which can be managed independent of the location of the actual instances is appropriate in at least some embodiments. Using the services of CAM separate access zones can be defined and instances can be managed independently within each zone using policies designed for the role of the instance. Using the concept of access zones described here managing the access zones can be defined at the architectural level and implemented with greater degree of automation.

There are cloud usages involving real time network configurations. For example new ports are opened and closed based on real time server activity on a cloud hosted system. That requires appropriate access control to be enabled for such dynamic ports and IP addresses if any. This use case will be illustrated using an example real world configuration.

Real time media session setup is an additional use case for CAM. Examples include voice or video sessions either two party or multi party. Such sessions are typically set up through a signaling and control protocol such as SIP Session Initiation Protocol . SIP sessions comprise a message exchange INVITE OK ACK between the caller and the called party that is routed through a SIP server capable of session setup and session control. Commonly used open source SIP session control servers include OpenSIP and Kamailio. In an environment where both endpoints are within the same domain i.e. there are no intervening firewalls NAT boxes media flows between the endpoints once the INVITE OK ACK message exchange concludes and each endpoint thereby knows the IP address and port of the other. Once the conversation finishes either endpoint can initiate a BYE OK message exchange with the other and that stops each endpoint from sending media to the other. Prior to participating in a session setup each endpoint needs to register a mapping of its SIP URI to its IP address with the SIP server. The skilled artisan is familiar with the SIP protocol per se. Two pertinent aspects to note 

A typical cloud based environment for supporting real time media session setup is shown in . Typically the endpoints Enterprise A Enterprise B of a conversation will likely belong to different network domains with a firewall protecting each domain and a SIP session control server hosted in the cloud. Enterprise A has SIP user agent and media client while Enterprise B has SIP user agent and media client . Without going into the details of how SIP signaling needs to take care of the respective NAT firewall for each domain suffice to say that a common way for setting up sessions in such an environment is as follows Each endpoint registers with the server at a well known port the calling endpoint initiates the INVITE OK ACK message exchange endpoint to the same port on the server which then forwards SIP messages to the registered IP address of the called party. The media is then exchanged between the two endpoints via the media proxy on the cloud. As part of the INVITE OK ACK message exchange the SIP server instructs each endpoint of a port number of the media proxy where to send media. Media proxy transfers media from one endpoint to the other acting as a rendezvous point that each endpoint can reach when they cannot reach each other directly. As before once the conversation finishes the assigned ports on the media proxy are released. Note this is in addition to assigned ports on the endpoints to send receive media.

As the above brief summary demonstrates a media session is established dynamically by allocating ports on the cloud based media proxy to receive media from either endpoint. This entails dynamically enabling network access to the media proxy at the allocated port from the corresponding endpoint and then disabling the access after the conversation terminates. This is a function that CAM is well suited to do. One or more embodiments modify the SIP server so that when the INVITE OK ACK message exchange concludes the SIP server informs CAM of the selected ports of the media proxy and the IP address of the endpoint that will send media at the allocated port. CAM will then in real time enable network access to those ports by modifying the firewall access control lists appropriately. Similarly when the session terminates CAM will disable network access to the media proxy from that endpoint.

A system for network level access control to cloud resources has the following requirements in one or more embodiments. The objective of CAM is to facilitate access to the IP address and port of a VM instance on cloud from only authorized IP addresses. Unauthorized clients cannot access such addresses. The security objective of this system is prevention from unauthorized access port scanning DoS exploitation of vulnerabilities that are exposed by unprotected services.

Network address translators are used in network infrastructures in order to achieve several objectives 1 Use private addresses and manage the network with only a limited number of public IP addresses NAT provides a mapping from private IP address port to a public address port 2 Hide internal network topology and 3 Disallow connections initiated by a party external to the NAT to a party inside the NAT administered network and allow connections initiated by a party inside the NAT administered network 4 In some NATs mapping from internal IP address port to public IP address port is held for a brief period and needs to refreshed so that the mapping is not exploited by attackers. Items 2 3 and 4 have security implications and protect the internal network from various attacks by reducing the attack surface and providing perimeter security. Firewalls work with NATs in order to apply network security policies.

The disadvantages of NATs are as follows 1 the address of a host inside the network may not remain deterministic which therefore makes it difficult for an external host to differentiate one internal host from another or to identify the internal host by the IP address and port it sees 2 NAT drops IP address port mappings pretty soon requiring refreshing mechanisms to be in place which maybe considered as a waste of resources howsoever miniscule that could be 3 NATs are not standardized in terms of their functionalities nor in terms of their implementations. The lack of standardization is what is creating problems in network interoperability enabling network technologies that are both useable and secure and in upgrading network infrastructure without any concerns of breaking existing and deployed technologies.

The architecture of the access control components of the Cloud Access Manager CAM is depicted in . The Cloud Access Manager itself is a REST based web service application which provides the necessary services to effect the network level access control outlined in the Pertinent Aspects of CAM section above. Note that REST representational state transfer.

CAM receives direction from either an application administrator using a graphical user interface or from programmatic requests that come from workload managers responsible for making the provisioning and de provisioning requests to the cloud that is such workload managers include requests to CAM to establish the desired access controls for both instances newly provisioned as well as existing instances which need to be modified to accept new members or cleared of access to instances that have been removed from the cloud.

CAM maintains the configuration data about applications application registrations access zones zone membership access keys and key files which are provided to it via the REST API application program interface service requests. It uses all of this data to tell it what changes to make to the firewall settings on the zone members cloud instances to effect the desired controlled access.

The left hand side of the figure shows a public cloud such as IBM Smart Cloud Enterprise SCE or Amazon Elastic Compute Cloud EC2 with a depiction of a deployed application denoted as Application A. Within this application there are two application zones defined Zone Y and Zone Z . Each of these zones encompasses a number of deployed virtual machine instances. These zones are the Access Zones managed by CAM . To illustrate further this example shows a single VM instance not separately numbered to avoid clutter resides in intersection of circles for Zones Y and Z that resides in both of the access zones that is it is a member of both zones and has access to the other VM instances in both zones. The other VM instances have access to only those members of the zone that they are a member.

Also shown running in the cloud is the CAM Registrar note registration requests from one or more client s . The registrar serves to enable dynamic access to clients to the applications running in the cloud. The registrar is used by a client to authenticate to a specific application and thereby be granted network level access to the VM instances that make up that application. When the client is authenticated the registrar directs CAM to add the client s IP address to access control lists of the instances that are members of the application thereby dynamically enabling access to the registered client.

The CAM Registrar is architected to run in the cloud so that it can properly register the IP address of the client as seen by the cloud. With Network Address Translation NAT that is common when crossing the boundaries from private networks into the public network domain the IP address of a client that crosses one or more of these NAT boundaries is not the same as the local private IP address thus to be able to be controlled the address registered with CAM needs to be the one that the cloud VM instances will recognize.

On the other hand CAM itself can operate either from the cloud i.e. running together with the CAM Registrar or it can run separately for instance from a secured location that has been granted access by the Registrar component. The consideration here is the need for more containment of CAM given its vault of access keys for the updating of the application member instances. While CAM secures these keys in an encrypted vault if there is any question of vulnerability running the public cloud it can be moved to the security of a more controlled environment again just requires the Registrar to access it e.g. secured channel for instance .

NATs pose significant challenges in applying access control based on client host IP addresses. CAM in order to apply the access control requirements should know the exact address at which the client is going to reach a host. Let the client be available at x xp and the host is at z zp. Because of the NAT behind which x is communicating with z z knows that someone with address y yp is communicating with it and not from x xp. This address y yp NAT ed address of x xp needs to be used by CAM in order to allow x xp to access the server at z zp. In case of non full cone NATs the NAT ed IP address of x changes as the destination host outside the NAT changes as shown in . Therefore it is appropriate to determine the actual address y yp so as to facilitate CAM to enforce the firewall policies appropriately allowing x xp.

STUN Session Traversal Utilities for NATs is a standardized protocol RFC 5389 that is used to facilitate NAT traversal. NAT traversal is the process of determining the public address assigned to a client behind NAT when the client is accessing a server that is outside the NAT. A STUN enabled server implements the protocol of STUN so that it can inform the client of its NAT ed i.e. server reflexive address. Given that there are different types of non standardized NAT behavior as discussed earlier STUN is used by the clients and services in order to determine its NAT ed addresses and use them in the communications. Moreover the NAT bindings are short lived. Therefore if the server needs to connect back to the client later or vice versa using the same NAT ed address of the client then the NAT binding should be kept alive. The keep alive messages should be sent by the STUN enabled service to the client or vice versa with an ACK being returned from the recipient such a round trip communication helps keep the NAT binding active.

In the case of CAM when a client is behind NAT and intends to access a host in the cloud outside the NAT then the client should be authorized by CAM to do so. However to do that CAM needs to know the NAT ed IP address and port number from which the host receives the request from the client. For example in at client x xp communicates with host z zp. However z zp receives the request from y yp which is the NAT ed IP for x xp. If CAM is enabled for z zp then for x to be allowed to communicate with z CAM should know that a client with address y yp would intend to access z and such a connection should be allowed.

However NAT ed addresses are assigned dynamically unless it is a static NAT. In those cases the client has to first create such a NAT binding determine its NAT ed address and inform that address to CAM with authorization credentials for CAM. The NAT binding has also to be kept alive from that point onwards till the end of any communication that x xp can foresee from that NAT ed IP address. Determination of NAT ed IP address can be carried out using STUN protocol. So using STUN in general there are the following steps that need to be carried out in order to handle the problem of NATs for CAM usage.

STUN enable the host that needs to be administered access control by CAM. This is done by running a STUN server that receives each STUN request sent to any port on that host. Let x xp be the client and z zp be the service running on cloud that x intends to access. The following are the steps that are used to use CAM to allow revoke and or expire permissions.

CAM should have attributes such as lifetime of a permission and the events that can be used to revoke a permission such as a timer event or receiving too many requests from a client over a short period of time. To that end there should also be associated a limit in the number of request originating from the client at y yp for z zp. If z zp informs CAM that y yp is sending more requests that allowed then CAM may revoke the permissions or carry out other actions based on access control policies. The latter is to prevent DoS attacks.

Consider exemplary concrete steps that are used to implement the general methodology suggested in the previous section. Refer to .

Revocation If the STUN server at z zp does not receive any ACK message from the client for one or more its keep alive messages then the CAM enabling service at z zp sends a revoke message to CAM for revoking a ap from the list of allowed clients to access the service at z zp. The client may ask CAM to revoke permissions to a ap from accessing z zp. The lifetime or event based revocations may also be used. In cases where the client is quite mobile or the client does not send revocation requests CAM should use STUN protocol to contact the CAM enabled service or STUN service at z zp and determine whether the client has been authorized recently or is accessing the service. If none of them is true then revocation proceeds. Authentication protocols in and of themselves are well defined and well known in literature given the teachings herein the skilled artisan will be able to adapt one or more to implement one or more embodiments.

Architecture I requires involvement of the service in terms of its CAM enablement and the client need not be a STUN enabled client. Architecture II requires involvement of the service as in I as well as the CAM CAM needs to talk to the CAM enabled services to get ALLOW working. However the total number of messages for an ALLOW is more than the ones in I and III. Architecture III does not require any modifications to the service for CAM enabling it or does not add much load to the services being hosted on the cloud. It puts all the actions at the client side. Architecture III relatively reduces the chance that the client would be a DoS attacker because it has to do the most of processing. Architectures I and II lead to messages between the service and the CAM thereby increasing the effectiveness of a DoS attack because for one request from the client there are one more and two more requests in I and II respectively between the CAM and the CAM enabling service. In general the approach I is believed to be most appropriate while for resource and energy constrained clients II or III would be better.

The Cloud Access Manager CAM is an exemplary implementation to provide the type of network level access control highlighted in the requirements outlined in the Pertinent Aspects of CAM above. It serves to provide access control by automating the configuration of the network level access firewalls on the cloud instances virtual servers that it has been charged with oversight responsibilities. The instances referred to as application members that it manages are VM instances running in a public cloud where such access control is most essential. It provides an administrator level user interface as well as REST based API for establishing access zones defining zone policies and updating zone membership. The policies that it applies come from specifications to CAM by means of administration configuration or authenticated user registrations. They are applied to the cloud members in the form of a set of firewall rules that serve to limit network level access to match what is configured by the CAM access policy specifications. Following are details of the control components of the Cloud Access Manager 

Access zones have two forms of access control specification. The first zone membership is implicit in that if a cloud instance virtual machine is made a member of a zone it will be granted access to all other members of that zone and those members will be granted access to it. As depicted in a cloud instance can be a member of more than one access zone refer to the member that is in the intersection of the circle representing Zone A and Zone B . In this case that cloud instance has access to all members of both zones as it is a member of both. The other members have access to this member.

Referring again to the it can be seen that access zones are well depicted by set inclusion Venn diagrams. Looking at zones C1 and C2 this depicts a method to have a set of members have one set of policies while still gaining access to another set of VMs. In detail members of zone C2 can have a set of policies which are not shared with the other members of the out zone C1 but since all of zone C2 is a subset of C1 all members of C1 and C2 have access to each other. This notion of having groups as policy groups and others as non policy groups makes for a flexible technique to define the necessary access control environment.

The other form of access control specification provided to access zones is the explicit specification of zone policies which are defined to provide additional access beyond that of the zone membership just described. These can be defined in the form of typical firewall specifications such as permitting access by a specific IP address or range of IP addresses or access to a given port or range of ports. The exemplary CAM implementation uses IPTABLE firewall rule specification formats to define these policies. These policies define additions in access to be added versus any restrictions in access. The model employed for policies is to start with a base configuration profile that only permits inbound access via a secured port port 22 used by SSH SCP protocols and to that base the various access definitions provided by CAM e.g. including the access zone policies and zone membership are added to permit or open up other access to the included member cloud instances. To avoid lock out conditions the secured port 22 for SSH access is always enabled.

Additionally CAM provides for dynamic application access via authenticated user requests. Applications can be configured via the administrative UI or API to bound a set of access zones and zone members. The user registers with CAM Registrar function by selecting the application of interest and authenticating with an application specific password. Their registered IP address will be dynamically granted access by means of CAM updating the firewall rules of the members of the zones configured as part of the application.

CAM automates the specified changes to access control on zone members by using access keys to perform the necessary firewall updates. These keys are configured via the administrative interfaces for CAM and are maintained securely in a key vault. CAM is entrusted with private key files which are used to perform its automated duties of controlling the zone members in its charge. These key files are associated to a CAM Access Key of which there are two types i application level access key which is defined to be used for all members of the defined application and ii member level access key which is used to specify a key file that is to be used for a specific member cloud instance. With the more specific member level key used if specified otherwise the application level key will be used.

By way of example summarizes the above implementation detail by showing a set of firewall rules as generated by CAM for a single cloud instance and displayed on the CAM application administrator user interface. The headings show the various sections of access control that have been discussed herein those being the implied zone membership rules application registrations and the explicit zone policies. The rules at the top are ones which define the base limited access set to which the other rules are additive in granting more access than the base.

Referring again to consider that CAM registers the IP address from which the client request of client is actually coming in. Due to NAT behavior however the IP address that CAM sees is not what the application component sees. NATs do not allow client addresses to be used as is for network based access control. One or more embodiments provide methods to carry out network based access control using the STUN protocol or such other protocols. One or more embodiments address NAT issues and how to use STUN or similar protocols to provide access control in the presence of NATs. One or more embodiments add new functionalities to STUN such as the ability to handle authentication tokens from client CAM and or to compute and verify hashes and digital signatures. One or more embodiments make cloud images STUN enabled.

Some embodiments address multiple zones in the cloud each with a single instance of a virtual machine VM . These can be configured for example using CAM to provide certain levels of firewall protection. There are situations with more than one instance in a zone. The number of instances in a zone may be determined at runtime for example. In one approach every time another instance is added configure that instance configure the client and configure other instances that need to communicate with the new instance that it is desired to add. It will be appreciated that changing the number of instances in a zone can result in significant complication.

One or more embodiments address this complexity by adding the notion of a gateway to the zone. Attention should now be given to wherein elements similar to those in have received the same reference characters. Note firewall . A zone is defined with certain rules including which clients can communicate with which IP addresses what ports should be opened and so on. In one or more embodiments every time a zone is defined with policies create a gateway which is STUN enabled. Once the gateway is defined it is possible to add instances in the zone without making any changes on the client side or in the gateway. This enhances the manageability of adding new instances. shows an exemplary technique for configuring the zones with gateways. shows the more general case where there are not only multiple zones with one or more instances but also for multiple clients handled with a gateway on the client side.

In particular consider gateway based protection zones as shown in . Each gateway is for one protection zone i.e. gateway is for Zone Z and gateway is for Zone Y and each gateway receives requests from client s and forwards those requests to respective components in the zone. Each gateway is STUN enabled. Techniques discussed elsewhere herein can be used to register a client for accessing the protection zone. In an exemplary method of configuring clients as depicted in deploy a gateway GW A per protection zone A including one or more servers zone A here is intended to refer to any given zone e.g. Zone Y Zone Z etc. . Let the IP address of GW A be IP GW A . CAM stores a table where each row refers to a protection zone gateway and the set of servers in that protection zone. When a client wants to get access for a server CAM determines the gateway assigned to the server from the table and registers the client. The client can be registered by applying any of the methods in in order to register client Client X with respect to IP GW A . That is to say Client X needs to be given access to GW A by CAM. Using CAM configure all servers in protection zone A by applying access rules firewall rules to IP GW A such that the gateway GW A has access to all servers of zone A at appropriate ports protocols. As earlier all servers in zone A can communicate with each other if that is needed by access policies. Clients are not permitted to communicate directly with the servers in Zone A. Clients can communicate with servers only via the Gateway.

Consider now a gateway for multiple clients as in . Each gateway is for a set of clients within the same network and each gateway receives requests from client s and forwards those requests to the respective component or the gateway in the zone Z or Y. Each gateway is STUN enabled. Techniques discussed elsewhere herein can be used to register a client for accessing the protection zone. In an exemplary method of configuring clients as depicted in deploy a gateway GW A per set of clients A including more than one server a set of clients A here is intended to refer to any given set of pertinent clients . Let the IP address of GW A be IP GW A . Apply any of the methods in in order to register GW A as a client with respect to IP GW Z i.e. GW A as a Client needs to be given access to GW Z for protection zone Z by CAM. Manually or by other techniques configure all clients in set A by applying access rules firewall rules to GW A such that the requests from any client in A to any server in Z go to gateway GW A which then forwards same to GW Z which has been given access to all servers of zone Z at appropriate ports protocols as per the earlier method.

Consider for cloud images that if an instance is being created that needs to be access controlled by the CAM add a STUN module to the instantiation process enable STUN for the appropriate services on the instance and configure STUN to handle CAM capabilities.

It will thus be appreciated that one or more embodiments provide a method to provide network level access control especially as it relates to the public cloud space using the STUN protocol or such other protocols to determine and then enable effective IP addresses as affected by various forms of Network Address Translation that occur at enterprise boundaries. One or more embodiments are applicable to private data centers as well when there are NATs deployed within the enterprise. Some embodiments provide a method to provide tracking and provenance regarding WHAT are the clients that accessed network based resources and WHEN. Some embodiments provide a method to de register clients from accessing a resource based on dis association from a network and or based on duration of access an upper bound on when the access expires .

One or more embodiments thus advantageously allow access control for clients behind NATs for services that the clients want to access. The clients want access to servers divided into protection zones. Clients are behind NATs which change the IP address for clients as seen by the servers. Therefore the access control at servers uses the IP address of the client that the servers can see. One or more embodiments achieve this by using STUN. One or more embodiments thus provide a method computer program product and or apparatus for managing control of access of servers by clients behind NATs.

Given the discussion thus far it will be appreciated that in general terms an exemplary method according to an aspect of the invention includes the step obtaining at a cloud access manager executing on at least one hardware processor input regarding access control for at least one application deployed on a plurality of virtual machine instances in a cloud computing environment. A further step includes with the cloud access manager executing on the at least one hardware processor dividing the plurality of virtual machine instances into at least first and second access zones in accordance with the input. A still further step includes registering with a cloud access manager registrar located in the cloud computing environment internet protocol addresses of external clients as seen from the cloud computing environment. At least some of the registered internet protocol addresses are public internet protocol addresses assigned to the clients via network address translation NAT . Yet a further step includes carrying out session traversal utility for network address translation STUN to determine the public internet protocol addresses assigned to the clients via the network address translation. An even further step includes with the cloud access manager executing on the at least one hardware processor controlling based on the registered internet protocol addresses i access of external clients to the plurality of virtual machine instances and ii access of the plurality of virtual machine instances to each other in accordance with the access zones. The control is such that 

In some cases the obtaining comprises obtaining from an application administrator via a graphical user interface. In some cases the obtaining comprises obtaining from a workload management application .

In some cases the at least one hardware processor on which the cloud access manager executes comprises at least one hardware processor of the cloud computing environment. On the other hand in some cases the at least one hardware processor on which the cloud access manager executes comprises at least one hardware processor of a secured location remote from the cloud computing environment.

Referring to in some instances an additional step includes providing at least one of the first and second access zones with a zone gateway . The external clients are only permitted to access those of the virtual machine instances in the access zone s having the zone gateway s via the zone gateway s .

Referring to in some instances an additional step includes grouping at least some of the external clients into a set and providing the set with a client side gateway . The external clients in the set are only permitted to access the plurality of virtual machine instances e.g. in Zone Y or Z via the client side gateway .

It should be noted that any of the methods described herein can include an additional step of providing a system comprising distinct software modules embodied on a computer readable storage medium the modules can include for example any or all of the appropriate elements depicted in the block diagrams in any of the pertinent figures and or described herein by way of example and not limitation any one some or all of the modules blocks and or sub modules sub blocks in such as CAM and CAM Registrar with elements and as well. In some embodiments a suitable UI is provided in the form of a GUI comprising html served out to the browser of a user s computer. The method steps can then be carried out using the distinct software modules and or sub modules of the system as described above executing on one or more hardware processors such as . Further a computer program product can include a computer readable storage medium with code adapted to be implemented to carry out one or more method steps described herein including the provision of the system with the distinct software modules.

The present invention may be a system a method and or a computer program product. The computer program product may include a computer readable storage medium or media having computer readable program instructions thereon for causing a processor to carry out aspects of the present invention.

The computer readable storage medium can be a tangible device that can retain and store instructions for use by an instruction execution device. The computer readable storage medium may be for example but is not limited to an electronic storage device a magnetic storage device an optical storage device an electromagnetic storage device a semiconductor storage device or any suitable combination of the foregoing. A non exhaustive list of more specific examples of the computer readable storage medium includes the following a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory a static random access memory SRAM a portable compact disc read only memory CD ROM a digital versatile disk DVD a memory stick a floppy disk a mechanically encoded device such as punch cards or raised structures in a groove having instructions recorded thereon and any suitable combination of the foregoing. A computer readable storage medium as used herein is not to be construed as being transitory signals per se such as radio waves or other freely propagating electromagnetic waves electromagnetic waves propagating through a waveguide or other transmission media e.g. light pulses passing through a fiber optic cable or electrical signals transmitted through a wire.

Computer readable program instructions described herein can be downloaded to respective computing processing devices from a computer readable storage medium or to an external computer or external storage device via a network for example the Internet a local area network a wide area network and or a wireless network. The network may comprise copper transmission cables optical transmission fibers wireless transmission routers firewalls switches gateway computers and or edge servers. A network adapter card or network interface in each computing processing device receives computer readable program instructions from the network and forwards the computer readable program instructions for storage in a computer readable storage medium within the respective computing processing device.

Computer readable program instructions for carrying out operations of the present invention may be assembler instructions instruction set architecture ISA instructions machine instructions machine dependent instructions microcode firmware instructions state setting data or either source code or object code written in any combination of one or more programming languages including an object oriented programming language such as Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The computer readable program instructions may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider . In some embodiments electronic circuitry including for example programmable logic circuitry field programmable gate arrays FPGA or programmable logic arrays PLA may execute the computer readable program instructions by utilizing state information of the computer readable program instructions to personalize the electronic circuitry in order to perform aspects of the present invention.

Aspects of the present invention are described herein with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer readable program instructions.

These computer readable program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks. These computer readable program instructions may also be stored in a computer readable storage medium that can direct a computer a programmable data processing apparatus and or other devices to function in a particular manner such that the computer readable storage medium having instructions stored therein comprises an article of manufacture including instructions which implement aspects of the function act specified in the flowchart and or block diagram block or blocks.

The computer readable program instructions may also be loaded onto a computer other programmable data processing apparatus or other device to cause a series of operational steps to be performed on the computer other programmable apparatus or other device to produce a computer implemented process such that the instructions which execute on the computer other programmable apparatus or other device implement the functions acts specified in the flowchart and or block diagram block or blocks.

The flowchart and block diagrams in the Figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of instructions which comprises one or more executable instructions for implementing the specified logical function s . In some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or carry out combinations of special purpose hardware and computer instructions.

The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise. It will be further understood that the terms comprises and or comprising when used in this specification specify the presence of stated features integers steps operations elements and or components but do not preclude the presence or addition of one or more other features integers steps operations elements components and or groups thereof.

The corresponding structures materials acts and equivalents of all means or step plus function elements in the claims below are intended to include any structure material or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present invention has been presented for purposes of illustration and description but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The embodiment was chosen and described in order to best explain the principles of the invention and the practical application and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated.

