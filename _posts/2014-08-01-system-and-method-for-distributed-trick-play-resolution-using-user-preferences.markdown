---

title: System and method for distributed trick play resolution using user preferences
abstract: Distributed trick play resolution in a distributed video viewing group network includes determining trick play preferences for each device of a plurality of nodes in the distributed video viewing group network with respect to a video item. Conflicting trick play preferences between the nodes is determined based on one or more of a group consisting of: user rankings, user voting, trick play ranking, and owner resolution. The determined conflicting trick play preferences are resolved.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09159361&OS=09159361&RS=09159361
owner: Porto Technology, LLC
number: 09159361
owner_city: Wilmington
owner_country: US
publication_date: 20140801
---
This application is a continuation of U.S. patent application Ser. No. 13 713 651 titled System And Method For Distributed Trick Play Resolution Using User Preferences filed on Dec. 13 2012 which is a continuation of U.S. patent application Ser. No. 12 656 529 titled System And Method For Distributed Trick Play Resolution Using User Preferences filed on Feb. 2 2010 which claims priority from U.S. Provisional Application No. 61 149 220 filed on Feb. 2 2009 the disclosures of each of which are incorporated herein by reference in its entirety.

The present invention relates generally to a media system and more particularly to distributed media experiences among multiple users.

In distributed video viewing systems where a group of users are viewing videos in a peer to peer P2P or distributed computing model users will inevitably want to use certain functions such as trick play functionality. However the video is viewed in a group and also in distributed locations. Thus the individual preferences of each user often conflict with that of the entire group of users when viewing a video in the P2P or distributed viewing setting.

Systems and methods consistent with the present invention relate to resolving conflicting trick play preferences of each user versus the preferences of the entire group during playback of a media item such as for example a video.

Moreover systems and methods consistent with the present invention provide trick play content resolution by providing techniques to manually and automatically resolve distributed trick play conflicts.

According to one aspect the present invention provides a method of distributed trick play resolution in a distributed media group network including determining trick play preferences at each device of a plurality of devices in the distributed media group network with respect to a media item and resolving conflicting trick play preferences between the devices based on the determined trick play preferences.

In the method the distributed media group network may include a distributed video viewing group network and the media item may be a video item.

The present invention also provides a media system for distributed trick play resolution in a distributed video viewing group network including a device that determines trick play preferences and resolves conflicting trick play preferences with other devices in the distributed video viewing group network based on the determined trick play preferences.

Those skilled in the art will appreciate the scope of the present invention and realize additional aspects thereof after reading the following detailed description of the preferred embodiments in association with the accompanying drawing figures.

The embodiments set forth below represent the necessary information to enable those skilled in the art to practice the invention. Upon reading the following description in light of the accompanying drawing figures those skilled in the art will understand the concepts of the invention and will recognize applications of these concepts not particularly addressed herein. It should be understood that these concepts and applications fall within the scope of the disclosure and the accompanying claims.

Note that at times the system of the present invention is described as performing a certain function. However one of ordinary skill in the art would know that the program is what is performing the function rather than the entity of the system itself. Further embodiments of the present invention can be implemented in software hardware or a combination thereof.

Although aspects of one implementation of the present invention are depicted as being stored in memory one skilled in the art will appreciate that all or part of systems and methods consistent with the present invention may be stored on or read from other computer readable media such as secondary storage devices like hard disks floppy disks and CD ROM or other forms of a read only memory ROM or a random access memory RAM either currently known or later developed. Further although specific components of the system have been described one skilled in the art will appreciate that a system suitable for use with the methods and systems consistent with the present invention may contain additional or different components.

The media player may be for example a personal computer a set top box STB for playing digital television content received from a television content provider a Digital Video Recorder DVR for playing previously recorded video content such as previously recorded television content received from a television content provider an Apple TV device for playing downloaded content that has been purchased or rented from a remote media distribution service such as the Apple iTunes store a Digital Versatile Disc DVD player a mobile device or the like. The media player may be connected to the display device via any desired audio video connection such as for example a High Definition Multimedia Interface HDMI connection a Digital Video Interface DVI connection a coaxial cable connection or the like. The display device may be for example a computer display screen a television TV or the like. In an alternative embodiment the display device may be incorporated into the media player .

The media player includes a media playback function and a media trick play function each of which may be implemented in software hardware or a combination thereof. The media playback function generally operates to provide playback of media items obtained from a content source such as a peer node or a server or combination thereof . As will be discussed in more detail below the peer node may be connected to other peer nodes P1 P2 P3 . . . Pn or to a service in a distributed video viewing group network . In the exemplary embodiment the media items are video items. Other media items may include music playlists online radio etc. As such the media playback function provides playback of the video items and presentation of the video items to the user via the display device . Although the peer node is shown as a separate unit it may be part of the media player .

The following is a more detailed description of the media system for distributed trick play resolution consistent with the present invention.

The term trick play as used herein generally refers to using the transport or viewing controls such as pause instant replay rewind fast forward skip slow etc. of the media player for example a DVR system . As shown in the input device may include buttons for the various trick play functions such as by way of example rewind fast forward skip skip ahead 30 seconds play pause as well as a no trick play allowed function . These functions may also appear in a graphic user interface GUI on the display device such that a user can click on them to control the various trick play functions.

 As shown in each peer node can maintain or can store at a remote server or distributed on a set of user devices such as a home personal video recorder PVR mobile devices a tablet etc. but is not limited to the following information on a corresponding user 

The content cache is fetched from for example a semantic database see which may be local remote centralized or distributed. In this regard shows the semantic database as a local database which could also be part of the media player .

The content maintained by the peer node is used to automatically generate a trick play preferences map for a piece of content which will be viewed on a distributed video viewing network such as a P2P network. The trick play preferences map can be generated before the content is viewed or sometime later upon request.

A mapping file may simply be a data structure that identifies the user and also comprises one or more substructures for each scene including 

The Allow Deny Do not Care permissions for each scene may simply be set as flags for each type of trick play action where 1 Allow 0 Deny X Do not Care. The following Table shows the various permissions for a plurality of scenes 

Such a data structure can be pictorially depicted as in as a sequence of blocks representing scenes along the video timeline T with white and black colors of the blocks indicating whether or which trick play actions are allowed for the corresponding scenes. The map file and the merged map file may not necessarily contain trick play permission information e.g. allow deny do not care for FF RW Pause etc. for each and every scene in the movie. Segments or scenes where the user has no trick play preferences may be excluded from the map file with the implicit assumption that missing segments in the map file indicate a don t care preference or any other default preference . So even though the table above shows information for all contiguous scenes it could potentially be missing segments columns that contain no specific user preferences.

Note that while the word map file as used herein may not necessarily correspond to an actual file on permanent storage but to any data structure in memory that allows the same functions.

Also note that the above is only an exemplary embodiment of a mapping file and more complex structures with more complex options may be possible. A more detailed description of how a peer trick play map file is created is set forth below.

The peer trick play map file construction process utilizes the results of video analysis to determine user affinity with segments within the video. The video analysis per se can be performed by a central server or peer node using techniques known in the art such as scene classification speaker identification annotations analysis etc. The analysis information may be embedded in the video or obtained from a service. The user s preferences video playback history and profile are used to evaluate whether specific trick play functions are enabled for each video segment. In addition to users map files there might also be a global map file associated with specific content that forbids trick play actions at or to certain segments. An application of this would be spoiler avoidance e.g. don t skip forward to the last 10 minutes because that is where the twist is. Such a content specific map file may be created and provided by the content creator the content provider the user s social network or manually created by previous viewers of that content. An example of a more detailed version of the evaluation instruction discussed above may be as follows 

The video content is divided into scenes by the peer node content producer social network or other means. For example content producers often divide video content into chapters or segments which may be used for trick play mapping.

The trick play settings can be implicit or explicit as follows. With explicit or manual settings the user selects scenes and examines the scenes explicitly and manually sets trick play preferences. Alternatively the user explicitly describes scenes using for example keywords etc. and the trick play actions allowed disallowed for those scenes. During playback the media player provides controls that allow the viewer to select their desirability level for trick play events. For example as a user starts watching an action scene the user can use the input device to select to block skip FF and select that pause rewind is acceptable.

Additionally the viewer is provided preference controls in response to trick play requests received from another user. For example a viewer receives a skip trick play event during the action scene and selects to reject this and future skip events during action scenes. As another example the user can also select reject future skip events during scenes like this where the system determines what kind of scene the particular scene is and can determine affinity of future scenes.

With implicit or automatic settings the user sets preferences for actors scenes or genres. The system then examines annotations close captioning or other data or metadata associated with the video and assigns a trick play preference based on the user preferences. For a further explanation of examining various data or metadata associated with video see co pending application Ser. No. 12 457 428 filed on Jun. 10 2009 and which is incorporated herein by reference. The system may also examine the user s trick play history to determine scene preferences. For example a user which invokes fast forward over romantic scenes would indicate to the system that the user would not object to fast forwards on romantic content but would not desire rewinds. The system further examines user preferences and uses those preferences to find trick play preferences of others and maps them to the current content. The system then maps a preference to each video segment or scene. These preferences may include but are not limited to any of the following in any combination 

The map file preferences file is the mechanism by which preferences are communicated to other peers. In one embodiment the mapping file is passed on request as shown in . Alternatively a user s information profile preferences semantics history is shared with other members of the group so they generate the user s mapping file. However data size overhead and privacy concerns may favor the sharing of mapping files in some situations.

In a requesting user peer sends a pause request to another user peer . The other user peer denies the request and sends the requesting user peer the mapping file MF for future reference. In yet another embodiment the mapping files are all distributed up front to all the users peers for a merge function to generate one mapping file for the entire distributed network.

In a still further embodiment all the mapping files are passed to one peer node or remote service as shown in . In all the peer nodes and P1 Pn of the user peers 1 2 3 . . . n in the network generate mapping files MF1 MF2 MF3 . . . MFn and pass that to the service . The service may be a peer node in the distributed network such as the controlling node or a remote server. The service merges the mapping files and generates a single mapping file or master mapping file MFM for the entire network. The service passes the single merged mapping file MFM back to the distributed network peer nodes and P1 Pn. Each distributed network peer node and P1 Pn can then consult the network merged mapping file MFM before making a trick play request. These embodiments are discussed in more detail below with respect to .

The merged file MFM may be consulted before trick play is attempted. The merged file MFM may also be used to display to the users peers what upcoming trick play functions are allowed and who is blocking functions. Moreover the merged map file MFM may be created simply by taking a logical OR of the flags of the constituent map files either for each scene or for all scenes as a whole. Also rather than load the entire map file the peer nodes or master peer or central server or whatever does the trick play resolution may load the map file or merged map file piecewise into memory as the video playback progresses. The relevant piece of the map file may be determined by the current video playback offset.

Conflicts in trick play functions arise from users peers having different preferences. For example one user may want to allow fast forwards but not rewinds and another may allow rewinds but not fast forwards.

The resolutions may vary by video segment and the method for resolving may be encoded in the map file along with instructions to the peer nodes and P1 Pn.

Merged trick play files MFM may be sent to all peer nodes and P1 Pn in a distributed network. Peer nodes and P1 Pn enforce and advise on trick play limitations as indicated in the merged map file by at least one of blocking trick play functions which are not allowed according to map file rules by initiating a resolution sequence as indicated by the map file for example initiating a vote by displaying in the GUI e.g. a scrub bar at the bottom or sides of the screen chapter heading or other video segmentation the trick play rules in a graphical manner optionally along with users in the network which have interests in the trick play rules or by having the playback scrub bar show potential conflicts and resolution options. Even if a user s trick play action is forbidden by the map file or other users his own media player may be allowed to perform that trick play locally. The user may then be allowed an option of synchronizing with the other users later on in some manner. Other users may be notified that this user has performed a local trick play action and they may act on it if they want to for instance by going along with it.

Based on this analysis the peer nodes P1 P2 P3 construct trick play map files MF1 MF2 and MF3 respectively steps and describing their respective users trick play preferences as described in detail previously. The peer nodes then exchange their trick play map files MF1 MF2 and MF3 with each other so that each peer node has a copy of all other peers map files steps . Each peer node then combines the map files MF1 MF2 and MF3 to generate a merged map file MFM which contains the combined trick play preferences of all users steps .

The peer nodes then start playing the content steps possibly in response to a play event by one or more users or alternately when the peer nodes signal each other that they are ready. User of peer node P3 then generates a trick play event E1 step . Peer node P3 compares the trick play event E1 with the combined user preferences as described in the merged map file MFM at the current video playback offset step . In this case the peer node determines that the event E1 is not allowed by the merged map file MFM and hence proceeds to block that action step . Thus an unwanted trick play action is efficiently and speedily blocked. The peer node may display a message to its user explaining why the trick play action was not allowed. If the system is so configured it may allow the user to perform the trick play action locally without affecting the users of peer nodes P1 and P2 and let them synchronize at a later point.

Some time later peer node P2 receives a trick play action E2 from its user step . Peer Node P2 compares the trick play event E2 with the combined user preferences as described in the merged map file MFM at the current video playback offset step . In this case the trick play action is allowed. Hence peer node P2 propagates the trick play event E2 to the peer nodes P1 and P3 steps and . All peer nodes P1 P2 and P3 then perform the trick play action on the viewed content in a synchronized manner steps and .

Various techniques well known in the art may be employed to ensure that the distributed trick play actions are performed in a synchronized manner and that the resulting content playback at each peer is also synchronized. Note that peers P1 and P3 may compare the received trick play event with their own copies of the merged map file MFM as well as their own map files MF1 MF2 and MF3 before trusting P2 s message and performing the action not shown . This may be necessary to protect users from malicious peers or users spamming trick play actions.

Based on this analysis the peer nodes P1 P2 P3 construct trick play map files MF1 MF2 and MF3 respectively steps and describing their respective users trick play preferences as described in detail previously. The peer nodes P2 and P3 then forward their trick play map files MF2 and MF3 respectively to the master peer P1 steps . The master peer node P1 then combines the map files MF1 MF2 and MF3 to generate a merged map file MFM which contains the combined trick play preferences of all users steps . In addition to combining the map files the master peer may also include other preferences or profiles or assign higher priority to its own map file or enable its user to examine and edit the combined trick play preferences or any combination of these not shown . The master peer node P1 then sends back the merged map file to the other peers P2 and P3 so that each peer node has a copy of the merged map file MFM steps and .

The peer nodes then start playing the content steps possibly in response to a play event by one or more users or alternately when the peer nodes signal each other that they are ready. User of peer node P3 then generates a trick play event E1 step . Peer node P3 compares the trick play event E1 with the combined user preferences as described in the merged map file MFM at the current video playback offset step . In this case the peer node determines that the event E1 is not allowed by the merged map file MFM and hence proceeds to block that action step . Thus an unwanted trick play action is efficiently and speedily blocked. The peer node may display a message to its user explaining why the trick play action was not allowed. If the system is so configured it may allow the user to perform the trick play action locally without affecting the users of peer nodes P1 and P2 and let them synchronize at a later point.

Some time later peer node P2 receives a trick play action E2 from its user step . Peer node P2 compares the trick play event E2 with the combined user preferences as described in the merged map file MFM at the current video playback offset step . In this case the trick play action is allowed. Hence peer node P2 propagates the trick play event E2 to the peer nodes P1 and P3 steps and . All peer nodes P1 P2 and P3 then perform the trick play action on the viewed content in a synchronized manner steps and .

Various techniques well known in the art may be employed to ensure that the distributed trick play actions are performed in a synchronized manner and that the resulting content playback at each peer is also synchronized. Note that peers P1 and P3 may compare the received trick play event with their own copies of the merged map file MFM as well as their own map files MF1 MF2 and MF3 before trusting P2 s message and performing the action not shown . This may be necessary to protect users from malicious peers or users spamming trick play actions.

The user of peer node P1 initiates a distributed group viewing session with peer nodes P2 and P3 for example through a process of sending invitation messages steps and . Peers P1 P2 and P3 start the group viewing session steps and respectively which may include performing several preparatory operations such as setting up network connections downloading or distributing the content and so on. Next the peer nodes P1 P2 P3 analyze the content and content metadata of the video to be watched along with their respective users profiles to determine the users trick play preferences as described previously steps and .

Based on this analysis the peer nodes P1 P2 P3 construct trick play map files MF1 MF2 and MF3 respectively steps and describing their respective users trick play preferences as described in detail previously. The peer nodes P2 and P3 then forward their trick play map files MF2 and MF3 respectively to the master peer P1 steps . The master peer node P1 then combines the map files MF1 MF2 and MF3 to generate a merged map file MFM which contains the combined trick play preferences of all users steps . In addition to combining the map files the master peer may also include other preferences or profiles or assign higher priority to its own map file or enable its user to examine and edit the combined trick play preferences or any combination of these not shown . The master peer node P1 maintains the merged map file locally so that the slave peer nodes P2 and P3 do not have a copy of the merged map file MFM although optionally the master node may share the merged map file with the slave nodes not shown .

The peer nodes then start playing the content steps possibly in response to a play event by one or more users or alternately when the peer nodes signal each other that they are ready. The user of peer node P3 then generates a trick play event E1 step . Peer node P3 forwards the trick play event E1 to the master peer P1 step . The master peer P1 then compares the trick play event E1 with the combined user preferences as described in the merged map file MFM at the current video playback offset step . In this case the peer node P1 determines that the event E1 is not allowed by the merged map file MFM and hence proceeds to block that action step . Optionally it may send a response message informing P3 that the trick play event E1 was not allowed possibly along with an explanation not shown . Alternately peer node P3 may assume the lack of any response to mean that the event E1 was not allowed. The peer node P3 may display a message to its user explaining why the trick play action was not allowed. If the system is so configured it may allow the user to perform the trick play action locally without affecting the users of peer nodes P1 and P2 and let them synchronize at a later point.

Some time later peer node P2 receives a trick play action E2 from its user step . It also forwards the trick play event E2 to the master peer P1. The master peer P1 compares the trick play event E2 with the combined user preferences as described in the merged map file MFM at the current video playback offset step . In this case the trick play action is allowed. Hence the master peer node P1 propagates the trick. play event E2 to its slave peer nodes P2 and P3 steps and . All peer nodes P1 P2 and P3 then perform the trick play action on the viewed content in a synchronized manner steps and .

Various techniques well known in the art may be employed to ensure that the distributed trick play actions are performed in a synchronized manner and that the resulting content playback at each peer is also synchronized. Note that if the user of peer P1 generates a trick play action being the master peer it would not need to forward the event to any other peer but can check it against the merged map file locally. Note also that peers P2 and P3 may compare the received trick play event with their own map files MF2 and MF3 before trusting the master peer s message and performing the action not shown . This may be necessary to protect users from malicious peers or users spamming trick play actions.

Referring to the user of peer node P1 initiates a distributed group viewing session with peer nodes P2 and P3 for example through a process of sending invitation message to the central server CS step which forwards it to peers P2 and P3 steps and . Peers P1 P2 and P3 start the group viewing session steps and respectively which may include performing several preparatory operations such as setting up network connections downloading or distributing the content and so on. Next the peer nodes P1 P2 P3 analyze the content and content metadata of the video to be watched along with their respective users profiles to determine the users trick play preferences as described previously steps and .

Based on this analysis the peer nodes P1 P2 P3 construct trick play map files MF1 MF2 and MF3 respectively steps and describing their respective users trick play preferences as described in detail previously. The peer nodes P1 P2 and P3 then forward their trick play map files MF1 MF2 and MF3 respectively to the central server CS steps and . The central server CS then combines the map files MF1 MF2 and MF3 to generate a merged map file MFM which contains the combined trick play preferences of all users steps . In addition to combining the map files the server may also include other preferences or profiles such as from historical information of other viewing groups that may have previously viewed the same or similar content or enable the client peer node users to examine and edit the combined trick play preferences or any combination of these not shown . The central server CS maintains the merged map file locally so that the client peer nodes P1 P2 and P3 do not need a copy of the merged map file MFM although optionally the central server may share the merged map file with the client peer nodes not shown .

The peer nodes then start playing the content steps possibly in response to a play event by one or more users or alternately when the peer nodes signal each other that they are ready. The user of peer node P3 then generates a trick play event E1 step . Peer node P3 forwards the trick play event E1 to the central server CS step . The central server CS then compares the trick play event E1 with the combined user preferences as described in the merged map file MFM at the current video playback offset step . In this case the central server CS determines that the event E1 is not allowed by the merged map file MFM and hence proceeds to block that action step . Optionally it may send a response message informing P3 that the trick play event E1 was not allowed possibly along with an explanation not shown . Alternately peer node P3 may assume the lack of any response to mean that the event E1 was not allowed. The peer node P3 may display a message to its user explaining why the trick play action was not allowed. If the system is .so configured it may allow the user to perform the trick play action locally without affecting the users of peer nodes P1 and P2 and let them synchronize at a later point.

Some time later peer node P2 receives a trick play action E2 from its user step . It also forwards the trick play event E2 to the central server CS step . The central server CS compares the trick play event E2 with the combined user preferences as described in the merged map file MFM at the current video playback offset step . In this case the trick play action is allowed. Hence the central server CS propagates the trick play event E2 to all its client peer nodes P1 P2 and P3 steps and . All peer nodes P1 P2 and P3 then perform the trick play action on the viewed content in a synchronized manner steps and .

Various techniques well known in the art may be employed to ensure that the distributed trick play actions are performed in a synchronized manner and that the resulting content playback at each peer is also synchronized. Note also that peers P1 and P3 may compare the received trick play event with their own map files MF1 and MF3 before trusting the master peer s message and performing the action not shown . This may be necessary to protect users from malicious peers or users spamming trick play actions.

Note that the above configurations are exemplary embodiments and alternative embodiments combining various aspects of those described above may be possible. For instance map files may not be exchanged at all initially but on receiving trick play events from a peer node peer nodes may compare these events against their own map files and if not allowed may broadcast a failure message along with the relevant portion of the map file to the other peer nodes. Thus only portions of the map file where a conflict actually arises are exchanged. Also disallowed trick play actions in these examples are blocked by default and several of the alternative embodiments discussed previously such as user voting and so on have not been explicitly described but may be included to work with these embodiments.

The present invention has substantial opportunity for variation without departing from the spirit or scope of the present invention. For example while the embodiments discussed herein are directed to personal or in home playback the present invention is not limited thereto. Further while the examples refer to video segments or scenes the present invention is not limited thereto and other forms of media content are contemplated herein.

Those skilled in the art will recognize improvements and modifications to the preferred embodiments of the present invention. All such improvements and modifications are considered within the scope of the concepts disclosed herein and the claims that follow.

