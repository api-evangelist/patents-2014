---

title: Mapping universal plug and play discovered items to an SMB location
abstract: An arrangement is provided in which a Universal Plug and Play (UPnP) device exposes a service for mapping a UPnP discovered content item to a server message block (SMB) location. The service is arranged to expose an SMB share path to a user at a remote client using a UPnP protocol, The user is then enabled with access to the share via SMB to gain file access, write changes or exercise file level control of the discovered content item. Authentication is optionally utilized to verify that the user is authorized to receive the SMB share location from the service or to verify that the user is authorized to access the SMB share.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09407688&OS=09407688&RS=09407688
owner: MICROSOFT TECHNOLOGY LICENSING, LLC
number: 09407688
owner_city: Redmond
owner_country: US
publication_date: 20140115
---
This Application is a Continuation of and claims benefit from U.S. patent application Ser. No. 11 495 420 that was filed on Jul. 28 2006 and that is incorporated herein by reference in its entirety.

With the addition of device level Plug and Play PnP capabilities it became a great deal easier to setup configure and add peripherals to consumer electronic devices and personal computers PCs . Universal Plug and Play UPnP extends this simplicity to include the entire network enabling discovery and control of networked devices and services such as network attached printers Internet gateways and consumer electronics equipment. The UPnP networking protocols are promulgated by the UPnP Forum which is an industry initiative designed to enable simple and robust connectivity among stand alone devices and PCs from many different vendors.

UPnP is more than just a simple extension of the Plug and Play peripheral model. It is designed to support zero configuration invisible networking and automatic discovery for a breadth of device categories from a wide range of vendors. With UPnP a device can dynamically join a network obtain an IP internet protocol address convey its capabilities and learn about the presence and capabilities of other devices all automatically to thereby facilitate the construction of zero configuration networks. Devices can subsequently communicate with each other directly using peer to peer networking to access and share content.

The variety of devices that can benefit from a UPnP enabled network are large and include for example intelligent appliances wireless devices and PCs of all form factors. The scope of UPnP is large enough to encompass many existing and new applications in such areas as home automation and networking printing and imaging audio video entertainment kitchen appliances automobile networks and mobile device network among others.

UPnP is a distributed open network architecture that is independent of any particular operating system programming language or physical medium. However UPnP uses standard protocols such as TCP IP Transmission Control Protocol Internet Protocol HTTP Hypertext Transfer Protocol and XML eXtensible Markup Language enabling it to seamlessly fit into existing networks. Using such standardized protocols allows UPnP to benefit from interoperability as an inherent feature.

UPnP uses a content directory service that implements a set of functions to provide access to content items e.g. data files music software pictures video games etc. stored in a content repository on a local UPnP device to remote UPnP devices on the UPnP network. The function of a content directory service is to allow browsing and searching of the content items in the repository. Each content item that is referenced in the content directory service includes various information about that content including the transfer protocols and file formats that the local device can use to transfer the content items to a remote device. As with all UPnP services remote devices interact with the content directory service using Simple Object Abstraction Protocol SOAP calls using HTTP.

After the desired content item has been identified for example using a resource or tag in an XML document the remote device uses the transfer protocol information from the content directory service to match it with the capabilities of a media player in the remote device. Common transfer protocols include HTTP GET and RTSP RTP Real Time Streaming Protocol Real Time Transport protocol for example. Transferred content is then rendered by the remote device using another UPnP service the AV Transport Control Service or a non UPnP out of band protocol to control the flow of the content e.g. stop fast forward rewind pause etc. .

While UPnP performs very satisfactorily in many networking applications current implementations do not provide users of a UPnP device with file access to content items that are discovered on other UPnP devices connected to a network. That is a user is limited to only being able to see that a content item exists and perhaps make a request for read only consumption. No write changes to a discovered content item or file level control of the content item may be implemented in the existing UPnP environment.

An arrangement is provided in which a UPnP device exposes a service for mapping a UPnP discovered content item to a server message block SMB location. The service is arranged to expose an SMB share path to a requesting user at a remote client using a UPnP protocol. The user is then enabled with access to the share via the SMB protocol to gain file access write changes or exercise file level control of the discovered content item. Authentication is optionally utilized to verify that the user is authorized to receive the SMB share location from the service or to verify that the user is authorized to access the SMB share.

In various illustrative examples a content item is mapped to the most direct available SMB location for a particular user and file. Either an existing UPnP service is extended or a new UPnP service is utilized to expose the SMB location to a requesting user in response to a UPnP Browse or Search command through the use of an additional tag that is included in an XML formatted response to the requesting user.

Advantageously the present arrangement affords users and devices with greater access and control over content items that are discovered opera UPnP network.

Turning to the drawings where like numerals designate like components or elements is a pictorial representation of an illustrative home in which a variety of devices are coupled to a home network . In the den of the home a PC stores a family s photographs. A second PC is located in the living room and coupled to a big screen television . A game console is located in a bedroom . PC PC and game console are each coupled to home network which in this illustrative example is arranged as a UPnP network. UPnP networks may be arranged using a variety of network media including for example phone line power line Ethernet wireless RE radio frequency and IEEE 1394 Institute of Electrical and Electronic Engineers .

Using the present arrangement for mapping UPnP discovered items to an SMB location the family can gather in the living room and view the photographs stored on PC on the big screen television . Using PC the family is able to rate the photographs rotate them and even rename the photographs from the living room . These capabilities are enabled using the viewing properties of UPnP and HTTP while adding file operations over SMB in accordance with the present arrangement. An illustrative family photograph is stored on PC and rendered as an image A on a monitor coupled to PC image B on big screen television and image C on a monitor coupled to game console as shown in .

SMB is a network file sharing protocol at the application presentation layer in the OSI Open Systems Interconnection networking model. Accordingly SMB may run over multiple lower layer protocols including for example NetBIOS Network Basic Input Output System over TCP IP NetBEUI NetBIOS Extended User Interface or IPX SPX Internetwork Packet Exchange Sequenced Packet Exchange .

The set of message packets that defines a particular version of the SMB protocol is called a dialect. For example CIFS Common Internet File System refers to the SMB dialect that was first implemented in the Microsoft Windows NT operating system SMB and CIFS are also available on VMS Virtual Memory System several versions of Unix and other operating systems. All dialects of SMB including CIFS are usable in the present arrangement and the particular SMB version or dialect selected will depend on the specific requirements of an application of mapping UPnP discovered content. The term SMB as used herein is intended to apply to all such SMB versions or dialects.

Server device and client device are arranged with a MediaServer UPnP device and a MediaRenderer UPnP device respectively. UPnP devices are logical devices that do not have to reflect a particular physical set up. That is a physical device may host several logical UPnP devices and the particular number of UPnP devices selected and their arrangement will depend on the requirements of a particular application of UPnP discovered item mapping. In addition to MediaServer UPnP device server device includes a SMB server that is arranged to communicate with an SMB client in client device over a network as indicated by line .

MediaServer UPnP device includes a content directory service that is typically arranged as a Content Directory Service conforming to the definitions published by the UPnP Forum that is extended with additional functionalities described below. Alternatively content directory service is arranged as new service named for example SecureContentDirectoryService that is accessed by requesting clients using existing UPnP protocols.

MediaRenderer UPnP device includes a control point . In this illustrative example control point is a UPnP control point that is embedded in MediaRenderer UPnP device which invokes actions on services while providing any required input parameters and receiving any output parameters service responses and return values. MediaRenderer UPnP device is typically arranged as a MediaRenderer conforming to the definitions published by the UPnP Forum that instantiates the client device with the capability to render content items received from the server device . MediaRenderer UPnP device is commonly configured to expose a set of rendering controls in which the control point can control how a particular content item is rendered. In alternative arrangements of mapping UPnP discovered items to an SMB location MediaRenderer UPnP device is optionally utilized in cases where the server device and client device interact with each other using a non UPnP i.e. an out of band communication protocol. For example Windows Media Player and Roku SoundBridge may be used to render content items.

In the server client architecture control point accesses the content directory service over a UPnP network as indicated by line as shown in .

The XML document also includes a tag which identifies a URL for a WMA file that is accessed using HTTP GET for example as is provided by an existing UPnP MediaServer device. The URL is indicated in tag as

The illustrative method starts at block . At block the content directory service receives a Search or Browse command from a requesting user. An optional authentication step is performed at block . The authentication protocol is selected from one of Windows Negotiate Kerberos NTLM or the like in most applications.

The content directory service works to map the content item requested in the Search or Browse command at the method step shown in block to the best SMB path. By best it is generally meant as the most direct SMB path to which the particular requesting user has access.

The concept of best SMB path is further illustrated in which is a block diagram of an illustrative content repository showing the directory structure contained therein. Content repository is typically embodied as a memory such as a hard disk drive in a device such as PC in . As shown in directory structure includes three shares and . In this illustrative example there are three users of PC including an Admin Dad and Toby. A remote user wishing to access files in c home toby would thus have three potential ways of accessing the files through each of the respective shares and . Admin has access to each of the shares and while Dad has access to both the Home share and Toby share . Accordingly to identify the best SMB path to expose the UNC Universal Uniform Naming Convention path is determined based on the file contained in the request and the credentials of the requesting user.

If Toby requests the file in the Toby share the only available and best UNC path to expose is server toby filename.

In this example Option A is again the best option because it represents the most direct path. The media server service accordingly selects server toby filename as the best SMB path if Admin is the requesting user.

Returning to the media server service impersonates the requesting user using the requesting user s credentials at block . At block the media server service by using the local path to the requested file and acting as the impersonated requesting user calls a shell API application programming interface requesting the best SMB path to the requested file. If the shell API returns with a SMB path the media server service will include that path in a tag included in the XML response to the requesting user s Search or Browse command as indicated at block . Illustrative method ends at block .

Turning now to a diagram showing an illustrative message flow between the SMB server and an SMB client is presented. The illustrative messages comprise packets that are exchanged between SMB server and SMB client using the SMB protocol after the media server service exposes the SMB path to the requesting user as described above.

In this illustrative example the SMB client and SMB server first establish a fall duplex TCP connection. Then the SMB client builds and sends a NetBIOS session request packet over the TCP connection If the packet was formatted correctly the SMB server returns a packet that contains a message acknowledging that the session has been established. After this the SMB client sends a protocol negotiation message to SMB server to negotiate the particular SMB dialect used for the session.

The SMB server responds to the request from SMB client to identify the SMB dialect that is going to be used in the session. The returned message also includes an 8 byte random string that will be used as an challenge as part of an optional shared key authentication process. SMB client returns a response to the challenge in message which includes information regarding the capabilities of the SMB client . As noted above authentication is an optional process which is indicated in by the dashed lines.

If the SMB server accepts the response from the SMB client to the challenge a valid UID user ID is included in the message that is returned to the SMB client . If it is not accepted the SMB server will return an error code in this message and deny access.

The SMB client then requests access to the SMB share contained in the tag exposed by the media server service as described above. The access request message contains the fully specified path of the share in UNC format.

If access to the share is granted then the SMB server returns the 16 bit tree ID TID that corresponds to the share in message . If the share does not exist or the user has insufficient credentials to access the share the server will return an error code in message and deny access to the share.

SMB client requests the SMB server to open a file on the accessed share in message . This message contains the name of the file to be opened. For example referring again to the name of tile to be opened is JC ahorsenameblue.wma.

Returning to if access to the file is granted then the SMB server returns the file ID of the requested file in message . If the file does not exist or the user has insufficient credentials to access the file the SMB server will return an error code in message and deny access to the file.

SMB client requests the SMB server to variously open the file read data from the opened file and return this data to the SMB client write to the file or close the file in message . Other file operations including renaming deleting etc may also be captured by message . The file ID that is obtained by the client when the file was opened is included in this message in order to identify from which opened file the SMB server should perform the requested operation. Appropriate responses to message are contained in message from the SMB server to SMB client .

Although various illustrative arrangements and methods for mapping UPnP discovered items to an SMB location have been shown and described it should be understood that the scope of the claims appended hereto shall not necessarily be limited to the specific features arrangements or methods described. Instead the specific features arrangements or methods are disclosed as illustrative forms of mapping UPnP discovered items to an SMB location as more particularly claimed below.

