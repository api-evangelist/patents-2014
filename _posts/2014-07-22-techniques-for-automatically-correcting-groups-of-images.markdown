---

title: Techniques for automatically correcting groups of images
abstract: Disclosed are various embodiments for a computing device that receives input, from a user, selecting an area of a displayed image, where the area includes the blemish sought to be corrected by the user. The computing device identifies a spot pattern of the blemish to be corrected within the area and a context pattern of the displayed image. The computing device corrects the spot pattern of the blemish within the displayed image. The computing device identifies related images that have context patterns similar to the context pattern of the displayed image. The computing device automatically corrects similar instances of the spot pattern appearing within the related images.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09524540&OS=09524540&RS=09524540
owner: Adobe Systems Incorporated
number: 09524540
owner_city: San Jose
owner_country: US
publication_date: 20140722
---
Consumer image editing is on the rise with the advent of smartphones and tablets. People can capture photos or other images quickly and store them in remote cloud computing devices for access across various devices. Since consumers often capture photos on the go using their smartphones or other types of image capturing devices the photos are not as professional looking as consumers would like especially for photos to be shared or preserved for the future. Even though capturing moments as it happens is the essence of consumer photography image editing is often required in order to produce beautiful photographic moments.

Consumers are not professional photo editors and it can be intimidating for consumers to use professional image editing tools to correct the blemishes in the images. Moreover using image editing tools is generally manual in nature and can be time consuming to complete editing for just one photo. Given the nature of consumer photography there are typically a large number of photos taken during an event or time period. During that time if a blemish is present in one photo it will often be present in many or all of the photos taken at that time. Manually editing each of the photos individually to correct the blemish can be tedious and time consuming.

Various aspects of the present invention relate to automatically correcting a blemish in a collection of images. In one implementation a user provides input to a computing device selecting an area of a displayed image that includes the blemish sought to be corrected by the user. The computing device identifies a spot pattern of the blemish to be corrected within the area and a context pattern of the displayed image. The spot pattern identified by the computing device is editable by the user. The context pattern may be a multilevel context pattern comprising a plurality of component context patterns. The computing device corrects the spot pattern of the blemish within the displayed image and the user confirms the correction.

The computing device identifies a collection of related images from the image library that have context patterns similar to the context pattern of the displayed image. Based at least in part upon on the confirmation of the correction in the displayed image and any edits to the spot pattern by the user the computing device automatically corrects similar instances of the spot pattern appearing within the collection of related images. Correcting instances of the spot pattern appearing within the related images may be performed after the user confirms a preview of said correcting in the collection of related images.

Disclosed herein are various embodiments relating to automatically correcting a blemish in a collection of images. A user selects an area of a displayed image that contains a blemish which the user seeks to remove. The selected area acts as a hint from which the blemish in the displayed image and similar blemishes in other images can be automatically corrected. Various user actions such as confirmations of the corrections and any changes to the corrections are analyzed in order to improve future corrections resulting in fewer interventions and changes to the corrections by the user. In the following discussion a general description of the system and its components is provided followed by a discussion of the operation of the same.

As used herein a blemish is a mark or similar flaw that a user perceives to impair the appearance of an image. For example within a photographic image of a monument a user may consider birds that are shown in flight around the monument to be a blemish. However in other examples birds in flight may be the intended subject of the image and thus not considered a blemish. As disclosed herein a blemish may be distinguished from the desired image content based at least in part upon input from a user identifying an area of an image that contains the blemish. Similar blemishes present in other images are determined based on the similarity to the blemish previously identified by the user as well as the similarity of the context in which the blemish appears. Returning to the examples using birds images where birds in flight near a particular monument are a blemish can be distinguished from other images of birds as the intended subject using the context of the image namely the presence of the particular monument as context. Other examples of blemishes may include a red wine stain on a shirt litter on the ground a tattoo on an arm etc.

As used herein a spot pattern is the portion of the image representing a blemish that is sought to be corrected in the image. A user may initially identify an area of an image that contains a blemish. Within this area the portion of the image representing the blemish i.e. the spot pattern is automatically detected using the techniques disclosed herein. In some embodiments the spot pattern may be adjusted by the user in the event the automatically detected spot pattern does not precisely capture the blemish. The techniques for identifying similar blemishes in other images is carried out at least in part by comparing spot patterns of the blemishes. For example in an image of a group of people the face of one of the people may contain a scar that is considered to be a blemish. The pixels or other portion of the image representing the scar i.e. the blemish make up the spot pattern of the image. As another example a landscape captured in an image may be littered with debris such as papers bottles cans etc. The individual pieces of debris captured in the image may each be represented by a spot pattern made up of the corresponding pixels of the image.

As used herein a context pattern is a region of the image that is surrounding around or near the blemish and thus provides information about the context in which the blemish occurs in the image. For example in the image of the group of people discussed above the region of the image representing the face of the particular person containing the scar may be the context pattern. In some instances the context pattern may be a multilevel context pattern that includes various component context patterns. Each of the component context patterns of a given multilevel context pattern are different regions from the image that each contain all or a portion of the spot pattern. For example in the image captured of a monument along with birds in flight discussed above the component context patterns for the image may include a full shot of the monument that also includes all of the birds in the image a cropped subsection of the image that includes all of the birds along with any portions of the monument within the subsection a different cropped subsection of the image that includes one or more of the birds along with some portion of the monument within the subsection etc.

Disclosed herein are various embodiments relating to automatically correcting a blemish in a collection of images. In an exemplary embodiment a user selects an area of a displayed image that contains a blemish which the user seeks to remove. The selected area acts as a hint from which a spot pattern representing the blemish can be automatically detected. In addition a context pattern representing a context in which the blemish occurs in the image is identified. The user is presented with a preview of the image that includes an automatic correction applied to the spot pattern. If the user approves the automatic correction the corrected image is stored. Alternatively the user may adjust the spot pattern and or correction applied to the blemish i.e. spot pattern in the event the previewed correction is not satisfactory. The spot pattern context pattern and any changes made by the user are stored in a correction history.

Thereafter other images are examined in order to identify similar spot patterns appearing within similar context patterns. The user is presented with a preview of the other images that include an automatic correction applied to the similar spot patterns identified in the other images. For each of the automatic corrections approved by the user the corresponding corrected image is stored. For each of the automatic corrections rejected by the user the user can reject making any correction or the user can adjust the spot pattern and or correction of the blemish in the event the previewed correction is not satisfactory. The spot patterns and context patterns of the other images approvals and rejections of corrections and any changes made by the user are stored in a correction history. The correction history is used to adapt the identification of similar blemishes in other images and the corrections to be applied to the images thereby allowing the automatic correction operations to learn from previous activities based on approvals rejections and changes by the user.

With reference to shown is an illustrative networked environment according to various embodiments. The networked environment includes a computing environment and a client device which are in data communication with each other via a network . The network includes for example the Internet intranets extranets wide area networks WANs local area networks LANs wired networks wireless networks or other suitable networks etc. or any combination of two or more such networks. For example such networks may comprise satellite networks cable networks Ethernet networks and other types of networks. Although the functionality described herein is shown in the context of the networked environment other implementations are possible such as implementing the functionality in a single computing device e.g. desktop computer or mobile device as a plug in or auxiliary feature of another service executed in a computing device and or in arrangements of computing devices other than those shown in .

The computing environment may comprise for example a server computer or any other system providing computing capability. Alternatively the computing environment may employ a plurality of computing devices that may be arranged for example in one or more server banks or computer banks or other arrangements. Such computing devices may be located in a single installation or may be distributed among many different geographical locations. For example the computing environment may include a plurality of computing devices that together may comprise a hosted computing resource a grid computing resource and or any other distributed computing arrangement. In some cases the computing environment may correspond to an elastic computing resource where the allotted capacity of processing network storage or other computing related resources may vary over time.

Various applications and or other functionality may be executed in the computing environment according to various embodiments. Also various data is stored in a data store that is accessible to the computing environment . The data store may be representative of a plurality of data stores as can be appreciated. The data stored in the data store for example is associated with the operation of the various applications and or functional entities described below.

The components executed on the computing environment for example include an image correction service and other applications services processes systems engines or functionality not discussed in detail herein. The image correction service is executed to automatically correct a particular blemish present in a group of images based in part upon a user identifying the blemish to be removed in one image and potentially other image correction history.

The data stored in the data store includes for example image library correction history user data and potentially other data. The image library includes images associated with various users of the image correction service metadata associated with the images etc. The images can be stored in various formats such as joint photographic experts group JPEG graphics interchange format GIF bitmap raw tagged image file format TIFF and or other image formats as can be appreciated. The metadata for an image may include an identifier for the image capture device used capture settings used e.g. flash shutter speed etc. geographic location geolocation of the capture time date of capture thumbnail images previous versions of the image and or other possible metadata. In some implementations one or more of the images may be references e.g. URLs to images stored external to the data store .

The correction history includes a history of each user s actions associated with the corrections undertaken by the image correction service . For example the correction history may include identifiers of the images in which a user specified a blemish the area s of the image s specified by the user as containing the blemish any changes by the user made during the automatic correction operations acceptance and or rejection by the user of the automatically corrected images a history of the changes made to the images and or other possible historical data.

The user data includes various data associated with users of the image correction service and or who have images stored in the image library . The user data may include user credentials identifiers of images stored by the user identifiers of images in which the user appears preferences and or other possible data.

The client is representative of a plurality of client devices that may be coupled to the network . The client may comprise for example a processor based system such as a computer system. Such a computer system may be embodied in the form of a desktop computer a laptop computer personal digital assistants cellular telephones smartphones set top boxes music players web pads tablet computer systems game consoles electronic book readers or other devices with like capability. The client may include a display . The display may comprise for example one or more devices such as liquid crystal display LCD displays gas plasma based flat panel displays organic light emitting diode OLED displays electrophoretic ink E ink displays LCD projectors or other types of display devices etc.

The client may be configured to execute various applications such as a client application and or other applications. The client application may be executed in a client for example to access network content served up by the computing environment and or other servers thereby rendering a user interface on the display . To this end the client application may comprise for example a browser a dedicated application etc. and the user interface may comprise a network content page an application screen etc. The client may be configured to execute applications beyond the client application such as for example email applications social networking applications word processors spreadsheets and or other applications.

Next a general description of the operation of the various components of the networked environment is provided. To begin a user operating the client employs the client application to establish a communication session with the image correction service . The communication session may be carried out using various protocols such as for example hypertext transfer protocol HTTP simple object access protocol SOAP representational state transfer REST user datagram protocol UDP transmission control protocol TCP and or other protocols for communicating data over the network . In some implementations the user is authenticated to the image correction service using one or more user credentials.

Thereafter the user selects from the user interface an image having a blemish to be corrected such as shown in . In some embodiments the selected image may be chosen from the preexisting images from the image library that are associated with the user uploaded from the client through the user interface and or obtained from other possible sources. As illustrated in once the image is selected the user then selects an area of the image that contains the blemish that is sought to be corrected such as an area of a face that contains a scar. In some embodiments the area selected by the user may be all or a significant portion of the image.

The image correction service determines the spot pattern for the blemish in the area using a noise detection algorithm and or other possible techniques. For example using a noise detection algorithm in conjunction with an auto highlighting algorithm a spot pattern of a blemish can be identified within the user defined area based on differences in the noise characteristics of the blemish from other regions of the area. The noise characteristics can be identified based upon the degree of variation in saturation contrast brightness etc. in the user defined area of the image.

In addition the image correction service determines the context pattern for the region of the image in which the blemish appears. For example in the spot pattern is the scar and the context pattern is the face in which the scar appears. The context pattern may be identified using face detection algorithms edge detection algorithms and or similar operations as can be appreciated. For example using an edge detection algorithm the context pattern may be identified based on the arrangement of edges in a region of the image where the spot pattern is located. An edge can be identified based upon the organization of points in the image at which image brightness has a discontinuity. Although this particular example in illustrates detection of a scar on the face of a person detection of other types of blemishes in other types of contexts are also possible examples of which are discussed later in the present disclosure.

Subsequently the image correction service may preview the corrected image to the user in order to confirm that the correction operations are performed as expected. In some implementations the preview may allow the user to edit the spot pattern of the blemish to be corrected edit the corrections made to the spot pattern and or other possibilities. The spot pattern correction may be carried out using various algorithms such as Content Aware Fill technology in Adobe Photoshop available from Adobe Systems Inc. of San Jose Calif. which will determine a replacement for a selected area of an image based on the surrounding area of the image.

Once the user confirms the corrections made to the selected image image correction service may store the spot pattern and context pattern of the image as well as any changes made by the user to the correction history . The corrected image is stored to the image library to the client and or to other possible locations.

Subsequently the image correction service prompts the user to determine if other images should be examined in order to identify and correct similar spot patterns i.e. similar blemishes appearing within the other images that have similar context patterns. If the user chooses to examine the other images the image correction service may begin examining the other images associated with the user that are specified in the image library . For example other images that the user may have stored in the image library and elsewhere will be examined in order to find a similar context pattern e.g. a similar face having a similar spot pattern e.g. facial scar .

In some embodiments the examination of other images may be carried out in an order based on the temporal context geographic location context and or other characteristics of the original selected image. For example if the image the user originally selected to correct was captured on Jan. 1 2014 the image correction service may begin examining other images of a proximate capture time and date to the original image based on the presumption that images from a similar time are more likely to exhibit a similar blemish. Likewise the image correction service may begin examining other images of a proximate geographic location to the original image based on the presumption that images from a similar location are more likely to exhibit a similar blemish.

As shown in the user interface for the image correction service then presents other images found to have a spot pattern within a context pattern similar to the corresponding spot pattern and context pattern of the originally selected image. Similarity of the patterns can be determined based upon pattern shapes such as can be performed by face matching algorithms and or other object matching techniques as can be appreciated. For these detected images the image correction service may preview corrections to those images in order to confirm that the correction operations are performed as desired. The corrections made by the image correction service to each of these detected images may be tailored based on the correction history which captured changes made by the user to the past automatic corrections of other images. These past changes made by the user may include for example changes to the area of the spot pattern changes to the fill applied to the spot pattern etc. In addition the preview may allow the user to further adjust characteristics of the correction applied to each of these images a c detected by the image correction service .

Once the user confirms the corrections made to the detected images the image correction service may store the similar spot patterns and similar context patterns of the these images as well as any changes made by the user to the correction history . The corrected images may then be stored to the image library to the client and or to other possible locations.

In some embodiments images subsequently added by the user to the image library may be examined in order to detect similar spot patterns and context patterns to images for which a correction has been previously applied. In the event similar spot patterns and context patterns are detected the image correction service may prompt the user to determine if the newly added image should be corrected as well. For example the image correction service may have previously corrected various images then existing in the image library of a particular person having a scar on her face. If at a later time the user transfers an additional image of the person to the image library the image correction service can recognize their face in the image and examine it to determine if the scar is present in the new image. If it is present the image correction service may prompt the user to correct this new image as had been previously done for other images of the person. Similarly a new image may be examined at the time the image is captured for example by a smart phone camera using a local or remotely accessed image correction service.

Throughout an illustrative example of correcting a blemish on a face has been used to describe the operation of the image correction service . However as can be appreciated correcting of other objects or blemishes that may be present in different areas of an image i.e. other than a face are also possible.

Referring next to shown is a flowchart that provides one example of the operation of a portion of the image correction service according to various embodiments. It is understood that the flowchart of provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the portion of the image correction service as described herein. As an alternative the flowchart of may be viewed as depicting an example of elements of a method implemented in the computing environment according to one or more embodiments. The steps depicted in the flowchart of may be implemented once a user has been authenticated to the image correction service and has selected an image to which a correction should be applied to a blemish.

Beginning with block the user then selects one or more areas of the image containing a blemish that is sought to be corrected. For example in the areas were selected by the user that capture portions of the image of the Taj Mahal that include birds which the user wishes to remove from the image i.e. blemishes . Next in block of the image correction service determines the context pattern for the region of the image in which the blemish appears. The context pattern may be identified using edge detection algorithms face detection algorithms and or similar operations as can be appreciated. In an embodiment the context pattern may be automatically identified as an area surrounding the blemish within a predetermined radius or bounding area of a fixed size. The size of the context pattern may be based on the size of the user selected blemish area. For example the context area may be a circle oval or square having double triple etc. the size of the user selected blemish area and may be centered on the center of the user selected blemish area.

In some embodiments the image correction service may determine that a multilevel context pattern should be used for a given image. The determination that a multilevel context pattern is needed can be based upon an edge detection algorithm determining that a threshold number of edges are present in the original image i.e. having too many edges a user preference defined in the user data and or other possible criteria as can be appreciated. By identifying various component context patterns for the image that include one or more of the areas selected by the user the image correction service can improve the likelihood of finding other images with a similar context pattern to at least one of the component context patterns.

For example returning to if the context pattern used is as large as the captured image of the Taj Mahal itself then it is likely that only other images of the Taj Mahal from the same perspective would be considered to have a similar context pattern thus resulting in automatic correction of few other images. Therefore the image correction service may generate a multilevel context pattern from the image such as shown in . In the exemplary component context patterns of the multilevel context pattern are shown representing various views derived from the original image that each capture one or more of the areas identified by the user. The number of component context patterns created from an image can depend upon the number of areas identified by the user the number of edges present in each of the component context patterns a user preference defined in the user data and or other possible criteria as can be appreciated.

Each of the views of the component context patterns may be a different cropped region from the image that capture some or all of the areas while also capturing different portions of the context of the image in which these captured areas appear. Continuing the example the component context pattern is a full shot of the monument in the image that also includes all of the birds i.e. the blemishes in the image the component context pattern is a cropped and enlarged subsection of the image that includes all of the birds along with the dome portion of the monument the component context pattern is a different cropped and enlarged subsection of the image that includes only one of the birds along with another part of the dome of the monument etc. By identifying various component context patterns for the image that include one or more of the areas selected by the user the image correction service can improve the likelihood of finding other images with a similar context pattern to at least one of the various component context patterns as opposed to a single context pattern.

Then in block of image correction service determines the spot pattern for the blemish in the area selected by the user such as the area using a noise detection algorithm or other possible techniques.

Subsequently in block the image correction service may preview the corrected image to the user in order to allow the user to confirm that the correction operations are performed as expected.

Next in block the image correction service determines whether the user accepts or confirms the corrections made to the image.

If the user seeks to make corrections in block the image correction service may allow the user to edit the spot pattern of the blemish to be corrected edit the corrections made to the spot pattern and or other possibilities. Thereafter execution of the image correction service returns to block . Alternatively if the user confirms the corrections made to the image in block the image correction service may store the spot pattern and context pattern of the image including a multilevel context pattern as well as any changes made by the user to the correction history . Then in block the image correction service may implement the corrections confirmed by the user and store the corrected image to the image library to the client and or to other possible locations.

Subsequently in block the image correction service prompts the user to determine if other images should be examined in order to identify and correct similar spot patterns i.e. the blemish appearing within the other images that have similar context patterns. If the user chooses not to search for any additional images to be corrected then this portion of the execution of the image processing service may end as shown.

Alternatively if the user chooses to examine the other images then the flow chart continues in the flow chart of . Beginning with block in the image correction service may begin examining the other images associated with the user that are specified in the image library or elsewhere. This may include for example other images that the user may have stored in the image library images stored on the client other computing devices accessible via the network and or other locations as can be appreciated. The available images will be examined in order to find a similar spot pattern e.g. birds in flight in a region of the image having a similar context pattern e.g. resembling one or more of the component context patterns .

In some embodiments the examination of other images may be carried out based on the temporal context geographic location context and or other characteristics reported in the metadata of the original selected image. For example if the image the user originally selected to correct was captured on Jan. 1 2014 the image correction service may begin examining other images of a proximate capture time and date to the original image based on the presumption that images from a similar time are more likely to exhibit a similar blemish. Likewise the image correction service may begin examining other images of a proximate geographic location to the original image based on the presumption that images from a similar location are more likely to exhibit a similar blemish. Thereafter the search of images may be expanded to other locations times dates etc. as may be configured by the user.

Then in block the user interface for the image correction service then presents other images found to have a spot pattern in a region having a context pattern similar to the spot pattern and context pattern of the originally selected image . For these detected images the image correction service may preview corrections to them in order to confirm that the correction operations are performed as expected. The corrections made by the image correction service to each of these detected images may be tailored based on the correction history which captured any changes made by the user to the past automatic corrections of the original image and potentially other images. These past changes made by the user may include for example changes to the area of the spot pattern changes to the fill applied to the spot pattern etc.

Next in block the image correction service determines whether the user accepts or confirms the corrections made to the detected images. If the user seeks to make correction in block the image correction service may allow the user to edit the spot pattern of the blemish to be corrected edit the corrections made to the spot pattern remove an image from the set of detected images and or other possibilities. Thereafter execution of the image correction service returns to block .

Alternatively if the user confirms the corrections made to the image in block the image correction service may store the similar spot patterns and similar context patterns of the detected image any changes made by the user metadata associated with the images and or other possible data to the correction history . Then in block the image correction service may implement the corrections confirmed by the user and store the corrected images to the image library to the client and or to other possible locations. Next in block the image correction service determines whether additional images should be examined for correction. These additional images may include images that will be added to the image library in the future existing images in the image library that may now be identified based recent corrections performed by the image correction service and or other possible images. Additional images may be detected and analyzed for blemishes as images are created on or received at a new device such as a laptop camera or smartphone or when images are added to a collection of images. For example a social networking website may provide an image analysis function that is applied to all images that a user uploads to the social networking website so that a user does not have to repeatedly delete the same mole from every self image.

In shown are detected images that were among other images similarly matching one or more of the component context patterns Using metadata for the detected images and the original image the image correction service can determine that despite the similarity with one or more of the component context patterns the image capture locations are of different landmarks. However if corrections were applied to the images and confirmed by the user the image correction service may infer that the spot and context patterns present in the images should be added to the existing collection of spot and context pattern sets used to examine other images within the image library or elsewhere. These other images can include images that would not otherwise be a similarity match to one or more of the component context patterns but that are a similarity match to the context patterns present in 

Continuing if the user chooses to examine other images for automatic correction then execution of the image correction service may return to block . Alternatively if the user chooses not to examine additional images this portion of the execution of the image correction service ends as shown.

With reference to shown is a schematic block diagram of the computing environment according to an embodiment of the present disclosure. The computing environment includes one or more computing devices . Each computing device includes at least one processor circuit for example having a processor a memory and a network interface all of which are coupled to a local interface . To this end each computing device may comprise for example at least one server computer or like device. The local interface may comprise for example a data bus with an accompanying address control bus or other bus structure as can be appreciated.

Stored in the memory are both data and several components that are executable by the processor . In particular stored in the memory and executable by the processor is the image correction service and potentially other applications. Also stored in the memory may be a data store and other data. In addition an operating system may be stored in the memory and executable by the processor .

It is understood that there may be other applications that are stored in the memory and are executable by the processor as can be appreciated. Where any component discussed herein is implemented in the form of software any one of a number of programming languages may be employed such as for example C C C Objective C Java JavaScript Perl PHP Visual Basic Python Ruby Flash or other programming languages.

A number of software components are stored in the memory and are executable by the processor . In this respect the term executable means a program file that is in a form that can ultimately be run by the processor . Examples of executable programs may be for example a compiled program that can be translated into machine code in a format that can be loaded into a random access portion of the memory and run by the processor source code that may be expressed in proper format such as object code that is capable of being loaded into a random access portion of the memory and executed by the processor or source code that may be interpreted by another executable program to generate instructions in a random access portion of the memory to be executed by the processor etc. An executable program may be stored in any portion or component of the memory including for example random access memory RAM read only memory ROM hard drive solid state drive USB flash drive memory card optical disc such as compact disc CD or digital versatile disc DVD floppy disk magnetic tape or other memory components.

The memory is defined herein as including both volatile and nonvolatile memory and data storage components. Volatile components are those that do not retain data values upon loss of power. Nonvolatile components are those that retain data upon a loss of power. Thus the memory may comprise for example random access memory RAM read only memory ROM hard disk drives solid state drives USB flash drives memory cards accessed via a memory card reader floppy disks accessed via an associated floppy disk drive optical discs accessed via an optical disc drive magnetic tapes accessed via an appropriate tape drive and or other memory components or a combination of any two or more of these memory components. In addition the RAM may comprise for example static random access memory SRAM dynamic random access memory DRAM or magnetic random access memory MRAM and other such devices. The ROM may comprise for example a programmable read only memory PROM an erasable programmable read only memory EPROM an electrically erasable programmable read only memory EEPROM or other like memory device.

Also the processor may represent multiple processors and or multiple processor cores and the memory may represent multiple memories that operate in parallel processing circuits respectively. In such a case the local interface may be an appropriate network that facilitates communication between any two of the multiple processors between any processor and any of the memories or between any two of the memories etc. The local interface may comprise additional systems designed to coordinate this communication including for example performing load balancing. The processor may be of electrical or of some other available construction.

Although the image correction service and other various systems described herein may be embodied in software or code executed by general purpose hardware as discussed above as an alternative the same may also be embodied in dedicated hardware or a combination of software general purpose hardware and dedicated hardware. If embodied in dedicated hardware each can be implemented as a circuit or state machine that employs any one of or a combination of a number of technologies. These technologies may include but are not limited to discrete logic circuits having logic gates for implementing various logic functions upon an application of one or more data signals application specific integrated circuits ASICs having appropriate logic gates field programmable gate arrays FPGAs or other components etc. Such technologies are generally well known by those skilled in the art and consequently are not described in detail herein.

The flowcharts of show the functionality and operation of an implementation of portions of the image correction service . If embodied in software each block may represent a module segment or portion of code that comprises program instructions to implement the specified logical function s . The program instructions may be embodied in the form of source code that comprises human readable statements written in a programming language or machine code that comprises numerical instructions recognizable by a suitable execution system such as a processor in a computer system or other system. The machine code may be converted from the source code etc. If embodied in hardware each block may represent a circuit or a number of interconnected circuits to implement the specified logical function s .

Although the flowcharts of show a specific order of execution it is understood that the order of execution may differ from that which is depicted. For example the order of execution of two or more blocks may be scrambled relative to the order shown. Also two or more blocks shown in succession in may be executed concurrently or with partial concurrence. Further in some embodiments one or more of the blocks shown in may be skipped or omitted. In addition any number of counters state variables warning semaphores or messages might be added to the logical flow described herein for purposes of enhanced utility accounting performance measurement or providing troubleshooting aids etc. It is understood that all such variations are within the scope of the present disclosure.

Also any logic or application described herein including the image correction service that comprises software or code can be embodied in any non transitory computer readable medium for use by or in connection with an instruction execution system such as for example a processor in a computer system or other system. In this sense the logic may comprise for example statements including instructions and declarations that can be fetched from the computer readable medium and executed by the instruction execution system. In the context of the present disclosure a computer readable medium can be any medium that can contain store or maintain the logic or application described herein for use by or in connection with the instruction execution system.

The computer readable medium can comprise any one of many physical media such as for example magnetic optical or semiconductor media. More specific examples of a suitable computer readable medium would include but are not limited to magnetic tapes magnetic floppy diskettes magnetic hard drives memory cards solid state drives USB flash drives or optical discs. Also the computer readable medium may be a random access memory RAM including for example static random access memory SRAM and dynamic random access memory DRAM or magnetic random access memory MRAM . In addition the computer readable medium may be a read only memory ROM a programmable read only memory PROM an erasable programmable read only memory EPROM an electrically erasable programmable read only memory EEPROM or other type of memory device.

Further any logic or application described herein including the image correction service may be implemented and structured in a variety of ways. For example one or more applications described may be implemented as modules or components of a single application. Further one or more applications described herein may be executed in shared or separate computing devices or a combination thereof. For example a plurality of the applications described herein may execute in the same computing device or in multiple computing devices in the same computing environment . Additionally it is understood that terms such as application service system engine module and so on may be interchangeable and are not intended to be limiting.

Disjunctive language such as the phrase at least one of X Y or Z unless specifically stated otherwise is otherwise understood with the context as used in general to present that an item term etc. may be either X Y or Z or any combination thereof e.g. X Y and or Z . Thus such disjunctive language is not generally intended to and should not imply that certain embodiments require at least one of X at least one of Y or at least one of Z to each be present.

It should be emphasized that the above described embodiments of the present disclosure are merely possible examples of implementations set forth for a clear understanding of the principles of the disclosure. Many variations and modifications may be made to the above described embodiment s without departing substantially from the spirit and principles of the disclosure. All such modifications and variations are intended to be included herein within the scope of this disclosure and protected by the following claims.

