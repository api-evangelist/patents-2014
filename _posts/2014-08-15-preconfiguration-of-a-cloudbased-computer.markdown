---

title: Pre-configuration of a cloud-based computer
abstract: Various example embodiments are disclosed herein. According to an example embodiment, a method may include receiving by a second computer a customization application, the customization application including a control panel to establish user preferences for a user account of the cloud-based service and/or system settings for the first computer; receiving by the second computer an input to the customization application to establish one or more user preferences for the user account and/or one or more system settings for the first computer; and transmitting from the second computer to a server associated with the cloud-based service the one or more user preferences and a username for the user account and/or the system settings for the first computer.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09059910&OS=09059910&RS=09059910
owner: Google Inc.
number: 09059910
owner_city: Mountain View
owner_country: US
publication_date: 20140815
---
This application is a continuation of U.S. application Ser. No. 13 246 859 filed on Sep. 27 2011 which in turn is a continuation of application Ser. No. 12 904 154 filed on Oct. 13 2010 now U.S. Pat. No. 8 645 511 which claims priority to U.S. Provisional Application No. 61 360 318 filed on Jun. 30 2010 and U.S. Provisional Application No. 61 251 292 filed on Oct. 13 2009 the disclosures of which are incorporated by reference herein in their entirety.

With the creation of the world wide web and high speed computer networks the paradigm for personal computer usage has dramatically shifted. In the past users would primarily use their personal computers to run programs and store and manipulate data that was located on their local hard drive. Today more and more users are storing more and more data on remote data servers. For example many users today store their personal email and contact information and even other information on a remote web server.

According to an example embodiment a method is provided for pre customizing a first computer for a user. The method may include receiving by a second computer a customization application to establish user preferences for a user account of a cloud based service and to establish system preferences for the first computer receiving by the second computer an input to the customization application to establish one or more user preferences for the user account and one or more system settings for the first computer and transmitting from the second computer to a server the one or more user preferences one or more system settings a username for the user account and a computer ID that identifies the first computer.

According to another example embodiment a method may be provided for pre customizing a first computer for a user. The method may include transmitting from a server to a second computer a customization application to establish one or more user preferences for a user account of a cloud based service and one or more system settings for the first computer and receiving by the server from the second computer the one or more user preferences the one or more system settings and a username for the user account.

According to another example embodiment a computer program product is provided that is tangibly embodied on a computer readable storage medium having executable instructions stored thereon the instructions being executable to cause a second computer to receive by the second computer a customization application to establish user preferences for a user account of a cloud based service and to establish system preferences for a first computer receive by the second computer an input to the customization application to establish one or more user preferences for the user account and one or more system settings for the first computer and transmit from the second computer to a server the one or more user preferences one or more system settings a username for the user account and a computer ID that identifies the first computer.

According to another example embodiment a computer program product is provided that is tangibly embodied on a computer readable storage medium having executable instructions stored thereon the instructions being executable to cause a server to transmit from the server to a second computer a customization application to establish one or more user preferences for a user account of a cloud based service and one or more system settings for a first computer receive by the server from the second computer the one or more user preferences the one or more system settings and a username for the user account store the received user preferences and system settings receive from the first computer a log on request including the username for the user account and transmit the one or more user preferences and the one or more system settings to the first computer.

According to another example embodiment a server may be provided that is configured to assist in pre customizing a first computer. The server may include at least one processor at least one memory including computer program code the at least one memory and the computer program code configured to with the at least one processor cause the server to perform the following prior to a first log on to a cloud based service by a user via the first computer transmit from the server to the second computer a customization application to establish one or more user preferences for a user account of a cloud based service and one or more system settings for the first computer and receive by the server from the second computer the one or more user preferences the one or more system settings a computer ID that identifies the first computer and a username for the user account.

According to an example embodiment a second computer is provided that may be configured to assist in pre customizing a first computer for a user. The second computer may include at least one processor and at least one memory including computer program code the at least one memory and the computer program code configured to with the at least one processor cause the second computer to receive by the second computer a customization application to establish user preferences for a user account of a cloud based service and to establish system preferences for the first computer receive by the second computer an input to the customization application to establish one or more user preferences for the user account and one or more system settings for the first computer and transmit from the second computer to a server the one or more user preferences one or more system settings a username for the user account and a computer ID that identifies the first computer.

According to an example embodiment a method may be provided for pre customizing a first computer for a user. The method may include transmitting a request to a server to deliver a customization application receiving the customization application from the server and running it on a second computer wherein the customization application is configured to identify a file on the second computer to be made available to the user when the user logs onto a cloud based service using the first computer and transmit information to the server to make the identified user file available to the user on the first computer when the user logs onto the cloud based service using the first computer.

According to an example embodiment a method may be provided for pre customizing a first computer for a user. The method may include transmitting from a server to a user on a second computer a customization application wherein the customization application is configured to identify a user file on the second computer to be made available to the user when the user first logs onto a cloud based service via the first computer and to compute a checksum for the identified user file receiving a name and checksum for an identified user file from the second computer determining whether the identified user file is stored on the server by searching a database for a record that relates the received checksum to a file stored on the server sending a request to the second computer to upload the identified user file to the server when no record is found in the database that relates the received checksum to a file stored on the server receiving the identified user file from the second computer and storing the identified user file on the server and storing the name received checksum and information to locate the identified user file on the server in a database record that relates the user to the name received checksum and information to locate the identified user file on the server.

According to another example embodiment an apparatus may include at least one processor and at least one memory including computer program code the at least one memory and the computer program code configured to with the at least one processor cause a server to transmit from the server to a user on a second computer a customization application wherein the customization application is configured to identify a user file on the second computer to be made available to the user when the user first logs onto a cloud based service via the first computer and to compute a checksum for the identified user file receive a name and checksum for an identified user file from the second computer determine whether the identified user file is stored on the server by searching a database for a record that relates the received checksum to a file stored on the server send a request to the second computer to upload the identified user file to the server when no record is found in the database that relates the received checksum to a file stored on the server receive the identified user file from the second computer and storing the identified user file on the server and store the name received checksum and information to locate the identified user file on the server in a database record that relates the user to the name received checksum and information to locate the identified user file on the server.

According to an example embodiment a computer program product may be provided that is tangibly embodied on a computer readable storage medium having executable instructions stored thereon the instructions being executable to cause a server to transmit from the server to a user on a second computer a customization application wherein the customization application is configured to identify a user file on the second computer to be made available to the user when the user first logs onto a cloud based service via the first computer and to compute a checksum for the identified user file receive a name and checksum for an identified user file from the second computer determine whether the identified user file is stored on the server by searching a database for a record that relates the received checksum to a file stored on the server send a request to the second computer to upload the identified user file to the server when no record is found in the database that relates the received checksum to a file stored on the server receive the identified user file from the second computer and storing the identified user file on the server and store the name received checksum and information to locate the identified user file on the server in a database record that relates the user to the name received checksum and information to locate the identified user file on the server.

Computers and may each be any type of computer or computing device such as a desktop computer laptop computer netbook tablet computer mobile computing device such as a cell phone PDA or personal digital assistant or other mobile or handheld or wireless computing device or any other computer computing device. Computer may include a display and a keyboard and a pointing device such as a track ball mouse touch pad or other pointing device . Keyboard may be any type of keyboard such as a standard keyboard or a touchscreen or touch sensitive display as examples. In the case of a touchscreen display the keyboard may integrated on the display.

Similarly computer may include a display a keypad and may include other input output devices not shown such as a pointing device. Display may be any type of display such as a touchscreen for example. Although not shown in each of computers and may include memory to store data and software computer instructions a processor for executing software computer instructions and providing overall control to the computer. Computers and may each include an operating system OS stored in memory and executed at startup for example. Computer may execute or run a web browser and computer may execute or run a web browser for example.

According to an example embodiment server which may include a processor and memory may run one or more applications such as application to provide a cloud based service or a cloud based computing service where server and or other servers associated with the cloud based service may provide resources such as software data media e.g. video audio files and other information and management of such resources to computers or computing devices via the Internet or other network for example.

According to an example embodiment computing resources such as application programs and file storage may be remotely provided by the cloud based service e.g. by cloud based server to a computer over the Internet typically through a web browser running on the computer. For example a computer e.g. may include a web browser e.g. or running applications e.g. Java applets or other applications which may include application programming interfaces API s to more sophisticated applications such as application running on remote servers that provide the cloud based service such as server as an example embodiment.

In an example embodiment through a web browser or the user can use a computer e.g. either computer or to log on to the cloud based service e.g. by the web browser communicating with server of the cloud based service . After logging on to the cloud based service the user may create edit save and delete files on the remote server e.g. server and may establish set up or change edit various options such as user preferences and or system settings and or may receive or download software e.g. operating system or other software or software updates various data files or media files the user preferences and or system settings and other information previously stored on the cloud based service e.g. server via the remote application program running on the cloud based server .

In an example embodiment each user may have more than one computer and different system settings may be used for each computer. For example a user may have a first computer for a first office location a second computer for a second office location each having specific attributes and or local printer settings for the specific location or office etc. . The user may also have a laptop and a cell phone. Each of these may have a set of system settings associated with this user.

According to an example embodiment a computer or which may be referred to as a cloud optimized computer platform or a cloud based computer or a computer configured as a cloud based computer may be configured to run a lightweight web based operating system. The operating system which can be downloadable and updatable from the cloud based service e.g. from cloud based server or other server associated with the cloud based service via the web can start up the computer launch a web browser and get a user onto the web. The computer once logged on or logged in to the cloud based service may for example receive or support web based user applications e.g. that may be run through the web browser and allow users of the computer to store and access data files and multimedia materials and access software or applications on remote servers located within the cloud based service e.g. within a network cloud .

An example embodiment will now be described for logging onto a computer used for cloud based computing service or logging onto a cloud based service. Upon booting or running the operating system at startup the computer or may prompt the user to enter information to authenticate the user and receive the user authentication information. In one implementation the authentication information may include a username and password and the computer may store a list of authentic usernames and passwords in a local database. The computer verifies the user s authenticity by locating the received username in the database and verifying that the received password is identical to the password that is associated with the received username in the database. To provide more security one or more of the username and password can be stored in the database as a cryptographic hash. For example the username can be stored as plaintext while the password can be stored as a weak cryptographic hash.

In an example embodiment if the computer fails to authenticate the user e.g. by failing to find the username in the database or by finding a difference between the hash of the password received from the user and the hashed password stored in the database the computer denies the user access and prompts the user to reenter the authentication information. In some implementations the computer may limit the number of login attempts and may prevent a user from accessing the computer after a given number of failed login attempts. In other implementations the computer may grant a user limited access rights even after the user has failed to authenticate himself or herself Such limited access rights can be for example only the right to browse information on the World Wide Web but not access to the cloud based service for example.

In one implementation the computer configured for cloud based service e.g. computer or may create and maintain the database of usernames and passwords which may be hashed on a local hard drive. In an alternative implementation the computer or may create upload and or maintain the database of usernames and passwords on a remote cloud based server e.g. server or other server associated with the cloud based service. In the latter implementation the computer may launch a web based application to communicate the received username and password or hashed values of the received username and password to the cloud based server . The web based application running on the computer may also communicate a unique ID or a computer ID to the server e.g. to identify the computer that is logging on to the cloud based service. The cloud based server may then authenticate the information e.g. as described above and may return an authentication decision back to the browser e.g. or through the web based application. The computer or may then authorize or grant the user access to the cloud based service based on the authentication decision made by the cloud based server . Based on the decision by server to grant the user access to the cloud based service the user of computer or may then access e.g. via web browser or data files software application media etc. from the cloud based service via one or more remote servers associated with the cloud based service.

In an example embodiment of a computer optimized for cloud based computing e.g. computers or a main application run by the computer may be the web browser. In one implementation the operating system may automatically launch a web browser upon authenticating a user and granting the user access to cloud based service. The operating system may also grant the web browser access to system level resources that are usually reserved for system level applications. Such resources may include for example account and user access rights power management rights display setting and management rights network setting and preference rights media access rights sound setting and management rights keyboard and mouse setting rights printer setup and install rights and rights to update and modify the operating system. The user can also use the launched web browser to run web based applications from a plurality of web servers via the cloud based service. When a web based application needs to alter a system setting for a cloud based computer it can be granted or denied the right to do so by the user or by the web browser.

In one implementation a computer optimized for cloud based computing or a cloud based computer which may log in to a cloud based service e.g. computer or may provide or display a user interface such as a control panel to allow a user to adjust user preferences and or system settings for example or other options. The control panel may be provided e.g. as a web based application. This control panel or other user interface may be stored locally on computer or and then displayed or may be downloaded to computer from cloud based server and displayed to the user. A user may input one or more user preferences and or system settings via the control panel which may then be uploaded and stored on cloud based server for example.

According to an example embodiment system settings may refer to settings that are specific to a particular computer regardless of who or what user is using that computer or regardless of what user is logging on to the cloud based service using that computer. Thus while different users for different user accounts may use a computer to log in or log on to the cloud based service the system settings may be specific to such computer. System settings may include one or more settings that may be set or fixed for a computer system settings may be associated with a computer computer ID . System settings may include settings such as for example network connections or preference e.g. order of network connections printer preferences user account and access rights display settings mouse or pointing device settings etc. These are merely some examples of settings or items that may be provided as system settings e.g. settings that may be computer specific or associated with a specific computer ID . In an example embodiment system settings may only be applied to a computer and or changed edited by the owner of the computer.

By contrast according to an example embodiment user preferences may be settings that are specific to a particular user account or user regardless of what computer the user uses to log in to the cloud based service. User preferences may include for example such things as keyboard and mouse settings favorite applications e.g. to be made available to the user and favorite websites e.g. web browser bookmarks account usernames and passwords e.g. password for an Email account music playlists language preferences screensaver and or desktop background image s and the like. For example user preferences may include an email account username password e.g. so that the user may be automatically logged in to such email account upon log on to the cloud based service browser favorites bookmarks e.g. so that such favorites may be automatically loaded into one or more preferred web browsers made available to the user or downloaded to the computer after then user log on to the cloud based service and a desktop or background image e.g. a family photo that is downloaded from the cloud based service after log on to such service and then received by the computer and displayed as a desktop background image .

These are merely some examples of user preferences and system settings. However various settings or preferences may be provided as either a system setting or a user preference. In one example embodiment a user may also be able to select an item or option and then map or assign the item option to be either a user preference associated with a user account or a system setting associated with a specific computer or computer ID unique ID . This may provide an additional degree of flexibility or configurability where a user may be able to associate certain items or options with either the user account or a specific computer.

In another example embodiment default settings may be initially set by the cloud based service where according to the default settings a first set of items options may be assigned or mapped to user preferences associated with a specific username or user account while a second set of items may be assigned or mapped to system settings associated with a specific computer ID . In an example embodiment using a control panel or other user interface a user may then be able to re assign one or more system settings as a user preference and may be able to assign one or more user preferences as system settings for example.

Thus for example the user may log in to the cloud based service e.g. providing username password and a computer ID . The cloud based service e.g. cloud based server may retrieve from a database of the cloud based server the system settings for the computer previously uploaded to the cloud based service for the computer ID based on the received computer ID and the user preferences e.g. based on the username for the user account . The user preferences and system settings may then be downloaded by the computer from the cloud based service and then applied e.g. system settings may be applied to the computer and the user preferences may be applied for example so long as the user is logged on to the cloud based service.

As shown in in one implementation control panel may include a Network button a Display button a Sound button a Power button an Accounts button a Security button a Language button a Keyboard button a Mouse button a Printer button a Date and Time button and an Updates button . The Network button allows a user to setup a network connection and make configuration changes the Display button allows a user to select display settings such as screen resolution and color management preferences the Sound button allows a user to setup and configure audio input and output devices including adjusting volume and equalization the Power button allows a user to control power management settings the Accounts button allows a user to setup and control accounts the Security button allows a user to setup and configure access rights and other security system settings such as firewalls spam filters and virus protection the Language button allows the user to configure the computer for regional language settings the Keyboard button allows the user to setup keyboard layouts and settings such as the functionality of control keys the Mouse button allows a user to setup mouse user preferences such as sensitivity and single double click parameters the Printer button allows the user to setup and configure printers the Date and Time button allows the user to select time zones and change the date and time and the Updates button allows the user to configure auto update parameters such as the frequency with which auto updates are received or processed or whether system reboots are done automatically or at scheduled times after an auto update is received. The buttons shown in are but only example of a user interface tool through which the user can edit system settings and user preferences. Other user interface tools e.g. drop down lists slider bars text input fields etc. can also be used.

In one implementation Control Panel is the only application that is granted access to the system level API s . This minimizes or at least may decrease the chance that a malicious web based application will gain access to the computer platform s system resources and settings. In this implementation any web based application wishing to change or access any system level resource must do so by launching or prompting a user to launch the Control Panel and manually make the desired changes or by requesting the user to grant access to the needed system resources. In alternate implementations one or more web applications may be automatically granted access to one or more system resources through API s . For example if Web App were a trusted media viewing application it may be granted automatic access to a Display setting API in order to change the screen saver settings while a user is watching a streaming movie. This will prevent the screen saver from launching while the movie is playing. Once the video stream has ended the media viewing application can reset the screen saver settings to their default values.

The remote server can include a database that stores information such as usernames passwords and user preferences for a plurality of users user accounts and system settings and unique IDs or computer IDs for a plurality of computers. The remote server can authenticate the information that was sent to it by computer e.g. in a two step process. First the remote server can determine whether the user has a valid account by looking for the username and password sent by computer in the database . If the remote server cannot confirm that the user has a valid account either because it cannot find the username in database or because the password associated with a username in database does not match the password sent by computer it can send information to computer either denying the user access to computer or granting the user only limited access to computer or remote server . If the user is granted only limited access to computer or remote server computer may allow the user to only use certain default applications such as a web browser.

If however the remote server confirms the authentication information sent by computer it then determines whether the user is accessing his or her account from the user s own computer or from another computer . It can do this by comparing the unique ID UID1 sent by computer to the unique ID that is associated with the user s account in database . If the two unique IDs match the remote server knows or this indicates that the user is accessing his or her account from his or her own computer or from a computer assigned to the username . The server may then send computer the user s system settings SYS1 A associated with UID1 computer user preferences associated with the user s account or username and one or more authorization tokens that allow the user to automatically access one or more remote web services or accounts without having to separately log into those services or accounts. In one implementation authorization tokens may be provided in the form of cookies that are valid so long as the user is logged into computer . Upon receiving the system settings A associated with UID1 computer user preferences associated with the use account username and authorization tokens computer applies them. For example computer may apply user preferences and authorization tokens to launch and automatically log into various applications such as for example Email an email application Talk a chat application and Docs a document or word processing application and to load the web browser with the CNN homepage. The system settings A may be applied to set one or more system settings for computer e.g. printers network connections etc.

In the Email Talk or chat and Docs or word processing application applications are shown as a series of stacked panels. A panel may be a user information element having all the attributes of a browser tab but that can be docked to the side of the display in a Panel Bar . Panels can contain applications notifications browser histories and user generated content such as pop up windows.

Referring again to a user may instead log onto his or her user account via a computer that is not owned by the user or not assigned to or associated with the user account . As described above the computer sends authentication information to the server to authenticate the user including a username password and a unique ID or computer ID UID2 that uniquely identifies computer . The remote server will again try to authenticate the information sent by computer in a two step process for example. First the remote server may determine whether the user has a valid account by looking for the username and password sent by computer in the database . If the remote server determines the user does not have a valid account it can again send information to computer either denying the user access to computer or granting the user only limited access rights to computer or remote server cloud based service. If however the remote server is able to authenticate the information sent by computer it may optionally again determine whether the user is accessing his or her account from a computer owned by the user or from another computer . Again in one implementation this may be done by comparing the unique ID or computer ID UID2 sent by the computer to the unique ID that is associated with the user s account in database . If the two unique ID s fail to match the remote server knows the user is accessing his or her account from a computer that is not owned by the user. The remote server may then send computer the user s preferences and one or more authorization tokens that allow the user to automatically access one or more remote web services or accounts without having to separately log into those services or accounts. However it will not send computer the user s system settings that are assigned to the computer which may only be applied to the computer that is owned by the user. In other words system settings may be provided to a computer having a UID or computer ID associated with or assigned to the system settings. Upon receiving the user preferences and authorization tokens computer applies them.

In an example embodiment server may also send computer the system settings SYS2 assigned to or associated with the unique ID or computer ID UID2 that identifies computer . Computer may receive the system settings SYS2 and may apply the system settings SYS2 to such computer. Thus in one example embodiment at least in some cases a user experience on a computer that is logged in to a cloud based service may be provided by a combination of the user preferences for or associated with the user user account and the system preferences for or associated with the computer from which the user has logged in to the cloud based service for example regardless whether the user owns the computer or not. Thus the user preferences may be consistent for the same for the user or user account regardless of the computer that is used to log in to the cloud based service. On the other hand according to an example embodiment the system settings may change from computer to computer even for the same user user account since according to an example embodiment there may be system settings provided for each computer having a unique ID or computer ID .

As with computer computer may apply the user s preferences and authorization tokens to launch and automatically log into Email an email application Talk or chat application and Docs or word processing application applications and to load the web browser with the CNN homepage. As shown in by storing a user s preferences in a cloud based server and downloading the user s preferences whenever a user logs onto a cloud optimized computer platform or the look feel and functionality of the user s computer experience may be nearly the same regardless of whether the user logs onto a computer that is owned by the user or another computer that is not owned by the user. There may be some differences in the functionality or features or operation of computers and and those differences may be due at least in part to the differences in the system settings of computer SYS1 and computer SYS2 .

In one example embodiment system settings may be downloaded to a computer only when the computer ID or UID is associated with the user account username e.g. computer owned or assigned to the user . Thus in such an example embodiment system settings e.g. SYS1 are only downloaded to a computer that is owned by the user or downloaded to a computer having a UID associated with the user account username when the user logs into computer and system settings e.g. SYS2 are not downloaded to a computer that is not owned by the user or not downloaded to a computer having a UID not associated with the username user account when the user logs into computer . In such case system settings stored locally on computer may be used or applied to computer for example. Differences in system settings can be in the form of different network connections different default printers and different user account and access rights as examples or differences in other system settings for computers and for example.

In another example embodiment after a user logs in to a cloud based service using a computer the computer used to log in receives from the cloud based service both user preferences associated with or assigned to the username user account and the system settings e.g. SYS1 for computer and SYS2 for computer associated with or assigned to the computer regardless whether such computer is owned by or associated with the user according to an example embodiment. In some embodiments some computers may be owned by or associated with a single user who may establish customized system settings for each such computer. For example a user may frequently use multiple networked computers and designate a preferred printer for each of those computers. In some embodiments each computer that a user logs into and establishes user preferences or system settings for may thereafter be designated a computer that the user owns or is associated with. 

According to an example embodiment a computer may be pre customized or pre configured for a cloud based service As discussed above a computer configured or optimized for cloud based computing service may allow a user to enjoy a very similar look feel and computing experience when logged onto the cloud based service either via his own computer or via a third party computer since at least the user preferences will be the same for the user regardless of which computer is used to log on to the cloud based service. When a customer orders or purchases such a computer he or she can pre customize or pre configure the computer for the cloud based service e.g. before he or she first uses it or before the user receives the computer or before the user first logs on to the cloud based service using the new computer.

In an example embodiment a computer may be pre customized through a web based customization application which may be downloaded from the cloud based service. This customization application may be particularly useful for example for those users who switch from a non cloud based computing to a computer configured for cloud based service or configured for cloud based computing or for those purchasing or obtaining ordering a new computer either for themselves or someone else and the user would like to pre customize or pre configure such computer e.g. prior to using such computer to log in to the cloud based service.

In one example embodiment the pre customization or pre configuration of such computer may include for example using a customization application to upload to the cloud based service data files media files and or other files that will be made available to the user user account when the user logs on to the cloud based service using the new computer and system settings for the new computer to be associated with the unique ID or computer ID for the new computer and user preferences for the user account and or creating a new user account with the cloud based service if not already created where such user preferences and system settings for the new computer will be downloaded to and applied by the new computer when the user logs on e.g. first logs on to the cloud based service using the new computer.

A computer is shown and may include data files media files and other files stored locally thereon e.g. stored on a local hard disk drive . In an example embodiment a new either new or at least new for this user computer may be obtained ordered or purchased and the computer may be pre customized or pre configured for a cloud based service before use e.g. before the computer is delivered or before a user first logs on to the cloud based service using the computer etc. The pre customization or pre configuring of the computer may occur as a step during the purchase or ordering of the computer or may occur after the purchase or ordering of the computer or may occur at another time as examples. The pre customization or pre configuring of the computer may include providing the user with access to data files media files and other files . The web based customization application may include a data upload application that will identify and store on cloud based server any data files media files and or other files that are currently stored on the hard drive of the user s current computer . These files may be made available to the user when the user logs in to the cloud based service via his her new computer for example. The customization application may identify files stored on user s current computer that are also stored on the cloud based server e.g. to avoid storing duplicate copies of such files on server . For each file whether uploaded or already stored on server that will be made available to the user server may store a pointer to the storage location of the file in a database containing information about the user s accounts and privileges.

The user s web browser on computer may receive and run the customization application . If the user of the new computer does not already have an account with the cloud based service an account with the cloud based service may be established and a username and password may be assigned to the user. If the user of the new computer already has an account with the cloud based service then the user s existing username and password may be used. Thereafter the user can be prompted to choose and store customization options for his or her new computer and or for the user s user account. Such customization options can include the various system settings for the new computer e.g. system settings associated with or assigned to computer UID3 and the user preferences associated with the user account which may then be stored in database of cloud based server . The customization options may for example be selected through the customization application which may include a user interface such as a web based control panel as shown in .

As shown in the computer may receive the customization application . As discussed customization options which may include user preferences PREF3 for the user account and or system settings SYS3 for computer may then be input via control panel for example and uploaded to cloud based server . Also the unique ID or computer ID UID3 and the username password for the user of computer may also be uploaded or transmitted to the server e.g. so that the cloud based server may associate or assign the user preferences PREF3 to the user account and associate or assign the system settings SYS3 to the UID3 computer ID or unique ID for computer . As described in greater detail below data and or files e.g. data files media files and possibly other files may also be uploaded from computer to cloud based server so that such files and data may be available to the new computer when it logs in to the cloud based service as described in greater detail below.

In addition to using a web based application or control panel to choose select and store customization options e.g. system settings and or user preferences the customization application may include a web based data upload application that will identify and store on a cloud based server any data files media files e.g. audio music files video files and pictures or other files e.g. such as contacts list bookmarks or Web favorites or user documents that are currently stored on the hard drive of the user s current computer . These may be identified by the upload program of the customization application so that such files may be made available to the user when the user logs in to the cloud based service via his her new computer .

For example the web based data upload application can scan the hard drive of the user s current computer for games music videos photos and other media content and for any Word PowerPoint Excel spreadsheets or other user generated documents that the user has stored on his or her current computer. After identifying any media content and or documents stored on the hard drive of the user s current computer the web based application may automatically upload such files data and content to server or may prompt the user to upload those files to server so they can be immediately accessed from the user s new cloud based computer e.g. the first time the user logs onto the cloud based service for example

In one implementation the web application may compute a checksum or other file identifier such as a hash of such file of any file the user wishes to upload to server and send the checksum to server before it uploads the file. Server will then search a storage database for a file having the same checksum to determine if it already stores a copy of the file e.g. an mp3 version of a popular song. According to an example embodiment a hash checksum or other identifier may be calculated and uploaded to server for general or non personal files e.g. movies songs etc. to determine if such files are already stored on the server. If the server determines it already stores a copy of the file the server can simply store a pointer to that copy in a database containing information about the user s accounts and privileges. The server can then notify the user that he or she has been granted access to the copy of the file stored on the server so that the user does not have to upload the file from his or her current computer . If the server is not currently storing a copy of the file the user wishes to upload the server will ask the user to upload the file. When the file is uploaded the server will store it and again place a pointer to the storage location of the file in the database containing information about the user s accounts and privileges.

After the user orders e.g. purchases and receives the new computer the user may then log on to the cloud based service for the first time using the new computer e.g. by transmitting his authentication information including for example his username and password as well as the unique ID or computer ID UID3 for computer . After being authenticated by server the server may send computer the system settings SYS3 for computer system settings assigned to UID3 and the user preferences PREF3 for the user account. The server may also transmit to computer or at least make available to computer the data files media files and other files which were uploaded from computer for example as shown in . A user may then access and use e.g. via his or her new computer the system settings user preferences and data files and media files that were previously uploaded and stored by the server or cloud based service.

Therefore a user may purchase or obtain a computer and may pre customize the computer. Such pre customization may include for example configuring system settings for the new computer and user preferences for the user account and uploading files to be made available to the new computer when the user logs on to the cloud based service the first time using the new computer .

Referring to a log on request may be received by the server from the first computer . The log on request may include the username for the user account and may also include a password and the computer ID of the first computer. The server may then authenticate the user log on information e.g. username and password and may then transmit the user preferences for the user account and the system settings e.g. user specific system settings for the first computer to the first computer . The first computer may then apply the received user preferences for the user account and may apply the system settings to the first computer while the user is logged on to the cloud based service. User files which may have been previously uploaded to the server for the user account may also be made available to or sent to the user of the first computer.

With reference to the server may determine whether each file is currently stored on the server or stored on one or more servers associated with the cloud based service . For example the server may compare the received checksum s to one or more checksums of files already stored on the server or cloud based service. If a match is found this may indicate that the identified file is currently stored on the server cloud based service and it may be unnecessary to store another copy of such file. If the file is already stored on the server cloud based service the server may send a reply to the second computer indicating that the file is already stored on the server cloud based service. There is no need for the second computer to upload the file to the server where such file is already stored on the server cloud based service. If a match is not found the identified file is not currently stored on the server cloud based service the server may send a request to the second computer to upload send the identified user file to the server . The server may receive and store the user file in a server within the cloud based service and this file may be made available to the user account. In one example embodiment the server may store a name of a file a received checksum identifier and location information that identifies the location of the file.

Computing device includes a processor memory a storage device a high speed interface connecting to memory and high speed expansion ports and a low speed interface connecting to low speed bus and storage device . Each of the components and are interconnected using various busses and may be mounted on a common motherboard or in other manners as appropriate. The processor can process instructions for execution within the computing device including instructions stored in the memory or on the storage device to display graphical information for a GUI on an external input output device such as display coupled to high speed interface . In other implementations multiple processors and or multiple buses may be used as appropriate along with multiple memories and types of memory. Also multiple computing devices may be connected with each device providing portions of the necessary operations e.g. as a server bank a group of blade servers or a multi processor system .

The memory stores information within the computing device . In one implementation the memory is a volatile memory unit or units. In another implementation the memory is a non volatile memory unit or units. The memory may also be another form of computer readable medium such as a magnetic or optical disk.

The storage device is capable of providing mass storage for the computing device . In one implementation the storage device may be or contain a computer readable medium such as a floppy disk device a hard disk device an optical disk device or a tape device a flash memory or other similar solid state memory device or an array of devices including devices in a storage area network or other configurations. A computer program product can be tangibly embodied in an information carrier. The computer program product may also contain instructions that when executed perform one or more methods such as those described above. The information carrier is a computer or machine readable medium such as the memory the storage device or memory on processor .

The high speed controller manages bandwidth intensive operations for the computing device while the low speed controller manages lower bandwidth intensive operations. Such allocation of functions is exemplary only. In one implementation the high speed controller is coupled to memory display e.g. through a graphics processor or accelerator and to high speed expansion ports which may accept various expansion cards not shown . In the implementation low speed controller is coupled to storage device and low speed expansion port . The low speed expansion port which may include various communication ports e.g. USB Bluetooth Ethernet wireless Ethernet may be coupled to one or more input output devices such as a keyboard a pointing device a scanner or a networking device such as a switch or router e.g. through a network adapter.

The computing device may be implemented in a number of different forms as shown in the figure. For example it may be implemented as a standard server or multiple times in a group of such servers. It may also be implemented as part of a rack server system . In addition it may be implemented in a personal computer such as a laptop computer . Alternatively components from computing device may be combined with other components in a mobile device not shown such as device . Each of such devices may contain one or more of computing device and an entire system may be made up of multiple computing devices communicating with each other.

Computing device includes a processor memory and an input output device such as a display a communication interface and a transceiver among other components. The device may also be provided with a storage device such as a microdrive or other device to provide additional storage. Each of the components and are interconnected using various buses and several of the components may be mounted on a common motherboard or in other manners as appropriate.

The processor can execute instructions within the computing device including instructions stored in the memory . The processor may be implemented as a chipset of chips that include separate and multiple analog and digital processors. The processor may provide for example for coordination of the other components of the device such as control of user interfaces applications run by device and wireless communication by device .

Processor may communicate with a user through control interface and display interface coupled to a display . The display or screen may be for example a TFT LCD Thin Film Transistor Liquid Crystal Display or an OLED Organic Light Emitting Diode display or other appropriate display technology. The display interface may comprise appropriate circuitry for driving the display to present graphical and other information to a user. The control interface may receive commands from a user and convert them for submission to the processor . In addition an external interface may be provide in communication with processor so as to enable near area communication of device with other devices. External interface may provide for example for wired communication in some implementations or for wireless communication in other implementations and multiple interfaces may also be used.

The memory stores information within the computing device . The memory can be implemented as one or more of a computer readable medium or media a volatile memory unit or units or a non volatile memory unit or units. Expansion memory may also be provided and connected to device through expansion interface which may include for example a SIMM Single In Line Memory Module card interface. Such expansion memory may provide extra storage space for device or may also store applications or other information for device . Specifically expansion memory may include instructions to carry out or supplement the processes described above and may include secure information also. Thus for example expansion memory may be provide as a security module for device and may be programmed with instructions that permit secure use of device . In addition secure applications may be provided via the SIMM cards along with additional information such as placing identifying information on the SIMM card in a non hackable manner.

The memory may include for example flash memory and or NVRAM memory as discussed below. In one implementation a computer program product is tangibly embodied in an information carrier. The computer program product contains instructions that when executed perform one or more methods such as those described above. The information carrier is a computer or machine readable medium such as the memory expansion memory or memory on processor that may be received for example over transceiver or external interface .

Device may communicate wirelessly through communication interface which may include digital signal processing circuitry where necessary. Communication interface may provide for communications under various modes or protocols such as GSM voice calls SMS EMS or MMS messaging CDMA TDMA PDC WCDMA CDMA2000 or GPRS among others. Such communication may occur for example through radio frequency transceiver . In addition short range communication may occur such as using a Bluetooth WiFi or other such transceiver not shown . In addition GPS Global Positioning system receiver module may provide additional navigation and location related wireless data to device which may be used as appropriate by applications running on device .

Device may also communicate audibly using audio codec which may receive spoken information from a user and convert it to usable digital information. Audio codec may likewise generate audible sound for a user such as through a speaker e.g. in a handset of device . Such sound may include sound from voice telephone calls may include recorded sound e.g. voice messages music files etc. and may also include sound generated by applications operating on device .

The computing device may be implemented in a number of different forms as shown in the figure. For example it may be implemented as a cellular telephone . It may also be implemented as part of a smart phone personal digital assistant or other similar mobile device.

Thus various implementations of the systems and techniques described here can be realized in digital electronic circuitry integrated circuitry specially designed ASICs application specific integrated circuits computer hardware firmware software and or combinations thereof. These various implementations can include implementation in one or more computer programs that are executable and or interpretable on a programmable system including at least one programmable processor which may be special or general purpose coupled to receive data and instructions from and to transmit data and instructions to a storage system at least one input device and at least one output device.

These computer programs also known as programs software software applications or code include machine instructions for a programmable processor and can be implemented in a high level procedural and or object oriented programming language and or in assembly machine language. As used herein the terms machine readable medium computer readable medium refers to any computer program product apparatus and or device e.g. magnetic discs optical disks memory Programmable Logic Devices PLDs used to provide machine instructions and or data to a programmable processor including a machine readable medium that receives machine instructions as a machine readable signal. The term machine readable signal refers to any signal used to provide machine instructions and or data to a programmable processor.

To provide for interaction with a user the systems and techniques described here can be implemented on a computer having a display device e.g. a CRT cathode ray tube or LCD liquid crystal display monitor for displaying information to the user and a keyboard and a pointing device e.g. a mouse or a trackball by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well for example feedback provided to the user can be any form of sensory feedback e.g. visual feedback auditory feedback or tactile feedback and input from the user can be received in any form including acoustic speech or tactile input.

The systems and techniques described here can be implemented in a computing system that includes a back end component e.g. as a data server or that includes a middleware component e.g. an application server or that includes a front end component e.g. a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here or any combination of such back end middleware or front end components. The components of the system can be interconnected by any form or medium of digital data communication e.g. a communication network . Examples of communication networks include a local area network LAN a wide area network WAN and the Internet.

The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.

In addition the logic flows depicted in the figures do not require the particular order shown or sequential order to achieve desirable results. In addition other steps may be provided or steps may be eliminated from the described flows and other components may be added to or removed from the described systems. Accordingly other embodiments are within the scope of the following claims.

It will be appreciated that the above embodiments that have been described in particular detail are merely example or possible embodiments and that there are many other combinations additions or alternatives that may be included.

Also the particular naming of the components capitalization of terms the attributes data structures or any other programming or structural aspect is not mandatory or significant and the mechanisms that implement the invention or its features may have different names formats or protocols. Further the system may be implemented via a combination of hardware and software as described or entirely in hardware elements. Also the particular division of functionality between the various system components described herein is merely exemplary and not mandatory functions performed by a single system component may instead be performed by multiple components and functions performed by multiple components may instead performed by a single component.

Some portions of above description present features in terms of algorithms and symbolic representations of operations on information. These algorithmic descriptions and representations may be used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. These operations while described functionally or logically are understood to be implemented by computer programs. Furthermore it has also proven convenient at times to refer to these arrangements of operations as modules or by functional names without loss of generality.

Unless specifically stated otherwise as apparent from the above discussion it is appreciated that throughout the description discussions utilizing terms such as processing or computing or calculating or determining or displaying or providing or the like refer to the action and processes of a computer system or similar electronic computing device that manipulates and transforms data represented as physical electronic quantities within the computer system memories or registers or other such information storage transmission or display devices.

A number of embodiments have been described above. Nevertheless it will be understood that various modifications may be made without departing from the spirit and scope of the invention. For example the logic flows depicted in the figures do not necessarily require the particular order shown or sequential order to achieve desirable results. In addition other steps may be provided or eliminated from the described flows and other components may be added to or removed from the described systems without departing from the scope of the invention. Accordingly other embodiments are within the scope of the following claims.

