---

title: Method and apparatus for a scoring service for security threat management
abstract: A method and system for providing a security threat scoring service to identify and prioritize potential security threats to an online service. The method and system include determining security threat patterns, comparing traffic to the online system with the security threat patterns, and identifying portions of the traffic as a potential security threat. The method and system include assigning a threat score to the potential security threat, and providing the threat score to the online service to enable the online service to secure against the potential security threat.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09342690&OS=09342690&RS=09342690
owner: Intuit Inc.
number: 09342690
owner_city: Mountain View
owner_country: US
publication_date: 20140530
---
Developers and online service providers have to consider security threats while developing and providing online services to users. For example if users information is compromised through a particular online service the users personal information may be used to steal or hijack the users identity i.e. identity theft. Although a stolen identity can lead to monetary losses at least as significant is the fact that the victims of identity theft i.e. the users are subject to feeling vulnerable and may associate their vulnerability with the online service provider. As an example when a large U.S. retailer forfeited over 100 million shoppers bank credit card information to hackers in 2013 the retailer was immediately subject to losses of confidence by both its customers and its investors. Hence inattention to security threats can affect the short term and long term success of a company e.g. an online service provider in a marketplace.

The quantity of potential security threats in existence can be overwhelming for both service providers and the developers that maintain the operations of the online services. What is needed is a method and system for providing a security threat scoring service to identify and prioritize potential security threats for service providers and developers.

In accordance with one embodiment a method and system for providing a threat scoring service for security threat management may include determining with a computing system security threat patterns by monitoring first traffic between the online service and a test program. The first traffic may include requests for information transmitted to the online service from the test program. The security threat patterns may be determined by recording patterns associated with the first traffic between the test program and the online service. The patterns associated with the first traffic may include durations of delays between transmission of requests from the test program to the online service. The security threat patterns may be determined by defining deviations from the patterns as the security threat patterns. The method and system may include comparing second traffic between one or more external computing systems and the online service to the security threat patterns. The method and system may include identifying portions of the second traffic as a potential security threat if the portions of the second traffic correlate with at least one of the security threat patterns. The method and system may include assigning a threat score to the potential security threat based on a potential impact of the potential security threat on the online service. The method and system may include providing the threat score to the online service to enable the online service to secure against the potential security threat.

In one embodiment determining security threat patterns may include receiving patterns from human analysts. In one embodiment determining security threat patterns may include retrieving security threat patterns from an information management security vendor. In one embodiment assigning a threat score may include assigning a number of a predetermined range of numbers to the potential security threat with a higher number being associated with a higher security priority.

In one embodiment providing the threat score may include delaying transmission of the threat score based on a priority of the potential security threat. In one embodiment assigning the threat score to the potential security threat includes evaluating a service configuration to determine a vulnerability of the online service. In one embodiment the service configuration may include hardware characteristics of a host computing system for the online service and a type of information stored and provided by the online service.

Common reference numerals are used throughout the FIG.s and the detailed description to indicate like elements. One skilled in the art will readily recognize that the above FIG.s are examples and that other architectures modes of operation orders of operation and elements functions can be provided and implemented without departing from the characteristics and features of the invention as set forth in the claims.

Embodiments will now be discussed with reference to the accompanying FIG.s which depict one or more exemplary embodiments. Embodiments may be implemented in many different forms and should not be construed as limited to the embodiments set forth herein shown in the FIG.s and or described below. Rather these exemplary embodiments are provided to allow a complete disclosure that conveys the principles of the invention as set forth in the claims to those of skill in the art.

The INTRODUCTORY SYSTEM HARDWARE ARCHITECTURE and PROCESS sections herein include systems and processes suitable for incorporating various embodiments of methods and systems for automating threat model generation for an application according to various embodiments.

Herein the term production environment includes the various components or assets used to deploy implement access and use a given application as that application is intended to be used. In various embodiments production environments include multiple assets that are combined communicatively coupled virtually and or physically connected and or associated with one another to provide the production environment implementing the application.

As specific illustrative examples the assets making up a given production environment can include but are not limited to one or more computing environments used to implement the application in the production environment such as a data center a cloud computing environment a dedicated hosting environment and or one or more other computing environments in which one or more assets used by the application in the production environment are implemented one or more computing systems or computing entities used to implement the application in the production environment one or more virtual assets used to implement the application in the production environment one or more supervisory or control systems such as hypervisors or other monitoring and management systems used to monitor and control assets and or components of the production environment one or more communications channels for sending and receiving data used to implement the application in the production environment one or more access control systems for limiting access to various components of the production environment such as firewalls and gateways one or more traffic and or routing systems used to direct control and or buffer data traffic to components of the production environment such as routers and switches one or more communications endpoint proxy systems used to buffer process and or direct data traffic such as load balancers or buffers one or more secure communication protocols and or endpoints used to encrypt decrypt data such as Secure Sockets Layer SSL protocols used to implement the application in the production environment one or more databases used to store data in the production environment one or more internal or external services used to implement the application in the production environment one or more backend systems such as backend servers or other hardware used to process data and implement the application in the production environment one or more software systems used to implement the application in the production environment and or any other assets components making up an actual production environment in which an application is deployed implemented accessed and run e.g. operated as discussed herein and or as known in the art at the time of filing and or as developed after the time of filing.

As used herein the terms computing system computing device and computing entity include but are not limited to a virtual asset a server computing system a workstation a desktop computing system a mobile computing system including but not limited to smart phones portable devices and or devices worn or carried by a user a database system or storage cluster a switching system a router any hardware system any communications system any form of proxy system a gateway system a firewall system a load balancing system or any device subsystem or mechanism that includes components that can execute all or part of any one of the processes and or operations as described herein.

In addition as used herein the terms computing system and computing entity can denote but are not limited to systems made up of multiple virtual assets server computing systems workstations desktop computing systems mobile computing systems database systems or storage clusters switching systems routers hardware systems communications systems proxy systems gateway systems firewall systems load balancing systems or any devices that can be used to perform the processes and or operations as described herein.

As used herein the term computing environment includes but is not limited to a logical or physical grouping of connected or networked computing systems and or virtual assets using the same infrastructure and systems such as but not limited to hardware systems software systems and networking communications systems. Typically computing environments are either known environments e.g. trusted environments or unknown e.g. untrusted environments. Typically trusted computing environments are those where the assets infrastructure communication and networking systems and security systems associated with the computing systems and or virtual assets making up the trusted computing environment are either under the control of or known to a party. Examples of trusted computing environments include the assets and components making up data centers associated with and or controlled by an application and or any computing systems and or virtual assets and or networks of computing systems and or virtual assets associated with known by and or controlled by an application.

In contrast unknown or untrusted computing environments are environments and systems where the assets components infrastructure communication and networking systems and security systems implemented and associated with the computing systems and or virtual assets making up the untrusted computing environment are not under the control of and or are not known by a party and or are dynamically configured with new elements capable of being added that are unknown to the party. Examples of untrusted computing environments include but are not limited to public networks such as the Internet various cloud based computing environments and various other forms of distributed computing systems.

In various embodiments each computing environment includes allocated assets and virtual assets associated with and controlled or used to create and or deploy and or operate an application.

It is often the case that to create and or deploy and or operate application data must be transferred between a first computing environment that is an untrusted computing environment and a trusted computing environment. However in other situations a party may wish to transfer data between two trusted computing environments and or two untrusted computing environments.

In various embodiments one or more cloud computing environments are used to create and or deploy and or operate an application that can be any form of cloud computing environment such as but not limited to a public cloud a private cloud a virtual private network VPN a subnet a Virtual Private Cloud VPC a sub net or any security communications grouping or any other cloud based infrastructure sub structure or architecture as discussed herein and or as known in the art at the time of filing and or as developed after the time of filing.

In many cases a given application or service may utilize and interface with multiple cloud computing environments such as multiple VPCs in the course of being created and or deployed and or operated.

As used herein the term virtual asset includes any virtualized entity or resource and or virtualized part of an actual or bare metal entity. In various embodiments the virtual assets can be but are not limited to virtual machines virtual servers and instances implemented in a cloud computing environment databases associated with a cloud computing environment and or implemented in a cloud computing environment services associated with and or delivered through a cloud computing environment communications systems used with part of or provided through a cloud computing environment and or any other virtualized assets and or sub systems of bare metal physical devices such as mobile devices remote sensors laptops desktops point of sale devices ATMs electronic voting machines etc. located within a data center within a cloud computing environment and or any other physical or logical location as discussed herein and or as known available in the art at the time of filing and or as developed made available after the time of filing.

In various embodiments any or all of the assets making up a given production environment discussed herein and or as known in the art at the time of filing and or as developed after the time of filing can be implemented as virtual assets.

Typically virtual assets are created or instantiated using steps instructions processes code or recipes referred to herein as virtual asset creation templates. Typically virtual assets that have the same or similar operational parameters are created using the same or similar virtual asset creation templates. 

Examples of virtual asset creation templates include but are not limited to any tool and or system for creating and managing a collection of related cloud resources. Illustrative examples of such a virtual asset creation template are any of the cloud formation templates tools provided by Amazon Web Service AWS Rack Space Joyent and or any other of the numerous cloud based infrastructure providers.

Other examples of virtual asset creation templates include but are not limited to any configuration management tool associated with and or used to create virtual assets. One specific illustrative example of such a virtual asset creation template is a cookbook or recipe tool such as a Chef Recipe or system or any other fundamental element or set of elements used to override the default settings on a node within an infrastructure or architecture.

Other examples of virtual asset creation templates include but are not limited to any virtual appliance used to instantiate virtual assets. One specific illustrative example of such a virtual asset creation template is an Amazon Machine Image AMI and or similar functionality provided by Amazon Web Service AWS Rack Space Joyent and or any other of the numerous cloud based infrastructure providers.

Other examples of virtual asset creation templates include but are not limited to any appliance or tool or system or framework used to instantiate virtual assets as discussed herein and or as known available in the art at the time of filing and or as developed made available after the time of filing.

Herein virtual assets that have the same or similar operational parameters and are created by the same or similar virtual asset creation template are generically referred to as virtual assets of the same class. Examples of virtual asset classes include but are not limited to virtual machine classes virtual server classes virtual database or data store classes self monitoring virtual assets including specific types of instances instantiated in a cloud environment application development process classes and application classes.

In one embodiment two or more assets such as computing systems and or virtual assets and or two or more computing environments are connected by one or more communications channels including but not limited to Secure Sockets Layer communications channels and various other secure communications channels and or distributed computing system networks such as but not limited to a public cloud a private cloud a virtual private network VPN a subnet any general network communications network or general network communications network system a combination of different network types a public network a private network a satellite network a cable network or any other network capable of allowing communication between two or more assets computing systems and or virtual assets as discussed herein and or available or known at the time of filing and or as developed after the time of filing.

As used herein the term network includes but is not limited to any network or network system such as but not limited to a peer to peer network a hybrid peer to peer network a Local Area Network LAN a Wide Area Network WAN a public network such as the Internet a private network a cellular network any general network communications network or general network communications network system a wireless network a wired network a wireless and wired combination network a satellite network a cable network any combination of different network types or any other system capable of allowing communication between two or more assets virtual assets and or computing systems whether available or known at the time of filing or as later developed.

As used herein the term user includes but is not limited to any party parties entity and or entities using or otherwise interacting with any of the methods or systems discussed herein. For instance in various embodiments a user can be but is not limited to a person a commercial entity an application a service and or a computing system.

As used herein the term tenant includes but is not limited to any user that enters a relationship agreement and or contract with an asset service provider or other service provider to receive an allocation of one or more assets or asset resources within an asset computing environment. In some embodiments the terms tenant and tenant computing environment are interchangeably used even though in some cases a tenant represents a party parties or entities while the tenant computing environment represents one or more computing resources that are used by or that are at least partially under the control of the tenant.

The production environment includes various computing environments that assist developers or online service providers in identifying and prioritizing potential security threats according to one embodiment. The production environment provides systems and methods for assigning threat scores to potential security threats by determining patterns associated with potential security threats monitoring traffic to and or from an online service identifying a potential security threat by correlating online service traffic with one or more potential security threat patterns assigning a threat score to the identified potential security threat and delivering the threat score to the online service or online service provider for consideration and or remedial action. The production environment includes a first region computing environment having a first asset computing environment and a first scoring service computing environment according to one embodiment. The production environment further includes a second region computing environment that is geographically separated from the first region computing environment by a first boundary e.g. a geographical boundary according to one embodiment. The second region computing environment includes a first zone computing environment a second zone computing environment and a second scoring service computing environment according to one embodiment. The production environment also includes an asset manager computing environment that is communicatively coupled with the first region computing environment and the second region computing environment through a network connection according to one embodiment.

The first region computing environment provides threat scoring services to one or more online services hosted by assets located in a particular geographic region according to one embodiment. The particular geographic region associated with the first region computing environment is different than a geographic region corresponding with the second region computing environment according to one embodiment. Within the first region computing environment the first asset computing environment receives threat scoring services from the first scoring service computing environment to identify one or more security threats delivered by one or more subscribers and . The subscribers and or subscribe to or use an online service provided by the first asset computing environment according to one embodiment. In another embodiment the subscribers and or represent any computing system or computing device that can establish an authorized or unauthorized connection with the first online service through a network according to one embodiment.

The first asset computing environment includes at least one asset to host a first online service . The asset provides a variety of hardware software and or firmware services to a tenant to enable the tenant to host the first online service . According to one embodiment a tenant of the asset is the service provider that developed and or injected the first online service into the asset . According to one embodiment the asset is an allocation of one or more instances server instances or virtual server instances of hardware within the first asset computing environment that are allocated to a particular tenant for hosting one or more applications such as the first online service .

The first online service includes computer executable or computer readable instructions that cause the asset or computer processors of the asset to provide one or more services to users such as the subscribers and or according to one embodiment. The first online service can provide any one of a number of online services. In one embodiment the first online service is configured to provide a service that includes but is not limited to any one or more of credit risk simulations for a lending company video streaming media account management online software distribution and deployment live video feeds personal video sharing social media travel reservations database hosting advertisements educational resources streaming audio or the like. Because the first online service provides a service to multiple users subscribers the first online service may include personal information of users such as credit card information usernames passwords home addresses telephone numbers bank account numbers social security numbers or the like. Because the first online service interfaces with the subscribers and or over the network the first online service is susceptible to attempts of malicious attack and manipulation by one or more subscribers and . To receive information regarding security threats and their potential impact on the first online service the first asset computing environment transmits a service configuration and service traffic to the first scoring service computing environment according to one embodiment.

The first scoring service computing environment receives the service configuration and the service traffic over a communication channel from the first online service and in response selectively returns provides threat scores to the first online service that correspond with the received service traffic according to one embodiment. The service configuration represents the hardware software and or firmware characteristics of the asset in addition to the APIs API parameters and other interface commands that are available for external computing systems to communicate with the first online service according to one embodiment. The service traffic is that traffic between the first online service and the subscribers and on the network according to one embodiment. The first scoring service computing environment includes a first scoring service a security threat pattern manager a security threat pattern database a traffic analytics engine a threat scoring engine and a threat scoring service policy that in one embodiment enable the first scoring service computing environment to analyze the service traffic and provide a threat scoring to the first online service according to one embodiment. The first scoring service computing environment determines normal and unusual traffic patterns analyzes the traffic based on the traffic patterns assigns threat scores to any identified patterns in the traffic and transmits the threat scores to the first online service for consideration according to one embodiment.

The security threat pattern manager determines and maintains security threat patterns for potential security threats for use by the first scoring service according to one embodiment. A security threat pattern can be found in the procedural characteristics of the service traffic and or can be found in the content of the service traffic according to one embodiment. Procedural characteristics of the service traffic include but are not limited to frequency time of day and or the lapses between transmissions of commands data and requests associated with application programming interfaces APIs or other interfaces between the first online service and external computing systems according to one embodiment. Table 1 is provided below with an example security threat pattern that is based on service traffic between the first online service and a subscriber to the online service e.g. subscriber .

The service traffic between the first online service and external computing systems environments can also be flagged or identified as a security threat pattern based on the content of the traffic. For example particular sequences of bits bytes words or the like can be unique to particular viruses hacking schemes or other malicious operations. In one embodiment the content based security threat patterns and the procedural characteristic security threat patterns are stored in the security threat pattern database by the security threat pattern manager to support analysis of the service traffic according to one embodiment.

The security threat pattern manager can determine threat patterns for potential security threats using any one of a number of techniques. In one embodiment the security threat pattern manager requests and receives security threat patterns from an information management security service provider or vendor. The security threat pattern manager then updates the security threat pattern database with the received security threat patterns. In another embodiment computing security analysts manually update the security threat pattern database through the security threat pattern manager after compiling reverse engineering or otherwise analyzing traffic patterns between a malicious computing device and a service provider. For example computing security analysts can simulate and monitor traffic patterns between a test computing system and a test asset hosting a test online service by configuring the test computing system to send or execute security threats on the test online service. Based on the traffic patterns monitored from the simulation the analysts can determine and record particular patterns that are associated with particular types of security threats. In some embodiments the types of threats for which security threat patterns are stored in the security threat pattern database include but are not limited to spoofing tampering repudiation information disclosure denial of service and or elevation of privilege among others.

The security threat pattern manager can determine threat patterns or potential security threats by establishing baseline time limits for the reasonable execution of one or more APIs associated with the first online service . For example the security threat pattern manager can cause the first online service to execute a sample program that cycles through one or more APIs of the first online service . During the execution of the sample program the security threat pattern manager can monitor the execution of the APIs and establish minimum time delays that are likely to occur or that should occur during normal and or non malicious communications with the first online service according to one embodiment. As shown above in Table 1 the security threat pattern manager can then record create or determine baseline or normal traffic patterns for the service traffic and can determine or define deviations from the baseline as security threat patterns according to one embodiment. In some embodiments the security threat pattern manager defines login failure patterns based on APIs associated with login attempts so that excessive attempts and excessively short delays between successive attempts to login can be flagged as security threat patterns. In some embodiments the patterns include but are not limited to time references such as FAST SLOW LONG SHORT QUICK MEDIUM VERY SLOW VERY FAST or the like. In other embodiments the patterns include but are not limited to bandwidth references and or payload size references such as SMALL MEDIUM LARGE VERY LARGE or the like.

The security threat pattern manager can also determine defined anti patterns in one embodiment. By evaluating normal execution patterns of APIs for the first online service for extended periods of time the security threat pattern manager can develop a sizable library in the security threat pattern database of reasonable allowable and or normal API execution sequences. The security threat pattern manager can then define any traffic patterns that do not fit within the predetermined model as a subset of security threat patterns i.e. anti patterns. When an anti pattern occurs the first scoring service can flag or identify the service traffic associated with the anti pattern as being potentially malicious according to one embodiment.

The traffic analytics engine identifies potential security threats by correlating the service traffic with one or more security threat patterns received from the security threat pattern manager according to one embodiment. The traffic analytics engine can be configured to compare some or all of the service traffic against the security threat patterns of the security threat pattern database in one embodiment. In another embodiment the traffic analytics engine monitors periodic or random samples of the service traffic and compares the periodical random samples of the service traffic to the security threat patterns. In another embodiment the traffic analytics engine monitors the service traffic of new subscribers until the traffic analytics engine verifies determines that the new subscriber is using the first online service appropriately. If the traffic analytics engine finds a correlation between a security threat pattern and the service traffic the traffic analytics engine can identify the relevant portion of the service traffic as a potential security threat.

The threat scoring engine assigns a threat score to potential security threats identified by the traffic analytics engine according to one embodiment. The threat scoring engine can be configured to determine the relative impact of a potential security threat to the asset to other users of the first online service and or to the first online service . For example the threat scoring engine can assign based on the impact of the potential security threat a numerical score to the potential security threat. For example the threat scoring engine can assign a 10 to potential security threats having the highest probability of successful attack and that acquire personal data of subscribers to the first online service . The threat scoring engine can assign a 0 to potential security threats having the lowest probability of successful attack and or that are likely to have a negligible effect on the performance of the first online service according to one embodiment. The threat scoring engine can use various factors such as asset configuration number of subscribers security features developed into the first online service notification of new security threats or external risks or input from a third party vulnerability scanner to provide context while assessing a potential security threat and assigning a threat score. In some embodiments the threat scores range between 0 10. In other embodiments the threat scores range between 0 100. In yet other embodiments the threat scores include values such as LOW MEDIUM and HIGH . In one embodiment the threat scores can include color coordinating so that high priority potential security threats are red low priority potential security threats are orange and the absence of potential security threats is indicated with green. As those of skill in the art will appreciate other scoring ranges or values can be used while assigning a threat score to a potential security threat according to various embodiments.

The threat scoring service policy determines frequencies by which security threat patterns are updated and by which the threat scores are selectively delivered to the first online service according to one embodiment. The threat scoring service policy determines the frequency by which security threat patterns are updated to manage computing resources of the first scoring service computing environment . In some embodiments it may be unreasonable for the security threat pattern manager to be constantly analyzing service traffic for new patterns. In some embodiments the threat scoring service policy may enable the security threat pattern manager to update security threat patterns daily every other day weekly semi monthly monthly quarterly or the like. In some embodiments it may be frustrating to developers to receive the threat scores for the service traffic too frequently so the threat scoring service policy may define or determine that threat scores are transmitted to the first online service on a periodic basis in digests rather than in real time. In some embodiments the threat scoring service policy determines that all potential security threats having the threat scores between 0 5 are periodically transmitted to the first online service e.g. on a weekly semi monthly or monthly basis. In one embodiment the threat scoring service policy determines that potential security threats having threat scores of 8 10 are immediately transmitted to the first online service . In one embodiment the developer of the first online service adjusts the threat scoring service policy according to the computing resources and human resources available to update the first online service .

The first scoring service delivers the threat scores to the first online service for consideration and or remedial action according to one embodiment. In some embodiments the first scoring service can provide one or more identifiers e.g. an IP address to the first online service of the subscriber involved in the potential security threat to allow the first online service to block future communications from the suspected subscriber. In one embodiment the first scoring service provides one or more identifiers to the first online service to allow the first online service to notify disciplinary authorities of any malicious activities engaged in by the suspected subscriber. In one embodiment the information from the first scoring service enables the first online service to transmit one or more notifications to the suspected subscriber to verify that the subscriber s account has not been hacked into spoofed or otherwise compromised.

The second region computing environment is associated with a geographical region that is separated from a geographical region of the first region computing environment by the first boundary . Geographically separating assets and computing environments can advantageously allow an asset service provider to provide computing resources that are local to tenants such as a developer or provider of online services according to one embodiment. The second region computing environment includes a first zone computing environment and a second zone computing environment . The first zone computing environment and the second zone computing environment are both geographically located within the region associated with the second region computing environment according to one embodiment. The first zone computing environment is however physically separated from the second zone computing environment by a second boundary according to one embodiment. The second boundary is a geographic boundary that can be arbitrarily established based on data center locations or other operational interests of an asset service provider according to one embodiment. In one embodiment the first zone computing environment is located in a distinct location that is engineered to be insulated from failures of the second zone computing environment and is configured to provide network connectivity to the second zone computing environment . In one embodiment the geographic region of the first zone computing environment and the second zone computing environment is the designation of one or more specific zone computing environments that are engineered to be insulated from failures of other zone computing environments.

The first zone computing environment and the second zone computing environment include respectively a second asset computing environment and a third asset computing environment according to one embodiment. The second asset computing environment and the third asset computing environment may include similar features and may operate in a similar manner as the first asset computing environment according to one embodiment. The second asset computing environment includes an asset a second online service and a sample program for delivering online services to subscribers or other users and for supporting the function of the second scoring service according to one embodiment. The third asset computing environment includes an asset a third online service and a sample program for delivering online services to subscribers or other users and for supporting the function of the second scoring service according to one embodiment.

The second scoring service computing environment provides threat scores for potential security threats against the online services within the second region computing environment according to one embodiment. The second scoring service computing environment is communicatively coupled to the second online service with a communication channel and to the third online service with a communication channel according to one embodiment. The second scoring service computing environment includes a second scoring service . The second scoring service includes the various managers engines databases policies and functions of the first scoring service with the exception that the second scoring service is applied to the second region computing environment other than the first region computing environment according to one embodiment.

The asset manager computing environment manages the assets of the production environment in addition to providing security support for applications and online services hosted by the assets and according to one embodiment. The asset manager computing environment includes a security threat policy a threat model library and a global scoring service . The security threat policy defines determines minimum standards or requirements that online services are required to satisfy prior to receiving authorization to be hosted on one or more of the assets and . For example the security threat policy may determine that an online service include built in features for protecting securing against various types of security threats e.g. spoofing tampering denial of service etc. according to one embodiment The asset manager computing environment updates and maintains the threat model library which includes types of security threats that may affect computing environments or assets within the production environment according to one embodiment. The asset manager computing environment is configured to distribute the contents of the threat model library to the first scoring service and the second scoring service to enable the scoring services to incorporate up to date information regarding potential security threats according to one embodiment.

The asset manager computing environment uses the global scoring service to synchronize threat scoring service policies throughout the production environment according to one embodiment. The global scoring service includes a threat scoring service policy manager which includes regional threat scoring service policies and the zone threat scoring service policies . The global scoring service can function as a master scoring service that synchronizes the first scoring service and the second scoring service in one embodiment. In another embodiment the global scoring service performs the functions of the first scoring service and the second scoring service as a centralized scoring service provider. For example the global scoring service can include all of the functionality of the first scoring service and the second scoring service and can directly manage providing the threat scores to the first online service the second online service and the third online service through the network connection according to one embodiment.

The threat scoring service policy manager can ensure that regional threat scoring service policies and the zone threat scoring service policies are properly distributed and executed throughout the production environment . In one embodiment the threat scoring service policy manager executes a different set of rules for the first region computing environment than for the second region computing environment for example based on the laws of the lands in which the first region computing environment operates. The threat scoring service policy manager can also maintain and distribute different rules for different zones e.g. the first zone computing environment and the second zone computing environment in accordance with the zone threat scoring service policies . The threat scoring service policy manager can use communication channels and to communicate with the first and second scoring services according to one embodiment.

Although the scoring services are illustrated as distributed on a regional level in one embodiment the scoring services are distributed on a zone level or an asset level. For example the first scoring service can be built in the first online service when the first online service is instantiated or created in the asset . Similarly the second scoring service can be built in the second online service and or the third online service during or after instantiation of the online services according to various embodiments.

At block the process determines security threat patterns for an online service according to one embodiment. The security threat patterns can be determined by monitoring non malicious traffic and recording normal patterns associated with the traffic and then defining deviations from the normal patterns as security threat patterns. In one embodiment the security threat patterns are determined by retrieving the security threat patterns from an information management security vendor.

At block the process compares the security threat patterns to traffic between one or more external computing systems and the online service.

At block the process identifies portions of the traffic as a potential security threat if the portions of the traffic correlate with at least one of the security threat patterns.

At block the process assigns a threat score to the potential security threats at least partially based on a potential impact of the potential security threat to the online service. For example if the potential security threat can compromise financial data e.g. credit card information of customers the threat score will be higher than if the potential security threats causes minor decreases in network connectivity speeds according to one embodiment. To determine the potential impact of the potential security threat the process evaluates the context of the potential security threat. In other words the process evaluates the characteristics of the asset that is hosting the online service the type of threat the likelihood of success of the threat and the like.

At block the process provides the threat score to the online service to enable the online service to secure against the potential security threat. In one embodiment the online service secures against the potential security threat by submitting the security threat to disciplinary authorities to track down and punish the author s of the security threat. In other embodiments the online service secures against the potential security threat by blocking access of one or more computing systems to the resources of the online service.

As noted above the specific illustrative examples discussed above are but illustrative examples of implementations of embodiments of the method or process for providing a security threat scoring service to identify and prioritize potential security threats for service providers and developers of an online service. Those of skill in the art will readily recognize that other implementations and embodiments are possible. Therefore the discussion above should not be construed as a limitation on the claims provided below.

In the discussion above certain aspects of one embodiment include process steps and or operations and or instructions described herein for illustrative purposes in a particular order and or grouping. However the particular order and or grouping shown and discussed herein are illustrative only and not limiting. Those of skill in the art will recognize that other orders and or grouping of the process steps and or operations and or instructions are possible and in some embodiments one or more of the process steps and or operations and or instructions discussed above can be combined and or deleted. In addition portions of one or more of the process steps and or operations and or instructions can be re grouped as portions of one or more other of the process steps and or operations and or instructions discussed herein. Consequently the particular order and or grouping of the process steps and or operations and or instructions discussed herein do not limit the scope of the invention as claimed below.

As discussed in more detail above using the above embodiments with little or no modification and or input there is considerable flexibility adaptability and opportunity for customization to meet the specific needs of various parties under numerous circumstances.

In the discussion above certain aspects of one embodiment include process steps and or operations and or instructions described herein for illustrative purposes in a particular order and or grouping. However the particular order and or grouping shown and discussed herein are illustrative only and not limiting. Those of skill in the art will recognize that other orders and or grouping of the process steps and or operations and or instructions are possible and in some embodiments one or more of the process steps and or operations and or instructions discussed above can be combined and or deleted. In addition portions of one or more of the process steps and or operations and or instructions can be re grouped as portions of one or more other of the process steps and or operations and or instructions discussed herein. Consequently the particular order and or grouping of the process steps and or operations and or instructions discussed herein do not limit the scope of the invention as claimed below.

The present invention has been described in particular detail with respect to specific possible embodiments. Those of skill in the art will appreciate that the invention may be practiced in other embodiments. For example the nomenclature used for components capitalization of component designations and terms the attributes data structures or any other programming or structural aspect is not significant mandatory or limiting and the mechanisms that implement the invention or its features can have various different names formats or protocols. Further the system or functionality of the invention may be implemented via various combinations of software and hardware as described or entirely in hardware elements. Also particular divisions of functionality between the various components described herein are merely exemplary and not mandatory or significant. Consequently functions performed by a single component may in other embodiments be performed by multiple components and functions performed by multiple components may in other embodiments be performed by a single component.

Some portions of the above description present the features of the present invention in terms of algorithms and symbolic representations of operations or algorithm like representations of operations on information data. These algorithmic or algorithm like descriptions and representations are the means used by those of skill in the art to most effectively and efficiently convey the substance of their work to others of skill in the art. These operations while described functionally or logically are understood to be implemented by computer programs or computing systems. Furthermore it has also proven convenient at times to refer to these arrangements of operations as steps or modules or by functional names without loss of generality.

Unless specifically stated otherwise as would be apparent from the above discussion it is appreciated that throughout the above description discussions utilizing terms such as but not limited to activating accessing adding aggregating alerting applying analyzing associating calculating capturing categorizing classifying comparing creating defining detecting determining distributing eliminating encrypting extracting filtering forwarding generating identifying implementing informing monitoring obtaining posting processing providing receiving requesting saving sending storing substituting transferring transforming transmitting using etc. refer to the action and process of a computing system or similar electronic device that manipulates and operates on data represented as physical electronic quantities within the computing system memories resisters caches or other information storage transmission or display devices.

The present invention also relates to an apparatus or system for performing the operations described herein. This apparatus or system may be specifically constructed for the required purposes or the apparatus or system can comprise a general purpose system selectively activated or configured reconfigured by a computer program stored on a computer program product as discussed herein that can be accessed by a computing system or other device.

Those of skill in the art will readily recognize that the algorithms and operations presented herein are not inherently related to any particular computing system computer architecture computer or industry standard or any other specific apparatus. Various general purpose systems may also be used with programs in accordance with the teaching herein or it may prove more convenient efficient to construct more specialized apparatuses to perform the required operations described herein. The required structure for a variety of these systems will be apparent to those of skill in the art along with equivalent variations. In addition the present invention is not described with reference to any particular programming language and it is appreciated that a variety of programming languages may be used to implement the teachings of the present invention as described herein and any references to a specific language or languages are provided for illustrative purposes only and for enablement of the contemplated best mode of the invention at the time of filing.

The present invention is well suited to a wide variety of computer network systems operating over numerous topologies. Within this field the configuration and management of large networks comprise storage devices and computers that are communicatively coupled to similar or dissimilar computers and storage devices over a private network a LAN a WAN a private network or a public network such as the Internet.

It should also be noted that the language used in the specification has been principally selected for readability clarity and instructional purposes and may not have been selected to delineate or circumscribe the inventive subject matter. Accordingly the disclosure of the present invention is intended to be illustrative but not limiting of the scope of the invention which is set forth in the claims below.

In addition the operations shown in the FIG.s or as discussed herein are identified using a particular nomenclature for ease of description and understanding but other nomenclature is often used in the art to identify equivalent operations.

Therefore numerous variations whether explicitly provided for by the specification or implied by the specification or not may be implemented by one of skill in the art in view of this disclosure.

