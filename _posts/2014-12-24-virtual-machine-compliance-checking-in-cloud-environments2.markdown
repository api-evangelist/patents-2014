---

title: Virtual machine compliance checking in cloud environments
abstract: One or more examples provide a method of transferring a virtual machine between a virtualized computing system and a cloud computing system that includes: establishing connection between a first resource in the virtualized computing system and a second resource in the cloud computing system to transfer files that implement the virtual machine from the first resource to the second resource; accessing, for transmission over the connection, data blocks on a storage device in the virtualized computing system that include the files; executing at least one compliance check on each of the data blocks using at least one compliance checker; and preventing each of the data blocks that fails a compliance check from being maintained in the cloud computing system.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09553887&OS=09553887&RS=09553887
owner: VMware, Inc.
number: 09553887
owner_city: Palo Alto
owner_country: US
publication_date: 20141224
---
This application claims priority to U.S. Provisional Application Ser. No. 62 063 264 filed Oct. 13 2014 which is incorporated by reference herein in its entirety.

Cloud architectures are used in cloud computing and cloud storage systems for offering infrastructure as a service IaaS cloud services. Examples of cloud architectures include the VMware vCloud Director cloud architecture software Amazon EC2 web service and OpenStack open source cloud computing service. IaaS cloud service is a type of cloud service that provides access to physical and or virtual resources in a cloud environment. These services provide a tenant application programming interface API that supports operations for manipulating IaaS constructs such as virtual machines VMs and logical networks. One operation provided by some services is the transfer to the cloud system of VMs on existing computing resources managed by customers. Both the service provider and the customer perceive risks when uploading VMs to the cloud environment the customer perceives the risk of potential loss of sensitive or private data such as credit card data personal health data and the like. The service provider perceives the risk of running VMs that contain sensitive data in violation of laws rules and regulations that are unsecure that are running inauthentic software licensing and that can potentially compromise the cloud system.

One or more embodiments provide techniques for virtual machine compliance checking in cloud environments. In an embodiment a method of transferring a virtual machine between a virtualized computing system and a cloud computing system includes establishing connection between a first resource in the virtualized computing system and a second resource in the cloud computing system to transfer files that implement the virtual machine from the first resource to the second resource accessing for transmission over the connection data blocks on a storage device in the virtualized computing system that include the files executing at least one compliance check on each of the data blocks using at least one compliance checker and preventing each of the data blocks that fails a compliance check from being maintained in the cloud computing system.

Further embodiments include a non transitory computer readable storage medium comprising instructions that cause a computer system to carry out the above method above as well as a computer system configured to carry out the above method.

To facilitate understanding identical reference numerals have been used where possible to designate identical elements that are common to the figures. It is contemplated that elements disclosed in one embodiment may be beneficially utilized on other embodiments without specific recitation.

As used herein an internal cloud or private cloud is a cloud in which a tenant and a cloud service provider are part of the same organization while an external or public cloud is a cloud that is provided by an organization that is separate from a tenant that accesses the external cloud. For example the tenant may be part of an enterprise and the external cloud may be part of a cloud service provider that is separate from the enterprise of the tenant and that provides cloud services to different enterprises and or individuals. In embodiments disclosed herein a hybrid cloud is a cloud architecture in which a tenant is provided with seamless access to both private cloud resources and public cloud resources.

Virtualized computing system includes one or more host computer systems . Hosts may be constructed on a server grade hardware platform such as an x86 architecture platform a desktop and a laptop. As shown hardware platform of each host may include conventional components of a computing device such as one or more processors CPUs system memory a network interface storage system and other I O devices such as for example a mouse and keyboard not shown . Processor is configured to execute instructions for example executable instructions that perform one or more operations described herein and may be stored in memory and in local storage. Memory is a device allowing information such as executable instructions cryptographic keys virtual disks configurations and other data to be stored and retrieved. Memory may include for example one or more random access memory RAM modules. Network interface enables host to communicate with another device via a communication medium such as a network within virtualized computing system . Network interface may be one or more network adapters also referred to as a Network Interface Card NIC . Storage system represents local storage devices e.g. one or more hard disks flash memory modules solid state disks and optical disks and or a storage interface that enables host to communicate with one or more network data storage systems. Examples of a storage interface are a host bus adapter HBA that couples host to one or more storage arrays such as a storage area network SAN or a network attached storage NAS as well as other network data storage systems.

Each host is configured to provide a virtualization layer that abstracts processor memory storage and networking resources of hardware platform into multiple virtual machines to collectively referred to as VMs that run concurrently on the same hosts. VMs run on top of a software interface layer referred to herein as a hypervisor that enables sharing of the hardware resources of host by VMs . One example of hypervisor that may be used in an embodiment described herein is a VMware ESXi hypervisor provided as part of the VMware vSphere solution made commercially available from VMware Inc. Hypervisor may run on top of the operating system of host or directly on hardware components of host .

Virtualized computing system includes a virtualization management module depicted in as virtualization manager that may communicate to the plurality of hosts via a network sometimes referred to as a management network . In one embodiment virtualization manager is a computer program that resides and executes in a central server which may reside in virtualized computing system or alternatively running as a VM in one of hosts . One example of a virtualization management module is the vCenter Server product made available from VMware Inc. Virtualization manager is configured to carry out administrative tasks for computing system including managing hosts managing VMs running within each host provisioning VMs migrating VMs from one host to another host and load balancing between hosts .

In one embodiment virtualization manager includes a hybrid cloud management module depicted as hybrid cloud manager configured to manage and integrate virtualized computing resources provided by cloud computing system with virtualized computing resources of computing system to form a unified hybrid computing platform. Hybrid cloud manager is configured to deploy VMs in cloud computing system transfer VMs from virtualized computing system to cloud computing system and perform other cross cloud administrative task as described in greater detail later. In one implementation hybrid cloud manager is a module or plug in complement to virtualization manager although other implementations may be used such as a separate computer program executing in a central server or running in a VM in one of hosts .

In one embodiment hybrid cloud manager is configured to control network traffic into network via a gateway component depicted as a gateway . Gateway e.g. executing as a virtual appliance is configured to provide VMs and other components in virtualized computing system with connectivity to an external network e.g. Internet . Gateway may manage external public IP addresses for VMs and route traffic incoming to and outgoing from virtualized computing system and provide networking services such as firewalls network address translation NAT dynamic host configuration protocol DHCP load balancing and virtual private network VPN connectivity over a network .

In one or more embodiments cloud computing system is configured to dynamically provide an enterprise or users of an enterprise with one or more virtual data centers in which a user may provision VMs deploy multi tier applications on VMs and or execute workloads. Cloud computing system includes an infrastructure platform upon which a cloud computing environment may be executed. In the particular embodiment of infrastructure platform includes hardware resources having computing resources e.g. hosts to storage resources e.g. one or more storage array systems such as SAN and networking resources which are configured in a manner to provide a virtualization environment that supports the execution of a plurality of virtual machines across hosts . It is recognized that hardware resources of cloud computing system may in fact be distributed across multiple data centers in different locations.

Each cloud computing environment is associated with a particular tenant of cloud computing system such as the enterprise providing virtualized computing system . In one embodiment cloud computing environment may be configured as a dedicated cloud service for a single tenant comprised of dedicated hardware resources i.e. physically isolated from hardware resources used by other users of cloud computing system . In other embodiments cloud computing environment may be configured as part of a multi tenant cloud service with logically isolated virtualized computing resources on a shared physical infrastructure. As shown in cloud computing system may support multiple cloud computing environments available to multiple enterprises in single tenant and multi tenant configurations.

In one embodiment virtualization environment includes an orchestration component e.g. implemented as a process running in a VM that provides infrastructure resources to cloud computing environment responsive to provisioning requests. For example if an enterprise required a specified number of virtual machines to deploy a web applications or to modify e.g. scale a currently running web application to support peak demands orchestration component can initiate and manage the instantiation of virtual machines e.g. VMs on hosts to support such requests. In one embodiment orchestration component instantiates virtual machines according to a requested template that defines one or more virtual machines having specified virtual computing resources e.g. compute networking storage resources . Further orchestration component monitors the infrastructure resource consumption levels and requirements of cloud computing environment and provides additional infrastructure resources to cloud computing environment as needed or desired. In one example similar to virtualized computing system virtualization environment may be implemented by running on hosts VMware ESX based hypervisor technologies provided by VMware Inc. of Palo Alto Calif. although it should be recognized that any other virtualization technologies including Xen and Microsoft Hyper V virtualization technologies may be utilized consistent with the teachings herein .

In one embodiment cloud computing system may include a cloud director e.g. run in one or more virtual machines that manages allocation of virtual computing resources to an enterprise for deploying applications. Cloud director may be accessible to users via a REST Representational State Transfer API Application Programming Interface or any other client server communication protocol. Cloud director may authenticate connection attempts from the enterprise using credentials issued by the cloud computing provider. Cloud director maintains and publishes a catalog of available virtual machine templates and packaged virtual machine applications that represent virtual machines that may be provisioned in cloud computing environment . A virtual machine template is a virtual machine image that is loaded with a pre installed guest operating system applications and data and is typically used to repeatedly create a VM having the pre defined configuration. A packaged virtual machine application is a logical container of pre configured virtual machines having software components and parameters that define operational details of the packaged application. An example of a packaged VM application is vApp technology made available by VMware Inc. of Palo Alto Calif. although other technologies may be utilized. Cloud director receives provisioning requests submitted e.g. via REST API calls and may propagates such requests to orchestration component to instantiate the requested virtual machines e.g. VMs .

In the embodiment of cloud computing environment supports the creation of a virtual data center having a plurality of virtual machines instantiated to for example host deployed multi tier applications. A virtual data center is a logical construct that provides compute network and storage resources to an organization. Virtual data centers provide an environment where VM can be created stored and operated enabling complete abstraction between the consumption of infrastructure service and underlying resources. VMs may be configured similarly to VMs as abstractions of processor memory storage and networking resources of hardware resources .

Virtual data center includes one or more virtual networks used to communicate between VMs and managed by at least one networking gateway component e.g. gateway as well as one or more isolated internal networks not connected to gateway . Gateway e.g. executing as a virtual appliance is configured to provide VMs and other components in cloud computing environment with connectivity to external network e.g. Internet . Gateway manages external public IP addresses for virtual data center and one or more private internal networks interconnecting VMs . Gateway is configured to route traffic incoming to and outgoing from virtual data center and provide networking services such as firewalls network address translation NAT dynamic host configuration protocol DHCP and load balancing. Gateway may be configured to provide virtual private network VPN connectivity over a network with another VPN endpoint such as a gateway within virtualized computing system . In other embodiments gateway may be configured to connect to communicate with virtualized computing system using a high throughput dedicated link depicted as a direct connect between virtualized computing system and cloud computing system . In one or more embodiments gateways and are configured to provide a stretched layer 2 L2 network that spans virtualized computing system and virtual data center as shown in .

While depicts a single connection between on premise gateway and cloud side gateway for illustration purposes it should be recognized that multiple connections between multiple on premise gateways and cloud side gateways may be used. Furthermore while depicts a single instance of a gateway it is recognized that gateway may represent multiple gateway components within cloud computing system . In some embodiments a separate gateway may be deployed for each virtual data center or alternatively for each tenant. In some embodiments a gateway instance may be deployed that manages traffic with a specific tenant while a separate gateway instance manages public facing traffic to the Internet. In yet other embodiments one or more gateway instances that are shared among all the tenants of cloud computing system may be used to manage all public facing traffic incoming and outgoing from cloud computing system .

In one embodiment each virtual data center includes a hybridity director module depicted as hybridity director configured to communicate with the corresponding hybrid cloud manager in virtualized computing system to enable a common virtualized computing platform between virtualized computing system and cloud computing system . Hybridity directory e.g. executing as a virtual appliance may communicate with hybrid cloud manager using Internet based traffic via a VPN tunnel established between gateways and or alternatively using direct connect . In one embodiment hybridity director may control gateway to control network traffic into virtual data center . In some embodiments hybridity director may control VMs and hosts of cloud computing system via infrastructure platform .

In an example hybrid cloud manager includes a VM transfer manager A and one or more compliance checkers compliance checker s A . Hybridity director includes a VM transfer manager B. VM transfer manager A cooperates with VM transfer manager B to transfer VM s between virtualized computing system and cloud computing system . Hybrid cloud manager can access VM files stored in storage system . VM files include files that implement VMs in virtualized computing system . A given VM can be implemented by a set of files which can include configuration file s virtual disk file s virtual disk delta file s and configuration file s associated with VM snapshot s basic input output system BIOS file s log file s and the like. VM transfer manager A can access VM files in order to transfer a VM. Hybridity director can access a storage system in cloud computing system e.g. storage array network . VM transfer manager B can store VM files in storage system . VM files implement VM s that have been transferred from virtualized computing system .

In operation a user can interact with virtualization manager hybrid cloud manager or both to request transfer of a selected VM from virtualized computing system to cloud computing system . Hybrid cloud manager invokes VM transfer manager A to begin the transfer of the selected VM. VM transfer manager A accesses data blocks on storage system that include VM files corresponding to the selected VM. Data blocks can be logical blocks of a file system or physical blocks of underlying storage system . Alternatively data blocks can be independent of the file system and storage system where each block includes a sequence of bits or bytes comprising file s of VM files or a portion of a file of VM files e.g. a portion of a virtual disk file . VM transfer manager A cooperates with VM transfer manager B to transfer VM files for the selected VM in groups of sequential groups of data blocks where each group comprises one or more of data blocks .

In an example before transferring data block s over the connection to VM transfer manager B VM transfer manager A invokes compliance checker s A. Each of compliance checker s A process data block s to perform a compliance check. A compliance check generally comprises searching the subject data block s for indication s satisfying some level of confidence of specific type s of data considered to be non compliant with a VM transfer policy or VM transfer policies. For example an administrator of virtualized computing system can establish a VM transfer policy which can be maintained by hybrid cloud manager and which dictates type s of data ineligible for transfer to cloud computing system . An administrator of clouding computing system can establish a VM transfer policy which can be maintained by hybridity director and which dictates type s of data ineligible for transfer to cloud computing system . In another example both VM transfer policy and VM transfer policy can be established. Hybrid cloud manager can obtain VM transfer policy from hybridity director and hybridity director can obtain VM transfer policy from hybrid cloud manager .

Example compliance checks include checking for financial data financial data check checking for human health data human health data check checking for unlicensed software software licensing check checking for malicious software malicious software check and checking for software vulnerabilities software vulnerability check . Financial data can include for example bank account numbers credit card numbers financial transaction information and like type of confidential financial information. Human health data can include for example patient records or other types of individually identifiable health information. Malicious software can include computer viruses worms malware and the like. Software vulnerabilities can include un patched operating system files applications and the like. In some examples compliance checks can check for data designated by law regulation rule etc. established by governments standards bodies etc. as being confidential proprietary etc. and subject to specific handling rules. For example the Payment Card Industry PCI Data Security Standard DSS defines specific financial data e.g. credit card information as being subject to specific handling requirements. The Health Insurance Portability and Accountability Act of HIPAA includes a set of laws enacted in the United States that defines specific electronic health data as being subject to specific handling requirements.

VM transfer policy VM transfer policy or both can define one or more compliance checks to be performed during each VM transfer. In an example compliance checker s A check data block s before such data block s are transferred to cloud computing system . Compliance checker s A notify VM transfer manager A of data block s that fail a compliance check. VM transfer manager A VM transfer manager B or both can take one or more actions discussed below in response to failure of a compliance check performed by compliance checker s A. The action s to be taken can be defined by VM transfer policy VM transfer policy or both.

In another example compliance check s can be performed by compliance checker s B in hybridity director . VM transfer manager A can transfer each data block associated with the selected VM and VM transfer manager B can invoke compliance checker s B to perform compliance check s on data block s . Compliance checker s B can notify VM transfer manager B of any data block s that fail a compliance check. In still another example compliance checks can be performed by both hybrid cloud manager and hybridity director . That is both compliance checker s A and compliance checker s B can perform compliance check s . Compliance checker s A can perform different compliance check s than compliance checker s B. One or more compliance checks can be performed by both compliance checker s A and compliance checker s B e.g. redundant compliance checks . This will allow the compliance check criteria to be updated such as antivirus signatures on the cloud side as a service.

In general VM transfer manager A VM transfer manager B or both prevent each of the data blocks that fails a compliance check from being maintained in cloud computing system . In an example VM transfer manager A can terminate transfer of the selected VM to cloud computing system in response to notification of failed compliance check s received from compliance checker s A. VM transfer manager A can notify VM transfer manager B of the termination. In response to the notification VM transfer manager B can discard any data block s received during the transfer. VM transfer manager B can notify VM transfer manager A of failed compliance check s indicated by compliance checker s B. In response to the notification VM transfer manager A can terminate the transfer of the selected VM and VM transfer manager B can discard any data block s received during the transfer. Accordingly embodiments of the present disclosure can preemptively perform compliance checks of migrating VM files without having to first transfer all data blocks e.g. the entirety of the VM files to the cloud computing system which might otherwise waste network bandwidth and network resources.

In another example rather than terminating the transfer of the selected VM VM transfer manager A can continue transferring data blocks that satisfy the compliance check s . VM transfer manager B can keep data blocks that satisfy the compliance check s rather than discarding the data blocks. VM transfer manager B can store the data blocks in storage system to add files of the transferred VM to VM files . The VM files of the transferred VM have all data except for the data that failed the compliance check s .

In an example hybridity director can establish a temporary block storage which can be implemented on an accessible storage device e.g. memory in a host having hybridity director or a storage device in a host having hybridity director or otherwise accessible by such host . VM transfer manager B can cache data blocks in temporary block storage during transfer of a selected VM. VM transfer manager B can discard data blocks in temporary block storage in response to an instruction to do so from VM transfer manager A. If compliance checker s B are used VM transfer manager B can discard data block s that failed a compliance check from temporary block storage . In this manner data block s that fail a compliance check are prevented from being stored in storage system or otherwise being used to implement a virtual machine in cloud computing system . In response to a completed transfer VM transfer manager B can flush data blocks in temporary block storage to storage system to add files for the selected VM to VM files . In another example temporary block storage can be omitted and VM transfer manager B can store data blocks directly to storage system . VM transfer manager B can delete data blocks from storage system in case of an instruction to do so from VM transfer manager A or in case data block s fail a compliance check as indicated by compliance checker s B.

While hybrid cloud manager is described as having VM transfer manager A and compliance checker s A hybrid cloud manager can have other configurations. In general the operations performed by VM transfer manager A and compliance checker s A can be performed by one or more modules implemented within hybrid could manager each of which can include hardware software firmware or a combination thereof. Likewise while hybridity director is described as having VM transfer manager B and compliance checker s B hybridity director can have other configurations. In general the operations performed by VM transfer manager B and compliance checker s B can be performed by one or more modules implemented within hybridity director each of which can include hardware software firmware or a combination thereof.

At step hybrid cloud manager hybridity director or both determine whether data block s fail compliance check s . Compliance checks can be performed on one data block at a time or on a plurality of data blocks at a time. If the data block s pass the compliance check s method returns to step . If the data block s fail a compliance check method proceeds to step . Otherwise hybrid cloud manager may proceed to transmit the particular set of data block s to hybridity director at cloud computing system . At step hybrid cloud manager hybridity director or both prevent each of the data blocks that fails a compliance check from being maintained in cloud computing system . For example at step hybrid cloud manager can block data block s that fail compliance check s from being transmitted over the connection. At step hybridity director can discard data block s that fail compliance check s .

At step hybrid cloud manager can determine whether to continue with the transfer. If so method returns to step . Accordingly VM transfer manager A may validate the integrity of a migrating VM in a streaming fashion i.e. by checking and transferring data blocks in chunks of data block s at a time. Otherwise method proceeds to step . At step hybrid cloud manager terminates transfer of the selected VM. At step hybridity director can discard all received data blocks. In an example the decision at step to continue the transfer operation can be based on the VM policy the VM policy or both. In another example the decision at step can be omitted and method can either always terminate the transfer or always return to step and continue with the transfer.

The various embodiments described herein may employ various computer implemented operations involving data stored in computer systems. For example these operations may require physical manipulation of physical quantities usually though not necessarily these quantities may take the form of electrical or magnetic signals where they or representations of them are capable of being stored transferred combined compared or otherwise manipulated. Further such manipulations are often referred to in terms such as producing identifying determining or comparing. Any operations described herein that form part of one or more embodiments of the invention may be useful machine operations. In addition one or more embodiments of the invention also relate to a device or an apparatus for performing these operations. The apparatus may be specially constructed for specific required purposes or it may be a general purpose computer selectively activated or configured by a computer program stored in the computer. In particular various general purpose machines may be used with computer programs written in accordance with the teachings herein or it may be more convenient to construct a more specialized apparatus to perform the required operations.

The various embodiments described herein may be practiced with other computer system configurations including hand held devices microprocessor systems microprocessor based or programmable consumer electronics minicomputers mainframe computers and the like.

One or more embodiments of the present invention may be implemented as one or more computer programs or as one or more computer program modules embodied in one or more computer readable media. The term computer readable medium refers to any data storage device that can store data which can thereafter be input to a computer system computer readable media may be based on any existing or subsequently developed technology for embodying computer programs in a manner that enables them to be read by a computer. Examples of a computer readable medium include a hard drive network attached storage NAS read only memory random access memory e.g. a flash memory device a CD Compact Discs CD ROM a CD R or a CD RW a DVD Digital Versatile Disc a magnetic tape and other optical and non optical data storage devices. The computer readable medium can also be distributed over a network coupled computer system so that the computer readable code is stored and executed in a distributed fashion.

Although one or more embodiments of the present invention have been described in some detail for clarity of understanding it will be apparent that certain changes and modifications may be made within the scope of the claims. Accordingly the described embodiments are to be considered as illustrative and not restrictive and the scope of the claims is not to be limited to details given herein but may be modified within the scope and equivalents of the claims. In the claims elements and or steps do not imply any particular order of operation unless explicitly stated in the claims.

Virtualization systems in accordance with the various embodiments may be implemented as hosted embodiments non hosted embodiments or as embodiments that tend to blur distinctions between the two are all envisioned. Furthermore various virtualization operations may be wholly or partially implemented in hardware. For example a hardware implementation may employ a look up table for modification of storage access requests to secure non disk data.

Many variations modifications additions and improvements are possible regardless the degree of virtualization. The virtualization software can therefore include components of a host console or guest operating system that performs virtualization functions. Plural instances may be provided for components operations or structures described herein as a single instance. Boundaries between various components operations and data stores are somewhat arbitrary and particular operations are illustrated in the context of specific illustrative configurations. Other allocations of functionality are envisioned and may fall within the scope of the invention s . In general structures and functionality presented as separate components in exemplary configurations may be implemented as a combined structure or component. Similarly structures and functionality presented as a single component may be implemented as separate components. These and other variations modifications additions and improvements may fall within the scope of the appended claim s .

