---

title: Fulfillment of requests for computing capacity
abstract: Disclosed are various embodiments relating to fulfillment of requests for computing capacity. Multiple requests for allocating computing resources for customers are obtained. Each request specifies an availability time at which the computing resource is to be made available to the customer, a device parameter to select a type of computing device to provide the computing resource, a location parameter to select a location where the computing resource is to be physically located, and/or other parameters. The computing resources are allocated to the customers according to one or more allocation rules, the availability times, device parameters, location parameters, and/or other parameters.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08938542&OS=08938542&RS=08938542
owner: Amazon Technologies, Inc.
number: 08938542
owner_city: Seattle
owner_country: US
publication_date: 20140505
---
This application is a continuation of and claims priority to co pending U.S. patent application Ser. No. 13 161 578 filed Jun. 16 2011 and titled Fulfillment of Requests for Computing Capacity which is hereby incorporated by reference in its entirety.

Web services and or other applications consume computing resources. Such computing resources are provided through a hardware architecture that is often maintained by another entity. The entity may correspond to an in house computing resource department or to an external hosting provider. The computing resources consumed by web services and or applications may change over time. Thus the web services and or applications may require additional hardware.

The present disclosure relates to fulfilling requests for computing capacity. Various customers service owners and other computing resource users may submit requests for additional networked computing capacity. The computing capacity may be available on an enterprise network or a public network and the customers may be internal customers or external customers. The requests may be associated with differing priorities and capacity parameters. Such requests may be submitted manually and fulfilled manually but it may be difficult to track the various requests and to ensure that all the parameters relating to the requests are properly considered.

Various embodiments of the present disclosure facilitate a rule based allocation of computing capacity in response to multiple requests. Various parameters of the requests may be considered according to one or more allocation rules. For example a request may specify a time at which the capacity is requested to be available one or more computing device related parameters e.g. disk space computing platform etc. one or more location parameters e.g. location within a data center and or other parameters. The request may also be associated with a priority. A computing resource such as a server or a virtual machine instance may be allocated in response to the request. The allocation may be late binding such that the computing resource may be reallocated for higher priority requests in some cases. In the following discussion a general description of the system and its components is provided followed by a discussion of the operation of the same.

With reference to shown is a networked environment according to various embodiments. The networked environment includes a plurality of computing devices . . . N one or more computing devices and one or more clients in data communication by way of a network . The network includes for example the Internet intranets extranets wide area networks WANs local area networks LANs wired networks wireless networks or other suitable networks etc. or any combination of two or more such networks.

Each computing device may comprise for example a server computer or any other system providing computing capability. The computing devices may be arranged for example in one of a plurality of racks . . . N compute clusters server banks computer banks or other arrangements. Although the term rack is used herein rack may also correspond to shelves spaces and or any other space arrangements for the computing device . For example a plurality of computing devices together may comprise a cloud computing resource a grid computing resource and or any other distributed computing arrangement. The computing devices may be distributed among a plurality of data centers . . . N which may be in multiple geographic locations. In some cases multiple data centers may be in a single geographic location but with different network connections different power redundancy and or other different characteristics that may affect availability. For purposes of convenience the computing device may be referred to herein in the singular. Even though the computing device may be referred to in the singular it is understood that a plurality of computing devices may be employed in the various arrangements as described above.

Various applications and or other functionality may be executed in the computing device according to various embodiments. Also various data is stored in a data store that is included in or otherwise accessible to the computing device . In one embodiment the entire computing device may be allocated to a customer. In another embodiment the computing device may be allocated for the use of multiple customers in the form of multiple virtual machine instances executed in the computing device . The customer may retain use of the computing device indefinitely or for a fixed period of time according to the allocation. The customer may elect to relinquish use of the computing device at a future time in some configurations.

The computing device may comprise for example a server computer or any other system providing computing capability. Alternatively a plurality of computing devices may be employed that are arranged for example in one or more server banks or computer banks or other arrangements. For example a plurality of computing devices together may comprise a cloud computing resource a grid computing resource and or any other distributed computing arrangement. Such computing devices may be located in a single installation or may be distributed among many different geographical locations. For purposes of convenience the computing device is referred to herein in the singular. Even though the computing device is referred to in the singular it is understood that a plurality of computing devices may be employed in the various arrangements as described above.

Various applications and or other functionality may be executed in the computing device according to various embodiments. Also various data is stored in a data store that is accessible to the computing device . The data store may be representative of a plurality of data stores as can be appreciated. The data stored in the data store for example is associated with the operation of the various applications and or functional entities described below.

The components executed on the computing device for example include a resource allocation service and other applications services processes systems engines or functionality not discussed in detail herein. The resource allocation service is executed to obtain resource allocation requests from clients and to allocate resources of the computing devices to customers in response to the resource allocation requests . The allocations may be performed according to a rule set that takes into account various parameters that are associated with the resource allocation requests . Until the computing capacity is needed by the customer such allocations may be considered tentative or pending. Thus in some embodiments computing capacity that has been tentatively allocated to customers may be reallocated to other customers with higher priority resource allocation requests or resource allocation requests that are otherwise a better fit for the computing devices that provide the computing capacity according to the allocation rule set.

Each resource allocation request may specify or be associated with a priority resource specifications location specifications a submission time and an availability time . The priority indicates a priority to be given to the resource allocation request by the resource allocation service relative to other resource allocation requests in allocating computing resources. Such a priority may be customer specified within the resource allocation request or assigned to the resource allocation request by the resource allocation service according for example to the identity of the customer the intended use of the allocation specified by the customer the ease of fulfilling the resource allocation request and or other factors.

The resource specifications may include one or more parameters relating to a type of computing device and or a virtual machine instance that is requested. Such resource specifications may be marked mandatory optional preferred with a specified strength of preference etc. In various cases the resource specifications may relate to memory processor and or other hardware requirements. The resource specifications may also relate to data storage characteristics a type of operating system network connection requirements power availability requirements a desired virtual machine instance configuration and or other specifications. The resource specifications may also indicate a predicted memory processor usage pattern for the respective computing resource by the respective customer such as for example whether the customer intends to use the computing resource for I O bound tasks compute bound tasks graphics rendering bound tasks and so on.

The location specifications may include one or more parameters relating to a location of computing device and or a virtual machine instance that is requested. Such location specifications may be marked mandatory optional preferred with a specified strength of preference etc. In various cases the location specifications may specify a particular data center an availability zone with separate resource availability a compute cluster a rack location a distribution among locations and or other locations with varying degrees of granularity.

In some situations a customer may specify a minimum distance from one or more other allocated computing resources of the customer within the same data center rack or other hosting environment. For example the customer may wish to isolate potential causes of failure that may affect a rack server room etc. By contrast in other situations a customer may specify a maximum distance from one or more other allocated computing resources of the customer. For example the customer may wish to minimize data transmission latency and or increase available bandwidth among the allocated computing resources of the customer. In some situations a customer may specify a distribution of the computing resources of the customer among some or all of the data centers . For example a customer may wish to have its computing resources evenly distributed among all of the data centers on the west coast or a customer may wish to have two thirds of its computing resources evenly distributed among all of data centers in the United States.

The submission time indicates when the resource allocation request was submitted by the customer. The submission time may be used by the resource allocation service to prioritize earlier submitted resource allocation requests . The availability time indicates when the customer expects to have use of the requested computing resource. In one embodiment the availability time may be accompanied by a tolerance that indicates a delay that the customer is willing to accept in the computing resource being made available. In various embodiments the resource allocation request may also specify a price that the customer is willing to pay for the computing resource tolerances for substitutions allocation durations and or other parameters.

The data stored in the data store includes for example a plurality of resource allocations resource data allocation rules customer data a request queue and potentially other data. The resource allocations correspond to the allocation of computing resources from the computing devices to various customers. To this end each resource allocation may include a customer identifier a data center identifier a rack identifier a computing device identifier a machine instance identifier a time window and or other data. The resource allocations may also indicate a current state of the allocation e.g. whether the allocation has been implemented whether the hardware and space exist whether the software has been configured whether the allocation is pending etc.

The customer identifier corresponds to the customer service owner or other entity for which the resource is allocated. The data center identifier corresponds to the data center availability zone or other geographic arrangement where the resource is allocated. The rack identifier corresponds to a rack room compute cluster or other sub portion of a data center or other geographic arrangement where the resource is allocated.

The computing device identifier specifies a computing device that is allocated or partially allocated to the customer. The computing device identifier may be correlated with other data that identifies the hardware software and or other features of the particular computing device . The machine instance identifier may specify a virtual machine instance that is allocated to a customer on the computing device identified by the computing device identifier . The machine instance identifier may be correlated with other data that identifies the software and or other features of the particular virtual machine instance.

The time window may indicate a duration for the resource allocation . Although some resource allocations may be for an indefinite duration other resource allocations may be for a specific duration after which resource allocation may expire. After expiration of the resource allocation the associated computing capacity may be reallocated. In some cases the space in the data center may be replaced with different computing device s after the resource allocation expires.

The resource data includes various data describing the configurations of the computing devices the racks the data centers virtual machine instance configurations and so on. The resource data may also specify computing devices and or other resources that are forecasted to become available by a certain time. The allocation rules include one or more rules that are applied in evaluating the resource allocation requests . The allocation rules may for example specify weights formulas and or other rules for processing priorities resource specifications location specifications submission times availability times etc. in order to determine whether to make an allocation in response to the request and if so where with what hardware etc.

The customer data may include various data about the customer such as for example billing information associated services operated by the customer existing and pending allocations of computing resources stored preferences usage profiles and or other data. The request queue includes a plurality of resource allocation requests . In one embodiment the request queue may be implemented as a priority queue. The request queue may be processed periodically to update allocations for resource allocation requests that are still pending and have not been finalized. In some cases the underlying computing capacity may be reallocated from a pending resource allocation of a resource allocation request to another resource allocation request of the same customer or a different customer.

The client is representative of a plurality of client devices that may be coupled to the network . The client may comprise for example a processor based system such as a computer system. Such a computer system may be embodied in the form of a desktop computer a laptop computer personal digital assistants cellular telephones smartphones set top boxes music players web pads tablet computer systems game consoles electronic book readers or other devices with like capability. The client may include a display . The display may comprise for example one or more devices such as cathode ray tubes CRTs liquid crystal display LCD screens gas plasma based flat panel displays LCD projectors or other types of display devices etc.

The client may be configured to execute various applications such as a browser and or other applications. The browser may be executed in a client for example to access and render network pages such as web pages or other network content served up by the computing device and or other servers thereby generating a rendered network page on the display . The client may be configured to execute applications beyond browser such as for example a special purpose application for interacting with the computing device service clients for services hosted through the computing devices email applications instant message applications and or other applications.

Referring next to shown is a diagram illustrating an example of various computing devices that may be employed in the networked environment according to various embodiments. The diagram includes a plurality of computing devices . . . and a plurality of computing devices . . . . Each of the computing devices may correspond to computing devices from . The computing devices may be in data communication with each other and or other computing devices by way of a network .

Computing devices and may correspond to differing hardware platforms in various embodiments. Accordingly computing devices and may have differing hardware configurations of resources for example of central processing units CPUs that provide general purpose processing resources graphics processing units GPUs that provide graphics processing resources system memory data storage characteristics such as capacity storage bandwidth and storage input output operations per second IOPS network bandwidth and or other hardware characteristics. In one embodiment all computing devices . . . may have a first hardware configuration while all computing devices . . . may have a second hardware configuration.

For example the computing devices may have a certain ratio of a first type of resource to a second type of resource while the computing devices may have a different ratio of the first type of resource to the second type of resource. In a specific example the computing devices may have a relatively high amount of memory while the computing devices may have a relatively high amount of CPU resources. In another specific example the computing devices may have a relatively high amount of CPU resources while the computing devices may have a relatively high amount of GPU resources. Although only two sets of computing devices and are shown it is understood that there may be any number of sets of computing devices and having different hardware configurations.

As a non limiting example a customer who is planning to run a data store that will respond to a high volume of queries for small quantities of data may prefer to have a computing device with relatively high storage IOPS capability over storage bandwidth. By contrast a customer who is planning to run an email archive may prefer to have a computing device with relatively high storage bandwidth capability over storage IOPS. The email archive may not respond to many requests but when a request is received a large quantity of bandwidth may be preferred to transfer data from the email archive.

Each computing device may execute one or more machine instances MI . A machine instance may correspond to an actual machine or to a virtual machine. A virtual machine instance is a virtualized computer system or a software implementation of a physical computing system. Virtual machines may provide for multiple and or different operating system environments to run concurrently on a single system having a processor circuit and a memory. As a non limiting example multiple instances of a Linux operating system environment may execute concurrently with multiple instances of a Microsoft Windows operating system environment on a single system. Each machine instance may be controlled by different customers who may have administrative access only to their own instance s and not to the instances of other customers. Multiple machine instances may in fact execute concurrently on a computer system including parallel processors although multiple instances may appear to execute concurrently on a multithreaded computer system with fewer processors than instances.

Different types of machine instances may be available. In the example of computing devices may support three types of machine instances MI large MI medium and MI small each of which may be associated with differing resource configurations. As a non limiting example each MI large instance may have four CPU equivalent units 15 gigabytes GB of system memory and 1 000 GB of data storage. Each MI medium instance may have two CPU equivalent units 10 GB of system memory and 103 GB of data storage. Also each MI small instance may have one CPU equivalent unit 5 GB of system memory and 250 GB of data storage. In the example of computing devices may also support three types of machine instances namely MI large MI medium and MI small . MI large MI medium and MI small may have the same respective configurations as MI large MI medium and MI small or may have different configurations as desired. As a non limiting example a MI large instance may have four CPU equivalent units 20 GB of system memory and 1 000 GB of data storage.

The example of three types of machine instances for each type of computing device is not intended to be limiting. In various embodiments there may be more or fewer types of machine instances for each type of computing device . In various embodiments the number and types of virtual machine instance configurations may be dynamically determined by the resource allocation service .

In the example of one MI large instance is executing on computing device two MI medium instances are executing on computing device one MI medium instance and two MI small instances are executing on computing device one MI large instance is executing on computing device three MI medium instances are executing on computing device and one MI medium instance and four MI small instances are executing on computing device . Each machine instance may be associated with a customer though any customer may be associated with any number of machine instances.

Referring now to both a general description of the operation of the various components of the networked environment is provided. To begin customers at clients submit resource allocation requests to the resource allocation service by way of a web based interface or some other user interface. In some embodiments the resource allocation service may expose an application programming interface API so that resource allocation requests may be submitted programmatically. In one embodiment the resource allocation requests may be generated automatically in the client using such an API. The resource allocation requests may be held in a request queue .

The resource allocation service is configured to process the request queue and fulfill the resource allocation requests in the request queue according to the available resources thereby generating resource allocations . The resource allocations may be late binding that is the resource allocations may stay in a pending state up until a threshold time before the availability time . Up until that time the resource allocations may be reallocated for resource allocation requests having higher priorities or otherwise being a better fit.

To this end the resource allocation service may be configured to compute an internal priority according to the allocation rules based for example on customer specified priorities customer associated internal priorities resource specifications location specifications submission times availability times and so on. As a non limiting example resource allocation requests that are submitted earliest may be given a higher internal priority by the allocation rules . As another non limiting example resource allocation requests that are needed urgently i.e. have a nearest availability time and a high customer specified priority may also be given a higher internal priority by the allocation rules .

In various embodiments an administrative user may be able to override priorities and or other data manually. As a non limiting example an anticipated shipment of computing hardware may be delayed and it may be the case that hardware to fulfill one or more resource allocation requests will not be shipped in time to meet the availability time . In such a case the administrative user may be able to escalate the priority of the resource allocation requests manually to ensure that they are fulfilled even with hardware that is not the best fit. To this end the administrative user may interactively provide configuration data to override the priorities and or other aspects of the allocation process.

Various approaches may be employed to match resource allocation requests with computing devices and or virtual machine instances in a resource maximizing way. One particular approach involves modeling certain objects within the resource allocation service in order to generate inputs to a maximization version of the generalized assignment problem. The problem may be described by the following A pair B S where B is a set of M bins knapsacks and S is a set of N items. Each bin Cin B has capacity c j and for each item i and bin Cwe are given a size s i j and a profit p i j . Find a subset U of S that has a feasible packing in B such that the profit is maximized.

Regarding the subject matter of the present application B may be the set of available computing devices and virtual machine instances S may be the set of resource allocation requests B S may represent the resource allocations and the capacity may depend on the available computing capacity of the respective computing device . Size and profit may be defined in a variety of ways relating to for example computing capacity internal priority associated with the resource allocation request minimizing unused resources minimizing unfulfilled high priority requests minimizing unfulfilled requests in general minimizing reallocations and so on.

This problem is considered NP complete so it is difficult to solve in a reasonable amount of time for large data sets. According to various embodiments any one of multiple approaches may be used in determining solutions to the generalized assignment problem. One example involves a brute force method of trying all possible assignments which may be possible for some data sets given adequate resources on the computing devices . Another example involves an approximation approach that reduces the computational complexity of the problem and produces a result that is an approximation to the solution if not the actual solution. One particular example of such an approximation approach is described in a paper by Cohen et al. Technion Haifa Israel 2006 hereinafter Cohen which is incorporated herein by reference in its entirety as if it were fully produced herein.

Cohen describes an approximation approach that has a time complexity of O M f N M N wherein M is the number of computing devices and or virtual machine instances N is the number of resource allocation requests and O f N is the time complexity of an approximation approach for solving the knapsack problem. The knapsack problem is a similar problem that determines which of the resource allocation requests can be allocated in one available computing device or virtual machine instance so that the profit is maximized. The approach of Cohen guarantees a 1 approximation ratio where is the approximation ratio of an approach for solving the knapsack problem.

Other approaches may employ a more basic set of allocation rules . For example the resource allocation requests that are associated with a highest priority may be allocated first. Then the resource allocation requests having a nearest availability time may be allocated. If there is a conflict the earliest submission time may be used to determine which should be allocated first. Next the resource allocation requests may be allocated based at least in part on requested data center and type of computing device requested. Exact matches may be allocated first followed by non exact matches that are within a tolerance that is either customer specified or enforced by the resource allocation service . The resource allocation service may according to the allocation rules take into account spread within the data center or rack and or other location specifications . Other approaches to resource allocation may be utilized in other embodiments.

In the case of allocating virtual machine instances the configurations of the computing devices for virtual machines may be predetermined or determined automatically. For example various approaches may be used to determine virtual machine instance configurations automatically. This may be done for example by employing a so called P median solver that is adapted to obtain the optimum configurations of the virtual machine instances.

A P median solver may be employed for example to locate fulfillment centers relative to customers. In such a scenario there is a cost between each pairing between a customer and a fulfillment center given that there is a predefined number of fulfillment centers that an organization may wish to operate in a specific geographical area. A P median solver may then be used to find an optimal location of fulfillment centers such that shipping costs to customers is minimized. Stated another way for a given number of customers located at specific locations a number of possible fulfillment centers a fulfillment cost between each paired customer and fulfillment center and given a total number of fulfillment centers one may wish to open a P median solver may be used to determine which fulfillment centers should be opened such that the overall fulfillment cost is minimized.

For example let us consider a set I 1 . . . n of potential locations for p facilities a set J 1 . . . m of customers and n m matrix g of transportations costs for satisfying the demands of the customers from the facilities. The P median problem is to locate the p facilities at locations of l in order to minimize the total transportation cost for satisfying the demand of the customers. Each customer is supplied from the closest open facility based upon the following equation 

Given the foregoing a P median solver may also be employed to determine the optimal configurations of virtual machine instances for computing devices . Specifically a P median solver is set up in a similar way to that described above except that the locations of customers are replaced with the requested computing capacities and or other device parameters the possible locations of the fulfillment centers are replaced by the possible computing capacities and or other device parameters of the computing devices and the cost of shipping between a given fulfillment center and a given customer is replaced by the empty space calculated by subtracting a requested computing capacity from the computing capacity of a computing device times the quantity of resource requests.

The total number of fulfillment centers to be located is replaced by the total number of different virtual machine instance configurations that are to be used in the networked environment . Thus by employing a P median solver the optimal capacities configurations of computing devices employed in a networked environment may be determined.

After the resource allocations are generated automatically by the resource allocation service the resource allocations may be finalized. When finalized one or more automatic or manual tasks may be initiated in order to obtain install and or configure the computing devices for use by the customer. Various information may be provided to the customer at the client relating to the resource allocations of the customer. For example computing device identifiers login information and or other information may be provided in an email text message network page or other form of communication.

Turning now to shown is a flowchart that provides one example of the operation of a portion of the resource allocation service according to various embodiments. It is understood that the flowchart of provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the portion of the resource allocation service as described herein. As an alternative the flowchart of FIG. may be viewed as depicting an example of steps of a method implemented in the computing device according to one or more embodiments.

Beginning with box the resource allocation service obtains a resource allocation request from a customer at a client to allocate computing resources. In one embodiment the resource allocation service may generate one or more network pages such as web pages etc. that provide a user interface for generating the resource allocation request . Such network pages may be rendered by the browser on the display . In other embodiments other types of interfaces may be used e.g. command line interfaces automatic request generation interfaces and so on .

In box the resource allocation service determines the priority associated with the resource allocation request . The priority may be specified by the customer in the resource allocation request and or computed by the resource allocation service based for example on customer data resource data etc. As a non limiting example a customer may indicate a relatively high priority for a resource allocation request for allocating resources for an important service and the resource allocation service may assign a high priority to the resource allocation request due to the relative importance of the customer. In some cases the resource allocation service may modify or override a priority established by the customer.

In box the resource allocation service adds the resource allocation request to the request queue which may be a priority queue. In box the resource allocation service determines whether another resource allocation request remains to be processed and added to the request queue . If so the resource allocation service returns to box and obtains another resource allocation request . If no other resource allocation request remains to be processed the resource allocation service progresses from box to box .

In box the resource allocation service determines the available resources i.e. computing devices and or virtual machines from the resource data and the resource allocations that may be used to fulfill the resource allocation request . In various embodiments the resource allocation service may consider computing hardware that is on order or can be ordered and or capacity in a data center to determine the available resources. In one embodiment a P median solver may be employed to determine the virtual machine instance configurations that are to be used in the computing devices . In box the resource allocation service allocates resources to satisfy high priority resource allocation requests e.g. those resource allocation requests associated with a priority that meets a minimum threshold . In box the resource allocation service allocates resources for resource allocation requests having the nearest availability times . In other words the resource allocation service fulfills the resource allocation requests that are most urgent.

In box the resource allocation service allocates resources for the remaining resource allocation requests in the request queue based at least in part on resource specifications location specifications and or other factors such as submission time . Differing weights for the various factors may be applied in various embodiments according to the allocation rules . In one embodiment a min max approach may be used such that the greatest computing capacity requests are satisfied first and so on respecting the priorities of the resource allocation requests . In another embodiment an approach to solving the generalized assignment problem may be used to match up resource allocation requests to computing devices and or virtual machine instances.

In box the resource allocation service finalizes the resource allocations for the current availability time period. In other words resource allocations that are associated with availability times within a threshold time of the current time are finalized. Consequently computing devices may be ordered installed and or configured for the particular customer. The other resource allocations may be held in a pending state and may be reallocated for higher priority resource allocation requests or resource allocation requests that are otherwise a better fit. Thereafter the portion of the resource allocation service ends.

With reference to shown is a schematic block diagram of the computing device according to an embodiment of the present disclosure. The computing device includes at least one processor circuit for example having a processor and a memory both of which are coupled to a local interface . To this end the computing device may comprise for example at least one server computer or like device. The local interface may comprise for example a data bus with an accompanying address control bus or other bus structure as can be appreciated.

Stored in the memory are both data and several components that are executable by the processor . In particular stored in the memory and executable by the processor are the resource allocation service and potentially other applications. Also stored in the memory may be a data store and other data. In addition an operating system may be stored in the memory and executable by the processor .

Turning now to shown is a schematic block diagram of a computing device according to an embodiment of the present disclosure. The computing device may be representative of a computing device . The computing device includes at least one processor circuit for example having a processor and a memory both of which are coupled to a local interface . To this end the computing device may comprise for example at least one server computer or like device. The local interface may comprise for example a data bus with an accompanying address control bus or other bus structure as can be appreciated.

Stored in the memory are both data and several components that are executable by the processor . In particular stored in the memory and executable by the processor may be one or more virtual machines and potentially other applications. Each virtual machine is representative of an instance of a virtual machine such as for example MI large etc. executing in the computing device . Each virtual machine may include an operating system executable in the virtual machine and any number of other applications and data. In some cases the computing device does not include a virtual machine . In addition an operating system may be stored in the memory and executable by the processor .

With reference to both it is understood that there may be other applications that are stored in the memories and are executable by the processors as can be appreciated. Where any component discussed herein is implemented in the form of software any one of a number of programming languages may be employed such as for example C C C Objective C Java JavaScript Perl PHP Visual Basic Python Ruby Delphi Flash or other programming languages.

A number of software components are stored in the memories and are executable by the processors . In this respect the term executable means a program file that is in a form that can ultimately be run by the processors . Examples of executable programs may be for example a compiled program that can be translated into machine code in a format that can be loaded into a random access portion of the memories and run by the processors source code that may be expressed in proper format such as object code that is capable of being loaded into a random access portion of the memories and executed by the processors or source code that may be interpreted by another executable program to generate instructions in a random access portion of the memories to be executed by the processors etc. An executable program may be stored in any portion or component of the memories including for example random access memory RAM read only memory ROM hard drive solid state drive USB flash drive memory card optical disc such as compact disc CD or digital versatile disc DVD floppy disk magnetic tape or other memory components.

The memories are defined herein as including both volatile and nonvolatile memory and data storage components. Volatile components are those that do not retain data values upon loss of power. Nonvolatile components are those that retain data upon a loss of power. Thus the memories may comprise for example random access memory RAM read only memory ROM hard disk drives solid state drives USB flash drives memory cards accessed via a memory card reader floppy disks accessed via an associated floppy disk drive optical discs accessed via an optical disc drive magnetic tapes accessed via an appropriate tape drive and or other memory components or a combination of any two or more of these memory components. In addition the RAM may comprise for example static random access memory SRAM dynamic random access memory DRAM or magnetic random access memory MRAM and other such devices. The ROM may comprise for example a programmable read only memory PROM an erasable programmable read only memory EPROM an electrically erasable programmable read only memory EEPROM or other like memory device.

Also the processors may represent multiple processors and the memories may represent multiple memories that operate in parallel processing circuits respectively. In such a case the local interfaces may be an appropriate network that facilitates communication between any two of the multiple processors between any of the processors and any of the memories or between any two of the memories etc. The local interfaces may comprise additional systems designed to coordinate this communication including for example performing load balancing. The processors may be of electrical or of some other available construction.

Although the resource allocation service the virtual machines and other various systems described herein may be embodied in software or code executed by general purpose hardware as discussed above as an alternative the same may also be embodied in dedicated hardware or a combination of software general purpose hardware and dedicated hardware. If embodied in dedicated hardware each can be implemented as a circuit or state machine that employs any one of or a combination of a number of technologies. These technologies may include but are not limited to discrete logic circuits having logic gates for implementing various logic functions upon an application of one or more data signals application specific integrated circuits having appropriate logic gates or other components etc. Such technologies are generally well known by those skilled in the art and consequently are not described in detail herein.

The flowchart of shows the functionality and operation of an implementation of one or more portions of the resource allocation service . If embodied in software each block may represent a module segment or portion of code that comprises program instructions to implement the specified logical function s . The program instructions may be embodied in the form of source code that comprises human readable statements written in a programming language or machine code that comprises numerical instructions recognizable by a suitable execution system such as processors in a computer system or other system. The machine code may be converted from the source code etc. If embodied in hardware each block may represent a circuit or a number of interconnected circuits to implement the specified logical function s .

Although the flowchart of shows a specific order of execution it is understood that the order of execution may differ from that which is depicted. For example the order of execution of two or more blocks may be scrambled relative to the order shown. Also two or more blocks shown in succession in may be executed concurrently or with partial concurrence. Further in some embodiments one or more of the blocks shown in may be skipped or omitted. In addition any number of counters state variables warning semaphores or messages might be added to the logical flow described herein for purposes of enhanced utility accounting performance measurement or providing troubleshooting aids etc. It is understood that all such variations are within the scope of the present disclosure.

Also any logic or application described herein including the resource allocation service and the virtual machines that comprises software or code can be embodied in any non transitory computer readable medium for use by or in connection with an instruction execution system such as for example processors in a computer system or other system. In this sense the logic may comprise for example statements including instructions and declarations that can be fetched from the computer readable medium and executed by the instruction execution system. In the context of the present disclosure a computer readable medium can be any medium that can contain store or maintain the logic or application described herein for use by or in connection with the instruction execution system. The computer readable medium can comprise any one of many physical media such as for example electronic magnetic optical electromagnetic infrared or semiconductor media. More specific examples of a suitable computer readable medium would include but are not limited to magnetic tapes magnetic floppy diskettes magnetic hard drives memory cards solid state drives USB flash drives or optical discs. Also the computer readable medium may be a random access memory RAM including for example static random access memory SRAM and dynamic random access memory DRAM or magnetic random access memory MRAM . In addition the computer readable medium may be a read only memory ROM a programmable read only memory PROM an erasable programmable read only memory EPROM an electrically erasable programmable read only memory EEPROM or other type of memory device.

It should be emphasized that the above described embodiments of the present disclosure are merely possible examples of implementations set forth for a clear understanding of the principles of the disclosure. Many variations and modifications may be made to the above described embodiment s without departing substantially from the spirit and principles of the disclosure. All such modifications and variations are intended to be included herein within the scope of this disclosure and protected by the following claims.

