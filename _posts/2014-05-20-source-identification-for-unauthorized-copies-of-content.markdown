---

title: Source identification for unauthorized copies of content
abstract: Systems and methods for authentication generate keys from secret credentials shared between authenticating parties and authenticators. Generation of the keys may involve utilizing specialized information in the form of parameters that are used to specialize keys. Keys and/or information derived from keys held by multiple authorities may be used to generate other keys such that signatures requiring such keys and/or information can be verified without access to the keys. Keys may also be derived to form a hierarchy of keys that are distributed such that a key holder's ability to decrypt data depends on the key's position in the hierarchy relative to the position of a key used to encrypt the data. Key hierarchies may also be used to distribute key sets to content processing devices to enable the devices to decrypt content such that sources or potential sources of unauthorized content are identifiable from the decrypted content.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09305177&OS=09305177&RS=09305177
owner: Amazon Technologies, Inc.
number: 09305177
owner_city: Seattle
owner_country: US
publication_date: 20140520
---
This application is a divisional application of U.S. patent application Ser. No. 13 431 898 filed on Mar. 27 2012 entitled SOURCE IDENTIFICATION FOR UNAUTHORIZED COPIES OF CONTENT the content of which is incorporated by reference herein in its entirety.

This application is related to and incorporates by reference for all purposes the full disclosure of co pending U.S. patent application Ser. No. 13 431 760 filed concurrently herewith entitled MULTIPLE AUTHORITY KEY DERIVATION and co pending U.S. patent application Ser. No. 13 431 882 filed concurrently herewith entitled HIERARCHICAL DATA ACCESS TECHNIQUES .

The security of computing resources and associated data is of high importance in many contexts. As an example organizations often utilize networks of computing devices to provide a robust set of services to their users. Networks often span multiple geographic boundaries and often connect with other networks. An organization for example may support its operations using both internal networks of computing resources and computing resources managed by others. Computers of the organization for instance may communicate with computers of other organizations to access and or provide data while using services of another organization. In many instances organizations configure and operate remote networks using hardware managed by other organizations thereby reducing infrastructure costs and achieving other advantages. With such configurations of computing resources ensuring that access to the resources and the data they hold can be challenging especially as the size and complexity of such configurations grows.

As another example the distribution of content such as audio video electronic games electronic books and the like from those who own rights in the content to those who may consume the content can create numerous challenges. For example content providers and others involved in content s distribution often struggle with competing goals of widespread distribution and preventing unauthorized copying. Conventional techniques for controlling access to content often do not balance such goals effectively. For instance in order to ensure that content can be consumed with minimal burden to the consumer conventional techniques make it difficult to identify the source of unauthorized copies of content.

In the following description various embodiments will be described. For purposes of explanation specific configurations and details are set forth in order to provide a thorough understanding of the embodiments. However it will also be apparent to one skilled in the art that the embodiments may be practiced without the specific details. Furthermore well known features may be omitted or simplified in order not to obscure the embodiment being described.

Techniques described and suggested herein include systems and methods for key generation and applications for using generated keys in accordance with various embodiments. The keys may be used for various purposes such as authentication and participation in message signing schemes encryption and or other purposes for which keys are useful. In an embodiment a computing resource provider provides computing services to customers based at least in part on electronic requests received from user devices of the services. The services may be any suitable service that may be offered including but not limited to access to data access to computing resources to perform operations access to data storage services and the like. In some instances services and other access to computing resources may require the direct and or indirect use of keys managed by multiple authorities some of which may be distrustful of others and therefore unwilling to share their keys with others.

In some embodiments to ensure that services are provided in a secure manner various embodiments of the present disclosure utilize techniques to authenticate requests also referred to as messages to ensure that the requests are legitimate. In an embodiment requests are authenticated using a Hash Message Authentication Code HMAC algorithm or other suitable algorithm as discussed in more detail below.

In an embodiment both the authenticating party e.g. user of services or party acting on behalf of the user and the authenticator e.g. provider of services or party acting on behalf of the provider share a secret credential which may be referred to as a key. An authenticator may store shared secret credentials for multiple users. As part of a transaction the authenticating party may sign requests using the shared secret credential thereby forming a signature. The signature may be provided to the authenticator with the requests. The authenticator may use its own copy of the shared secret credential to generate a signature for the received requests and by comparing if the generated signature matches the received signature for example by being identical to the received signature determine whether the requests were signed using the shared secret credential. If determined that the requests were signed using the shared secret credential the requests may be considered authentic and therefore it may be determined that the requests should be fulfilled.

In some embodiments the authenticator obtains information from other sources to generate the shared key. For example the authenticator may require that an authenticating party prove access to keys held by multiple authorities. To prove such access in an embodiment the authenticating party may utilize a signing key that is generated by the authenticating party or another system based at least in part on the keys of the multiple authorities. Techniques for constructing such keys are described in more detail below. The authenticator may also obtain the keys of the multiple authorities and or information derived from to generate its own signing key that is usable to verify signatures submitted by the authenticating party. In an embodiment signing keys of the authenticating party and the authenticator are generated in a manner such that the order of information derived from the multiple authorities keys is inconsequential.

Because the interactions described above are symmetric i.e. both utilize common information when performing their roles the shared secret credentials that an authenticator keeps can be used to both authenticate authenticating parties or to act on their behalf. As a result a high degree of security is desirable to protect these credentials. Maintaining high degrees of security may have negative performance and availability consequences. For example maintaining a high degree of security may include maintaining a centralized system for key storage. Such centralized systems however may cause a scaling bottleneck since the addition of users and or services causes a greater burden to the centralized system. If such a centralized system fails it may be difficult or impossible to authenticate requests. Thus centralization provides both advantages for security and disadvantages for scaling and availability of services. In addition a centralized system makes it difficult in instances involving authorities whose keys are required but who may distrust one another. For example an authority may not trust the centralized system and or vice versa and therefore the authority and centralized system may not provide each other s keys to one another.

In an embodiment negative impacts of such systems and other systems are reduced by utilizing a signing protocol that derives from shared secret credentials artifacts that may be used to prove that an authenticating party has a shared secret credential and therefore is likely authorized to obtain access specified in requests signed with the artifacts. In an embodiment such artifacts are obtained by configuring authenticator computer systems to accept as a signature a value that is based at least in part on a derivation of a shared credential instead of the shared credential itself. The derivation of the shared credential may be such that as described more fully below the derivation does not allow for practical determination of the shared credential. In addition in various embodiments variations of the signing protocol allow for secret credentials to be derived from secret credentials of multiple authorities to allow proof of access to the secret credentials of the multiple authorities.

Returning to the example utilizing HMACs in an embodiment values for X are chosen to provide additional advantages. As noted X may but does not necessarily correspond to one or more semantic meanings Semantic meanings such as time stamps service names regional names and the like are used in an embodiment to provide a system where artifacts created in accordance with techniques of the present disclosure provide corresponding restrictions on use of keys derived from X. In this manner even though compromise of keys generated may allow authentication by undesired parties restrictions used to encode keys allow for the adverse effects to be minimized when keys are compromised. As an example time restrictions used to derive keys provide an efficient way for a system to check if a submitted signature was signed with a key that was valid at the time of signature submission. As a concrete example if a current date is used to derive a key and an authenticator system only accepts signatures submitted on the current date the authenticator system will determine that signatures generated using keys derived with different dates are invalid. Similarly a key derived with an identifier of a particular service would be invalid for use with another service. With respect to multiple authorities restrictions of one authority may be combined with restrictions of other authorities. For instance if one authority derives a secret credential from a date and another authority derives a secret credential from a geographic region a secret credential derived from the credentials of both authorities may only be valid for the geographic region on the date. Other examples are provided below.

As noted various techniques of the present disclosure allow for multiple parameters to be used to derive keys. Parameters for key generation may be referred to as key derivation material. In an embodiment keys are derived from multiple parameters through multiple use of an HMAC function. For example a key may be computed as follows 

The techniques described herein are also usable in other contexts. For example while much of the present disclosure utilizes signature generation and verification for the purpose of illustration the techniques are applicable in other contexts such as data encryption and digital rights management. For example in an embodiment keys derived such as described above may be used to implement a system in which a hierarchy of encryption keys is generated. Keys in the hierarchy may correspond to authorities in an organizational hierarchy. The term organization unless otherwise clear from context is intended to be read in the broad sense to imply a set of principals organized in some manner. In an embodiment keys in the key hierarchy are distributed according to the organizational hierarchy. In particular the keys are distributed to correspond with access rights of those in the organizational hierarchy. For instance the keys may be distributed such that a principal with a key in the hierarchy is able to decrypt data that was encrypted with a different key that was derived from the key. In this manner if a key is lost or otherwise inaccessible a key from higher in the hierarchy will be usable to decrypt the data.

To enable such a system data may be maintained from which one with a key in the hierarchy may be able to derive a key that was both derived from the key and used to encrypt data. As an example parameters for deriving the key may be stored in a data store. Data may be stored in connection with encrypted data that identifies the key that encrypted the data. The data that identifies the key may be used to locate the parameters that were used to derive the key. As an alternative the parameters may be stored in connection with the encrypted data such that if the key is inaccessible a key higher in the hierarchy may be used with the parameters to derive the key. A file management system or other system may maintain such information. For instance when a principal uses a key to encrypt data and save the encrypted data the parameters or information that is usable to identify the parameters may be saved as metadata for the data.

Techniques described herein also may be used in the context of digital rights management DRM . For instance keys derived according to the techniques described herein may be used to derive keys for encrypting content or generally information or for encrypting keys for decrypting the content or other information . In addition techniques described herein may be used to identify sources of unauthorized copies of content. In particular in an embodiment techniques for deriving keys such as those discussed above may be used to generate a hierarchy of keys. By providing a device such as a content processing device a key at a non leaf level of the key hierarchy and parameters for deriving keys lower in the hierarchy a device can be given a access to a large number of keys by only providing the device a single key.

In an embodiment a hierarchy of keys is generated and subsets of the keys are provided to devices. Special care is taken in the provisioning of keys to devices. For example in an embodiment keys are distributed to ensure that subsets of the devices are provided different sets of keys. The subsets of devices may comprise multiple devices and or single devices. In addition in an embodiment keys are provided and encrypted content is published such that authorized devices are able to use at least one of the keys to decrypt the content.

Content may be published in a particular way to enable the identification of sources of unauthorized copies of the content. In an embodiment the content comprises a plurality of records. Each of the records may comprise encrypted content and information from which a key may be identified to decrypt the content. Some of the records may have multiple copies of the content and information from which a key for descripting each copy may be identified to decrypt the content. The keys used to encrypt and therefore decrypt each copy of content in a record may vary. For example one copy of content in a record may be encrypted using one key while another copy may be encrypted using another key. In addition the copies of content for a record may also vary among themselves such as by varying pixels for video content or otherwise varying the content copies. The content copies may be varied so as to be imperceptible or virtually imperceptible to a person but in a manner such that a computing device can distinguish the copies from one another.

In many instances unauthorized parties process encrypted content and publish or otherwise make unauthorized use of the content in a manner contrary to a holder of rights in the content. For example users often referred to as pirates may process content record the output of the processing and publish the result with the protection removed using keys extracted from a device often for profit. When content is encoded using the techniques described herein such unauthorized copies of the content can be obtained and analyzed to identify the source of the content. In particular records of the output that correspond to records of the original content that have multiple varied copies of a portion of the content may be identified and used to identify which keys were used to decrypt the content. Because the keys provided to the devices vary among the devices the keys used to decrypt the content effectively function as an identifier of one or more devices. For example if it is determined that a key K was used to decrypt the content it may be determined that only devices that were provided K are suspect. Similarly if it is known that a set of ten keys were used to decrypt the content there may be a relatively small number of devices perhaps a single device that was provided those exact keys. In this manner a relatively small amount of extra information can be included with content in order to effectively identify devices that produced unauthorized copies of the content.

The illustrative environment includes at least one application server and a data store . It should be understood that there can be several application servers layers or other elements processes or components which may be chained or otherwise configured which can interact to perform tasks such as obtaining data from an appropriate data store. As used herein the term data store refers to any device or combination of devices capable of storing accessing and retrieving data which may include any combination and number of data servers databases data storage devices and data storage media in any standard distributed or clustered environment. The application server can include any appropriate hardware and software for integrating with the data store as needed to execute aspects of one or more applications for the client device handling a majority of the data access and business logic for an application. The application server provides access control services in cooperation with the data store and is able to generate content such as text graphics audio and or video to be transferred to the user which may be served to the user by the Web server in the form of HTML XML or another appropriate structured language in this example. The handling of all requests and responses as well as the delivery of content between the client device and the application server can be handled by the Web server. It should be understood that the Web and application servers are not required and are merely example components as structured code discussed herein can be executed on any appropriate device or host machine as discussed elsewhere herein.

The data store can include several separate data tables databases or other data storage mechanisms and media for storing data relating to a particular aspect. For example the data store illustrated includes mechanisms for storing production data and user information which can be used to serve content for the production side. The data store also is shown to include a mechanism for storing log data which can be used for reporting analysis or other such purposes. It should be understood that there can be many other aspects that may need to be stored in the data store such as for page image information and to access right information which can be stored in any of the above listed mechanisms as appropriate or in additional mechanisms in the data store . The data store is operable through logic associated therewith to receive instructions from the application server and obtain update or otherwise process data in response thereto. In one example a user might submit a search request for a certain type of item. In this case the data store might access the user information to verify the identity of the user and can access the catalog detail information to obtain information about items of that type. The information then can be returned to the user such as in a results listing on a Web page that the user is able to view via a browser on the user device . Information for a particular item of interest can be viewed in a dedicated page or window of the browser.

Each server typically will include an operating system that provides executable program instructions for the general administration and operation of that server and typically will include a computer readable storage medium e.g. a hard disk random access memory read only memory etc. storing instructions that when executed by a processor of the server allow the server to perform its intended functions. Suitable implementations for the operating system and general functionality of the servers are known or commercially available and are readily implemented by persons having ordinary skill in the art particularly in light of the disclosure herein.

The environment in one embodiment is a distributed computing environment utilizing several computer systems and components that are interconnected via communication links using one or more computer networks or direct connections. However it will be appreciated by those of ordinary skill in the art that such a system could operate equally well in a system having fewer or a greater number of components than are illustrated in . Thus the depiction of the system in should be taken as being illustrative in nature and not limiting to the scope of the disclosure.

A fault zone in an embodiment is a collection of computing resources that are separated by one or more fault boundaries such that each fault zone is tolerant to a fault of another fault zone. As an example each fault zone may be a separate data center. Thus if one data center ceases being operational perhaps due to a power outage or other disruptive event other data centers may continue to operate. The fault zones may be each located in different geographic locations and some or all of the fault zones may be separated by geopolitical boundaries. For example two or more of the fault zones may be in different countries. It should be noted that for the purpose of illustration the present disclosure provides numerous examples where fault zones are data centers. However fault zones can be defined in numerous other ways. For example separate rooms in the same data center may be considered separate fault zones in accordance with various embodiments. As another example computing resources in the same location but supported by different backup power generators and or supported by different network resources may be considered different fault zones. As yet another example data centers may be clustered such that each cluster of data centers may be considered a fault zone. Further there may be many reasons a fault zone may fail including reasons relating to power grid operation public network operation political assertions of power and other reasons.

In an embodiment customers communicate with the computing resource provider over a network such as the Internet. The customers may have resources configured in one or more of the fault zones and may communicate with the resources by sending electronic messages such as messages invoking a web service application programming interface API of the computing resource provider in order to configure and operate the resources. Customers may utilize resources in multiple fault zones in order to decrease the effects of potential failures that impact the customers resources. A customer who utilizes resources of the computing resource provider to operate a publicly accessible website may for example maintain web and other servers in separate fault zones so that if servers in one fault zone fail the public may still access the web site by accessing servers in another fault zone.

It should be noted that the various embodiments illustrated in as with all illustrative embodiments shown in the figures and described herein are illustrative in nature and that variations are considered as being within the scope of the present disclosure. For example other services different from those illustrated may be provided in the fault zone in addition to or instead of the services illustrated. As illustrated by the ellipses in for instance additional services may be operated in the fault zone . In addition some services may utilize other services. For example multiple services such as a block level data storage service and a virtual computer system service may be utilized together to provide other services such as a relational database service an electronic mail service and generally any type of computing service that can be provided using resources of a computing resource provider.

As illustrated in each of the services of the computing resource provider may include a separate verifier . The verifier may be a computing device collection of computing devices application module or other resource that verifies various attestations made by customers and possibly by other computer systems. In an embodiment each of the verifiers verifies message signatures that are produced in accordance with the various embodiments herein and then provided by customers in connection with requests to access computing resources as described in more detail below. Keys and other relevant information may be propagated to the verifiers from a central key authority to enable the verifiers to verify information. It should be noted that each service having a verifier is an illustrative example of a particular embodiment but that other arrangements are within the scope of the present disclosure. For example a single verifier may support multiple services even all services and may even support multiple fault zones.

As noted above various embodiments of the present disclosure allow for various levels of authority to be given for different reasons. is a diagram that illustrates an example way of a manner in which various elements participating in a computing environment may be allocated different scopes of authority in accordance with at least one embodiment. In a computing resource provider is illustrated. In an embodiment the computing resource provider has authority over its resources and as illustrated in is able to apportion that authority among various participants in the resources use. It should be noted that for the purpose of illustration consistent with other illustrations and descriptions therein shows a computing resource provider having authority over a domain. However embodiments of the present disclosure are also applicable to other masters of authority domains. For instance a master of authority may be a government or governmental organization a sub organization of another organization or generally any entity with authority over some domain.

Returning to the illustrative example of the computing resource provider manages its authority by allowing different sub entities to have authority over different sub domains. For example as shown in the figure each of a number of fault zones of the computing resource provider are provided a corresponding sub domain of the computing resource provider s domain. Thus each fault zone may have authority over its own resources but not resources of another fault zone although in some instances authority over some sub domains may be shared . Thus in accordance with an embodiment a fault zone may provide user access to computing resources in the fault zone but not access to computing resources of another fault zone.

As noted above each fault zone may include one or more services . Accordingly as illustrated in each service may be responsible for a sub domain of the domain of the corresponding fault zone . Thus a service in an embodiment can provide access to resources accessible by the service but not to other services. Each service may serve one or more customers and therefore each customer may be responsible for a sub domain of authority of a corresponding service . Thus in an embodiment a customer may provide access to its own resources involved with a corresponding service but not to another customer s service. As a concrete illustrative example if the service is a virtual computing resource service a customer may provide access such as public access to its own virtual computer systems but not without permission to virtual computer systems of other customers.

As noted the particular allocation of authority as illustrated in is for the purpose of illustration and numerous variations are considered as being within the scope of the present disclosure. As noted embodiments of the present disclosure are applicable to domains of authority outside of domains managed by computing resource providers and sub domains may be determined according to particular needs and circumstances. Further shows customers of a virtual resource provider having the smallest sub domains of authority. However techniques of the present disclosure may allow customer domains to be divided into one or more sub domains.

Various embodiments of the present disclosure relate to message signatures. is a diagram illustrating an example manner in which information may be communicated among participants in a message signature verification process in accordance with at least one embodiment. In an embodiment a key source provides a key to both a message submitter and a signature verifier . The key source may be a computer system configured to provide keys to at least the message submitter and the signature verifier . The key source may also generate the keys using various techniques including various embodiments described herein or may obtain generated keys from another source. The message submitter may be a computer system configured to submit a message and a signature to the signature verifier or other component that operates in connection with the signature verifier . The computer system of the message submitter may be a computer system of a customer of a computing resource provider for example. The signature verifier may be a computer system configured to receive messages and signatures and analyze the signature to verify that the message is authentic as discussed below. Briefly the signature verifier may analyze a received signature and message to determine if the signature was generated using the correct key K. It should be noted that while shows a key source separate from the message submitter and signature verifier either of the message submitter or signature verifier could also be a key source. For example customers of a computing resource provider may provide their own keys. Customer keys may then be provided to the signature verifier for verification of signatures. In addition the message submitter and signature verifier may each receive different keys from the key source . For example the message submitter may receive a key and the signature verifier may receive a key that is derived using the various embodiments of the present disclosure from the key received by the message submitter .

As illustrated in the signature verifier receives messages and corresponding signatures from the message submitter . The messages may be for example electronic requests for access to a computing service . The messages may for instance encode API calls to a web service. If analysis of the signature and message indicates that the messages are authentic then the signature verifier notifies the service or a component controlling access to the service that the message submitter can have the requested access. For example the signature verifier may pass the received message to the service to enable the service to fulfill the request. Accordingly the service may be a computer system operable to fulfill requests such as the various services described above. It should be noted that while various descriptions of various components of and other components describe the components as possibly being implemented as computer systems configured to perform certain actions components may also comprise multiple computing devices such as networks of computing devices that are collectively configured to perform the actions.

In an embodiment the process includes obtaining a key K. The key can be obtained in any suitable manner. For example the key may be generated by a computer system performing the process . The key may be electronically received by a computer system performing the process . Generally obtaining the key may be performed in any suitable manner. The key may be any suitable key for a particular signature algorithm being utilized. For example if a hash based message authentication code HMAC scheme is being used with a secure hash algorithm SHA 256 cryptographic hash function the key may be a sequence of bytes such as a sequence of 64 or fewer bytes. Different cryptographic hash functions such as SHA 224 SHA 384 and SHA 512 may also be used.

In an embodiment the process also includes canonicalizing a message M to form a canonicalized message M. Canonicalizing a message may include arranging information in the message in a format that allows a verifier to verify whether a signature of the message is valid. Generally many information communication protocols transform the bits that comprise a message while leaving the message semantically identical. As a result two semantically identical messages may comprise different sets of bits and therefore may result in different signatures. Accordingly canonicalization allows for a straightforward way of ensuring that a signature can be verified. It should be noted however that some embodiments of the present disclosure do not require message canonicalization. For example if various protocols being utilized do not result in semantically identical messages comprising different sets of bits canonicalization may not be necessary and may be omitted. Generally canonicalization may be omitted in any instance where signature verification is able to proceed successfully without manipulation of a signed message.

In an embodiment a signature is generated by computing HMAC K M where HMAC is an HMAC function such as described above. HMAC functions have several properties that make them particularly useful for various embodiments of the present disclosure. For example HMAC functions can be computed efficiently by a computer system thereby leaving computing resources available for other tasks. In addition HMAC functions are preimage resistant non invertable . For instance given a signature S HMAC K M with K a key and M a message essentially no information is gained about the key K. For example from S it would be computationally impossible or at least impractical to determine K from S. HMAC functions are also second preimage resistant. In other words given S HMAC K M and M it is impossible or at least computationally impractical to determine a message M different from M such that S HMAC K M . In addition HMAC functions are forgery resistant. For instance given an oracle for S HMAC K M querying the oracle N times N a positive integer allows for the production of at most N signature message pairs. In other words given a set of signature message pairs it is impossible or computationally impractical to determine the key or determine a function that will produce a correct signature for a message not in the set.

While HMAC functions are particularly useful for various embodiments other functions can be used. For example any function with the above properties of HMAC functions may be used. In addition other functions that do not necessarily have all or any of the above properties can be used such as in circumstances where security is not of primary concern and or where security is a concern but is maintained through other mechanisms. It should be noted that various illustrations of various embodiments show specific inputs into HMAC functions but that variations are possible. For example the inputs to an HMAC function or other function may be different. As described above for instance one input is a key. However this input may be derived from a key or otherwise based at least in part on a key. As an illustrative example input may comprise a key with information such as a signature scheme identifier perhaps a version identifier that is added to the key as a suffix prefix or otherwise. As another example input may be information that is obtained by use of a mapping of the key to the information which may be another key. Similarly an input shown as a message may be derived from a message. As another example variation considered as being within the scope of the present disclosure the signature may not be the output of an HMAC function but one or more values that are derived from the output of a HMAC function or other suitable function . In some embodiments the key and the message may be passed into the function in the reverse order.

Returning to the description of once the signature is generated by computing HMAC K Mc the signature and message M are provided to a receiver which may be a computing device that verifies signatures or another computing device involved in a signature verification process such as a computing device providing an interface for communication of messages and signatures. As with all embodiments explicitly described herein variations are considered as being within the scope of the present disclosure. For example the canonicalized message Mmay be provided to the receiver instead of or in addition to the message M. In addition providing the message M and the signature to the receiver may also include providing other information such as a key identifier that may be used to identify in a data store that associates keys with key identifiers. Further other information such as parameters that encode policy as discussed below may be provided with the message M and signature.

In an embodiment a signature S and message M are received . The signature S and message M may be received electronically from a submitter such as a computing device that performed the process of . The message M is then canonicalized to determine M in accordance with an embodiment. Canonicalization of the message M in various embodiments ensures that the signature S can be verified. Accordingly in an embodiment the process includes generating a signature S by computing HMAC K M . In an embodiment S is equal to HMAC K M although S can be derived from HMAC K Mc in various embodiments. For the purpose of illustration the remainder of the process will be described with the assumption that S HMAC K M but that numerous variations are within the scope of the present disclosure.

Accordingly in an embodiment a determination is made whether S is equal to the received signature S. In other words a determination is made whether the received signature is sufficient for example because it is a signature that was generated using the key K. Thus in an embodiment if it is determined that S and S are not equal then the signature is unverified. However if the S is equal to S then the signature is verified. Depending on whether the signature is verified appropriate action may be taken. For instance if the message was a request for access to a computing resource the requested access may be denied at least temporarily . Similarly if the message was a request for access to the computing resource and the signature was verified the requested access may be granted. It should be noted however that the appropriate action to be taken can vary widely in various embodiments depending on the reason s signatures are received and verified.

As noted above various embodiments of the present disclosure apply to numerous environments. In many environments it is useful to have centralized management of various aspects of security maintenance. for example is a diagram illustrating an example manner of distributing keys in accordance with at least one embodiment. In a central key authority maintains one or more data stores collectively referred to as a data store that contain various keys utilized by an organization. The keys may correspond for example to users of computing devices of the organization. Each user of a set of users may for instance be assigned one or more keys. In an embodiment at least some keys correspond to customers and or users of the customers of the organization. For instance in an embodiment the organization is a computing resource provider and each customer of the computing resource provider corresponds to one or more keys that allow the customers users to access computing resources maintained by the computing resource provider. Other adaptations of the process of in accordance with the variations described above with are also within the scope of the present disclosure.

As illustrated in the key authority propagates keys to a plurality of key zones . A key zone may be a domain of the organization in which a received key is valid. For example referring to each key zone may correspond to a fault zone such as a data center. Key zones may be but are not necessarily geographically defined. For example each key zone may correspond to a country region or other geographically defined region. Key zones may also be defined in other ways. For example each key zone may correspond to a service provided by a computing resource provider to a customer of an organization and the like. While not illustrated as such key zones may have sub zones. For example a key zone may correspond to a country. Inside the country may be multiple regions each corresponding to sub zones of the key zone. Keys may be propagated to sub zones in such embodiments.

As illustrated in key zones may propagate keys to one or more verifiers for the key zone. For instance if a key zone corresponds to a data center a computing device of the data center may propagate keys to verifiers for each of a plurality of services supported by computing resources in the data center. In this manner the verifiers can be used to verify signatures submitted in connection with various requests. This relieves the computing resources of the key authority themselves from verifying signatures and also reduces latency and bandwidth requirements especially in instances where the key authority is geographically distant from services to which requests are made.

Key propagation may be made in various ways. In an embodiment keys are distributed over secure channels to various recipients. In some embodiments the key authority propagates the same keys to each key zone. Also some keys may be usable in multiple key zones. The key authority may propagate keys usable in multiple key zones to those multiple key zones while refraining from propagating those keys to key zones where the keys cannot be used. Thus in the example of a computing resource provider the key authority may propagate a key for a customer only to those key zones where the customer is able to use the key such as data centers used to maintain computing resources of the customer.

Various embodiments of the present disclosure also provide for key propagation in manners providing for numerous advantages. is a diagram illustrating an example manner of distributing keys in a manner that provides various scopes of authority in accordance with at least one embodiment. As with the diagram includes a key authority with a key K that propagates keys directly or indirectly to various key zones and verifiers such as in accordance with the above description in connection with . While for the purpose of illustration the diagram is described in connection with a single key K and keys derived from K the embodiments described herein apply when the key authority performs such actions for numerous keys.

As illustrated in the key K is used as a basis for other keys derived from K. For example from K a key Kis derived and propagated to a first key zone Key Zone . As such the key K or keys derived from the key K is usable in the first key zone but not in other key zones that do not have K or a key derived from the key K . Similarly each of a number of other key zones receive corresponding different keys derived from the key K. It should be noted that while shows keys derived from the key K being propagated from the key authority to corresponding key zones variations are possible. For example the key K may be propagated to the key zones and each key zone that receives the key K may use the key K to derive one or more corresponding keys. For example the key zone labeled Key Zone may receive the key K and derive K. Generally various tasks involved in key derivation and propagation may be performed differently than illustrated in various embodiments.

As shown in the illustrative example of the keys received by the key zones are used to derive keys that are propagated further. For example referring to the key zone labeled Key Zone a key Kthat is derived from the key K is used to derive additional keys K and K . The keys K and K are propagated to corresponding verifiers for use by the verifiers in verifying signatures. Thus a verifier that receives K would in an embodiment be able to verify a signature generated using K whereas a verifier that did not receive K would not be able to verify the signature. By propagating the keys in the manner illustrated in or variations thereof advantages are achieved. For instance by propagating the keys to numerous verifiers in multiple locations instead of one or more centralized verifiers lower latency is achieved. In addition referring to by propagating derived keys to other devices that in turn derive additional keys it is possible to spread computations over multiple devices over multiple locations thereby allowing for faster key derivation and increasing fault tolerance.

Derivations of keys may be performed in numerous ways. is a flowchart showing an illustrative example of a process of key derivation in accordance with at least one embodiment. In an embodiment the process includes obtaining a key K such as in a manner described above. The key Kmay be any suitable key such as described above. In addition the key Kmay be but is not necessarily derived from another key such as by performance of the process or another process. Upon obtaining the key K a new key is derived from K. In the illustrative example of a new key K Kis computed as or based at least in part on HMAC K R where Ris information identifying one or more restrictions on the key K. Rmay be for instance a sequence of bits that encodes information indicating where the key Kis usable. For example Rmay encode a key zone where the key Kmay be used. Restrictions may be based at least in part on geography time user identity service and the like. Example restrictions are provided in the description below.

Further as discussed more below the process may be used multiple times to derive a key. For example a key generated using the process or a variation thereof may be used to generate another key using the same or another restriction. Using the terminology in the figure Rmay be for instance a sequence of bits that encodes information indicating where the key Kcould be used. Kwould become the key Kfor a next iteration of the process. For example if the process was used to generate a key based on a geographic restriction the key generated may be used to generate a key with a date based restriction. Such a process may be utilized multiple times to use multiple restrictions to derive a key. As discussed more fully below by using multiple restrictions to derive a key one or more verifiers can enforce policy while verifying signatures. As a brief illustrative example as part of a signature verification process a verifier may determine an expected signature using a restriction such as an encoding of a current date. If a signature was provided that was generated on a different date then verification of the signature would fail in accordance with an embodiment. Generally if use of a signature does not comply with a restriction used to derive a key signature verification may fail in accordance with various embodiments.

As illustrated in the request may be canonicalized to form a message M which is as input into an HMAC function to generate the signature. Of course variations including variations where canonicalization is not necessary and where functions other than HMAC functions are used may be utilized in accordance with various embodiments. In addition shows a particular example derivation of a signature in accordance with an embodiment. However more or fewer restrictions may be used in deriving the signature and restrictions may be used in a different order than illustrated. In addition while shows derivation of a signature the techniques may be applied to derive other objects that may not be considered signatures in all applications. For example the techniques illustrated in and elsewhere may be used generally to derive keys.

In the example of the various restrictions each define a domain and the intersection of the defined domains defines the manner in which the signature generated with the signing key would be valid. In this specific example a signature generated with the signing key illustrated in would be valid on the date specified in the region specified and for the service specified using the protocol specified. Thus if a request is signed using the signing key but on a different date than specified by the input to the signing key the signature to the request may be considered unverified even if the request was made for the specified service and in the specified region.

As with other embodiments described herein variations are considered as being within the scope of the present disclosure. For instance shows repeated use of an HMAC function. Multiple functions may be used to derive a signature and in some embodiments HMAC functions are not used in every part of the derivation. Also as noted different restrictions different functions and different numbers of restrictions may also be used in various embodiments.

Key derivation may be performed in numerous ways in accordance with various embodiments. For instance a single computing device could compute a signing key in accordance with some embodiments. In accordance with other embodiments multiple computing devices may collectively compute a signing key. As a specific illustrative example referring to one computer may compute

As another example a separate computer system may perform a different layer in the computation of the signing key. Referring to the example in the previous paragraph instead of a single computer computing Kregion one computer may compute

The signer computer system may also in various embodiments generate Kon its own if for example the restrictions R Rare made available to the signer and or made publicly available. In addition the signer computer system may perform only part of the process for deriving Kon its own in various embodiments. For instance the signer may obtain perhaps from an appropriate key provider computer system K for some integer i that is less than N and restrictions Rthrough R. The signer may then use Kand restrictions Rthrough Rto generate the signing key K. Other variations are also considered as being within the scope of the present disclosure.

The signer computer system may use the key Kto sign messages to be verified by the verifier . For instance as illustrated the signer computes the signature S HMAC K M where Mis a canonicalized version of a message M also sent to the verifier. Because the verifier has K the verifier can independently canonicalize the message M and compute HMAC K M to determine if the result of the computation matches the received signature S.

It should be noted that variations of the process illustrated in and other processes described herein while shown as involving multiple use of HMAC functions multiple different functions may be used to derive keys. For instance different types of message authentication code MAC functions may be used at different times in deriving a key. For example the output of one type of MAC function may be used as the basis for input into another type of MAC function. Generally other types of functions may be used instead of and or in addition to HMAC functions in a key derivation process and in various embodiments it is not necessary to use the same type of function multiple times to derive a key but different functions may be used each time a function is required.

The techniques described above which are further described in U.S. patent Ser. No. 13 248 962 filed on Sep. 29 2011 and titled Parameter Based Key Derivation and variations thereof may be used to construct keys that are usable for actions that depend on multiple authorities. For example the above techniques may be modified to provide a key that is derived from multiple keys each belonging to a corresponding authority and where at least one of the keys is not accessible by at least one of the authorities. As a concrete example variations of the above techniques may be used to generate a key that is valid only if it is derived from two keys each accessible by an authority but inaccessible to the other authority. A key holder of such a key may thereby be able to prove access to both keys and therefore validity of the key.

In many instances it is desirable for the performance of certain actions to be requisite on involvement of multiple authorities. For example the accomplishment of an act may require the use of two separate services. For security purposes the two services may for various reasons be mutually distrustful of one another or perhaps one of the systems does not trust the other. Therefore key sharing among the systems may be restricted accordingly. for example shows circles that each represent the domain of authority of a corresponding authority. The authorities in are labeled Authority 1 and Authority 2. As illustrated in the domain of Authority 1 includes a domain over which Authority 1 is the sole authority and a subdomain over which Authority 1 and Authority 2 are jointly responsible. Authority 2 likewise includes a portion of its domain over which Authority 2 has sole authority. As shown in for example the intersection of the domains of Authority 1 and Authority 2 may correspond to actions for which permission must be granted from both Authority 1 and Authority 2 for the actions to occur.

Encoding the key seed in this manner in an embodiment results in the key seed being a logical statement of the precise key use that is full restriction among all authorized keys that a key holder is authorizing by producing a signature. In an embodiment the process includes obtaining a partial key for each key holder including in some embodiments a partial key for a message signor performing the process . A partial key for a key holder in an embodiment is a key specialized along a key path for a specific key holder. For example an authority may have a key which is secret to that authority and perhaps a higher authority such as a key authority that is an authority operable to generate and or distribute keys for use and or derivation of other keys. By encoding restrictions into that key such as by using techniques described above a partial key may be generated. Continuing the present example a partial key may have the form 

Obtaining the partial key for each key holder may be performed in various ways. For example when each key holder is separated from a device performing the process by a network each key holder may transmit their partial keys electronically over the network in a message or other transmission that encodes the partial key. As another example information from which the partial key may be obtained may be transmitted to a computing device performing the method . For instance in an embodiment where specializing a key down a key path involves multiple indications of an HMAC process information resulting from multiple invocations of the HMAC process may be provided to the computer along with other information from which the computing device can further invoke the HMAC process to derive the partial key. In other words a result of partially performing a process of deriving a partial key may be provided for further completion of the process to generate the partial key. Generally any method of obtaining the partial key for each key holder may be used.

From the obtained partial keys in an embodiment a signing key is computed based at least in part on the obtained partial keys and the computed key seed. For example as illustrated to the right of the flowchart in the signing key may be

Once the signing key is computed in an embodiment a message is signed using the computed signing key. The message may be any message for which a signature is required or desired such as a request to access a service or for another use such as described above. For a message denoted in by Message an illustrative example of a signature S may be

In an embodiment once the message is signed the message may be provided with the signature for verification by a verification computing device such as described above. As one example the message and signature may be provided in one or more communications that collectively encode the signature and the message. Generally any method of providing a message verifier information that is based at least in part on the message and a signature for the message and that is usable to the verifier to verify the signature may be used.

In embodiments a verifier computer system uses information available to it in order to determine whether the signature provided with the message is authentic. accordingly shows an illustrative example of a process that may be used to verify message signatures. As with and other figures provided herein illustrative examples of calculations that may be made during performance of the process are provided in the figure. In an embodiment the process includes receiving a message and a signature S for the message. The signature and message may be for example received from a device that performs a process for signature generation such as the process described above in connection with or variations thereof. In an embodiment a key seed is computed such as described above. For instance the key seed may be 

Returning to the process a partial key is acquired from each of the various key holders such as described above in connection with . It should be noted that acquisition of the partial keys may be performed in the same manner as in the process of or in a different manner. For example as discussed various embodiments of the present disclosure allow for a multi step process for generating keys. For a particular partial key a message signor computer system may have access to a key that has been derived further down a key path than a key to which a verifier computer system has access to even though both the signor computer system and verifier computer system each have access to information from which the partial key can be derived.

A signing key is computed using the acquired partial keys and the key seed such as described above in connection with . A signature for the received message is then generated using the signing key that was computed . As noted above the parameters encoded in the key seed may correspond to restrictions on key use. Accordingly in an embodiment the parameters for each partial key in the key seed correspond to one or more restrictions for that partial key. Thus the key seed in an embodiment encodes a set of restrictions comprising the collective restrictions on each of the partial keys. As an example the parameters for one partial key may encode a date and the parameters for another partial key may encode a location. In other words at least one of the partial keys was derived from information encoding a date and at least one of the other partial keys was derived from information encoding a location. A system employing the process or variations thereof may enforce policy by checking whether messages such as requests to perform operations or otherwise access computing resources comply with the collective parameters of the partial keys. For instance using the present example of a partial key being encoded with a date and the other being encoded with a location such a system may check whether the message was submitted on the date for access to a service operated at the location. Accordingly as illustrated in in an embodiment the process includes determining whether the message complies with restrictions parameters used to derive the partial keys. Determining whether the message complies with the parameters may be performed in any suitable manner. For example as noted the parameters may be public information or at least information available within participants in the process . Thus determining whether the message complies with the parameters may include checking the message against the parameters. As another example the parameters may be inherent to the system to which the message was submitted. For example each of multiple systems may have corresponding parameters that are used to verify whether messages comply with the parameters. Generally any method of determining whether the message complies with the parameters may be used. Further additional policy checks independent of restrictions used to derive keys used in the process may also be used although such checks are not illustrated in the figure.

If it is determined that the message does not comply with the restrictions of the key seed action appropriate to the signature not being verified may be taken as discussed in more detail below. If however it is determined that the message does comply with the restrictions in an embodiment a determination is then made whether the generated signature matches the signature that was received. For example determination whether the generated signature matches the received signature may include determining whether the generated signature and the received signature are identical. If the generated signature does not match the received signature then an appropriate action to the signature not being verified may be taken . An appropriate action may vary depending on the context in which the signature verification process is performed. For instance the appropriate action may be to transmit a message to the message signing and or to another computer system where the message encodes the fact that the signature was not successfully verified. Other appropriate action may be to deny access requested by a request encoded in the message. Similarly if it is determined that the generated message signature matches the received message signature then action appropriate to the signature being verified may be taken . Such action may include for instance transmission of a message that encodes the fact that the signature was verified and or providing access requested in the message. Another such action in an embodiment includes storage of the message and or signature for later use. Storage of the message and or signature may therefore indicate that the message was submitted with a valid signature.

As shown in system A corresponds to a key tree having nodes corresponding to keys derived from the key K. The nodes of the key tree represent various information such as restrictions on key use. At the root of each tree in this particular example is information corresponding to a key identifier ID that is an identifier for a key to which the corresponding system has access. For example the root of the tree for system A includes the identifier K. As used herein Kwill be used to refer to both the identifier of the key since it will be clear to one with ordinary skill in the art from context which is intended. The values for X Y and Z in may be restrictions on use of the key K. For example one of X Y or Z may represent a date for which the key identified by Kis valid. Any of X Y and Z may also represent other restrictions such as those described above. In addition any of X Y or Z may not semantically represent a restriction but may simply be information which may be random and or pseudo random information from which a key may be derived from the key identified by K. Similarly A B and C in the tree of system B may be information from which keys may be derived from the key identified by K. It should be noted that for each of the system A and system B the trees are shown as binary trees. However trees may be different from those shown here. For example each node may have fewer than two or more than two branches. In addition each node does not necessarily require an equal number of branches. As just one illustrative example five nodes may branch from Kwhile one node may branch from X while three nodes may branch from Y leaving three leaves for the branches that pass through the node Y. Also while shows only two systems for the purpose of illustration the techniques described herein are applicable to instances where there are more than two systems.

As shown in the key tree for each system may be used to construct an encoding of the key path. Encoding of key path may be the information corresponding to the nodes of the tree separated by appropriate delimiters such as by slashes shown in the figure or by other delimiters such as commas. These encodings of the key paths may be put together as shown in to form a key seed. The key seed may be any encoding of the key paths such as that explicitly illustrated in . The encoding may be encoded according to rules followed by various participants in the processes described herein. For example the key seed may encode the key paths in alphabetical or reverse alphabetical order. As noted above the key seed may be used to construct partial keys for each of the key holders. In this example a partial key may be computed for both system A and system B. For example as shown in for system A a partial key PKis computed using a key specialized along the path of the key tree shown for system A and the key seed. Similarly a partial key Kis constructed for system B. These partial keys may be combined to form a signing key as illustrated in the figure and described above.

Constructions such as those described above may be used in various schemes for signing messages. For example shows a diagram illustrating how the techniques above may be used in connection with a signature verification process. In this particular example the validity of a signature may be dependent on keys from multiple distrustful authorities. As discussed an authority may be considered distrustful when another authority does not have access to a key of the distrustful authority. In this particular example the validity of a signature may depend on keys from two authorities labeled Authority 1 and Authority 2 in the figure. The authorities discussed in connection with and elsewhere herein may be computer systems configured to perform actions described herein and possibly additional actions. Authority 1 may have access to a key with key ID Kbut not to a key identified by K. Similarly Authority 2 has access to a key identified by Kbut not a key identified by K. Each of Authority 1 and Authority 2 in this example has corresponding key trees. As illustrated herein the key trees for each of Authority 1 and Authority 2 may be different from one another in their size radix of any corresponding nodes number of nodes and the like. In the middle of are example calculations for values that may be used to generate a signature. In this particular example a key seed is computed based on key paths in key trees in each of key trees for Authority 1 and Authority 2. In addition values for partial keys for Authority 1 and Authority 2 are also shown and referred to respectively as and .

In a client computing device may submit directly or indirectly a message and signature for the message to a verifier computing device . While illustrated as the client computing device providing the message and signature directly to the verifier computing device the verifier computing device may receive the message and signature from a different computing device such as an intermediate computing device between the client computing device and the verifier computing device .

Even though the validity of the signature provided from the client to the verifier is dependent on the keys identified respectively by Kand K in this example the verifier is able to verify messages without having access to those keys. For example in this particular illustration Authority 1 labeled as and Authority 2 labeled as respectively provide the values of and to the verifier which may use the values of and to verify a message signed by the client. The message signed by the client may be signed using the techniques described above and using information accessible to the client. For instance the client may have the keys identified by Kand Kand may be able to compute and and generate a signing key accordingly using and . Similarly the client may have received a from Authority 1 and from Authority 2 and may therefore use and to generate a signing key. As yet another example the client may have a key derived along the partial key path of the key path shown in the figure. Such a key using the techniques described above may be used to generate and and therefore the signing used to produce a signature that can be verified by the verifier . Numerous variations are considered as being within the scope of the present disclosure. For example the client may have and K. A client may have and K. As yet another example a client may have and a key specialized along the key path shown from Kto Y. It will be understood to one with ordinary skill in the art that numerous other variations are also possible and such examples are considered as being within the scope of the present disclosure.

The authority labeled Authority 2 in this example uses this message signature and a and its own value of to determine whether the signature is valid such as by techniques described above. Authority 2 may also derive as needed such as upon receipt of information from Authority 1 but may not persistently store the value. A verification decision may be then sent from Authority 1 to Authority 2 to allow Authority 1 to take appropriate action depending on whether the signature is valid as determined by Authority 2. In this manner Authority 1 can determine or can take actions depending on the validity of the signature when that signature depends from Keven though the Authority 1 does not have access to K. Other variations are also considered as being within the scope of the present disclosure. For instance referring to the client may submit a message and signature to Authority 1 who may then request from Authority 2. Authority 2 may send to Authority 1 and Authority 1 may then utilize and to verify the validity of the signature submitted by the client . In this manner Authority 1 can determine the validity of the signature when that validity depends from Keven though Authority 1 is not ever able to access K. It will be apparent that other variations are also considered as being within the scope of the present disclosure.

Numerous variations of the present disclosure are considered as being within the scope of the present disclosure. For example show illustrative processes that may be performed to verify a message. The techniques described above in connection with these figures and also in connection with and or may be for example extended to involve more authorities than explicitly illustrated. In addition as noted above in connection with checking whether a signature is valid may also involve checking whether a message signed to produce the signature complies with one or more restrictions used to derive the signing key. Such checking may also be performed in connection with the processes described in connection with . For example referring to Authority 1 and or Authority 2 may check whether the message complies with any restrictions used to derive the signing key. Each authority may check the message against a portion of the restrictions such as restrictions of a corresponding tree and or one authority may check all restrictions.

As noted various techniques of the present disclosure may be used in a variety of contexts and not just for use in message signature and verification schemes. In particular techniques of the present disclosure are usable for the purposes of key escrow. In many instances it is desirable to have information encrypted for the sake of data security. However it may be desirable that certain individuals within an organization are always able to access encrypted data regardless of who in the organization encrypted the data. Accordingly techniques of the present disclosure are usable to enable the encryption of data in a way that provides for convenient access of data by different individuals within an organization or other entity .

As illustrated in the figure such a hierarchy may continue until a lowest level is achieved. Techniques of a present disclosure allow for a system that enables data to be encrypted by someone in the hierarchy. In such a system the techniques also enable such a system to have a feature whereby the data is not decryptable by those lower in the hierarchy but is always decryptable by those higher in the hierarchy. For instance if a CTO encrypts data a vice president would not be able decrypt the data without access to the CTO s key or a key in the key path from the CTO to the root of the hierarchy. Similarly the CTO may use his or her own key to encrypt data and the CEO corresponding to a root node in this example may always be able to decrypt that data.

To the left of the center section of is a representation of a key tree. Each level in the key tree may correspond to a level of authority. The number of branches stemming from a node in the tree may correspond to those who have keys at a certain authority level or the number of keys produced for each authority level such as when a single principal may have access to multiple keys and or when a single key may be shared by multiple principals. For instance if the board of directors of the organization represented on the right section of includes a CEO at the highest authority level and five officers at the next lower authority level there may be five nodes directly connected to the root node that corresponds to the CEO. It should be noted however that for the purpose of illustration in order to keep the illustration simple the key tree is illustrated as a binary tree. As illustrated the keys of the key hierarchy shown in may be derived using the various techniques described herein. For example the hierarchy is shown as having a root key K. A key K on the next lower level of the hierarchy may be derived from Kas the value of a function whose operands are Kand information corresponding to an authority to have access to K or whose operands are based at least in part on Kand the information. The information may be for example a string identifying or at least corresponding to the authority or authorities to have access to the key being derived. Each key in lower levels of the hierarchy may be similarly derived from the same or different functions. The functions may be any suitable function including but not limited to functions explicitly discussed above and or functions exhibiting properties explicitly discussed above.

As one example a member of an organization may utilize the process to generate a key that that person can pass on to somebody lower in the hierarchy. By a member of an organization generating a key it should be noted that the user of particular apparatuses such as specifically configured computer systems are used to generate the key under the control of the member. For instance the member of the organization may provide user input into a computer system either local to the user or remote from the user and accessible over a network to cause the computer system to generate the key. The process may also be performed numerous times by a computer system that generates and distributes all the keys and passes them out according to their positions in the hierarchy. As yet another example the process may be performed by an automated process without user input. For example the process may be performed in response to a request transmitted electronically by another computer system.

Turning to the drawing the process in an embodiment includes obtaining a key . As shown in the key is labeled K. Obtaining the key Kmay be done in any suitable manner. For example the key may be a key that is selected generated or otherwise obtained in any suitable manner if the key is for a top level of the hierarchy. The key may be obtained for example by receiving the key from another computer system or by the receipt of user input providing the key. The key may also be a key that was derived from another key such as used in the techniques described above. In an embodiment the obtained key Kis used to generate a new key Kfor each subordinate authority in the authority hierarchy. For instance referring to the key Kmay be used to derive a key for each member of the hierarchy directly below the top level. Similarly if the obtained Kcorresponds to the level 3 the key may be used to derive all necessary keys for level 4.

Returning to in an embodiment when the keys for each subordinate authority are generated each of the generated keys are provided to the subordinate authorities in the authority hierarchy. Providing the key to each subordinate authority may be done in any suitable manner depending on particular contexts in which the key is used. For instance the generated keys may be provided as information encoded in electronic communications to computing devices of the subordinate authorities. As another example computing devices of the subordinate authorities may be reconfigured such as through a software update pushed to the computing devices so as to utilize a generated key. Generally a key may be provided in any manner that enables subordinate authorities to utilize the key for any purpose for which the key may be useful such as encryption and or message signing.

The process shown in may be repeated to derive keys many levels down the hierarchy. For example a key from authority level 1 in can be used to derive one or more keys for authority level 2. The keys for authority level 2 may then in turn be used according to the process to generate one or more keys for authority level 3. This process may continue as the hierarchy is traversed and keys are provided to all members of the hierarchy. As noted variations of how the process is performed are considered as being within the scope of the present disclosure. For example as noted each subordinate authority that receives a key generated in accordance with the process may itself use the process to generate and provide a key lower down the hierarchy. As another example a computing device may repeatedly perform the process in order to generate a key for use in multiple levels down the hierarchy. For instance a sequence of instances of performances of the process may be used to generate a sequence of keys one for each level of the hierarchy thereby generating a set of keys for a path in the hierarchy. Generally any manner of utilizing the process so as to derive keys for use in the hierarchy may be used. As noted above techniques of the present disclosure allow for the data that was encrypted using a key corresponding to a hierarchical level to be decrypted using one or more keys corresponding to higher levels in the hierarchy. As an example if a lower level employee uses his or her key to encrypt data at least one employee higher than the lower level employee will have a key that is usable to decrypt the data. Thus if the employee leaves the organization loses the key or otherwise is unable to decrypt the data one or more others within the organization will be able to.

As a specific illustrative example data which may be metadata for the encrypted data may contain encode or otherwise encode a key path. For this example the key path may be a b c d e f. The values for a b c d e and f may comprise key derivation material. In this manner it may be determined that an authority having access to a key specialized along the key path encrypted the data.

In an embodiment once the authority under which the data was encrypted is identified a key is generated according to the identified authority s position in the authority hierarchy. Generating the key may be done in any suitable manner depending on where the authority s position is and what information is available from those above the authority s position in the hierarchy. For example if a lower level employee encrypted data keys from a path of the hierarchy proceeding from the root of the hierarchy to the lower level employee may be used to generate the employee s key and to decrypt the data using the generated key. For instance in the example shown in the CEO s key may be used to generate any key that was derived therefrom. Similarly each key of the lower level in the hierarchy may be used to generate keys for those in the sub tree rooted at that key. Using the specific illustrative example of the previous paragraph if a key specialized along the key path a b c and values for d e and f and possibly values for a b and c were available to a computer system performing the process the key may be used to further derive the key specialized along the complete key path a b c d e f using the various techniques described or variations thereof. The values for a b c d e f may be available to multiple principals in the organization or even public since without access to a particular key the values in an embodiment are not usable to generate useful keys. In this example once generated the key specialized along the key path a b c d e f may be used to decrypt the data.

It should be noted that numerous variations of the process are considered to be within the scope of the present disclosure. For example depending on what information is available it may not be certain which key to use to decrypt the data. Because the hierarchies in typical organizations will not be unmanageably large numerous keys may be tried for decrypting data before the data is successfully encrypted. For example it may not be known who encrypted the data. Therefore the hierarchy can be traversed in any manner as the different keys are tried as they go along. For example the CEO s key may be tried before trying keys of the officers of the board whose keys may be tried before the Vice President etc.

Other variations are also considered as being within the scope of the present disclosure. For example keys constructed in accordance with the techniques described in connection with may be adapted for other uses. For instance in an embodiment keys generated in accordance with the various techniques described herein may be used to encrypt data in a manner targeting specific keys and possibly corresponding users that are usable to decrypt the data. For example keys may be distributed to members of an organization. As discussed for any given derived key only certain keys are usable to derive the given derived key. Thus data can be encrypted so as to selectively determine those who are able to decrypt the data by virtue of having the given key or one that is able to derive it. The various techniques described herein and variations thereof may also be used for the purposes of key distribution and or key escrow. Derived keys may for instance be distributed to various system and or users . One or more keys used to derive the distributed keys may be held in a key escrow system so that data encrypted using a distributed key is recoverable by at least one key in escrow.

Another example in which techniques of the present disclosure are particularly useful is in the context of digital rights management DRM . For instance as discussed below techniques of the present disclosure may be utilized in order to encrypt content in a manner such that if a party decrypts the content and makes the content unavailable to others in an unauthorized manner the decrypted content can be used to identify a device that decrypted the content or at least a set of devices that decrypted the content. provide illustrative examples of a way in which this may be done. for example shows a diagrammatic representation of content in accordance with an embodiment. In particular shows content which is composed of a series of records labeled by the letter R with an index. Each record may be a portion of the content. For example if the content is video content each record may correspond to a frame of a video. Other divisions of content may also be used and the divisions do not necessarily correspond to convenient boundaries such as frames for a movie. For example a record may be a portion of an audio file and a general record may be any subset of data of electronic information that encodes content. In addition content may not have multiple records but may be a single record.

As illustrated in each record in an embodiment includes at least two parts. In particular each record includes a key identifier key ID and data encrypted under a key corresponding to the key ID. The key ID may be stored in metadata of the content. Thus a device processing the content in order to provide the content for consumption such as described below may identify the key ID from a record access a corresponding key and use that key to encrypt the data. It should be noted that there are numerous variations that are considered as being within the scope of the present disclosure. For instance the current discussion will focus on the key corresponding to the key ID as being a key for decrypting the content but the key may be used in other ways such as to decrypt another key which in turn is used to decrypt the content. Generally the key can be a key used for any process involved in the consumption of content.

In an embodiment techniques of the present disclosure include providing content in a manner such that one or more of the records include multiple copies of corresponding content and metadata for the content. Turning to the illustrative example of a video each of one or more of the frames of the video may have multiple copies on a medium that encodes the content such as a digital video disk DVD or other medium such as a computer readable storage medium. Referring to for example as in content includes a sequence of records which may be as described above. Some of these records have multiple copies as illustrated in . For example the first record as shown in includes J copies where J is some positive integer. Similarly the third record of the content includes L copies of the third record where L is a positive integer. Similarly as illustrated in the Nth record includes M copies where M is a positive integer. It should be noted that the records for which multiple copies are provided may be few relative to the total number of records although in some embodiments each record may have multiple copies. In this manner as will be discussed below relatively little storage space is required for employing various embodiments of the present disclosure although other embodiments that require more space such as where all or nearly all of the records have multiple copies of content may be used. In addition the records that have multiple copies may not have a uniform number of copies. For instance one record may have ten copies while another record may have five copies.

In an embodiment each copy of content for a record includes data encrypted under a different key ID. As will be discussed below a device processing the contents may identify a record for which the device has a key that is enabled to decrypt the content. It should also be noted that any particular device may have enough keys to decrypt content for numerous copies of a record not just only one. In addition the copies of content for a record may vary amongst themselves. In an embodiment the copies that vary from other copies do so in a manner that is detectible by a computing device but that is not humanly distinguishable or if humanly distinguishable then in a manner that is calculated to be insignificant such as in a manner that is calculated to be of minimal distraction to a person consuming the content such as by watching a video when the content is video content . The content can be varied in numerous ways such as by varying one or more pixels in an image varying a characteristic of audio content and the like. Pixels may be varied for example by varying the pixels color intensity and other characteristics. Generally any manner of modifying the information that encodes the content may be used.

As shown in content processing devices may be provided with multiple keys from the hierarchy. Providing the content processing devices the keys may be done in any suitable manner and the manner may depend from the context in which the device is used the type of device the capabilities of the device and the like. For instance content processing devices may be provisioned with the keys at the factory. Similarly keys may be provided in the licensing file provided electronically to the content processing devices over a network or in another way. Generally any way of providing the keys to the content processing devices may be used. While and other figures illustrate embodiments of the present disclosure in connection with a single hierarchy multiple hierarchies may be used. For example in connection with key trees keys from multiple hierarchies may be provided to devices.

Further providing content processing devices keys may be done in a manner that results in a record of associations between keys that have been provided and the devices to which the keys have been provided. Associations between keys and devices may be recorded at various granularities. For instance in an embodiment each device is provided with a unique set of keys. A database or other device may associate through one or more database tables each device with a unique set of keys that were provided to the device. As another example multiple devices are provided with the same set of keys. A record associating devices with sets of keys may therefore associate groups of devices with sets of keys. The groups of devices may be organized in any suitable manner. For example each device under the same model of a manufacturer may receive the same set of keys. Each device under the same manufacturer may receive the same set of keys. In addition keys may be distributed in manner that results in multiple devices with no apparent relationship having the same set of keys. For instance one thousand key sets may be randomly distributed to one million devices thereby ensuring that at least some devices share the same set of keys.

As noted different content processing devices are be provided with different sets of keys in various embodiments. The sets of keys provided to the devices may be chosen such that for existing content produced in accordance with the present disclosure when the content includes multiple copies of content for a record every device will have a key usable to decrypt at least one of the copies. Similarly future content may be produced such that for existing devices having had keys provisioned excluding perhaps devices that have been blacklisted or that have keys that have been blacklisted the devices will have a key usable to decrypt at least one copy of content for records of the content having multiple records. Generally keys may be produced and content may be produced in coordination to ensure that devices can properly decrypt when such is acceptable.

For instance looking at the first content processing devices on the content processing device may be able to use the provided set of keys to decode any content that it receives. Referring back to for example the content processing device is provisioned with several keys. One key may be usable to decode one record whereas another key may be usable to decode another record. As noted different content processing devices may be provided different keys. In this manner as will be discussed below devices may be identified or substantive devices may be identified based on the keys that the devices use to decode the content. For example referring to the two content processing devices of it may be determined that the first content processing device could not have decoded decrypted content because it does not have a key that was used to decrypt the content.

As illustrated in keys provided to devices may correspond to various nodes in a key tree. For example for the first device shown in keys Kand Kare provided. Using notation similar to that above Kmay be the key K specialized along the key path c g. For example if c and g represent information used to derive the key K Kc g may be the value of HMAC HMAC K c g . Similarly Kmay be HMAC K b . Keys may also be provided with key derivation material information similar to the restrictions described above that can be used to derive keys from other keys. By providing a device key derivation material the device has access to a sub trees of keys in the key hierarchy. For example referring to if a device is provided with Kand values for d e and f the device would have access to K K and K. Similarly by providing the device with Kand values for d through h on the key path connecting K to h the device would have access to Kthrough Kon the key path. The key derivation material may be provided to the devices together with the keys or separately. For example the key derivation material may be provided to the device in metadata of content being processed by the device.

Identifying a copy of the next record may include identifying a copy of content of the next record that the device is able to decrypt using information available to the device. For example the device may analyze information identifying the keys available to the device and key deriving material to determine one or more keys that the device can use to decrypt one or more copies of the content. For instance in one example referring to a copy of content may have metadata identifying a and d which may indicate that the key Kmay be used to decode the copy of the content. The metadata may include values for a and d or generally may indicate a and to the device to enable the device to access a and d. The device may have Kand therefore have a record of a. By using d the device can use Kto generate Kand therefore decrypt the content. Similarly continuing with the same example a copy of the content may have metadata identifying a and d. The device not having Kwould determine that it cannot generate K even though it may have a and d and therefore would seek a different copy that it would be able to decode.

In an embodiment when a copy for the next record matching a stored key ID is identified a copy of the content for the next record matching the key ID is accessed . The accessed copy may then be processed such as described above. In this manner the content processing device selects from multiple copies of records records that it is able to decode by virtue of having or at least being able to derive a key appropriate for decoding the content. It should be noted that shows various actions being performed in sequence but as with any process described herein it may be appropriate in various embodiments for steps to be performed in a different sequence or in parallel. For example determinations regarding the next record may be made in parallel to processing an access record in order for instance to avoid delay and allow for the processing of content efficiently.

To the right of the process shown in are illustrative examples of the values that may be used by a device in decrypting the content. For example as illustrated a key path b m p r is obtained. The key path b m p r may correspond to a key derived along a similar path in the hierarchy where each of b m p and r corresponds to nodes in the hierarchy. Going further down the process at the determination whether or not the device has a key for the key path the determination may be yes if the device has a key drive along that key path until the node corresponding to the r. The determination may be that the device does not have a key for the key path if the device determines that it only has the key determined along the key path for the nodes b and m. Accordingly the key b m is identified and used to derive the key corresponding to the key path b m p r. This key may then be used to decrypt the content record.

For example referring to at least the first third and Nth records are identified because each of those records corresponds to records for which multiple copies were provided with the original content. For example DVDs published with the original content may include multiple copies of each of those records. Because it is known by the publisher how the content was varied among the copies of each of the record and because each of those copies was encrypted using a different key the identified records may be matched to keys usable to decode the records. Accordingly the match may be made for example by searching a data store that associates each copy of a record with the keys that are usable to decode the record. Devices having a set of matched keys may then be identified in accordance with an embodiment. Depending on how the keys are distributed and provision among the devices the device or devices having the set of matched keys may be a single device or may be a multiple devices. For instance the devices identified as having a set of matched keys may be all the devices of a particular model and a particular manufacturer which are all provided with the same set of keys whereas different models of the same manufacturer and models of different manufacturers are provided different keys.

Once the devices having the set of matched keys is identified then remedial action with respect to the identified devices may be taken . Numerous actions may be taken as remedial action. For example the keys used to provide the unauthorized copy of content may be blacklisted in a data store that is marked as not usable for the production of future content such that future content provided is not decodable by the identified devices. Other actions may also be taken such as by submitting an electronic message to the manufacturer so that the manufacturer updates firmware of the devices and or other actions.

In an embodiment a determination is made whether there are additional keys to process and if there are then the next key is accessed and devices having access to that accessed key are identified as described above. If there are no additional keys to process then in an embodiment the intersection of the identified sets of devices having access to each of the keys is identified . As an illustrative example it may be determined that all devices of two different manufactures have a first key but that only certain models of each of the manufacturers have a second key thus only devices from any of those manufacturers that have both keys would be identified in this intersection. Finally performance of the process as illustrated in may include providing information corresponding to the identified intersection . The information may be provided in any suitable manner such as by creation of a data record stored in a data storage device transmission of an electronic message display of such information on a display device of a computing device and or the like.

Bus subsystem provides a mechanism for enabling the various components and subsystems of computer system to communicate with each other as intended. Although bus subsystem is shown schematically as a single bus alternative embodiments of the bus subsystem may utilize multiple busses.

Network interface subsystem provides an interface to other computer systems and networks. Network interface subsystem serves as an interface for receiving data from and transmitting data to other systems from computer system . For example network interface subsystem may enable a user computer to connect to the Internet and facilitate communications using the Internet. The network interface subsystem may also facilitate the receipt and or transmission of data on other networks.

User interface input devices may include a keyboard pointing devices such as a mouse trackball touchpad or graphics tablet a scanner a barcode scanner a touch screen incorporated into the display audio input devices such as voice recognition systems microphones and other types of input devices. In general use of the term input device is intended to include all possible types of devices and mechanisms for inputting information to computer system .

User interface output devices may include a display subsystem a printer a fax machine or non visual displays such as audio output devices etc. The display subsystem may be a cathode ray tube CRT a flat panel device such as a liquid crystal display LCD light emitting diode LED display or a projection or other display device. In general use of the term output device is intended to include all possible types of devices and mechanisms for outputting information from computer system . The output device s may be used for example to present user interfaces to facilitate user interaction with applications performing process descried herein and variations therein when such interaction is appropriate.

Storage subsystem provides a computer readable storage medium for storing the basic programming and data constructs that provide the functionality of the present invention. Applications programs code modules instructions that when executed by a processor provide the functionality of the present invention may be stored in storage subsystem . These Application modules or instructions may be executed by processor s . Storage subsystem may also provide a repository for storing data used in accordance with the present invention. Storage subsystem may comprise memory subsystem and file disk storage subsystem .

Memory subsystem may include a number of memories including a main random access memory RAM for storage of instructions and data during program execution and a read only memory ROM in which fixed instructions are stored. File storage subsystem provides a non transitory persistent non volatile storage for program and data files and may include a hard disk drive a floppy disk drive along with associated removable media a Compact Disk Read Only Memory CD ROM drive an optical drive removable media cartridges and other like storage media.

Computer system can be of various types including a personal computer a portable computer tablet computer a workstation a network computer a mainframe a kiosk a server or any other data processing system. Due to the ever changing nature of computers and networks the description of computer system depicted in is intended only as a specific example for purposes of illustrating the preferred embodiment of the computer system. Many other configurations having more or fewer components than the system depicted in are possible.

As noted in several places throughout the present disclosure variations of that which is explicitly described are considered as being within the scope of the present disclosure. For example an information processing system such as the computer system may also be configured with additional capabilities that may be utilized according to adaptations of the various techniques described above. For example as noted above multiple copies of a portion of data may be provided to an information processing system such as described above. In some instances or even all in some embodiments the information processing system may have access to enough keys to decrypt a plurality of the multiple copies of the portion of data. In such instances the information processing system may select from the multiple copies. For instance the information processing system may be programmed to select a copy to decrypt based at least in part on information available to the information processing device. The information may be any suitable information including but not limited to global positioning system coordinates a device serial number for the information processing system information provided by an external computer system such as a content provider publisher computer system and or any information that effectively distinguishes the information processing system from at least one other information processing system and or any information based at least in part thereon. In this manner the selections of which copies to decrypt are usable to distinguish the information processing system from other information processing systems and therefore may be used forensically such as to identify the source of unauthorized copies of content. For instance a computer system with access to output of an information processing system may be able to distinguish based at least in part on one or more selections of copies to decrypt between information processing devices that would have made such selections and information processing devices that would not have made such selections. Distribution of keys to the information processing devices may be made in a coordinated manner to enable such distinctions.

The techniques described explicitly herein may also be adapted combined and otherwise modified. As just one example techniques involving multiple authorities may be combined with techniques involving DRM such that for instance sources of unauthorized content is identifiable but also such that proof of access to multiple keys is necessary to decrypt the content. In addition specific uses e.g. message signing and verification and encryption decryption of data of keys derived using the various techniques described herein are used for the purpose of illustration but other uses of keys are also considered as being within the scope of the present disclosure. For example keys derived in connection with multiple authorities or generally any derived key can be used not only for message signing and verification but for the encryption and decryption of data. Generally keys derived in accordance with the various techniques described herein can be used for any suitable cryptographic operation including but not limited to encryption decryption signature generation signature verification zero knowledge proof construction non signature based interactive authentication input into a bit commitment protocol password constructions to create a family of passwords reconstructable by a base key and other cryptographic operations and combinations thereof.

The various embodiments further can be implemented in a wide variety of operating environments which in some cases can include one or more user computers computing devices or processing devices which can be used to operate any of a number of applications. User or client devices can include any of a number of general purpose personal computers such as desktop or laptop computers running a standard operating system as well as cellular wireless and handheld devices running mobile software and capable of supporting a number of networking and messaging protocols. Such a system also can include a number of workstations running any of a variety of commercially available operating systems and other known applications for purposes such as development and database management. These devices also can include other electronic devices such as dummy terminals thin clients gaming systems and other devices capable of communicating via a network.

Most embodiments utilize at least one network that would be familiar to those skilled in the art for supporting communications using any of a variety of commercially available protocols such as TCP IP OSI FTP UPnP NFS CIFS and AppleTalk. The network can be for example a local area network a wide area network a virtual private network the Internet an intranet an extranet a public switched telephone network an infrared network a wireless network and any combination thereof.

In embodiments utilizing a Web server the Web server can run any of a variety of server or mid tier applications including HTTP servers FTP servers CGI servers data servers Java servers and business application servers. The server s also may be capable of executing programs or scripts in response requests from user devices such as by executing one or more Web applications that may be implemented as one or more scripts or programs written in any programming language such as Java C C or C or any scripting language such as Perl Python or TCL as well as combinations thereof. The server s may also include database servers including without limitation those commercially available from Oracle Microsoft Sybase and IBM .

The environment can include a variety of data stores and other memory and storage media as discussed above. These can reside in a variety of locations such as on a storage medium local to and or resident in one or more of the computers or remote from any or all of the computers across the network. In a particular set of embodiments the information may reside in a storage area network SAN familiar to those skilled in the art. Similarly any necessary files for performing the functions attributed to the computers servers or other network devices may be stored locally and or remotely as appropriate. Where a system includes computerized devices each such device can include hardware elements that may be electrically coupled via a bus the elements including for example at least one central processing unit CPU at least one input device e.g. a mouse keyboard controller touch screen or keypad and at least one output device e.g. a display device printer or speaker . Such a system may also include one or more storage devices such as disk drives optical storage devices and solid state storage devices such as random access memory RAM or read only memory ROM as well as removable media devices memory cards flash cards etc.

Such devices also can include a computer readable storage media reader a communications device e.g. a modem a network card wireless or wired an infrared communication device etc. and working memory as described above. The computer readable storage media reader can be connected with or configured to receive a computer readable storage medium representing remote local fixed and or removable storage devices as well as storage media for temporarily and or more permanently containing storing transmitting and retrieving computer readable information. The system and various devices also typically will include a number of software applications modules services or other elements located within at least one working memory device including an operating system and application programs such as a client application or Web browser. It should be appreciated that alternate embodiments may have numerous variations from that described above. For example customized hardware might also be used and or particular elements might be implemented in hardware software including portable software such as applets or both. Further connection to other computing devices such as network input output devices may be employed.

Storage media and computer readable media for containing code or portions of code can include any appropriate media known or used in the art including storage media and communication media such as but not limited to volatile and non volatile removable and non removable media implemented in any method or technology for storage and or transmission of information such as computer readable instructions data structures program modules or other data including RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disk DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the a system device. Based on the disclosure and teachings provided herein a person of ordinary skill in the art will appreciate other ways and or methods to implement the various embodiments.

The specification and drawings are accordingly to be regarded in an illustrative rather than a restrictive sense. It will however be evident that various modifications and changes may be made thereunto without departing from the broader spirit and scope of the invention as set forth in the claims.

Other variations are within the spirit of the present disclosure. Thus while the disclosed techniques are susceptible to various modifications and alternative constructions certain illustrated embodiments thereof are shown in the drawings and have been described above in detail. It should be understood however that there is no intention to limit the invention to the specific form or forms disclosed but on the contrary the intention is to cover all modifications alternative constructions and equivalents falling within the spirit and scope of the invention as defined in the appended claims.

The use of the terms a and an and the and similar referents in the context of describing the disclosed embodiments especially in the context of the following claims are to be construed to cover both the singular and the plural unless otherwise indicated herein or clearly contradicted by context. The terms comprising having including and containing are to be construed as open ended terms i.e. meaning including but not limited to unless otherwise noted. The term connected is to be construed as partly or wholly contained within attached to or joined together even if there is something intervening. Recitation of ranges of values herein are merely intended to serve as a shorthand method of referring individually to each separate value falling within the range unless otherwise indicated herein and each separate value is incorporated into the specification as if it were individually recited herein. All methods described herein can be performed in any suitable order unless otherwise indicated herein or otherwise clearly contradicted by context. The use of any and all examples or exemplary language e.g. such as provided herein is intended merely to better illuminate embodiments of the invention and does not pose a limitation on the scope of the invention unless otherwise claimed. No language in the specification should be construed as indicating any non claimed element as essential to the practice of the invention.

Preferred embodiments of this disclosure are described herein including the best mode known to the inventors for carrying out the invention. Variations of those preferred embodiments may become apparent to those of ordinary skill in the art upon reading the foregoing description. The inventors expect skilled artisans to employ such variations as appropriate and the inventors intend for the invention to be practiced otherwise than as specifically described herein. Accordingly this invention includes all modifications and equivalents of the subject matter recited in the claims appended hereto as permitted by applicable law. Moreover any combination of the above described elements in all possible variations thereof is encompassed by the invention unless otherwise indicated herein or otherwise clearly contradicted by context.

All references including publications patent applications and patents cited herein are hereby incorporated by reference to the same extent as if each reference were individually and specifically indicated to be incorporated by reference and were set forth in its entirety herein.

