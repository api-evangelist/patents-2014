---

title: Resource management of social network applications
abstract: Applications in social networks support interaction between members through various types of channels such as notifications, newsfeed, and so forth. For each channel, applications are ranked based on their user affinity measures. User affinity is based on measuring positive and negative interactions by users as both senders and recipients of messages generated by applications. Metrics are computed for the different types of messages and interactions provided by applications. For each channel, an application receives user affinity score based on specific weighted combination of the metrics. Applications use channel resources to send messages to increase their user base. Given the large number of applications that are available, the extent to which applications are allowed to use channels is controlled, limiting their resource consumption. User affinity scores of applications calculated for a channel are used to decide the allocation of channel resources for an application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09276894&OS=09276894&RS=09276894
owner: Facebook, Inc.
number: 09276894
owner_city: Menlo Park
owner_country: US
publication_date: 20140812
---
This application is a continuation of U.S. patent application Ser. No. 13 617 537 filed on Sep. 14 2012 which is a continuation of U.S. patent application Ser. No. 12 253 149 filed on Oct. 16 2008 now issued as U.S. Pat. No. 8 307 086 which is a continuation in part of U.S. application Ser. No. 12 194 511 filed on Aug. 19 2008 the contents of each of which is incorporated by reference in its entirety.

This invention relates to social networking websites that allow third party application developers to provide applications for users of the social networking website to install and run.

Some social network websites provide application developers with the ability to create applications that extend the functionality of the social networking website to provide new ways for users to interact with each other. For example an application may provide an interesting way for a member also called user of the social networking website to communicate with his friends or allow users to participate in multi player games or collect some interesting information such as news related to a specific topic and display it to the member periodically another application may provide a newsfeed about the activities of the member to that member s friends.

Social networking websites typically provide mechanisms referred to as channels for members to communicate with each other e.g. emails invitations notifications newsfeeds etc. Social networking applications typically make use of the various channels to provide useful features to the members such as sending out emails about the member s activities displaying a newsfeed to the member s friends and so forth.

The success of such an application generally depends on how many members install and run the application. Many application developers rely on an expectation of a virtuous cycle to build up the user base for their application the application provides a certain functionality that becomes increasingly beneficial as more and more members adopt the application. Users of such applications thereby have an inherent incentive to install and use the application. Some application developers attempt to exploit member behavior and the availability of the various channels as resources to increase their user base. For example when a member tries to run an application the application may not enable full functionality until the member sends out messages to the member s friends inviting them to use this particular application. Applications also try various mechanisms to get member s attention such as sending notifications or emails or by occupying space on the webpage viewed by the member while viewing the social networking website.

A typical member of the social networking website is likely to spend only a limited amount of time on the website and as a result has a generally limited amount of time to review messages invitations notifications from application as well a limited amount of time to search for applications the member would like to use. An excessive number of invitations and messages from applications only cause the member to ignore such messages if messages from abusive applications become too frequent then the member learns to distrust or ignore all such communications thereby impeding the distribution of all applications not merely abusive ones. Also a typical member prefers to limit how many applications appear on the webpage when viewing the social networking website.

Since the total number of applications available on a social networking website can grow to be very large and each application is trying to get the member s attention and trying to increase its user base the end result is that members can get inundated with information from applications that they may not be interested in. Members would like to see and focus on information that they like and be able to avoid or minimize the information that they do not like.

Applications on a social networking website use channels to interact with members of the social networking website. Each channel provides specific mechanisms to interact with the member whether through messages notification appearance on the user s profile page or the like. Given the large number of applications that are available it is beneficial to control the extent to which applications have access to the channels and thereby limit their resource consumption. A computer implemented method computer implemented system and computer program product controls channel resource consumption of applications provided on a social networking website based on a score of each application that measures the user affinity towards the application. User affinity is measured based on user interactions that can be considered as feedback provided by the members and such feedback can be deemed to be positive negative or neutral. User interactions can provide either implicit or explicit feedback. For example an application can provide a notification to the member on the member s web page. If the member ignores the notification when viewing the web page e.g. does not click on or otherwise interact with the application this is an implicit feedback that can be interpreted to mean that the member is neutral towards the application. But if the member clicks on a link in the notification that unsubscribes the member from further notifications from this application the member has provided explicit negative feedback towards the application. On the other hand if the member clicks on a link in the notification that provides the member with more information about the application the member has provided an explicit positive feedback about the application.

The rates of occurrences of various types of user interaction associated with an application and a channel computed over various time intervals provide a measure of the likelihood that a member will take that specific action when presented with the given application based on that channel. This provides a measure of the user affinity towards the specific application with regards to a specific action associated with a channel. Several such metrics associated with different actions associated with each application are computed for a channel. These channel metrics are combined for each application to arrive at a single aggregate value of the user affinity metric for the application for a channel called the user affinity score. An application with a high user affinity score compared to other applications is liked more by its current users compared to applications with lower user affinity score. There is a high probability that new users are also going to like an application rated high on a user affinity ranking. The social networking website can be adapted to promote applications with high user affinity ranking as compared to applications that are ranked lower by providing better channel resources to applications with high user affinity ranking.

An allocation of the channel resource for an application is determined based on the application s user affinity score. The use of the channel resource by the application during a time interval is measured. The application is not allowed to use more channel resources than determined by the allocation of the channel resource for the application based on its user affinity score. An example of a channel resource used by applications comprises messages sent on a channel that allows applications to communicate with users by sending messages. One embodiment disables an application from being accessible to users of the social networking website if the user affinity score of the application indicates very low user affinity of the users towards the application. Another embodiment enables an application to be accessible to users of the social networking website if the user affinity score of the application indicates at least a minimum user affinity. Another embodiment determines a per channel allocation of a channel resource for the application based on user affinity score as well as a per user per channel allocation of the channel resource based on user affinity score. If an application meets the per user per channel allocation of the channel resource for a user during a time interval the application is disabled from using the channel for that user and if the application meets the per channel allocation in a time interval the application is disabled from using the channel in that time interval. The process of calculating the score value determining channel allocation for an application in a time interval and controlling the channel resource usage of the application based on the channel allocation is repeated periodically allowing the application the ability to improve its score and increase its channel resource allocation in subsequent time intervals.

The features and advantages described in this summary and the following detailed description are not all inclusive. Many additional features and advantages will be apparent to one of ordinary skill in the art in view of the drawings specification and claims hereof.

The figures depict various embodiments of the present invention for purposes of illustration only. One skilled in the art will readily recognize from the following discussion that alternative embodiments of the structures and methods illustrated herein may be employed without departing from the principles of the invention described herein.

A social networking website offers its members the ability to communicate and interact with other members of the website. In use members join the social networking website and then add connections to a number of other members to whom they desire to be connected. As used herein the term friend refers to any other member to whom a member has formed a connection association or relationship via the website. Connections may be added explicitly by a member for example the member selecting a particular other member to be a friend or automatically created by the social networking site based on common characteristics of the members e.g. members who are alumni of the same educational institution . Connections in social networking websites are usually in both directions but need not be so the terms member and friend depend on the frame of reference. For example if Bob and Joe are both members and connected to each other in the website Bob and Joe both members are also each other s friends. The connection between members may be a direct connection however some embodiments of a social networking website allow the connection to be indirect via one or more levels of connections. Also the term friend need not require that members actually be friends in real life which would generally be the case when one of the members is a business or other entity it simply implies a connection in the social networking website.

There are various mechanisms available to members to communicate with each other or to obtain information that they find interesting such as activities that their friends are involved with applications that their friends are installing comments made by friends on activities of other friends etc. The mechanisms of communication between members are called channels available as resources . A channel is a computer mediated communication mechanism for facilitating communication between users of the social network and the social network. As illustrated in the following channels are available to users of a social networking website in one embodiment 

Email Channel Members can communicate by emails. shows an example of email received by a member that was sent by an application called SpeedDate. The email shown in provides a link to allow the member to get more details related to the email and a link to disable the application from sending further emails to the member.

Notification Channel A notification is a message informing a member that some activity involving the member has occurred on the social network. shows an example of notifications obtained by a member including a message sent by another member using an application called Send New Age Vibes . Another notification in shows an example of a notification sent by the wall post application to the member.

Invitation Channel An invitation is a message sent by a member inviting another member to do something e.g. a member can invite his friend to install an application. shows an example of an application forcing a member to send invitations to the member s friends in return for allowing the member to use a particular functionality provided by the application. In this example the application allows the member to participate in a quiz but does not present the member with the results of the quiz until the member invites of the member s friends to try the quiz application as indicated by the text banner . The report forced invites link provides the member with the ability to report this type of forced behavior to the social networking website.

Wall Post Channel A wall is an application that allows members to write interesting information to be shared between friends. A message written to a member s wall is called a wall post. A member can post on his own wall as well as walls of the member s friends. Any friend of a member can see what is written on his wall. shows an example of a wall and a posting by an application called iLike as well as a posting by a member s friend on the member s wall.

Newsfeed Channel newsfeed is a constantly updated list of activities done by friends of a member. Such activities include adding applications commenting on photos making new friends etc. shows an example of newsfeed as seen by a member illustrating activities such as other members adding new friends and other members using applications.

Mini feed Channel The mini feed of a member is a list of actions taken by that member. For example the member may have added new friends to his social network or installed certain applications. All such activities of a member are listed in the mini feed of that member. shows an example of a mini feed of a member. shows an example of a story related to the member adding a new application and a story related to the member adding a new friend.

In addition to interactions with other members the social networking website provides members with the ability to take actions on various types of items supported by the website. These items may include groups or networks where networks here refer not to physical communication networks but rather to social networks of people to which members of the website may belong events or calendar entries in which a member might be interested computer based applications that a member may use via the website and transactions that allow members to buy sell auction rent or exchange items via the website. These are just a few examples of the items upon which a member may act on a social networking website and many others are possible.

As illustrated in the social networking website maintains a number of objects for the different kinds of items with which a member may interact on the website . In one example embodiment these objects include member profiles group objects event objects application objects respectively hereinafter groups events and applications . In one embodiment an object is stored by the website for each instance of its associated item. For example a member profile is stored for each member who joins the website a group is stored for each group defined in the website and so on. The types of objects and the data stored for each is described in more detail below in connection with .

The member of the website may take specific actions on the website where each action is associated with one or more objects. The types of actions that a member may perform in connection with an object is defined for each object and largely depends on the type of item represented by the object. A particular action may be associated with multiple objects. Described below are a number of examples of particular types of objects that may be defined for the social networking website as well as a number of actions that can be taken for each object. These objects and the actions discussed herein are provided for illustration purposes only and it can be appreciated that an unlimited number of variations and features can be provided on a social networking website .

The social networking website maintains a member profile for each member of the website . Any action that a particular member takes with respect to another member is associated with each member s profile through information maintained in a database or other data repository such as the action log . Such actions may include for example adding a connection to the other member sending a message to the other member reading a message from the other member viewing content associated with the other member attending an event posted by another member among others. In addition a number of actions described below in connection with other objects are directed at particular members so these actions are associated with those members as well.

A group may be defined for a group or network of members. For example a member may define a group to be a fan club for a particular band. The website would maintain a group for that fan club which might include information about the band media content e.g. songs or music videos by the band and discussion boards on which members of the group can comment about the band. Accordingly member actions that are possible with respect to a group might include joining the group viewing the content listening to songs watching videos and posting a message on the discussion board.

Similarly an event may be defined for a particular event such as a birthday party. A member may create the event by defining information about the event such as the time and place and a list of invitees. Other members may accept the invitation comment about the event post their own content e.g. pictures from the event and perform any other actions enabled by the website for the event . Accordingly the creator of the event as well as the invitees for the event may perform various actions that are associated with that event .

The social networking website also enables members to add applications to their profiles. These applications provide enhanced content and interactivity within the social networking website which maintains an application object for each application hosted in the system. The applications may be provided by the website operator and or by third party developers. An example application is an enhanced messaging service in which members can send virtual objects such as a gift or flowers and an optional message to another member. The use of any functionality offered by the application may thus constitute an action by the member in connection with the application . In addition continuing the example from above the receipt of the virtual gift or message may also be considered an action in connection with the application . It can therefore be appreciated that actions may be passive and need not require active participation by a member. The scope and type of applications provided is limited only by the imagination and creativity of the application developers. Applications are generally written as server side code that is run on servers of the social networking website an application may also use client side code as appropriate. Generally when a user logs into the site the system determines which applications the user has installed e.g. registered for and then loads and runs such applications in combination with the underlying functionality of the social networking website.

As illustrated in each member can select which applications to install and run. For example application A1 is installed by member M1 and member M3 but not by member M2 . shows a part of a member s homepage on the social networking website after installing several applications. shows an application called The Wall which is provided by the social networking website and implements the wall post channel . Other applications such as ShareFiles shown in are made available by third party developers. Social networking websites that allow third party developers to develop applications provide a platform for developing new applications. The platform generally includes an application programming interface API by which applications can request various types of functions from the social network website such as information pertaining to a user e.g. information about a user s profile or a user s friends as well as functions for accessing the channel resources . The availability of a large number of applications is beneficial for such a social networking website because users are likely to visit the website repeatedly to make use of the functionality provided by the applications. A member can choose to uninstall an application installed by the member at any time.

As shown in a member can have only a limited number of applications on the member s homepage on the social networking website. This limitation may not be imposed by the social networking website per se but arises from the fact that there is only a limited amount of display space available on a member s homepage. A member may choose to spend a limited amount of time every day on the social networking website. In that time the member is able to look at limited amount of information as well as use a limited number of applications. Since third party developers keep building new application there is competition among application developer to get the attention of the members.

Applications are allowed to take advantage of channel resources to get attention of members. For example when a member installs an application the friends of the member on the social networking website are informed through various channels of the fact that the member has installed that application. Such information can be sent by emails using the email channel posted on the newsfeed using the newsfeed channel etc.

Because applications are competing for distribution it is highly likely that some application developers design their applications in a way that members begin to dislike the application behavior. For example a member may not like being forced to send invitations to the member s friends twice within a short interval of time. There are several behavioral patterns that can be displayed by applications that may not be liked by the members. If there is a large number of applications that display behavior disliked by members the members may develop a general dislike towards all applications including well behaved applications. This can have significant impact on the social networking website in terms of declining visits from members or even declining membership. It is important for the social networking website to discourage applications that display behavior disliked by members and promote applications that are liked by members. This invention provides a mechanism for a social networking website to quantify how much members like an application based on the member s actions thereby allowing applications to be compared based on how much they are liked by members also called user affinity towards the application. Examples of member s actions that indicate the member s positive or negative feedback towards an application include but are not limited to actions such as uninstalling the application minimizing the application trying to get more information about the application etc. Several such actions are described in detail below.

The mechanism to compute user affinity towards applications is based on member actions associated with applications. When a member takes an action on the social networking website the action is recorded in an action log . In one embodiment the website maintains the action log as a database of entries. When an action is taken on the website therefore the website adds an entry for that action to the log . In one embodiment an entry comprises some or all of the following information 

It can be appreciated that many types of actions that are possible in the website need not require all of this information. For example if a member changes a picture associated with the member s profile the action may be logged with just the member s identifier an action type defining a picture change and the picture or a link thereto as the content. System Architecture

The client devices comprise one or more computing devices that can receive member input and can transmit and receive data via the network . For example the client devices may be desktop computers laptop computers smart phones personal digital assistants PDAs or any other device including computing functionality and data communication capabilities. The client devices are configured to communicate via network which may comprise any combination of local area and or wide area networks using both wired and wireless communication systems.

The social networking website comprises a computing system that allows members to communicate or otherwise interact with each other and access content as described herein. The social networking website stores member profiles that describe the members of a social network including biographic demographic and other types of descriptive information such as work experience educational history hobbies or preferences location and the like. The website further stores data describing one or more relationships between different members. The relationship information may indicate members who have similar or common work experience group memberships hobbies or educational history. Additionally the social network host site includes member defined relationships between different members allowing members to specify their relationships with other members. For example these member defined relationships allows members to generate relationships with other members that parallel the members real life relationships such as friends co workers partners and so forth. Members may select from predefined types of relationships or define their own relationship types as needed.

The web server links the social networking website via the network to one or more client devices the web server serves web pages as well as other web related content such as Java Flash XML and so forth. The web server may include a mail server or other messaging functionality for receiving and routing messages between the social networking website and the client devices . The messages can be instant messages queued messages e.g. email text and SMS messages or any other suitable messaging technique.

The action logger is capable of receiving communications from the web server about member actions on and or off the social networking website . The action logger populates the action log with information about member actions to track them.

The newsfeed generator generates messages for each member about information that may be relevant to the member based on actions stored in the action log . These messages are called stories each story is an message comprising one or a few lines of information based on one more actions in the action log that are relevant to the particular member. The stories are presented to a member via one or more pages of the social networking website for example in each member s home page or newsfeed page as shown in .

The mini feed generator generates messages for each member about actions done by that member. Similar to newsfeed communications these communications are also stories but mini feed stories of a member are based only on actions done by that member. In one embodiment the mini feed stories are presented to the member on the mini feed section of the member s home page as shown in .

The invitation manager controls how many invitations an application is allowed to send. An application may force a user to send invitations as shown in and the member may choose to send out a large number of invitations to the member s friends but the invitation manager may decide to send only some of those invitations.

The email generator generates emails for members based on activities associated with the member s friends. For example the use of a specific application by the member s friend may cause an email to be sent to the member. shows an example of such an email sent by an application to a member.

The notification generator generates notification messages for a member informing the member about activities that happened on the social networking website related to that member. For example a notification may inform a member that a friend posted a message on the member s wall. shows an example of a notification as seen on a member s homepage on the social networking website

The wall post generator generates wall post messages for members. For example a message about a new application being available may be posted on a member s wall. shows an example of an application posting a message on a member s wall .

As discussed above the social networking website maintains data about a number of different types of objects with which a member may interact on the website . To this end each of the member profile store application data store the group store the event store and the content store stores instances of the corresponding type of object maintained by the website . Each object type has information fields that are suitable for the storing information appropriate to the type of object. For example the event store contains data structures that include the time and location for an event whereas the member profile store contains data structures with fields suitable for describing a member s profile. When a new object of a particular type is created the website initializes a new data structure of the corresponding type assigns a unique object identifier to it and begins to add data to the object as needed. This might occur for example when a member defines a new event wherein the website would generate a new instance of an event in the event store assign a unique identifier to the event and begin to populate the fields of the event with information provided by the member.

The channel resource manager allocates channel resources to different applications. This component is shown in more detail in . The various steps executed by the channel resource manager are shown in the flowchart in . The action type affinity metrics server collects statistics related to user actions that provides positive or negative feedback towards applications. In one embodiment the action affinity metrics server periodically analyses action data available in action log . Alternatively various components associated with different actions update the action type affinity metric server with action information as the action takes place. The action type affinity metric server computes the rate of actions taken by members in a given time interval and uses the rate of actions to compute the action affinity metric value for each action associated with an application and a given channel. Examples of several action affinity metrics are provided in the next section. The action scores of related sets of actions are combined to compute the user affinity score of the application for a channel by the user affinity score server . The user affinity score of the application for a channel is used to determine the channel allocation for the application by the resource allocation server . The overall process executed by the channel resource manager is described in detail in the next section.

Computation of the user affinity score of the application for a channel as a single numeric value that represents the user affinity score for an application for a channel is difficult because there is no particular action or event that measures the user affinity towards an application. In fact there can be a very large number of user actions each contributing to a varying degree towards calculating the user affinity towards the application. Examples of such actions are presented below for each channel 

An application may force a member to send invitations to the member s friends to install and try the application multiple times within a short time interval. The invitation manager places a report forced invite link on the invitation page if the application is suspected of forcing the members more than they like. For example if the force invite page is shown to the member within a very short interval e.g. 10 seconds the second page shows a report forced invite link that the member can click on to report being forced to invite frequently. When the application forces a member to send invitations the member is presented with the option to skip the step of sending the invitations by clicking on a cancel button as shown in . If the members clicks on the cancel button and the application again attempts to force the member to send invitation within a short interval e.g. 2 minutes the second forced invitation screen presents the user with the report forced invite link giving the member a mechanism to inform the social networking website of such a behavior on the part of the application.

In one embodiment the report forced invite link is not provided with all invitation pages unless there are suspicious circumstances as described above based on the duration between forced invites or other coercive application behavior. Under normal circumstances the applications are allowed to force members to send invitations to their friends to try the application since this is a significant mechanism that the applications reply on to increase their user base. Note that other embodiments can always show the report force invite link each time an application forces members to send out invitations to try the application.

Recipients of such invitations are also given an opportunity to give positive or negative feedback for the invitation. The following actions are presented as examples of such feedback from a member. A button or a link can be provided by the social networking website to allow the member to take appropriate action.

When emails are sent by applications a link is provided to the member in the email that allows the member to disable emails from the application as shown in . If the member clicks on the disable email link for the application the application cannot send any more emails to that member. The number of times members click on the disable email link for an application is a measure of a member s dislike towards the applications from the members. shows an alternative mechanism provided to a member to disable emails sent by an application by changing the settings for the application. The member can disallow an application from sending emails to the member by changing the setting for the application that determines if the application is allowed to contact the member by email.

If a member does not like notifications received from an application the member can hide the notification message. shows how a social networking website provides a dialog box that allows a member to hide notifications from an application. An application whose notifications are hidden by a large number of members in a given interval of time is considered to be disliked by the members. Other metrics associated with the notification channel can be based on the sender s affinity towards the notification sent by the application. The sender has the opportunity to report if the application sent notification that they disliked. shows how the social networking website provides a dialog box that allows a member to report unwanted notifications sent by an application.

There are certain actions that apply to any application independent of the channel used. shows an example of a member attempting to uninstall an application. In this embodiment the social networking website showing a dialog box asking for confirmation to uninstall the application. If the member uninstalls an application they have abandoned the application. This is a very strong indication of the member s dislike towards the application.

An attempt on the part of a member to run an application is an indication that the member likes the application. A member can click on an application after installing it on the member s homepage as viewed on the social networking website or while viewing the application on the member s friend s homepages. By clicking on the application the member is indicating an interest in the application. The higher the number of clicks on the application the more the application is considered liked by the members.

There are certain other actions on the part of members that are indicative of mild dislike for an application. A member is allowed to minimize an application thereby leaving the possibility of being able to run the application again in future without having to install the application again. A member minimizing an application indicates a desire to hide the application and this is considered an indication of dislike towards the application. It is possible that the member minimizes the application only temporarily and maximizes it again. In that case the two actions are considered as cancelling each other and the negative effect of the user minimizing the application is offset by the opposite action of maximizing the application at a later time. The member for example may want to minimize certain applications during working hours but maximize them during non working hours. In this situation the member wants to use the application only at specific hours of the day and displays affinity towards the application.

The examples presented above indicate how actions of members related to an application can be associated with varying degree of like dislike towards the application. The degree of like dislike is converted into a numeric value so as to allow the metrics to be compared across channels and applications. Actions taken by users can be considered as instances of different action types. An example of an action type is the user minimizing a mini feed story and an example of an instance of this action type is the action of a particular user clicking on a screen displaying a mini feed story to minimize it. The rate of occurrence of an action of a given type is computed. This rate is indicative of the likelihood that an action of an action type x is taken when the application is presented to a member. If over a period of time an application is presented to various members N times and the number of times an action of action type x was taken by members is K the likelihood that a member takes an action of action type x when presented by application a is given by P x a which is the probability of a member taking an action of action type x given the fact that the member was presented with application a. The following equation 1 shows the computation of P x a as a percentage value 

The value of P x a for two different action types x1 and x2 for an application may not be comparable against each other without taking into account the rate of occurrence of the respective action types across all applications. For example assume the average rate of actions of action type x1 across all applications is 10 . In this case if P x1 a1 is 5 then P x1 a1 is below average. On the other hand the average rate of actions of action type x2 across all applications is assumed to be 0.1 . In this case if P x2 a1 is 0.5 this value is higher than average. As a result even though the value of P x1 a1 happens to be 5 which is numerically much higher than the value of P x2 a1 that happens to be 0.5 the two numeric values cannot be compared without the context of the average rate of the respective action for all applications.

The rate of occurrence of an action of action type x for application a is normalized by the average rate of occurrence of actions of action type x across all or a selected sample of applications. The average rate of occurrence of action x across all applications can be represented as P x which is the probability of occurrence of action x. This probability is not conditional on any application and is therefore the average rate of action x across all application. The action affinity score for action x for an application a can be represented by s x a and is computed by the following equation.

The above equation normalizes the probability of occurrence of actions of action type x when the member sees application a by the average chance that action x is taken by a member irrespective of any application. The ratio of two probabilities is exponential since very small values of the denominator can lead to extremely large values of the fraction. Computing the log of the ratio of the probabilities makes the overall function linear i.e. modest changes of P x a and P x values cause modest changes of the values of the overall function. Note that the computation of the value of the action affinity score s x a is very efficient and can be computed very efficiently even for very large number of applications and actions. The equation 2 represents one mechanism to normalize the ratio of probabilities. Any other mechanism to normalize the value of P x a based on P x can be used instead.

The action type affinity scores associated with an application for a given channel are combined together to get a numeric score for the application for a given channel. For example there may be several action type affinity scores associated with the invitation channel 

All these action type affinity scores associated with an application for a channel are assigned specific weights before being combined into the user affinity score of the application for the channel. The following equation is one embodiment of the mechanism to combine action type scores into user affinity score of the application for the channel called S for the application 

The summation is computed over all actions such that the index i corresponds to the iaction and there are k such actions. The weight wcorresponding to each action type affinity score in equation 3 is a predetermined constant. shows an example illustrating the computation of the user affinity score of the application for the mini feed channel based on equation 3 . As shown in each action type score is calculated and the user affinity score for the application for mini feed channel is calculated as the sum of the action type score multiplied by their respective weights .

User affinity scores of an application independent of channels can also be calculated. This is computed based on either a weighted sum of all the individual action type scores independent of the channels or by combining the user affinity scores of the applications calculated for individual channels. Such a score is valuable in terms of making decisions related to the applications independent of channels. For example an application with a very low user affinity score independent of channels can be removed from the social networking website.

The calculation of user affinity scores based on equation 5 does not take into account user behavior differences. User behavior differences can have impact on the calculation of user affinity scores because some users are more diligent than others in giving feedback. For example an active member of the social networking website may accept every single request from friends though very few of them are used by the member. On the other hand another member may be very selective in terms of accepting request only if the member uses the requests. The acceptance of requests done by members who are careful and selective in their actions need to be weighed higher than the acceptance by members who accept requests indiscriminately. To prevent calculating the user affinity scores from being biased due to user behavior differences an alternative embodiment is presented that calculates user affinity scores by taking into account member behavior differences. The users are classified into different sets where each set represents a typical behavior pattern. The user action scores are calculated for different member groups and aggregated. An equation for calculating the member action scores is

The equation 6 weighs the user action score calculations for each user group by the factor P x a which gives the average probability of action x in the group g. Equation 2 can be considered a special case of equation 6 where there is only one user group. The action scores computed by equation 6 can be combined to compute user affinity scores based on equation 5 .

As described in the previous section each application receives a user affinity score with respect to each channel. For each application channel resources are allocated to the application based on its user affinity score. A channel monitors the usage of a channel resource by the application during a time interval is. The application is not allowed to use more channel resource than determined by the allocation of the channel resource for the application based on its user affinity score. An example of a channel resource used by an application comprises messages sent on a channel that allows applications to communicate with users by sending messages. Various mechanisms are possible for computing the channel resource allocation based on the user affinity score of the application for a channel. In one embodiment if the user affinity score of the application indicates low user affinity an application that communicates by sending messages on a channel is allowed to send fewer messages on the channel compared to applications with user affinity score indicating high user affinity. In another embodiment if the user affinity score of the application computed in a time interval is low the application is not allowed to send any messages in subsequent time intervals. In another embodiment if the user affinity score of the application is low the application is disabled from being accessible to the members of the social network. Alternatively if the user affinity score of the application indicates at least a minimum user affinity for the application the application is enabled to be accessible to the users of the social networking website.

Channel resource allocation for each application is precomputed and available as a table lookup for each channel. Such a table comprises possible user affinity scores mapped to certain values from which channel allocation is easy to calculate for example the total number of messages the application is allowed to send on the channel per day. The user affinity scores to channel allocation mapping is recomputed periodically since the factors used to determine the mapping change over time for example application developers change the behavior of existing applications and new applications are added. As an example the channel allocation for the mini feed channel may be made available as the number of mini feed stories allowed per day and the number of mini feed stories allowed per day per user for the application given the application s user affinity score value. The following table gives an example mapping.

In this example the user affinity score for the application for the mini feed channel ranges from 1.0 to 1.0 and a maximum of 10 mini feed stories are allowed for an application per day per member for the best possible score and a maximum of 10 000 min feed stories are allowed for the application per day such that the application is not allowed to send out more than 10 000 messages per day irrespective of the number of members using the application. For various mini feed channel score values the number of mini feed stories allowed per day per member and the maximum number of mini feed stories allowed per day for the application is provided for the channel. For example if the mini feed channel score value for an application is 0.0 the number of mini feed stories per day for the application as obtained from the above table is 4. For channel score values that occur in between the values available in the table the number of mini feed stories can be obtained by taking the nearest value available in the table. For example if the mini feed channel score value is 0.25 the number of mini feed stories per day has to be calculated based on the fact that mini feed channel score 0.0 maps to 4 mini feed stories per day and score 0.5 maps to 6 mini feed stories per day so the score value of 0.25 which is in between 0.0 and 0.5 maps to 5 mini feed stories per day which is the value in between 4 and 6.

The mapping of user affinity scores to channel resource allocation for the invitation channel is computed similarly. Assume that an application is allowed to send a maximum of 50 invitations per member per day as part of forced invites. Even though a member may provide the application with 40 friends to whom the application may send invitations to try the application if the invitation channel score of the application is 0.5 the invitation manager limits the number of invitations sent by the application per day per member to 20 and the total number of invitations for the application per day to 20 000 as provided by the following table.

Note that the values presented in the above tables are intended to be examples for illustration purpose. Other mechanisms of mapping the user affinity score values to channel allocation are possible e.g. ranges of channel score values can be mapped to channel allocation values. An alternative embodiment calculates the channel allocation for each application for a channel based on a mathematical function or a procedure that is executed instead of looking up the tables described above.

The user actions are written to the action log by the action logger continuously. The statistics related to user actions used for measuring user affinity are collected periodically and used to compute the user affinity scores for a channel for the application which is further used to compute the channel allocation for the application. This computation of channel allocation is repeated for an application based on a predetermined schedule. The schedule also determines the order in which the channel allocation of different applications is computed. The schedule for computing the channel allocation for various applications can change over time.

An alternative embodiment computes a measure called the damped user affinity score for an application in a given time interval based on the user affinity score computed using equation 6 for a given time interval as well as a plurality of the user affinity score values computed for the application in previous time intervals. Such a damped user affinity score computation considers the historical values of the user affinity score of the application and disallows sudden changes in the channel score for the application. Thus an application with a low user affinity score is disallowed from suddenly increasing its user affinity score by changing its behavior. The following equation gives one possible mechanism of computing the damped user affinity score based on the user affinity score computed for a time interval combined with the user affinity score of the previous time interval 1 8 

The channel allocation for each application based on the number of messages allowed for each application per day per member and the maximum number of messages allowed for the application per day is calculated periodically based on updated statistics collected for the actions of different action types. The computation of channel allocation for the applications can be done for all applications at once in a given time interval if the number of applications is small or the calculation can be scheduled for sets of applications at different times if the number of applications is very large to avoid performance issues during the computation.

The foregoing description of the embodiments of the invention has been presented for the purpose of illustration it is not intended to be exhaustive or to limit the invention to the precise forms disclosed. Persons skilled in the relevant art can appreciate that many modifications and variations are possible in light of the above disclosure.

Some portions of this description describe the embodiments of the invention in terms of algorithms and symbolic representations of operations on information. These algorithmic descriptions and representations are commonly used by those skilled in the data processing arts to convey the substance of their work effectively to others skilled in the art. These operations while described functionally computationally or logically are understood to be implemented by computer programs or equivalent electrical circuits microcode or the like. Furthermore it has also proven convenient at times to refer to these arrangements of operations as modules without loss of generality. The described operations and their associated modules may be embodied in software firmware hardware or any combinations thereof.

Any of the steps operations or processes described herein may be performed or implemented with one or more hardware or software modules alone or in combination with other devices. In one embodiment a software module is implemented with a computer program product comprising a computer readable medium containing computer program code which can be executed by a computer processor for performing any or all of the steps operations or processes described.

Embodiments of the invention may also relate to an apparatus for performing the operations herein. This apparatus may be specially constructed for the required purposes and or it may comprise a general purpose computing device selectively activated or reconfigured by a computer program stored in the computer. Such a computer program may be stored in a tangible computer readable storage medium or any type of media suitable for storing electronic instructions and coupled to a computer system bus. Furthermore any computing systems referred to in the specification may include a single processor or may be architectures employing multiple processor designs for increased computing capability.

Embodiments of the invention may also relate to a computer data signal embodied in a carrier wave where the computer data signal includes any embodiment of a computer program product or other data combination described herein. The computer data signal is a product that is presented in a tangible medium or carrier wave and modulated or otherwise encoded in the carrier wave which is tangible and transmitted according to any suitable transmission method.

Finally the language used in the specification has been principally selected for readability and instructional purposes and it may not have been selected to delineate or circumscribe the inventive subject matter. It is therefore intended that the scope of the invention be limited not by this detailed description but rather by any claims that issue on an application based hereon. Accordingly the disclosure of the embodiments of the invention is intended to be illustrative but not limiting of the scope of the invention which is set forth in the following claims.

