---

title: Crowd formation based on wireless context information
abstract: Systems and methods are disclosed for forming crowds of users based on wireless contexts of corresponding mobile devices of the users. In general, wireless contexts of mobile devices of a number of users are obtained. For each mobile device, the wireless context of the mobile device includes a wireless Personal Area Network (PAN) context of the mobile device, a wireless Local Area Network (LAN) context of the mobile device, or both. The wireless contexts of the mobile devices of the users are then utilized to form crowds of users. More specifically, in one embodiment, users of mobile devices having sufficiently similar wireless contexts are determined to be in the same crowd of users.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09046987&OS=09046987&RS=09046987
owner: Waldeck Technology, LLC
number: 09046987
owner_city: Wilmington
owner_country: US
publication_date: 20140425
---
This application is a continuation of U.S. patent application Ser. No. 12 969 675 titled Crowd Formation Based On Wireless Context Information filed on Dec. 16 2010 and claims the benefit of provisional patent application Ser. No. 61 289 107 filed Dec. 22 2009 the disclosures of which are hereby incorporated herein by reference in their entirety.

The present disclosure relates to forming crowds of users and more specifically relates to forming crowds of users based on wireless contexts of corresponding mobile devices.

With the proliferation of location aware mobile devices in today s society numerous location based services have emerged. One such service is described in U.S. patent application Ser. No. 12 645 532 entitled FORMING CROWDS AND PROVIDING ACCESS TO CROWD DATA IN A MOBILE ENVIRONMENT which was filed Dec. 23 2009 U.S. patent application Ser. No. 12 645 539 entitled ANONYMOUS CROWD TRACKING which was filed Dec. 23 2009 U.S. patent application Ser. No. 12 645 535 entitled MAINTAINING A HISTORICAL RECORD OF ANONYMIZED USER PROFILE DATA BY LOCATION FOR USERS IN A MOBILE ENVIRONMENT which was filed Dec. 23 2009 U.S. patent application Ser. No. 12 645 546 entitled CROWD FORMATION FOR MOBILE DEVICE USERS which was filed Dec. 23 2009 U.S. patent application Ser. No. 12 645 556 entitled SERVING A REQUEST FOR DATA FROM A HISTORICAL RECORD OF ANONYMIZED USER PROFILE DATA IN A MOBILE ENVIRONMENT which was filed Dec. 23 2009 U.S. patent application Ser. No. 12 645 560 entitled HANDLING CROWD REQUESTS FOR LARGE GEOGRAPHIC AREAS which was filed Dec. 23 2009 and U.S. patent application Ser. No. 12 645 544 entitled MODIFYING A USER S CONTRIBUTION TO AN AGGREGATE PROFILE BASED ON TIME BETWEEN LOCATION UPDATES AND EXTERNAL EVENTS which was filed Dec. 23 2009 all of which are hereby incorporated herein by reference in their entireties. Particularly the aforementioned patent applications describe among other things a system and method for forming crowds of users. Specifically the disclosed system and method utilize a spatial crowd formation process to form crowds of users based on the current locations of the users.

One issue with a purely spatial crowd formation process is that depending on the particular technology utilized to obtain the current locations of the users there may be a significant amount of error. For example the error of a Global Positioning System GPS receiver may be up to 30 meters m . This issue is further compounded when the users are indoors. Due to such errors when venues or Points of Interest POIs are located relatively close to one another e.g. stores in a shopping mall it is often difficult to discern persons gathered in one POI from persons gathered in an adjacent or nearby POI. For example if two POIs are separated only by a wall then it is difficult to discern persons on one side of the wall from users on the other side of the wall. As a result a purely spatial crowd formation process may fail to provide the desired accuracy. As such there is a need for a system and method for forming crowds of users that provides delineation between users located at POIs that are relatively close to one another.

Systems and methods are disclosed for forming crowds of users based on wireless contexts of corresponding mobile devices of the users. In general wireless contexts of mobile devices of a number of users are obtained. For each mobile device the wireless context of the mobile device includes a wireless Personal Area Network PAN context of the mobile device a wireless Local Area Network LAN context of the mobile device or both. In one embodiment the wireless PAN context of the mobile device includes a list of PAN enabled devices detected within proximity to the mobile device. In addition the wireless PAN context may include for each detected PAN enabled device a quality metric indicative of a quality of signals received by the mobile device from the PAN enabled device and or a connection between the mobile device and the PAN enabled device. In one embodiment the wireless LAN context of a mobile device includes a wireless LAN identifier for each of one or more wireless LANs detected by the mobile device. In addition the wireless LAN context may include for each detected wireless LAN a quality metric indicative of a quality of signals received by the mobile device from an access point of the wireless LAN and or a connection between the mobile device and the access point of the wireless LAN. The wireless contexts of the mobile devices of the users are then utilized to form crowds of users. More specifically in one embodiment users of mobile devices having sufficiently similar wireless contexts are determined to be in the same crowd of users.

Those skilled in the art will appreciate the scope of the present disclosure and realize additional aspects thereof after reading the following detailed description of the preferred embodiments in association with the accompanying drawing figures.

The embodiments set forth below represent the necessary information to enable those skilled in the art to practice the embodiments and illustrate the best mode of practicing the embodiments. Upon reading the following description in light of the accompanying drawing figures those skilled in the art will understand the concepts of the disclosure and will recognize applications of these concepts not particularly addressed herein. It should be understood that these concepts and applications fall within the scope of the disclosure and the accompanying claims.

As discussed below in detail the MAP server operates to obtain current locations including location updates for the users of the mobile devices user profiles of the users of the mobile devices and wireless contexts of the mobile devices of the users . The current locations of the users can be expressed as positional geographic coordinates such as latitude longitude pairs and a height vector if applicable or any other similar information capable of identifying a given physical point in space in a two dimensional or three dimensional coordinate system. The user profiles of the users generally include interests of the users which are preferably expressed as keywords. As described below in detail the wireless contexts of the mobile devices of the users include wireless Personal Area Network PAN contexts and or wireless Local Area Network LAN contexts of the mobile devices of the users . Using the current locations of the users the wireless contexts of the mobile devices of the users and the user profiles of the users the MAP server is enabled to provide a number of features such as but not limited to forming crowds of users and generating aggregate profiles for crowds of users. Note that while the MAP server is illustrated as a single server for simplicity and ease of discussion it should be appreciated that the MAP server may be implemented as a single physical server or multiple physical servers operating in a collaborative manner for purposes of redundancy and or load sharing.

In general the one or more profile servers operate to store user profiles for a number of persons including the users of the mobile devices . For example the one or more profile servers may be servers providing social network services such as the Facebook social networking service the MySpace social networking service the LinkedIN social networking service or the like. As discussed below using the one or more profile servers the MAP server is enabled to directly or indirectly obtain the user profiles of the users of the mobile devices . The location server generally operates to receive location updates from the mobile devices and make the location updates available to entities such as for instance the MAP server . In one exemplary embodiment the location server is a server operating to provide Yahoo s Fire Eagle service.

The mobile devices may be mobile smart phones portable media player devices mobile gaming devices or the like. Some exemplary mobile devices that may be programmed or otherwise configured to operate as the mobile devices are the Apple iPhone the Palm Pre the Samsung Rogue the Blackberry Storm the Motorola Droid or similar phone running Google s Android Operating System an Apple iPad and the Apple iPod Touch device. However this list of exemplary mobile devices is not exhaustive and is not intended to limit the scope of the present disclosure.

The mobile devices through N include MAP clients through N generally referred to herein collectively as MAP clients or individually as MAP client MAP applications through N generally referred to herein collectively as MAP applications or individually as MAP application third party applications through N generally referred to herein collectively as third party applications or individually as third party application and location functions through N generally referred to herein collectively as location functions or individually as location function respectively. The MAP client is preferably implemented in software. In general in the preferred embodiment the MAP client is a middleware layer operating to interface an application layer i.e. the MAP application and the third party applications to the MAP server . More specifically the MAP client enables the MAP application and the third party applications to request and receive data from the MAP server . In addition the MAP client enables applications such as the MAP application and the third party applications to access data from the MAP server .

The MAP application is also preferably implemented in software. The MAP application generally provides a user interface component between the user and the MAP server . More specifically among other things the MAP application enables the user to initiate crowd requests sent to the MAP server and presents corresponding data returned by the MAP server to the user . The MAP application also enables the user to configure various settings. For example the MAP application may enable the user to select a desired social networking service e.g. Facebook MySpace LinkedIN etc. from which to obtain the user profile of the user and provide any necessary credentials e.g. username and password needed to access the user profile from the social networking service.

The third party applications are preferably implemented in software. The third party applications operate to access the MAP server via the MAP client . The third party applications may utilize data obtained from the MAP server in any desired manner. As an example one of the third party applications may be a gaming application that utilizes crowd data to notify the user of Points of Interest POIs or Areas of Interest AOIs where crowds of interest are currently located. It should be noted that while the MAP client is illustrated as being separate from the MAP application and the third party applications the present disclosure is not limited thereto. The functionality of the MAP client may alternatively be incorporated into the MAP application and the third party applications .

The location function may be implemented in hardware software or a combination thereof. In general the location function operates to determine or otherwise obtain the location of the mobile device . For example the location function may be or include a Global Positioning System GPS receiver. In addition or alternatively the location function may include hardware and or software that enables improved location tracking in indoor environments such as for example shopping malls. For example the location function may be part of or compatible with the InvisiTrack Location System provided by InvisiTrack and described in U.S. Pat. No. 7 423 580 entitled Method and System of Three Dimensional Positional Finding which issued on Sep. 9 2008 U.S. Pat. No. 7 787 886 entitled System and Method for Locating a Target using RFID which issued on Aug. 31 2010 and U.S. Patent Application Publication No. 2007 0075898 entitled Method and System for Positional Finding Using RF Continuous and or Combined Movement which published on Apr. 5 2007 all of which are hereby incorporated herein by reference for their teachings regarding location tracking. The location function may also include manual location reporting methods such as check ins as popularized by location based services such as FourSquare Gowalla and Facebook Places whereby users can manually report their current location or venue to a server via a mobile device.

The subscriber device is a physical device such as a personal computer a mobile computer e.g. a notebook computer a netbook computer a tablet computer etc. a mobile smart phone or the like. The subscriber associated with the subscriber device is a person or entity. In general the subscriber device enables the subscriber to access the MAP server via a web browser to obtain various types of data preferably for a fee. For example the subscriber may pay a fee to have access to crowd data such as aggregate profiles for crowds located at one or more POIs and or located in one or more AOIs pay a fee to track crowds or the like. Note that the web browser is exemplary. In another embodiment the subscriber device is enabled to access the MAP server via a custom application.

Lastly the third party service is a service that has access to data from the MAP server such as aggregate profiles for one or more crowds at one or more POIs or within one or more AOIs. Based on the data from the MAP server the third party service operates to provide a service such as for example targeted advertising. For example the third party service may obtain anonymous aggregate profile data for one or more crowds located at a POI and then provide targeted advertising to known users located at the POI based on the anonymous aggregate profile data. Note that while targeted advertising is mentioned as an exemplary third party service other types of third party services may additionally or alternatively be provided. Other types of third party services that may be provided will be apparent to one of ordinary skill in the art upon reading this disclosure.

Before proceeding it should be noted that while the system of illustrates an embodiment where the one or more profile servers and the location server are separate from the MAP server the present disclosure is not limited thereto. In an alternative embodiment the functionality of the one or more profile servers and or the location server may be implemented within the MAP server .

The business logic layer includes a profile manager a location manager a history manager a crowd analyzer and an aggregation engine each of which is preferably implemented in software. The profile manager generally operates to obtain the user profiles of the users directly or indirectly from the one or more profile servers and store the user profiles in the persistence layer . The location manager operates to obtain the current locations of the users including location updates. As discussed below the current locations of the users may be obtained directly from the mobile devices and or obtained from the location server .

The history manager generally operates to maintain a historical record of anonymized user profile data by location. Note that while the user profile data stored in the historical record is preferably anonymized it is not limited thereto. The crowd analyzer operates to form crowds of users based on the locations of the users and the wireless contexts of the mobile devices of the users as described below in detail. The aggregation engine generally operates to provide aggregate profile data in response to requests from the mobile devices the subscriber device and the third party service . The aggregate profile data may be historical aggregate profile data for one or more POIs or one or more AOIs or aggregate profile data for crowd s currently at one or more POIs or within one or more AOIs. The discussion herein focuses on one embodiment of a crowd formation process performed by the crowd analyzer . For a spatial crowd formation process that may be used to supplement the crowd formation process described herein as well as for additional information regarding the operation of the profile manager the location manager the history manager and the aggregation engine the interested reader is directed to U.S. patent application Ser. No. 12 645 532 entitled FORMING CROWDS AND PROVIDING ACCESS TO CROWD DATA IN A MOBILE ENVIRONMENT which was filed Dec. 23 2009 U.S. patent application Ser. No. 12 645 539 entitled ANONYMOUS CROWD TRACKING which was filed Dec. 23 2009 U.S. patent application Ser. No. 12 645 535 entitled MAINTAINING A HISTORICAL RECORD OF ANONYMIZED USER PROFILE DATA BY LOCATION FOR USERS IN A MOBILE ENVIRONMENT which was filed Dec. 23 2009 U.S. patent application Ser. No. 12 645 546 entitled CROWD FORMATION FOR MOBILE DEVICE USERS which was filed Dec. 23 2009 U.S. patent application Ser. No. 12 645 556 entitled SERVING A REQUEST FOR DATA FROM A HISTORICAL RECORD OF ANONYMIZED USER PROFILE DATA IN A MOBILE ENVIRONMENT which was filed Dec. 23 2009 U.S. patent application Ser. No. 12 645 560 entitled HANDLING CROWD REQUESTS FOR LARGE GEOGRAPHIC AREAS which was filed Dec. 23 2009 and U.S. patent application Ser. No. 12 645 544 entitled MODIFYING A USER S CONTRIBUTION TO AN AGGREGATE PROFILE BASED ON TIME BETWEEN LOCATION UPDATES AND EXTERNAL EVENTS which was filed Dec. 23 2009 all of which have been incorporated herein by reference in their entireties.

The persistence layer includes an object mapping layer and a datastore . The object mapping layer is preferably implemented in software. The datastore is preferably a relational database which is implemented in a combination of hardware i.e. physical data storage hardware and software i.e. relational database software . In this embodiment the business logic layer is implemented in an object oriented programming language such as for example Java. As such the object mapping layer operates to map objects used in the business logic layer to relational database entities stored in the datastore . Note that in one embodiment data is stored in the datastore in a Resource Description Framework RDF compatible format.

In an alternative embodiment rather than being a relational database the datastore may be implemented as an RDF datastore. More specifically the RDF datastore may be compatible with RDF technology adopted by Semantic Web activities. Namely the RDF datastore may use the Friend Of A Friend FOAF vocabulary for describing people their social networks and their interests. In this embodiment the MAP server may be designed to accept raw FOAF files describing persons their friends and their interests. These FOAF files are currently output by some social networking services such as LiveJournal and Facebook . The MAP server may then persist RDF descriptions of the users as a proprietary extension of the FOAF vocabulary that includes additional properties desired for the system .

At some point after authentication is complete a user profile process is performed such that a user profile of the user is obtained from the profile server and delivered to the MAP server step . In this embodiment the MAP client of the mobile device sends a profile request to the profile server step A . In response the profile server returns the user profile of the user to the mobile device step B . The MAP client of the mobile device then sends the user profile of the user to the MAP server step C . Note that while in this embodiment the MAP client sends the complete user profile of the user to the MAP server in an alternative embodiment the MAP client may filter the user profile of the user according to criteria specified by the user . For example the user profile of the user may include demographic information general interests music interests and movie interests and the user may specify that the demographic information or some subset thereof is to be filtered or removed before sending the user profile to the MAP server .

Upon receiving the user profile of the user from the MAP client of the mobile device the profile manager of the MAP server processes the user profile step D . More specifically in the preferred embodiment the profile manager includes social network handlers for the social network services supported by the MAP server that operate to map the user profiles of the users obtained from the social network services to a common format utilized by the MAP server . This common format includes a number of user profile categories or user profile slices such as for example a demographic profile category a social interaction profile category a general interests category a music interests profile category and a movie interests profile category. In addition as discussed below the user profiles of the users maintained by the MAP server include a dynamic profile slice that is automatically updated by the MAP server based on real time user generated contexts of the users e.g. search terms entered by the users .

For example if the MAP server supports user profiles from Facebook MySpace and LinkedIN the profile manager may include a Facebook handler a MySpace handler and a LinkedIN handler. The social network handlers process user profiles from the corresponding social network services to generate user profiles for the users in the common format used by the MAP server . For this example assume that the user profile of the user is from Facebook . The profile manager uses a Facebook handler to process the user profile of the user to map the user profile of the user from Facebook to a user profile for the user for the MAP server that includes lists of keywords for a number of predefined profile categories or profile slices such as for example a demographic profile category a social interaction profile category a general interests profile category a music interests profile category and a movie interests profile category. As such the user profile of the user from Facebook may be processed by the Facebook handler of the profile manager to create a list of keywords such as for example liberal High School Graduate 35 44 College Graduate etc. for the demographic profile category a list of keywords such as Seeking Friendship for the social interaction profile category a list of keywords such as politics technology photography books etc. for the general interests profile category a list of keywords including music genres artist names album names or the like for the music interests profile category and a list of keywords including movie titles actor or actress names director names movie genres or the like for the movie interests profile category. In one embodiment the profile manager may use natural language processing or semantic analysis. For example if the Facebook user profile of the user states that the user is 20 years old semantic analysis may result in the keyword of 18 24 years old being stored in the user profile of the user for the MAP server .

After processing the user profile of the user the profile manager of the MAP server stores the resulting user profile for the user step E . More specifically in one embodiment the MAP server stores user records for the users in the datastore . The user profile of the user is stored in the user record of the user . The user record of the user includes a unique identifier of the user the user profile of the user and as discussed below a current location of the user . Note that the user profile of the user may be updated as desired. For example in one embodiment the user profile of the user is updated by repeating step each time the user activates the MAP application .

Note that while the discussion herein focuses on an embodiment where the user profiles of the users are obtained from the one or more profile servers the user profiles of the users may be obtained in any desired manner. For example in one alternative embodiment the user may identify one or more favorite websites. The profile manager of the MAP server may then crawl the one or more favorite websites of the user to obtain keywords appearing in the one or more favorite websites of the user . These keywords may then be stored as the user profile of the user .

At some point a process is performed such that a current location of the mobile device and thus a current location of the user is obtained by the MAP server step . In this embodiment the MAP application of the mobile device obtains the current location of the mobile device from the location function of the mobile device . The MAP application then provides the current location of the mobile device to the MAP client and the MAP client then provides the current location of the mobile device to the MAP server step A . Note that step A may be repeated periodically or in response to a change in the current location of the mobile device in order for the MAP application to provide location updates for the user to the MAP server .

In response to receiving the current location of the mobile device the location manager of the MAP server stores the current location of the mobile device as the current location of the user step B . More specifically in one embodiment the current location of the user is stored in the user record of the user maintained in the datastore of the MAP server . Note that in the preferred embodiment only the current location of the user is stored in the user record of the user . In this manner the MAP server maintains privacy for the user since the MAP server does not maintain a historical record of the location of the user . Any historical data maintained by the MAP server is preferably anonymized by the history manager in order to maintain the privacy of the users .

In addition to storing the current location of the user the location manager sends the current location of the user to the location server step C . In this embodiment by providing location updates to the location server the MAP server in return receives location updates for the user from the location server . This is particularly beneficial when the mobile device does not permit background processes. If the mobile device does not permit background processes the MAP application will not be able to provide location updates for the user to the MAP server unless the MAP application is active. Therefore when the MAP application is not active other applications running on the mobile device or some other device of the user may directly or indirectly provide location updates to the location server for the user . This is illustrated in step where the location server receives a location update for the user directly or indirectly from another application running on the mobile device or an application running on another device of the user step A . The location server then provides the location update for the user to the MAP server step B . In response the location manager updates and stores the current location of the user in the user record of the user step C . In this manner the MAP server is enabled to obtain location updates for the user even when the MAP application is not active at the mobile device .

At some point after authentication is complete a user profile process is performed such that a user profile of the user is obtained from the profile server and delivered to the MAP server step . In this embodiment the profile manager of the MAP server sends a profile request to the profile server step A . In response the profile server returns the user profile of the user to the profile manager of the MAP server step B . Note that while in this embodiment the profile server returns the complete user profile of the user to the MAP server in an alternative embodiment the profile server may return a filtered version of the user profile of the user to the MAP server . The profile server may filter the user profile of the user according to criteria specified by the user . For example the user profile of the user may include demographic information general interests music interests and movie interests and the user may specify that the demographic information or some subset thereof is to be filtered or removed before sending the user profile to the MAP server .

Upon receiving the user profile of the user the profile manager of the MAP server processes the user profile step C . More specifically as discussed above in the preferred embodiment the profile manager includes social network handlers for the social network services supported by the MAP server . The social network handlers process user profiles to generate user profiles for the MAP server that include lists of keywords for each of a number of profile categories or profile slices.

After processing the user profile of the user the profile manager of the MAP server stores the resulting user profile for the user step D . More specifically in one embodiment the MAP server stores user records for the users in the datastore . The user profile of the user is stored in the user record of the user . The user record of the user includes a unique identifier of the user the user profile of the user and as discussed below a current location of the user . Note that the user profile of the user may be updated as desired. For example in one embodiment the user profile of the user is updated by repeating step each time the user activates the MAP application .

Note that while the discussion herein focuses on an embodiment where the user profiles of the users are obtained from the one or more profile servers the user profiles of the users may be obtained in any desired manner. For example in one alternative embodiment the user may identify one or more favorite websites. The profile manager of the MAP server may then crawl the one or more favorite websites of the user to obtain keywords appearing in the one or more favorite websites of the user . These keywords may then be stored as the user profile of the user .

At some point a process is performed such that a current location of the mobile device and thus a current location of the user is obtained by the MAP server step . In this embodiment the MAP application of the mobile device obtains the current location of the mobile device from the location function of the mobile device . The MAP application then provides the current location of the user of the mobile device to the location server step A . Note that step A may be repeated periodically or in response to changes in the location of the mobile device in order to provide location updates for the user to the MAP server . The location server then provides the current location of the user to the MAP server step B . The location server may provide the current location of the user to the MAP server automatically in response to receiving the current location of the user from the mobile device or in response to a request from the MAP server .

In response to receiving the current location of the mobile device the location manager of the MAP server stores the current location of the mobile device as the current location of the user step C . More specifically in one embodiment the current location of the user is stored in the user record of the user maintained in the datastore of the MAP server . Note that in the preferred embodiment only the current location of the user is stored in the user record of the user . In this manner the MAP server maintains privacy for the user since the MAP server does not maintain a historical record of the location of the user . As discussed below in detail historical data maintained by the MAP server is preferably anonymized in order to maintain the privacy of the users .

As discussed above the use of the location server is particularly beneficial when the mobile device does not permit background processes. As such if the mobile device does not permit background processes the MAP application will not provide location updates for the user to the location server unless the MAP application is active. However other applications running on the mobile device or some other device of the user may provide location updates to the location server for the user when the MAP application is not active. This is illustrated in step where the location server receives a location update for the user from another application running on the mobile device or an application running on another device of the user step A . The location server then provides the location update for the user to the MAP server step B . In response the location manager updates and stores the current location of the user in the user record of the user step C . In this manner the MAP server is enabled to obtain location updates for the user even when the MAP application is not active at the mobile device .

In this embodiment the mobile devices detect their wireless contexts steps and and report their wireless contexts to the MAP server steps and . Note that in order to preserve privacy the mobile devices may hash or otherwise encrypt their wireless contexts e.g. hash or encrypt an identifier of each detected PAN enabled device . If hashing is used the same hashing scheme is used by each of the mobile devices in order to ensure that for example an identifier of a particular PAN enabled device detected by multiple mobile devices hashes to the same unique value. This hashing scheme may be predetermined based on location or agreed upon by the mobile devices in an ad hoc manner.

As used herein a wireless context of a mobile device is a wireless PAN context of the mobile device a wireless LAN context of the mobile device or both the wireless PAN and the wireless LAN contexts of the mobile device . In one embodiment the wireless PAN context of the mobile device includes a list of PAN enabled devices detected within range of the mobile device and optionally one or more quality metrics for each of the detected PAN enabled devices. In one embodiment the mobile device detects the PAN enabled devices by first broadcasting a discovery request. In response the PAN enabled devices within range of the mobile device respond with their device identifiers IDs e.g. Bluetooth IDs . The detected PAN enabled devices may be other mobile devices that are PAN enabled and detected by a PAN component e.g. a Bluetooth transceiver of the mobile device . In addition or alternatively the detected PAN enabled devices may include devices that are not part of the system i.e. the mobile device may detect PAN enabled devices that are not other mobile devices . Note that in one preferred embodiment the PAN components of the mobile device and the detected PAN enabled devices are power class 2 Bluetooth transceivers having a range of about 10 meters. The quality metric may vary depending on the particular PAN type e.g. Bluetooth PAN IEEE 802.15.4a PAN Zigbee PAN or the like . The quality metric for each of the detected PAN enabled devices is generally a metric that is indicative of a quality of a signal received by the mobile device from the PAN enabled device and or a connection between the mobile device and the PAN enabled device. For example the quality metric for each of the detected PAN enabled devices may be a Received Signal Strength Indicator RSSI for a PAN connection between the mobile device and the detected PAN enabled device also referred to herein as a connection oriented RSSI an Inquiry based Receive RX Power Level also referred to herein as a connectionless RSSI a Link Quality indicator LQ or the like. Note that with respect to the mobile devices that are PAN enabled the MAP server may store the PAN device identifiers e.g. Bluetooth IDs of the mobile devices in the user profiles of the corresponding users in order to assist in the crowd formation process. However this is optional.

In one embodiment a wireless LAN context of a mobile device includes a wireless LAN identifier and a quality metric for each of one or more wireless LANs detected by the mobile device . Each wireless LAN may be for example a Wi Fi network. In addition if the mobile device is connected to a particular wireless LAN the wireless LAN context may identify one of the one or more wireless LANs detected by the mobile device as the wireless LAN to which the mobile device is connected. As used herein a wireless LAN identifier is any information that uniquely identifies the wireless LAN or access point for the wireless LAN such as for example a Service Set Identifier SSID of the wireless LAN a Media Access Control MAC address of the access point of the wireless LAN or the like. The quality metric for each wireless LAN is preferably an RSSI value for the wireless LAN at the mobile device . Note however that other quality metrics may additionally or alternatively be used. For example in addition to or as an alternative to RSSI Signal to Noise Ratio SNR Link Quality Indicator LQI Packet Reception Rate PRR and or Bit Error Rate BER may be included in the wireless context for each wireless PAN and or wireless LAN detected by the mobile device .

Once the mobile devices have detected their wireless contexts the mobile devices report their wireless contexts to the MAP server . In one embodiment the mobile devices periodically detect their wireless contexts and report their wireless contexts to the MAP server . In another embodiment the mobile devices periodically detect their wireless contexts and then report their wireless contexts or updates to their wireless contexts to the MAP server only if there is a change to their wireless contexts. In another embodiment the detection and reporting of the wireless contexts of the mobile devices is synchronized. More specifically some technologies have a relatively long inquiry or discovery time. For example Bluetooth devices require at least 10.24 seconds to reliably detect all nearby devices. Hence if discovery is not synchronized the time taken for N Bluetooth enabled devices to detect one another is N 10.24 seconds in the worst case scenario. If the number of Bluetooth enabled devices is large then the Bluetooth contexts of the devices may be out of date or stale by the time that all of the nearby devices have detected and reported their wireless contexts. This issue may be addressed by synchronizing the detection of the wireless contexts of the mobile devices .

In one embodiment wireless context detection may be synchronized by defining a synchronized schedule at which the mobile devices detect their wireless contexts. For example all of the mobile devices may detect their wireless contexts every 10minute of every hour e.g. 12 00 PM 12 10 PM 12 20 PM etc. . In another embodiment the MAP server may synchronize wireless context discovery by for example simultaneously requesting that all of the mobile devices at a particular location or POI detect and report their wireless contexts to the MAP server . The MAP server may do so periodically. The MAP server may maintain a schedule defining times at which the MAP server is to request wireless context data for particular locations or POIs. In yet another embodiment one of the mobile devices at a particular location or POI may instruct all of the mobile devices nearby to simultaneously detect their wireless contexts and report their wireless contexts to the MAP server . The nearby mobile devices may be those mobile devices within PAN communication range of the mobile device . After the mobile devices have reported their wireless contexts to the MAP server the wireless contexts of the mobile devices are stored at the MAP server step . Preferably the MAP server stores the wireless contexts of the mobile devices as they are received rather than waiting until all wireless contexts are received before storing the wireless contexts. Note that while only two of the mobile devices are illustrated it is to be understood that all of the mobile devices or at least those mobile devices that are PAN and or wireless LAN enabled detect their wireless contexts.

In this embodiment the mobile device sends a crowd request to the MAP server step . Note that while in this example the crowd request originates from the mobile device of the user this discussion is equally applicable to crowd requests that originate from the mobile devices of any of the users or the subscriber device of the subscriber . The crowd request is a request for crowd data for crowds currently located near a specified POI or within a specified AOI. The crowd request may be initiated by the user of the mobile device via the MAP application or may be initiated automatically by the MAP application in response to an event such as for example start up of the MAP application movement of the user or the like.

In one embodiment the crowd request is for a POI where the POI is a POI corresponding to the current location of the user a POI selected from a list of POIs defined by the user a POI selected from a list of POIs defined by the MAP application or the MAP server a POI selected by the user from a map a POI implicitly defined via a separate application e.g. the POI is implicitly defined as the location of the nearest Starbucks coffee house in response to the user performing a Google search for Starbucks or the like. If the POI is selected from a list of POIs the list of POIs may include static POIs which may be defined by street addresses or latitude and longitude coordinates dynamic POIs which may be defined as the current locations of one or more friends of the user or both. Note that in some embodiments the user may be enabled to define a POI by selecting a crowd center of a crowd as a POI where the POI would thereafter remain static at that point and would not follow the crowd.

In another embodiment the crowd request is for an AOI where the AOI may be an AOI of a predefined shape and size centered at the current location of the user an AOI selected from a list of AOIs defined by the user an AOI selected from a list of AOIs defined by the MAP application or the MAP server an AOI selected by the user from a map an AOI implicitly defined via a separate application e.g. the AOI is implicitly defined as an area of a predefined shape and size centered at the location of the nearest Starbucks coffee house in response to the user performing a Google search for Starbucks an AOI corresponding to a geographic region displayed in a map currently presented to the user at the mobile device or the like. If the AOI is selected from a list of AOIs the list of AOIs may include static AOIs dynamic AOIs which may be defined as areas of a predefined shape and size centered at the current locations of one or more friends of the user or both. Note that in some embodiments the user may be enabled to define an AOI by selecting a crowd such that an AOI is created of a predefined shape and size centered at the crowd center of the selected crowd. The AOI would thereafter remain static and would not follow the crowd. The POI or the AOI of the crowd request may be selected by the user via the MAP application . In yet another embodiment the MAP application automatically uses the current location of the user as the POI or as a center point for an AOI of a predefined shape and size.

Upon receiving the crowd request the MAP server and specifically the crowd analyzer of the MAP server identifies one or more of the users that are relevant to the crowd request hereinafter referred to as relevant users step . In this embodiment the relevant users are users currently located within a bounding region determined for the crowd request. If the crowd request is for a POI then the bounding region may be a geographic area of a predefined shape and size that is centered at or that otherwise encompasses the POI. For example the bounding region for a POI may correspond to known or expected physical boundaries of the POI e.g. walls of a building corresponding to the POI plus a predefined buffer that for example accounts for an error of the location functions of the mobile devices . As a specific example GPS receivers may have an error of up to 30 meters m and the POI may be a 40 m 40 m building. As such each side of the 40 m 40 m box may be extended by 30 m to provide the bounding region as a 100 m 100 m geographic region centered at the POI. As another example the bounding region for a POI may be a geographic region of a predefined shape and size that is the same for all POIs. If the crowd request is for an AOI the bounding region may be the AOI. Alternatively the AOI may be extended to include a buffer that for example accounts for an error of the location functions of the mobile devices . As an example if the AOI is a circular area having a radius of 200 m and the location functions are GPS receivers having an error of up to 30 m then the bounding region for the crowd request may be provided by extending the radius of the AOI by 30 m to provide the bounding region.

While in this embodiment the relevant users are identified based on the current locations of the users as indicated by the location updates from the mobile devices of the users the present disclosure is not limited thereto. In another embodiment the relevant users may be identified utilizing a manual check in feature which may be provided by the MAP server or a third party. For example the check in feature may be or be similar to the FourSquare mobile check in application. More specifically the relevant users may be those users currently checked in to the POI for the crowd request or users currently checked in to one or more POIs within the AOI for the crowd request. Once a crowd is formed the check in location for any one of the users in the crowd may be attributed to the other users in the crowd. This may be true whether the relevant users are identified based on the current locations of the users as indicated by the location updates from the mobile devices of the users or based on manual check in locations of the users .

Once the relevant users are identified the crowd analyzer of the MAP server forms one or more crowds of users from the relevant users based on the wireless contexts of the relevant users step . As discussed below in detail the crowd analyzer groups the relevant users into crowds that have similar wireless contexts. In other words the users of the mobile devices that have similar wireless contexts are determined to be in the same crowd. Once the one or more crowds are formed the crowd analyzer obtains crowd data for the one or more crowds step . For each crowd the crowd data for the crowd generally includes information about the crowd such as for example an aggregate profile for the crowd. The aggregate profile of a crowd may be generated based on a comparison of the user profile of the user or one or more select profile categories from the user profile of the user to the user profiles of the users in the crowd. For instance the aggregate profile of a crowd may include 

Next the MAP server returns the crowd data for the one or more crowds to the mobile device step . The MAP application of the mobile device then presents the crowd data to the user step . The manner in which the crowd data is presented depends on the particular implementation of the MAP application . In one embodiment the crowd data is overlaid upon a map. For example the crowds may be represented by corresponding indicators overlaid on a map. The user may then select a crowd in order to view additional crowd data regarding that crowd such as for example the aggregate profile of that crowd characteristics of that crowd or the like.

Next the crowd analyzer utilizes a clustering scheme to form crowds of users based on the similarity metrics of the user pairs such that crowds of users having similar wireless contexts are formed. In this exemplary embodiment clustering begins by the crowd analyzer creating a list of the user pairs in which the user pairs are ordered by their similarity metric values step . Preferably the list of user pairs is ordered from the user pair having the lowest similarity metric i.e. the highest similarity to the user pair having the highest similarity metric i.e. the lowest similarity . Note that the crowd analyzer may create more than one list and apply the clustering scheme described below to each list separately. This may be done for instance to reduce the computational cost for very large lists such as lists generated for large and crowded POIs such as a concert. In one embodiment the list may be split into smaller lists based on one or more wireless context parameters using any of the clustering or partitioning algorithms known in the art. For example the list may be split based on PAN device IDs or Wi Fi SSIDs detected in the wireless contexts of mobile devices . If two mobile devices have no detected PAN device IDs and or Wi Fi SSIDs in common it can be reasonably assumed that they are too far apart to belong to the same crowd and hence may be put into separate sub lists. The crowd analyzer then gets the similarity metric for the first user pair in the ordered list of user pairs step . The crowd analyzer then determines whether the similarity metric is less than a predetermined threshold value step . Preferably the predetermined threshold value is a system defined value. The predetermined threshold value controls the degree to which the wireless contexts of the mobile devices of two users in the user pair must match before the two users are included in the same crowd of users. If the similarity metric is not less than the predetermined threshold value the crowd formation process ends.

Note that while not illustrated in step the crowd analyzer may optionally also determine whether one or more secondary factors indicate that the pair of users are to be included in the same crowd. For example if the two users in the user pair are direct friends in a social network then the crowd analyzer may determine that the two users are to be included in the same crowd or are more likely to be in the same crowd even if the similarity metric for the two users is not less than the predetermined threshold value. As one alternative the predetermined threshold value may be dynamically adjusted if the two users in the user pair are direct friends in a social network such that the two users are included in the same crowd or are more likely to be in the same crowd. As another example if the two users in the user pair are currently connected to the same wireless LAN as opposed to merely detecting the same wireless LAN then the crowd analyzer may determine that the two users are to be included in the same crowd even if the similarity metric for the two users is not less than the predetermined threshold value. As yet another example the one or more secondary factors may include one or more factors from a third party. For example the crowd analyzer may provide the wireless contexts of the pair of users to a third party and receive one or more factors indicating whether the pair of users are likely in the same crowd based on the wireless contexts of the pair of users. As a specific example the crowd analyzer may provide the wireless contexts of the pair of users to SkyHook or a similar service that has geographically mapped Wi Fi networks and in response receive information indicating whether the pair of users are likely located sufficiently near one another to be considered to be part of the same crowd. Thus in this alternative embodiment the crowd analyzer determines whether the similarity metric for the user pair is less than the predetermined threshold value or whether there are one or more secondary factors that indicate that the two users in the user pair are to be included in the same crowd. If either of those is true then the process proceeds to step .

Returning to the embodiment illustrated in if the similarity metric for the user pair is less than the predetermined threshold value then the crowd analyzer determines whether either of the users in the user pair is already in a crowd step . If not the crowd analyzer creates a new crowd for the user pair step . More specifically the crowd analyzer preferably creates a crowd record that represents the new crowd and stores the new crowd record at the MAP server . The crowd record for the new crowd preferably includes a list of users in the crowd. At this point the users in the user pair are the only users in the crowd. As such only the users in the user pair are stored in the list of users in the crowd record for the new crowd. Once the new crowd is created the process proceeds to step .

Returning to step if one or both of the users in the user pair is already in a crowd the crowd analyzer determines whether both of the users in the user pair are already included in the same crowd step . If so the process proceeds to step . If both of the users are not already included in the same crowd the crowd analyzer determines whether the users in the user pair are already included in two different crowds step . If not then one of the users in the user pair is already included in a crowd while the other user in the user pair is not yet in a crowd. As such the crowd analyzer adds the user that is not already included in a crowd to the crowd of the other user in the user pair step . More specifically in one embodiment the user that is not already included in a crowd is added to the list of users in the crowd record of the crowd of the other user in the user pair. The process then proceeds to step .

Returning to step if the users in the user pair are already included in two different crowds then the crowd analyzer merges the two crowds step . More specifically in one embodiment the crowd analyzer merges the two crowds by adding the list of users stored in the crowd record of the crowd of one user in the user pair to the list of users stored in the crowd record of the crowd of the other user in the user pair and then deletes or otherwise discards the crowd record of the crowd that was merged into the other crowd. At this point whether proceeding from step or the crowd analyzer determines whether the last user pair in the ordered list of user pairs has been processed step . If not the crowd analyzer gets the similarity metric for the next user pair in the ordered list of user pairs step and the process then returns to step . Once the last user pair has been processed the crowd formation process is complete. Note that while not illustrated the crowd analyzer may optionally remove any crowds that do not have at least a predetermined minimum number of users. The minimum number of users may be any desired number greater than or equal to 2. For example the minimum number of users may be 3. Also note that the threshold may be dynamically adjusted and steps re performed if the number and size of crowds formed is deemed to be either too high or too low following a set of pre determined heuristics. Alternatively the threshold may be adjusted as the steps are performed. For example in one embodiment after step instead of adding the user not in a crowd to the crowd of the user that is already in the crowd the two users may be split out into a separate crowd of their own depending on their similarity metrics not shown in . In this case the similarity metric of both users is compared to the similarity metrics of other users in the crowd and if the similarity metrics of the two users are more similar to each other than those of the rest of the crowd it may be assumed that they belong in a separate crowd. Hence the crowd analyzer may remove the user who is already included in a crowd from that crowd and create a new crowd comprising the current pair of users. The crowd analyzer may also use the difference between similarity metrics of the new crowd and the existing crowd to determine a new threshold value. In another embodiment steps may be performed recursively with the threshold being adjusted at each recursion and steps operating on the crowds resulting from the previous recursion thus allowing crowds of varying granularity to be formed. In yet another embodiment a graph theoretic approach may be used where a graph is formed denoting the connectivity between mobile devices as inferred from their detected PAN device IDs and quality metrics. In this embodiment a graph is constructed with nodes representing mobile devices and identified by their corresponding PAN device IDs. Edges are created between the nodes for each mobile device and the nodes for PAN device IDs that the mobile device has detected. The edges may be weighted using wireless quality metrics such as RSSI. Then any of the graph partitioning or graph clustering algorithms known in the art may be applied to this graph to create sub graphs that represent crowds. In an alternative embodiment methods such as locality sensitive hashing may be employed where devices having similar wireless contexts data hash to the same buckets which represent crowds. Note that any other clustering methods known in the art may be employed in addition to or instead of the steps described in .

Next the crowd analyzer sets a counter j to 1 step and a counter k to 1 step . The crowd analyzer then computes the similarity metric for a user pair formed by user j and user k from the relevant users for which the crowd formation process is being performed i.e. the relevant users in the bounding region based on the normalized wireless contexts of users j and k step . The similarity metric may be computed using any suitable scheme. One exemplary embodiment is described below. Once the similarity metric is computed the crowd analyzer determines whether user k is the last user of the relevant users step . If not the counter k is incremented step and the process returns to step . Once similarity metrics have been computed for all user pairs including user j the crowd analyzer determines whether user j is the last user of the relevant users step . If not counter j is incremented step and the process returns to step . The process continues until similarity metrics have been computed for all user pairs.

The following example illustrates the process of according to one exemplary embodiment of the present disclosure. Note however that this example is for illustrative purposes and is not intended to limit the scope of the present disclosure. Table 1 below illustrates the wireless contexts of the mobile devices of a group of relevant users user 1 through user 5 .

Table 1 also illustrates the wireless LAN contexts of the mobile devices of users 1 through 5. Specifically in this example the mobile device of user 1 has detected the wireless LAN having the SSID Coffee Shop with an RSSI value of 40 but did not detect the wireless LAN having the SSID Book Store as indicated by the . Similarly the mobile device of user 2 has detected the wireless LAN having the SSID Coffee Shop with an RSSI value of 45 but did not detect the wireless LAN having the SSID Book Store as indicated by the

 . The mobile device of user 3 has detected the wireless LAN having the SSID Coffee Shop with an RSSI value of 42 and the wireless LAN having the SSID Book Store with an RSSI value of 10 . The mobile device of user 4 has detected the wireless LAN having the SSID Coffee Shop with an RSSI value of 30 and the wireless LAN having the SSID Book Store with an RSSI value of 25 . The mobile device of user 5 has detected the wireless LAN having the SSID Coffee Shop with an RSSI value of 31 and the wireless LAN having the SSID Book Store with an RSSI value of 28 .

Next the crowd analyzer replaces N A s in Table 1 with a maximum RSSI value which for this example is the maximum RSSI currently included in the wireless contexts of the mobile devices of the corresponding user plus 5. Undetected mobile devices are assigned minimum RSSI values which for this example is the minimum RSSI currently included in the wireless contexts of the mobile devices of the corresponding user minus 10. Note that the values of 5 and 10 are exemplary and may be optimized based on heuristics or availability of wireless models. Similarly undetected wireless LANs are assigned RSSI values of 0 . As a result Table 1 becomes Table 2 below.

Next the PAN RSSI values in Table 2 are normalized to values between 0 and 1. In this example the PAN RSSI values are normalized using device user specific MAX and MIN values. Specifically the PAN RSSI values for the wireless context of the mobile device of user 1 are normalized using 20 as the MAX value and 40 as the MIN value. Likewise the PAN RSSI values for the wireless context of the mobile device of user 2 are normalized using 0 as the MAX value and 18 as the MIN value etc. The wireless LAN RSSI values are scaled to values between 0 and 1. As a result Table 2 becomes Table 3 below.

Note that there are numerous variations to the exemplary process described above as well as alternative embodiments that will be apparent to one of ordinary skill in the art upon reading this disclosure. As one exemplary variation the similarity metrics of the user pairs may alternatively be computed based on comparisons of lists of detected users ordered based on RSSI values. In this manner relative RSSI values rather than specific RSSI values are utilized for the comparison. Thus using the example above the ordered list for user 1 would be user 1 user 2 user 3 user 4 and user 5 the ordered list for user 2 would be user 2 user 1 user 3 user 4 and user 5 the ordered list for user 3 would be user 3 user 1 user 2 user 5 and user 4 the ordered list for user 4 would be user 4 user 5 user 3 user 1 and user 2 and the ordered list for user 5 would be user 5 user 4 user 1 user 2 and user 3. These ordered lists may then be compared using known list comparison schemes to provide similarity metrics for the user pairs. For example the similarity metric of each user pair may be computed based on the similarity of vectors or strings representing the ordered lists of users for the users in the user pair determined using a technique such as for example Hamming distance for binary strings Cosine Similarity for vectors or Levenshtein distance for text strings.

As another exemplary variation for each user pair separate similarity metrics may be computed for each network e.g. a PAN similarity metric for wireless PAN contexts and a LAN similarity metric for wireless LAN contexts . Then for each user pair the separate similarity metrics may be combined via for example a weighted average in order to provide the similarity metric for the user pair.

As yet another example the mobile devices may form ad hoc PANs such as for example Bluetooth piconets. In this case for each such ad hoc network one of the mobile devices may serve as a master device of the ad hoc network and operate to collect the identifiers of the other mobile devices in the ad hoc network and report the collected identifiers to the MAP server . The MAP server may then utilize the reported identifiers as the wireless PAN contexts of all of the mobile devices in the ad hoc network and process the wireless PAN contexts of the mobile devices according to the crowd formation process of . Alternatively the MAP server may automatically form a crowd for the users of the mobile devices in a piconet. If there are additional relevant users the crowd formation process of may then be performed to create additional crowds and or to add additional users to the existing crowd created for the users in the ad hoc network depending on the particular circumstances.

Lastly it should be noted that illustrate an exemplary clustering algorithm for grouping or clustering users having similar wireless contexts into crowds of users. However the present disclosure is not limited thereto. Other clustering techniques e.g. correlation clustering may be used to group users having similar wireless contexts into crowds of users.

The crowd analyzer then identifies any users that are not already in the identified crowd and that have mobile devices with wireless contexts that include a quality metric for the wireless LAN that is greater than or equal to the quality metric corresponding to the boundary of the POI step . The crowd analyzer then adds the identified users to the crowd step . Note that any users having mobile devices that are not PAN enabled would likely have wireless contexts that are not sufficiently similar to the wireless contexts of the other users in the crowd to be included in the crowd during execution of the process of . Steps through operate to identify users that should be included in the crowd located within the boundary of the POI but that have mobile devices that are not PAN enabled and thus not included in the crowd and then include those identified users in the crowd.

At this point the crowd analyzer determines whether there are more wireless LANs detected by the mobile devices of any of the relevant users step . If so the crowd analyzer gets the identifier of the next wireless LAN detected by the mobile devices of any of the relevant users step and the process then returns to step . Once all of the detected wireless LANs have been processed the process ends.

Using the wireless contexts the users of Devices A and B are clustered together in a crowd because they have sufficiently similar RSSI readings for the detected Wi Fi networks and because they detect each other via Bluetooth . Note that even though Device B detects Device C via Bluetooth the user of Device C is not included in the crowd with the users of Devices A and B because 1 Device C has significantly different RSSI values particularly for the All Sports Wi Fi network and 2 Devices A and C do not detect one another via Bluetooth . This results in a similarity metric for the users of Devices B and C that does not satisfy the threshold criterion for the users being included in the same crowd.

The users of Devices C D E and F are clustered together to form another crowd because they have sufficiently similar wireless contexts. Specifically in this example Devices C D E and F have very similar RSSI values for the detected Wi Fi networks and each of the Devices C D E and F detect at least one other of Devices C D E and F. In a similar manner the users of Devices G H and I are clustered to form yet another crowd because they have sufficiently similar wireless contexts. Specifically Devices G H and I have similar RSSI values for the detected Wi Fi networks and detect one another via Bluetooth . The users of Devices J and K are clustered to form a final crowd because they have similar RSSI values for the detected Wi Fi networks.

It should be noted that based on the detected Bluetooth IDs for each of the Devices A through I and K the MAP server can also infer the relative positions of the four crowds described above. Specifically the MAP server is enabled to determine that the crowd formed by the users of Devices A and B crowd A B is close to the crowd formed by the users of Devices C D E and F crowd C D E F . The MAP server is further enabled to determine that crowd A B is not close to the crowd formed by the users of Devices G H and I crowd G H I or the crowd formed by the users of Devices J and K crowd J K because none of the Devices G through K in the later two crowds detect either Device A or Device B via Bluetooth . Similarly the MAP server is enabled to determine that crowd C D E F is close to crowd G H I but is not close to crowd J K that crowd G H I is close to crowd C D E F and crowd J K but is not close to crowd A B and that crowd J K is close to crowd G H I but is not close to crowd C D E F or crowd A B .

The system of the present disclosure provides substantial opportunity for variation without departing from the concepts described herein. For example while the system is described above as including the MAP server that operates to form crowds of users the present disclosure is not limited thereto. For example the crowd formation process may be performed by the mobile devices in a distributed manner. For example the mobile devices or at least some of the mobile devices may collect the wireless contexts of nearby devices via their wireless PAN or wireless LAN interfaces. Each of those mobile devices may then perform the crowd formation process described herein for the users of the mobile devices for which the mobile device has collected wireless context data. The mobile device may then utilize information regarding the resulting crowds locally at the mobile device e.g. present corresponding crowd data to the user of the mobile device and or report the resulting crowds to other mobile devices a server similar to the MAP server a third party service or the like.

Those skilled in the art will recognize improvements and modifications to the preferred embodiments of the present disclosure. All such improvements and modifications are considered within the scope of the concepts disclosed herein and the claims that follow.

