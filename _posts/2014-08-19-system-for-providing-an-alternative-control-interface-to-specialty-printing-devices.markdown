---

title: System for providing an alternative control interface to specialty printing devices
abstract: The invention provides an alternative applications programming interface (API) for a software application to interface with and to control the operation of a variety of one or more specialty printing devices. The alternative API provides a superset of control functionality relative to an API that would typically be provided by a specialty printing device driver. In some embodiments, this alternative API is provided via a specialty printing module (SPM) that is remotely accessible to a software application via a computer network. The SPM can provide for interface and control of specialty printing devices that would otherwise be un-accessible to a software application via a specialty printing device driver, and can provide such locally or remotely accessible functionality to the software application, without necessarily requiring employment of a specialty printing device driver.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09058143&OS=09058143&RS=09058143
owner: 
number: 09058143
owner_city: 
owner_country: 
publication_date: 20140819
---
This document is a United States non provisional utility patent application that claims priority and benefit to U.S. utility provisional patent application having Ser. No. 61 869 615 Confirmation No. 9588 that was filed on Aug. 23 2013 and that is entitled SYSTEM FOR PROVIDING AN ALTERNATIVE CONTROL INTERFACE TO SPECIALTY PRINTER DEVICES and which is incorporated herein by reference in its entirety.

Specialty printers are specially designed devices that transfer information onto various types of portable media. These types of devices are typically configured to be peripheral to a computer system and perform functionality that is typically not directly available to most computer systems. Hence these devices are characterized as being special as they are atypical relative to standard printers sold in high volume within the desktop computer market.

The discussion above is merely provided for general background information and is not intended to be used as an aid in determining the scope of the claimed subject matter.

The invention provides an alternative applications programming interface API for a software application to interface with and control the operation of a variety of one or more specialty printers which are also referred to herein as specialty printing devices. The alternative API provides a superset of control functionality relative to an API that is typically provided by a specialty printing device driver. In some embodiments the alternative API is provided via a specialty printing module SPM that is remotely accessible to a software application via a computer network. The SPM can provide for interface and control of specialty printing devices that would otherwise be un accessible to a software application via a specialty printing device driver and can provide such locally or remotely accessible functionality to the software application without necessarily requiring employment of a specialty printing device driver.

This brief description of the invention is intended only to provide a brief overview of subject matter disclosed herein according to one or more illustrative embodiments and does not serve as a guide to interpreting the claims or to define or limit the scope of the invention which is defined only by the appended claims.

The software application communicates with the SPM via a first communications channel provided by the operating system OS . For example in some embodiments this first communications channel is a socket communication mechanism provided by the operating system to the software application and to the specialty printing module SPM . To exercise this socket mechanism the software application and the SPM each communicate with the operating system via exercise of an applications programming interface API provided by the operating system itself.

In other embodiments this communications channel is implemented via OpenURL method call which is available within the applications programming interface API of a Java programming environment. A uniform resource locator URL is applied as an address of the SPM . A URL is a type of uniform resource identifier URI . Another type of URI is a uniform resource name URN .

In this circumstance the URL address of the SPM is employed by the software application to access and to exercise the programming interface of the SPM . In other words the SPM programming interface is exercised by another software component such as the software application through the URL address. Also in these circumstances the software application and the SPM can reside upon the same computer and are local to each other or can each reside on different computers. These different computers can be located proximate to or remote from each other. In other embodiments a uniform resource name URN can be employed and mapped to a URL. Similar URL address based mechanisms can be employed to provide a communication for specialty printer discovery See 

The operating system communicates with various devices via a set of device drivers including device driver which function as an extendable and configurable portion of the operating system . The operating system interfaces with a wireline connected device via a wireline connected device driver included within the set of device drivers . The operating system interfaces with a wireless connected device via a wireless connected device driver that is included within the set of device drivers . The operating system interfaces with a specialty printer device via the specialty printer driver that is also included within the set of device drivers .

In terms of functionality the device drivers each have an applications programming interface API that typically provides functional control of a device that is specific to a design of that particular device . This type of functional control is enabled via a set of commands that reflect a specific design of a device and that are processed when received by the device . These commands also referred to as providing a lower level physical access to and control of each of the devices 

Via the operating system and its device drivers the software application can also communicate with each of the devices . However such communication is limited to the limitations within each of the set of device drivers including the device driver . Typically a device driver API provides access to specific functions of the device. As a result the software application is also limited to communicating invocation of specific functional commands of each of the devices via the operating system and its device drivers .

Conversely the specialty printing module provides an alternative and different applications programming interface API relative to that provided by the API of the operating system via its device drivers . Like that provided by the operating system the specialty printing module SPM API provides access to specific functions of a device and further provides a superset of the functional control that is provided by the operating system via its drivers . This superset includes higher level functions for which the software application can invoke communicate to the device via the specialty printing module SPM API .

For example the software application can communicate a command that prints a report onto label media. The report can include multiple tables and fields that collectively define a printing of a label onto a product to be placed on sale. Some of these fields store values that are fixed while other fields store values that are accessed from other sources or that are computed during the construction of the report. Some of these non fixed and computed values are based upon limitations design characteristics that are specific to each of the devices . The report may also include bar codes and other graphics and can define an arrangement of fields having unusual patterns.

Placement printing of portions of the report such as of a location of numerical fields and barcodes may be subject to alignment and placement at locations onto printable output media that are based and determined upon one or more physical limitations design characteristics of the specialty printing device . Rather than the software application determining and specifying at what specific location a field should be placed printed via factoring characteristics and limitations of the device the specialty printing module will perform such a determination based upon general rules selected by the software application and limitations design characteristics of the particular device 

These general rules are embedded into a report specification module See which can be executed by the software application . The software application also invokes a report builder module to generate commands that are targeted and directed to a specific device . The specialty printing module delivers the device targeted commands to the device via the operating system and at least one of its device drivers .

In some circumstances the specialty printing device has a universal serial bus USB wireline connection to the computer system . In this circumstance the operating system and at least a USB device driver would be employed to communicate deliver the device targeted commands from the specialty printing module to the specialty printing device . In other circumstances the specialty printing device has a wireless WiFi communication connection to the computer system . Likewise in this circumstance the operating system and at least a WiFi device driver would be employed to communicate deliver the device targeted commands from the specialty printing module to the specialty printing device

Furthermore as shown in another software application executing on another computer system may communicate with the specialty printing module that is executing on this computer system in order to access and control a specialty printing device that is not directly accessible from the another computer system and upon which the software application resides. At least one of various types of communications channels can be employed between the software application and the specialty printing module to enable communication to each other through a network . Such a communications channel such as a socket to socket or OpenURL accessed communication channel for example is typically accessible their respective operating systems OS via their respective applications programming interfaces API .

The operating system includes an applications programming interface API one or more device drivers also referred to herein collectively as the device drivers of computer . These device drivers include such as one or more network device driver s and one or more specialty printer device drivers . These specialty printers are also referred to herein as specialty devices because some specialty printers function more as an specialty type of device than an actual printing device.

The operating system includes an API that is a programming interface between the operating system and each of one or more software application programs executing on the computer system . The network device driver interfaces with electronic hardware electronics that provides access to a particular type of communications network . This hardware may interface with a network having a wired topology referred to herein as a wired or wireline type of network such as an Ethernet network or this hardware may interface with a network having a wireless topology referred to herein as a wireless type of network such as the wireless IEEE 802.11 network.

Device drivers may be assigned to multiple categories that overlap. For example a device driver that interfaces with an Ethernet network would fall into both a network communications device driver and a wireline connected device driver category and a device driver that interfaces with an IEEE 802.11 network would fall within both a network communications device driver and wireless communications device driver category.

As shown in the computer has a wireline connection to a type of specialty printing device which is also generally referred to herein as a specialty output device or as a specialty printer . A specialty printer is a type of output device that performs functions that are outside the capabilities of conventional type of paper document printer. A specialty printer can be designed to transfer information in the form of ink deposited onto media or transfer information that is in a form other than ink such as an electrical encoding of a numerical value into or onto appropriate media designed to store such a value.

Although a specialty output device printer has capabilities outside that of a conventional document printer in some embodiments a specialty printer can print a document onto media such as in the form of ink onto paper media or as in the form of ink onto non paper media or as in the form of depositing other than ink onto non paper media. However because some embodiments of a specialty printer can effectively print a document in some manner such embodiments of a specialty printer may not be able to print a document as wells as for example as quickly or as accurately as some conventional document printers.

As an ink depositing type of printer a specialty printer can be designed to deposit ink onto a special type of media such as label media or to deposit ink onto more common types of media such as onto one or more sheets of paper for the purpose of printing documents. Label media can be manufactured into many forms and is typically manufactured and packaged into a roll of media and is cut into individual sheets as needed. As cut these sheets have an adhesive rear side and a printable forward side. The forward side is designed to store information in the form of ink deposits arranged to represent text fonts and graphics and images. These deposits can also include various types of printed bar code information. The text fonts can be arranged in various patterns including horizontal lines or other than horizontal lines and can be patterned and directed along a horizontal direction along a vertical direction and or along a diagonal direction for example.

Alternatively a specialty printer can for example store a numerical code inside of media that functions as an radio frequency identification RFID transponder. Such media is typically non paper based media such as that made from a polymer. The media may be packaged in a form that requires cutting or may be pre separated and optionally stacked prior to or after processing printing of the media. In this circumstance a processed unit of media could function as an RFID transponder.

The media whether or not it is made from a particular type of material such as some type of paper or polymer may require some form of delimitation and separation via a cutting or tearing action to delimit and separate each unit of media. For example with respect to label media a unit of media could constitute one processed printed label. With respect to RFID media a unit of media would be a processed numerical code stored RFID transponder.

As shown in the computer communicates with another computer via a communications network . The computer may be located within the same room or the same building may be located many miles from computer . As shown the computer has a direct connection to 1 output device referred to herein as specialty printer . The computer has a direct connection to 2 associated output devices also referred to herein as specialty printers . Note that each of the specialty printers are not the same type of printer and are instead each designed to function as a different type of output device specialty printer .

The computer has a specialty printing software module that interfaces with an operating system via an API of the operating system . The specialty printing module also interfaces with a software application residing and executing on the same local computer . The specialty printing module also provides an application programming interface API for one or more executing software applications that reside on the remotely located computer .

This API of the specialty printing module is designed to provide a programming interface for local and remotely located software applications to interface with a particular specialty printer . A first portion of the API is characterized as processing device specific low level commands meaning that the specialty printing module passes through commands received from the software application to the specialty printer . A second portion of the API is characterized as processing other high level commands meaning that the specialty printing module responds to directly or translates a high level command into a set of one or more lower level commands for delivery to the particular specialty printer 

The design of the API is an alternate and unique API as compared to what is typically provided by a device driver . Furthermore this API is designed to be accessible from both local software applications that are executing on the same computer and designed to be accessible from remote software applications via a network that are executing on other remote computer systems such as computer for example.

Via the specialty printing module and network the software application executing on computer can access either or both of the remotely located specialty printers . Furthermore this remotely located software application can access these printers via a uniformly designed API that is provided by the specialty printing module . Likewise the software application that resides local to computer can also access and interface with these specialty printers which are directly accessed by computer via the same uniformly designed API provided by the specialty printing module .

Without the specialty printing module the software application would have no access to the specialty printers given that there is no other mechanism available to the software application providing such access. Without the specialty printing module the software application would be required to interface with the specialty printer via a device driver of a first particular design and required to interface with specialty printer via device driver of a second particular design. Because specialty printers and each have a different function and design relative to each other the device drivers and would likewise be expected to each have a different design relative to each other and furthermore each of the device drivers and would each likely provide a API that is separately and differently designed relative to each other.

With separate and differently designed device drivers the software application would be required to include additional software to separately interface with each of both of the device drivers . Furthermore at least one or both of these device drivers will likely provide a more limited programming interface and likely provide a programming interface that is a subset of that provided by the specialty printing module SPM to each specialty printer 

Importantly the specialty printing module provides to the software application of computer an indirect connection to the 2 specialty printers of computer via the API of the specialty printing module . The specialty printing module also provides its API to a software application that is executing local to it on the computer .

Device data is encoded information that describes characteristics and limitations of a specialty printing device whose operation is to be controlled via commands within a report that are to be generated by the software application . Data including device data can also be accessed from a local source and or from a remote source . Such data can include for example static information such as a number of columns for printing or include dynamic information such as date and time information.

The software application control logic executes a report specification module for defining a structure of a report. The structure of the report is defined in terms of one or more tables fields barcodes etc. The report can define a sales receipt optionally with total and subtotal values. The report specification module generates a report object which functions as a template for a report to be generated. The software application control logic further initiates execution of a report builder module that functions to complete construction of the report object . Within the report object commands are generated to control operation of the specialty printing module SPM and to control operation of a targeted specialty device . Collectively these commands are referred to herein as specialty printing module SPM commands . These SPM commands are communicated from the software application to the specialty printing module .

Notice that the SPM communicates the device commands not through a specialty printer device driver but instead communicates the device commands via a communications device driver to the specialty printing device . A communications device driver is designed for a specific type of communication and is not specifically designed for control of the specialty printing device.

For example in some circumstances the specialty device driver is connected via a universal serial bus USB wireline type of connection. In this circumstance the communications device driver is a universal serial bus USB device driver. This USB device driver is a device driver that is not required to be designed in accordance with a specific set of design characteristics of the specialty printing device . In other words no device driver that is specifically designed for the specialty printing device is required to communicate with and control the specialty printing device

Likewise in another circumstance communication with an Ethernet connected specialty printing device would simply require an Ethernet driver . And likewise in another circumstance a WiFi connected specialty printing device would simply require an WiFi driver. This type of arrangement unburdens the operating system and its drivers from being required to have device specific device drivers installed for all of its device drivers. Furthermore it unburdens the operating system from obtaining version updates for such specialty device drivers.

The HTML can direct the browser program to display a list of actions to be executed at the option of a user that is interfacing with the browser program . Each action can be represented as text that is read by the user. Upon activation selection of the text by the user via a pointing device or keyboard input for example the browser program communicates the SPM commands to the specialty printing module SPM . And as described in association with the SPM module communicates any device specific commands to the specialty printing device via the operating system and at least one of its device driver s 

The SPM receives and processes commands that are transmitted directly or indirectly from a software application . In some embodiments the programming interface that resides in between the SPM and the software application is configured to enable transfer of one or more uniform resource locator URL addresses from the software application to the SPM . These URL addresses can include a success URL address and a failure URL address. A success URL address is a URL address of a software component typically the URL address of the software application itself. A failure URL address may be the URL address of the software application itself or alternatively a URL address of a software component other than the software application .

Upon successful completion of command processing the SPM will interact with the operating system to cause transition to execution of a software component addressed by the success URL address. Alternatively if the command processing is unsuccessful the SPM will cause the operating system to transition to execution of a software component addressed by the failure URL address.

Optionally the programming further enables return to the software application of any data returned by the specialty printer in response to its communication with the specialty printing module while processing printing commands.

In some embodiments the browser program is configured to list a specialty printer discovery action that when selected will search for and discover uniform resource locator URL addresses for each available specialty printer that resides within a particular network computing environment. Upon selecting a URL for a specialty printer that printer can be communicated with from the software application via the SPM .

Each table is positioned either at an absolute location within boundaries of the report or positioned at a location that is relative to a location of another table that is included within the same report . Each table includes one or more fields. As shown the table includes fields which each appear to function as a title or label of a column of text within the report .

Each field is positioned either at an absolute location within boundaries of the table or is positioned at a location that is relative to that of a location of another field that is included within the same table . Each field represents a portion of data of a report that is rendered printed for example as text a barcode an image or the like.

Data of a report is divided into one or more data items. For example a data item can be alphanumeric text that identifies a food item for sale or alternatively could be alphanumeric text to quantify a price of a purchased food item. Each field such as fields can include one or more data items. For example field can include 3 data items that are rendered and delimited by at least one comma text character. As a result a definition of a report can vary substantially in relation to other reports depending upon the number and types of defined tables and upon the number and types defined fields within each defined table and as a result can specify a wide variety of arrangements of rendered printed information.

This written description uses examples to disclose the invention including the best mode and also to enable any person skilled in the art to practice the invention including making and using any devices or systems and performing any incorporated methods. The patentable scope of the invention is defined by the claims and may include other examples that occur to those skilled in the art. Such other examples are intended to be within the scope of the claims if they have structural elements that do not differ from the literal language of the claims or if they include equivalent structural elements with insubstantial differences from the literal language of the claims.

