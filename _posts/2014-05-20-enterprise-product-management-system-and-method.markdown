---

title: Enterprise product management system and method
abstract: A comprehensive enterprise product management system to effectuate efficient product time to market. The system includes a process model and a data model. The process model consists of entities that represent typical concepts in a trade setting and relationships among these entities. The data model represents the complexity of a product, including defining the entities that comprise the product and the relationship among these entities. The process model and the data model accommodate the dynamic characteristics associated with both product definition and channels of trade.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09349110&OS=09349110&RS=09349110
owner: Dante Consulting, Inc.
number: 09349110
owner_city: Arlington
owner_country: US
publication_date: 20140520
---
This application is a division of application Ser. No. 13 467 467 filed on May 9 2012 now pending which is a non provisional patent application claiming the benefit of the filing date of U.S. Patent Application Ser. No. 61 484 664 filed on May 10 2011 and titled Enterprise Product Management System and Method which is hereby incorporated by reference.

The invention relates to a product and system employed for enterprise product management. More specifically the invention relates to a comprehensive system in the form of an integrated solution that effectuates efficient product time to market.

This invention comprises a product management platform to drive dynamic behavior for workflow user experience and system integration.

In one aspect a system is provided to support the product management platform. Metadata and rules are utilized in the system to drive the dynamic behavior. The system includes a processor in communication with memory and a functional unit in communication with the memory. The functional unit includes tools to support the functionality of the system. More specifically the tools include but are not limited to a core model an extension entity a model rule manager a director and a presentation manager. The core model operates at a management level and includes at least one core entity to provide a common view of entities in an enterprise. One or more extension entities are provided to communicate with the core model. More specifically each extension entity in the system supports an extended functionality of the core model while a defined functionality of the core model remains constant. The model rule manager is provided to establish at least one rule that defines a relationship between the core model and the model extension entity. Each model rule defines one or more conditions under which the model extension entity applies to the core model. A director is provided in communication with the model rule manager. The director functions to filter model rules and to establish a relationship between the extension entity and the core model. The director may take the form of a rule engine or an expression language processor. A presentation manager is provided in communication with the director. The presentation manager functions to create an integrated system through integration of the model extension entity with the core model. More specifically the presentation manager provides a customized view of the core model including the defined relationship between the core model and the extension entity.

In another aspect a system is provided to support the product management platform. Metadata and rules are utilized in the system to drive the dynamic behavior. The system includes a processor in communication with memory and a functional unit in communication with the memory. The functional unit includes tools to support the functionality of the system. More specifically the tools include but are not limited to a core workflow manager an integration adapter an integration rule manager a director and an integration manager. The core workflow manager is in communication with the processor and operates at a management level. The core workflow manager includes a common set of workflows that automate common processes in an enterprise. One or more integration adapters are provided to communicate with the workflow to support integration with an external system and at the same time the functionality of the workflow remains constant. The integration rule manager is provided to establish one or more rules to define a relationship between the integration adapter and a workflow step. Each rule defines one or more conditions under which the integration adapter is set to be invoked. The director is provided in communication with the rule manager. The director filters the model rules and establishes a relationship between the integration adapter and the workflow steps. In one embodiment the director may be in the form of a rule engine or an expression language processor. The integration manager is provided in communication with the director. The integration manager functions to determine which integration adapter should be invoked when the workflow is executed.

In a further aspect a computer program product is provided having a computer readable storage medium with embodied computer readable program code. The computer readable program code executes on the computer and supports the dynamic behavior associated with the workflow. Program code is provided to operate a core model at a management level. The core model includes at least one core entity to provide a common view of entities in an enterprise. Program code is provided to extend the functionality of the core model in the form of one or more model extensions and to establish rules defining the relationship between the core model and each applicable model extension. A defined functionality of the core model remains constant. One or more rules defining a relationship between the core model and the model extension entity are established. Program code is provided to filter the model rules and to establish a relationship between the extension entity and the core model through a rule engine or an expression language processor. Code is also provided to create an integrated system by integration of the model extension entity with the core model. The integration code includes provisions of a customized view of the core model that includes the defined relationship between the core model and any extension entities.

In yet a further aspect a computer program product is provided having a computer readable storage medium with embodied computer readable program code. The computer readable program code executes on the computer and supports the dynamic behavior associated with the workflow. Program code is provided to operate a core model at a management level. The core model includes a common set of workflows that automate common processes of an enterprise. Program code is provided to support integration of the core model with an external system while the functionality of the workflow remains constant. In addition program code is provided to establish rules defining a relationship between an integration adapter that supports integration with an external system and a workflow step in the core model. Each rule defines at least one condition under which the integration adapter is to be invoked. Program code is also provided to filter one or more model rules and establish a relationship between the integration adapter and the workflow step and to select one or more integration adapters to be invoked when the workflow is executed.

In a further aspect a computer implemented method is provided for product representation and more specifically for defining aspects of a product in a workflow and enabling extension of the defined aspects and integrating the extensions into the workflow. A core model is provided to operate at a management level. The core model includes one or more core entities that provide a common view of the entities in an enterprise. As articulated above the functionality of the core model may be extended through one or more model extension entities. Each model extension entity communicates with the core model while a defined functionality of the core model remains constant. One or more rules are established with the rules defining a relationship between the core model and the model extension entity. Each model rule defines conditions under which the model extension entity applies to the core model. The model rules are filtered and a relationship between the extension entity and the core model is established through a tool in the form of a rule engine or an expression language processor. An integrated system is formed through integration of the model extension entity with the core model. More specifically the integrated system provides a customized view of the core model including the defined relationship between the core model and the model extension entity.

In an even further aspect a computer implemented method is provided for product representation. A core workflow is provided to operate at a management level. The core workflow includes a common set of workflows that automate common processes in an enterprise. Integration of the workflow with an external system is supported while the functionality in the workflow remains constant. One or more rules that define a relationship between integration program code and a workflow step are established. Each rule defines at least one condition under which the integration program code is to be invoked. At the same time the rules are filtered to establish a relationship between the integration program code and the workflow step and to determine which integration program code to invoke when the workflow is executed.

It will be readily understood that the components of the present invention as generally described and illustrated in the Figures herein may be arranged and designed in a wide variety of different configurations. Thus the following detailed description of the embodiments of the apparatus system and method of the present invention as presented in the Figures is not intended to limit the scope of the invention as claimed but is merely representative of selected embodiments of the invention.

The functional units described in this specification have been labeled as managers and directors. A functional unit may be implemented in programmable hardware devices such as field programmable gate arrays programmable array logic programmable logic devices and the like. The functional unit may also be implemented in software for processing by various types of processors. An identified functional unit of executable code may for instance comprise one or more physical or logical blocks of computer instructions which may for instance be organized as an object procedure function or other construct. Nevertheless the executables of an identified functional unit need not be physically located together but may comprise disparate instructions stored in different locations which when joined logically together comprise the manager and achieve the stated purpose of the functional unit.

Indeed a functional unit of executable code could be a single instruction or many instructions and may even be distributed over several different code segments among different applications and across several memory devices. Similarly operational data may be identified and illustrated herein within the functional unit and may be embodied in any suitable form and organized within any suitable type of data structure. The operational data may be collected as a single data set or may be distributed over different locations e.g. over different storage devices and may exist at least partially as electronic signals on a system or network.

Reference throughout this specification to a select embodiment one embodiment or an embodiment means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment of the present invention. Thus appearances of the phrases a select embodiment in one embodiment or in an embodiment in various places throughout this specification are not necessarily referring to the same embodiment.

Furthermore the described features structures or characteristics may be combined in any suitable manner in one or more embodiments. In the following description numerous specific details are provided such as examples of one or more managers etc. to provide a thorough understanding of embodiments of the invention. One skilled in the relevant art will recognize however that the invention can be practiced without one or more of the specific details or with other methods components materials etc. In other instances well known structures materials or operations are not shown or described in detail to avoid obscuring aspects of the invention.

The illustrated embodiments of the invention will be best understood by reference to the drawings wherein like parts are designated by like numerals throughout. The following description is intended only by way of example and simply illustrates certain selected embodiments of devices systems and processes that are consistent with the invention as claimed herein.

An enterprise product management system and method are provided. There are several aspects to the product and implementation thereof with the combination of the aspects providing a comprehensive system that effectuates faster product time to market by providing an integrated solution. As described in in detail a platform is provided to represent data and provide a holistic view of the data.

The first aspect of the invention is a centralized enterprise product repository. is an entity diagram illustrating the first aspect. The product repository is based on a generic core model consisting of entities that represent the many perspectives of a product and the relationship among these entities. These entities include but are not limited to product structure and composition product pricing schemes product presentation in various channels languages and devices product fulfillment specifications product customer configuration parameters product documentation product targeting rules and product points of contact. The generic core model provides a common view of all products in an enterprise. The common view includes how the products are configured presented viewed priced billed ordered fulfilled categorized etc. This model supports contextual model extensions the model can be extended for a particular use by defining one or more entities and relationships. The extensions are associated to the core model entities using XML or database configurations that contain the relationship between the core entity and its extension as well as the business rules under which the extensions apply.

As shown there is a core model with a first extension entity a second extension entity and a third extension entity . The first extension entity is based upon a first extension rule and applicability of the rule. Similarly the second extension entity is based upon a second extension rule and applicability of the rule. The third extension entity applies based upon the relationship of the third extension entity to the first extension entity . The system automatically presents the extensions to the user if the rules are true in the context of the product being defined. In one embodiment allowable values for each option may be constrained by business rules.

The core model is a general representation of a product management platform. The core model may be employed in separate contexts including a process model and a data model. The data model consists of entities that represent typical concepts in a trade setting including a customer and its relationship to other customers customer products a user profile containing the credentials of a user who has access to the customer product a billing arrangement that specifies the terms for billing the customer for the purchase or use of a customer product and the relationship among each of these identified entities.

The process model also referred to herein as a product management workflow enables multiple users to collaborate on the definition of a product meta model approval of the specified meta data certification of the approved meta data publishing of the certified meta data to one or more databases where it is accessible by various trade channels customer acquisition applications customer care applications revenue management application and order fulfillment application. In one embodiment the core may be employed to represent all aspects of a product and to recursively assemble parts into a product. Details of the functionality of the data model are described below with respect to the comprehensive core product meta model.

Both the process model and the data model employ a core model with extensions as shown and described in . Each extension is driven by one or more rules. Behavior is adjusted on the defined rules and specifically on the defined extensions. For example introduction of a new product into the product management platform requires a definition of a new extension entity together with rules to associate the new extension entity with the core model. A view of the platform incorporates the core model with each applicable and defined extension entity e.g. each extension entity is inclusive. The application of one or more extension entities changes the view of the platform but does not change the core model. Accordingly a different view is provided based on the applicable extension entities.

The models support contextual product configuration parameters that allow the user to specify different configuration options and the rules under which each option applies. is a flow chart illustrating the process for configuration of an extension entity and an associated rule. As shown a model extension is defined and one or more entities are created . For each created entity a core extension is configured . The configuration includes identification of the core entity and the rules under which the extension applies to the core entity. Once the association is completed the configuration at step is stored . Extension entities and associated rules defining the relationship of the extension entity to the core entity are configured. Accordingly a rule is used to tie the extension with the core and the tie is stored as a configuration.

The product management platform shown and described in illustrates a data model schema including model extensions to provide a holistic picture of data representation. The data model schema is acted upon by one or more processes. described below employs the product management platform with a process model to organize and define a common set of workflows and automate common processes in an enterprise.

All changes to a product introduced through the central repository can be propagated to any enterprise application that requires knowledge of these changes. Specifically changes to the product configuration such as rules extension etc. effects the customer view of the product. is a flow chart illustrating the behavioral aspect of invoking adapters in a workflow. In one embodiment product configuration changes are referred to as a meta data publishing process using contextual integration adapters to propagate the changes to the relevant applications. More specifically changes to a product may not be relevant to each application in the enterprise. A central system ensures that only those applications in the enterprise that require the change information have such knowledge communicated and populated in such applications.

As shown in changes pertaining to change in any one of the core entities rules and or adapters are submitted . In one embodiment the changes to an applicable element including the core entity one or more extension rules etc. at step are submitted. Prior to publication the changes are reviewed to determine if the changes are acceptable . A negative response to the determination at step rejects the submission followed by a correction of the change data and resubmission of the changes at step . Conversely a positive response to the determination at step copies the approved change submission to certification followed by a second determination at step to assess whether the submission accepted for publication is approved for certification. The aspect of copying to certification at step includes testing new product metadata to be processed and instructing the adapter to generate its output data and store it in the certification database for inspection prior to transmitting it to a target system. Accordingly for each adapter all changes are submitted for publication and certification.

A rejection at step rolls back the submission from certification and returns to step for correction and resubmission. Each submission that is certified for publication has an associated release date. A positive response to the determination at step is followed by waiting for the implementation date after which the certified submission is published to one or more external systems . More specifically the publication of the certified submission invokes one or more adapters to communicate with one or more external systems. Following step the workflow waits for an external notification confirming successful transmission of data to a target system to be received from each external system adapter and once all external system adapters have successfully sent their notifications the submission is published to an associated product catalog where it is accessible by a variety of trade channels. Accordingly for each adapter invoked into the workflow a publication and certification process is invoked to ensure that the workflow has properly integrated the adapter and the associated changes.

As shown in invocation of contextual integration adapters to perform data transformation and communication to an external system is provided. More specifically the contextual integration adapters dynamically register with a generic meta data publishing process through XML or database configurations that contain business rules under which an associated adapter is to be invoked. In one embodiment an integration adapter may be developed after the original workflow with the original workflow having no knowledge of the existence of the integration adapter at the time of design. The generic process invokes all adapters whose business rules evaluate to true in a given product context. Each adapter transforms the data to the appropriate format of the target application and communicates with the target application using its native Application Programming Interface.

One challenge associated with product and product marketing is that a grouping of products that are appealing to a customer may not be all provided by a single provider. For physical goods selling these bundles requires the maintenance of a product inventory. A large inventory is expensive to maintain and at the same time a small inventory may result in an inability to deliver the product when demanded. For electronic or digital products selling these bundles requires complex fulfillment integration and revenue sharing models. To alleviate these issues the platform supports multi provider product bundling. is a flow chart illustrating multiple provider product bundling. As shown a product bundle is sold by a provider . The product bundle includes two products provided by two separate providers. More specifically the product bundle includes a first product provided by a first provider and a second product provided by a second provider . This allows a product offering to contain products from multiple providers that are sold to a customer as a bundle. Revenue allocations to each provider can be specified as part of the product configuration. When such a bundle is ordered by a customer the fulfillment step in the order processing workflow determines the integration adapters that need to be invoked for each participating product or product component in the bundle.

The platform supports multi distributor product fulfillment. This allows a given product to be fulfilled by one of a number of distributors depending on a set of business rules that govern the applicability of a particular distributor. is a flow chart illustrating a multi distributor configuration. As shown a product is provided and it is associated with two distributors and . A purchase or purchase order for the product may be fulfilled by either of the distributors and . In one embodiment selection of a distributor may be associated with specific rules such as geographical location of the customer placing the product order. Accordingly multiple distributors for the same product may be defined in the platform.

Each of the multiple distributors is integrated using a fulfillment adapter that is invoked during order processing. is a flow chart illustrating a distributor adapter registration. Each fulfillment adapter registers with the generic order processing workflow under which the adapted is to be invoked and the configuration is stored . In one embodiment the registration takes place using XML configurations as well as a set of business rules under which the fulfillment adapter is applicable. The rules may be based on geographical context e.g. different distributors in different countries product context e.g. Productis fulfilled by Distributorwhile Productis fulfilled by Distributor customer profile context very important customer versus regular customer or a combination of these.

As shown in the process workflow supports binding a context based service provider. This allows one or more service providers to support an automated business process workflow. is a flow chart illustrating the service provider registration process. Each provider has an integration adapter that dynamically registers with the business process workflow. The registration specifies the rules under which the adapter is to be invoked and the workflow step in which the adapter is to be invoked. In one embodiment the dynamic registration process employs XML configurations containing the association of the integration adapter with a workflow step and the business rules under which the adapter is to be invoked . Following the registration process the configuration is stored . Accordingly one or more service providers may be integrated with the business process workflow.

Once the service provider has a registered adapter the adapter may be invoked. is a flow chart illustrating a process for invoking a service provider . The generic process determines applicable service provider adapters based on context and registration rules and invokes all adapters whose business rules evaluate to true in a given context . Each adapter transforms the data to the appropriate format of the target service provider and communicates to the service provider using its native interfaces. In one embodiment the adapters may be invoked in a particular order such multiple adapters being invoked in parallel or in series. However the invention should not be limited to invoking the adapters in any particular order. In one embodiment an integration adapter may be developed after the original workflow with the original workflow having no knowledge of the existence of the integration adapter at the time of design. The generic process invokes all adapters whose business rules evaluate to true in a given context.

Multi providers may co exist in the same workflow through partitioning i.e. multi provider repository partitioning. is a flow chart illustrating multi provider repository partitioning. This allows multiple product providers to co exist in the same product repository. More specifically each product is associated to a common partition that is shared across multiple providers or to a specific partition that is only visible to a particular provider. As shown a core model entity is provided and belongs to a provider partition . User access to a product is constrained by the partitions to which they are authorized .

The platform supports location based offer targeting. This allows a particular product to be offered to a customer based on their current physical longitude and latitude coordinates. For example offering coupons for a particular merchant as soon as one enters the premises of that merchant. Another example is presenting an offer based on proximity to a particular establishment such as a restaurant.

As described above there are two aspects to the invention including a centralized enterprise product repository based on a generic core model consisting of entities that represent the many perspectives of a product and the relationship among these entities. The second aspect pertains to a product management platform demonstrating behavior for a workflow. Each of these aspects is described above in the flow charts and diagrams illustrating the processes. as described below illustrate the hardware tools and articles of manufacture to support the centralized enterprise product repository and the product management platform demonstrating behavior for a workflow respectively.

The functional unit is shown herein with several tools to support a product management platform that employs metadata and rules to drive dynamic behavior for workflow user experience and system integration. Specifically the tools include but are not limited to a core manager a model extension entity manager a model rule manager a director a presentation manager a modeling manager a metadata manager an approval manager an integration manager a partition manager a multi product bundle and a location manager . The core manager is provided in communication with the processing unit . The core manager operates at a management level and includes one or more entities to provide a common view of the entities in an associated enterprise. Specifically the core manager describes a customer model that contains common concepts in a trade setting. In one embodiment the core manager represents products in an enterprise. These common concepts include but are not limited to types of customers relationships to customers customer products billing arrangements order or user profiles. In one embodiment one or more options and associated option values are defined within the core manager together with a defined applicability of the option and any allowable value driven by the option rule which drive dynamic behavior of experience on an interface. The extension manager is provided to extend the functionality of the core model. The extension manager communicates with the core manager and more specifically supports the functionality of the core model. At the same time the defined functionality of the core model remains constant.

As shown herein data storage includes the core model and two extension entities and . The model rule manager functions to define the relationship between the core model and the extension entities and . More specifically the model rule manager defines one or more conditions under which the model extension entity relates to the core model . In addition the director is provided in communication with the model rule manager . The director functions to filter the model rules and based upon this filtering establishes a relationship between one or more of the extension entities and the core model . In one embodiment the relationship is stored in a relational database an XML file or a NoSQL database. The director may come in the form of a rule engine or an expression language processor. An integrated system is formed by the presentation manager . More specifically the presentation manager communicates with the core manager and the extension manager to integrate the applicable extension entities with the core model . In one embodiment a customized view of the core model is supported by the presentation manager with the customized view including the relationship between the core model and the applicable model extension entities . The presentation manager functions to dynamically change an interface associated with a workflow step with the change based upon applicability of one or more extensions. In one embodiment a rule engine determines this applicability. Accordingly the presentation manager provides a holistic view of the workflow through integration of the core model with each applicable extension entity via the core manager and the extension manager .

The modeling manager is provided in communication with the extension manager and functions to model the extension. More specifically the modeling manager generates a corresponding extension based on the model and associates the corresponding extension with the core manager . This association includes identification of at least one rule under which the corresponding extension applies to the core model . The rule is in the form of a new rule or an existing rule. In one embodiment the rule is expressed in an expression language statement or a rules engine language.

The metadata manager is provided in the system to amend metadata associated with one or more of the model entities. The approval manager is provided in communication with the metadata manager and functions to review and certify metadata amended by the metadata manager . In one embodiment the review and certification takes place prior to publication of the amended metadata to target systems. The integration manager is provided in communication with the metadata manager . The integration manager functions to amend and propagate new information into the integrated system.

The core manager together with the extension manager provides a holistic view of an enterprise with a plurality of products. The partition manager is in communication with the presentation manager . Specifically the partition manager creates a partition in the enterprise to delineate access privileges to select information in the repository. In one embodiment a multi product bundle is provided in the enterprise with the bundle being in the form of a combination of products from separate providers and each provider assigned to deliver a component of the bundle. As shown the core model is provided local to a data repository in communication with memory . The data repository may be a shared repository of two or more products. The core model includes a rule to filter a subset of characteristics from the core model and to apply the subset to a target audience. The rule may be based on geography privacy channels of trade customer profile and or attributes in model extensions. Accordingly various tools may be employed to provide security and accessibility within the enterprise.

The core model is the basis of the enterprise workflow. The core model represents and defines the multi dimensional aspect of a product. More specifically the core model represents the following aspects of the product product structure product composition product pricing schemes product representation in various channels languages and devices product fulfillment specification product customer configuration parameters product documentation product targeting rules and product points of contact. The core model represents each of these aspects in a multi dimensional manner so that the relationships among all aspects of the product are defined.

The core model employs a catalog of product metadata which drives dynamic behavior of the workflow together with integration of at least one external system through the combination of the core and extension entities respectively. The dynamic behavior may be apparent in different venues. For example the location manager assesses the current geographical location so that the presentation manager may present an offer to the interface based on the geographic location. This offer is dynamically driven by the current geographic location so that specific offer targeting rules and user preferences are employed. At the same time the presentation manager may dynamically change the interface based upon a filter selection of preferences. It should be noted that the interface is the presentation of the workflow to an associated user. The interface may be browser based mobile device based or based on a web service. Accordingly the workflow presentation and associated interface are dynamically modified based upon select preferences and geographic location.

As identified above the core manager extension manager model rule manager director presentation manager modeling manager metadata manager approval manager integration manager partition manager multi product bundle and location manager hereinafter referred to as tools function as elements to dynamically support a product management platform and associated platform behavior. The tools are shown residing in memory local to the server . However the tools may reside as hardware tools external to the memory or they may be implemented as a combination of hardware and software. Similarly in one embodiment the tools may be combined into a single functional item that incorporates the functionality of the separate items. As shown herein each of the tools are shown local to the server . However in one embodiment they may be collectively or individually distributed across a network or multiple machines and function as a unit to dynamically support a product management platform and associated platform behavior. Accordingly the tools may be implemented as software tools hardware tools or a combination of software and hardware tools.

The product management platform employs metadata and rule to drive the dynamic behavior for workflow user experience and system integration. is a block diagram illustrating tools embedded in a system to support the centralized enterprise workflow. For illustrative purposes a server is provided in communication with one or more computing machines and across a network connection . Although only two computing machines and are shown herein the quantity should not be a limiting factor. The server is provided with a processing unit in communication with memory across a bus and in communication with data storage . A functional unit is provided in communication with the memory to support the centralized enterprise product repository.

The functional unit is shown herein with several tools to support the dynamic aspect of the workflow user experience and system integration. Specifically the tools include but are not limited to a core workflow manager an integration adapter an integration rule manager a director an integration manager and an adapter manager . The core workflow manager is provided in communication with the processing unit . The core workflow manager operates at a management level and includes a common set of workflows that automate common processes in an enterprise. More specifically for each defined enterprise there is a common set of processes that are supported by a common workflow . The integration adapter is configured to communicate with the core workflow manager and to support integration of the workflow with an external system. At the same time the integration adapter maintains the functionality for integrating an external system into the workflow . Accordingly the basis of the workflow may be expanded without affecting the integrity of the system as a whole.

The integration rule manager is provided in communication with the integration adapter . More specifically the integration rule manager establishes rules that define a relationship between the integration adapter and a workflow step. Each established rule defines at least one condition under which the integration adapter is to be invoked in the workflow . The director is provided in communication with the integration rule manager . Specifically the director filters the rules and establishes a relationship between the integration adapter and the workflow step. The director may be in the form of a rule engine or an expression language processor. The integration manager is provided in communication with the director and functions to determine which integration adapter should be invoked when the workflow is executed. Accordingly the tools support integration of adapters into the workflow through a set of rules.

The adapter manager functions in communication with the integration manager to apply an adapter applicability rule that defines integration of an adapter with the workflow. In one embodiment the adapter is dynamically determined at run time. Similarly in one embodiment two or more integration adapters are provided in communication with a separate product distributor. Each of the multiple integration adapters has one or more rules that define distribution of a product to an end consumer. The integration manager functions to select one of the multiple integration adapters based upon application of the rules. The workflow may come in various forms including but not limited to a product lifecycle management a customer acquisition workflow an order fulfillment workflow a product configuration workflow a service assurance workflow and a revenue management workflow. Accordingly the workflow and all integrated adapters dynamically represent process management.

As identified above the core workflow manager integration adapter integration rule manager director integration manager and adapter manager hereinafter referred to as tools function as elements to dynamically support process management and behavior in a workflow. The tools are shown residing in memory local to the server . However the tools may reside as hardware tools external to the memory or they may be implemented as a combination of hardware and software. Similarly in one embodiment the tools may be combined into a single functional item that incorporates the functionality of the separate items. As shown herein each of the tools are shown local to the server . However in one embodiment they may be collectively or individually distributed across a network or multiple machines and function as a unit to dynamically support a product management platform and associated platform behavior. Accordingly the tools may be implemented as software tools hardware tools or a combination of software and hardware tools.

As demonstrated in the flow charts of a method and system are employed to support enterprise product management. is a block diagram illustrating tools embedded in a computer system to support enterprise product management. Referring now to the block diagram of additional details are now described with respect to implementing an embodiment of the present invention. The computer system includes one or more processors such as a processor . The processor is connected to a communication infrastructure e.g. a communications bus cross over bar or network .

The computer system can include a display interface that forwards graphics text and other data from the communication infrastructure or from a frame buffer not shown for display on a display unit . The computer system also includes a main memory preferably random access memory RAM and may also include a secondary memory . The secondary memory may include for example a hard disk drive and or a removable storage drive representing for example a floppy disk drive a magnetic tape drive or an optical disk drive. The removable storage drive reads from and or writes to a removable storage unit in a manner well known to those having ordinary skill in the art. Removable storage unit represents for example a floppy disk a compact disc a magnetic tape or an optical disk etc. which is read by and written to by removable storage drive . As will be appreciated the removable storage unit includes a computer readable medium having stored therein computer software and or data.

In alternative embodiments the secondary memory may include other similar means for allowing computer programs or other instructions to be loaded into the computer system. Such means may include for example a removable storage unit and an interface . Examples of such means may include a program package and package interface such as that found in video game devices a removable memory chip such as an EPROM or PROM and associated socket and other removable storage units and interfaces which allow software and data to be transferred from the removable storage unit to the computer system.

The computer system may also include a communications interface . Communications interface allows software and data to be transferred between the computer system and external devices. Examples of communications interface may include a modem a network interface such as an Ethernet card a communications port or a PCMCIA slot and card etc. Software and data transferred via communications interface are in the form of signals which may be for example electronic electromagnetic optical or other signals capable of being received by communications interface . These signals are provided to communications interface via a communications path i.e. channel . This communications path carries signals and may be implemented using wire or cable fiber optics a phone line a cellular phone link a radio frequency RF link and or other communication channels.

In this document the terms computer program medium computer usable medium and computer readable medium are used to generally refer to media such as main memory and secondary memory removable storage drive and a hard disk installed in hard disk drive .

Computer programs also called computer control logic are stored in main memory and or secondary memory . Computer programs may also be received via a communication interface . Such computer programs when run enable the computer system to perform the features of the present invention as discussed herein. In particular the computer programs when run enable the processor to perform the features of the computer system. Accordingly such computer programs represent controllers of the computer system.

As will be appreciated by one skilled in the art aspects of the present invention may be embodied as a system method or computer program product. Accordingly aspects of the present invention may take the form of an entirely hardware based embodiment an entirely software based embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium s having computer readable program code embodied thereon.

Any combination of one or more computer readable medium s may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device or any suitable combination of the foregoing. More specific examples a non exhaustive list of the computer readable storage medium would include the following an electrical connection having one or more wires a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber a portable compact disc read only memory CD ROM an optical storage device a magnetic storage device or any suitable combination of the foregoing. In the context of this document a computer readable storage medium may be any tangible medium that can contain or store a program for use by or in connection with an instruction execution system apparatus or device.

A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein for example in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms including but not limited to electro magnetic optical or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate propagate or transport a program for use by or in connection with an instruction execution system apparatus or device.

Program code embodied on a computer readable medium may be transmitted using any appropriate medium including but not limited to wireless wire line optical fiber cable RF etc. or any suitable combination of the foregoing.

Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

Aspects of the present invention are described above with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable medium that can direct a computer other programmable data processing apparatus or other devices to function in a particular manner such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function act specified in the flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer other programmable data processing apparatus or other devices to cause a series of operational steps to be performed on the computer other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

The flowcharts and block diagrams in the Figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and computer instructions.

The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise. It will be further understood that the terms comprises and or comprising when used in this specification specify the presence of stated features integers steps operations elements and or components but do not preclude the presence or addition of one or more other features integers steps operations elements components and or groups thereof.

The corresponding structures materials acts and equivalents of all means or step plus function elements in the claims below are intended to include any structure material or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present invention has been presented for purposes of illustration and description but is not intended to be exhaustive or limited to the invention in the form disclosed.

Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The embodiment was chosen and described in order to best explain the principles of the invention and the practical application and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated.

It will be appreciated that although specific embodiments of the invention have been described herein for purposes of illustration various modifications may be made without departing from the spirit and scope of the invention. The product management platform pertains to management of an end to end product development process from inception through implementation subsequent changes and eventual retirement of a product. As products are developed different parties within an enterprise take part in the development process. For example there are the engineers who conceive the product a legal department who overseas different legal aspects of product development a finance department who determines the appropriate pricing a marketing department who determines market positioning and presentation etc. Each of the different parties in the development process contributes to the product information. This application provides a centralized collaboration environment where all these parties can jointly work on the development of a product. More specifically the application tracks activities of the different parties and notifies relevant parties within the process of developments affecting only the designated parties. The notification may be based upon a user role user group or a specific user etc. Accordingly the application provides a centralized tool for different parties in different departments to work as a unit in a cohesive manner for product development. In addition the product development process supports escalations and reminders to ensure that due dates for various activities in the process are kept on track. Accordingly the scope of protection of this invention is limited only by the following claims and their equivalents.

