---

title: Methods and apparatus for scalable private services
abstract: Methods and apparatus for providing scalable private services in service provider networking environments. A service provider that provides a large, public, multi-tenant implementation of a web service to multiple customers via a public API endpoint may allow a customer to request the establishment of a private implementation of the service. In response, a service private instance may be automatically and/or manually established for the customer that provides a private API endpoint to the service and that is at least in part implemented on single-tenant hardware that is not shared with other customers. The service private instance may initially be implemented as a relatively small scale and possibly limited implementation of the service when compared to the service public instance. As the needs of the customer grow, the service private instance may be automatically and/or manually scaled up from the initial implementation.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09397909&OS=09397909&RS=09397909
owner: Amazon Technologies, Inc.
number: 09397909
owner_city: Reno
owner_country: US
publication_date: 20141224
---
This application is a continuation of U.S. patent application Ser. No. 13 149 516 filed May 31 2011 now U.S. Pat. No. 8 924 542 which is hereby incorporated by reference in its entirety.

Many companies and other organizations operate computer networks that interconnect numerous computing systems to support their operations such as with the computing systems being co located e.g. as part of a local network or instead located in multiple distinct geographical locations e.g. connected via one or more private or public intermediate networks . For example data centers housing significant numbers of interconnected computing systems have become commonplace such as private data centers that are operated by and on behalf of a single organization and public data centers that are operated by entities as businesses to provide computing resources to customers. Some public data center operators provide network access power and secure installation facilities for hardware owned by various customers while other public data center operators provide full service facilities that also include hardware resources made available for use by their customers. However as the scale and scope of typical data centers has increased the task of provisioning administering and managing the physical computing resources has become increasingly complicated.

The advent of virtualization technologies for commodity hardware has provided benefits with respect to managing large scale computing resources for many customers with diverse needs allowing various computing resources to be efficiently and securely shared by multiple customers. For example virtualization technologies may allow a single physical computing machine to be shared among multiple users by providing each user with one or more virtual machines hosted by the single physical computing machine with each such virtual machine being a software simulation acting as a distinct logical computing system that provides users with the illusion that they are the sole operators and administrators of a given hardware computing resource while also providing application isolation and security among the various virtual machines. Furthermore some virtualization technologies are capable of providing virtual resources that span two or more physical resources such as a single virtual machine with multiple virtual processors that spans multiple distinct physical computing systems.

As another example virtualization technologies may allow data storage hardware to be shared among multiple users by providing each user with a virtualized data store which may be distributed across multiple data storage devices with each such virtualized data store acting as a distinct logical data store that provides users with the illusion that they are the sole operators and administrators of the data storage resource.

The conventional Web model allows clients to access Web resources e.g. applications services and data via an HTTP client program such as a Web browser. A technology referred to as Web services has been developed to provide programmatic access to Web resources. Web services may be used to provide programmatic access to Web resources including technology platforms e.g. applications and services and data e.g. product catalogs and other databases hosted on Web connected computers such as Web server systems via a Web service interface. Generally speaking a Web service interface may be configured to provide a standard cross platform API Application Programming Interface for communication between a client requesting some service to be performed and the service provider. In some implementations a Web service interface may be configured to support the exchange of documents or messages including information describing the service request and response to that request. Such documents or messages may be exchanged using standardized Web protocols such as the Hypertext Transfer Protocol HTTP for example and may be formatted in a platform independent data format such as eXtensible Markup Language XML for example.

While embodiments are described herein by way of example for several embodiments and illustrative drawings those skilled in the art will recognize that embodiments are not limited to the embodiments or drawings described. It should be understood that the drawings and detailed description thereto are not intended to limit embodiments to the particular form disclosed but on the contrary the intention is to cover all modifications equivalents and alternatives falling within the spirit and scope as defined by the appended claims. The headings used herein are for organizational purposes only and are not meant to be used to limit the scope of the description or the claims. As used throughout this application the word may is used in a permissive sense i.e. meaning having the potential to rather than the mandatory sense i.e. meaning must . Similarly the words include including and includes mean including but not limited to.

Various embodiments of methods and apparatus for providing scalable private services in service provider networking environments are described. A service provider may provide a large public multi tenant implementation of a web service to multiple customers via a public API Application Programming Interface endpoint to the service. Using an embodiment of the scalable private services methods and apparatus as described herein the service provider may allow a customer to request the establishment of a private implementation of the service. In response to the request a service private instance may be automatically and or manually established for the customer to the service and that is at least in part implemented on single tenant hardware that is not shared with other customers. In addition a private API endpoint may be provided for the service private instance. While the service private instance may conform to the same service API as the service public instance the service private instance may at least initially be implemented differently than the multi tenant service public instance for example as a relatively small scale and possibly limited implementation of the service when compared to the multi tenant service public instance. As the needs of the customer grow the service private instance may be automatically and or manually scaled up from the initial implementation. The service private instance may also be scaled down if the needs of the customer decrease. The scaling up or down of the service private instance may be performed transparently from the customer s perspective.

Embodiments of the methods and apparatus for providing scalable private services may for example be implemented in the context of a service provider that provides virtualized computing resources to multiple customers. A service provider may provide resource virtualization to the customers via one or more virtualization services that allow the customers to purchase rent or otherwise obtain instances of virtualized resources including but not limited to computation and storage resources implemented on devices within a service provider network or networks in one or more service provider data centers. In a typical service provider network at least some of the virtualized resources provided by a virtualization service are implemented on multi tenant devices. A multi tenant device is a device that is shared by processes or data belonging to two or more of the customers. For example in a hardware virtualization service a single physical computing machine may be shared among multiple customers by providing each customer with one or more virtual machines hosted by the single physical computing machine. As another example in a storage virtualization service each customer s virtualized data store may be distributed across multiple data storage devices with a given storage device storing portions of data for two or more customers. Each virtualization service may provide a standard public interface for example a public web services API via which the customers and clients of the customers may access the customers respective virtualized resources.

A service provider may provide virtualized private networks that enable a customer to connect existing infrastructure on the customer s network to a set of logically isolated service provider resource instances and to extend management capabilities such as security services firewalls and intrusion detection systems to include their service provider resource instances. However at least some of the underlying physical devices in a virtualized private network may still be shared with other customers of the service provider. A service provider may also allow customers to establish a private API endpoint for a virtualization service in the customer s virtualized private network. However while allowing the customer to establish a private API endpoint to the virtualization service may provide a degree of logical isolation of the customer s virtualized resources provided by the virtualization service the customer s resource instances may still be implemented by the virtualization service on multi tenant hardware that is shared with other customers.

At least some customers of a service provider may desire or require physical isolation of the customers data and or processes on a service provider network. That is a customer may want to take advantage of cost or other benefits that may be provided via the virtualization services provided by a service provider but for one or more reasons e.g. regulatory security and or performance reasons may not want to share at least some of the underlying physical resources with other customers.

Embodiments of the methods and apparatus for providing scalable private services may be applied in service provider networks to provide physical isolation for a customer s resources provided through a virtualization service. In at least some embodiments a customer may request a private instance of a virtualization service for example when establishing a private API endpoint to the virtualization service through the customer s virtualized private network. In response to the request single tenant hardware and other resources may be automatically and or manually configured to support a private instance of the virtualization service according to the customer s needs. The customer and in some cases the customer s clients may then access the customer s virtualized resources provided via the service private instance through the private API endpoint to the private instance of the service.

In at least some embodiments the private instance of the service also referred to as a service private instance may be initialized as a reduced or minimal implementation of the virtualization service. As the needs of the customer grow the service private instance may be manually and or automatically scaled up by reconfiguring the service private instance for example by replacing or upgrading one or more software and or hardware components of the service private instance adding additional hardware and or software components to the service private instance and or implementing additional features of the virtualization service in the service private instance to handle the increase in demand on the service private instance. Conversely the service private instance may be scaled down if the needs of the customer decrease.

As an example when mounting a private API endpoint to a virtualization service such as a storage virtualization service in their virtualized private network a customer may specify that they want the virtualization service to provide physically private resources and not virtualized resources implemented on multi tenant devices. Using a storage virtualization service as an example this may involve creating a new installation of the storage virtualization service including dedicated computing devices web servers storage nodes network infrastructure and so on that are necessary to implement an instance of the storage service. In at least some embodiments an initial private instance of the storage virtualization service may be implemented that provides the storage virtualization service API interface but which is smaller simpler relatively easier to deploy and possibly more expensive per unit capacity than a typical public implementation of the storage virtualization service intended to support multiple customers via multi tenant hardware. For example the customer s virtualized data volume may initially be supportable via MySQL database technology or other relatively small scale data storage technology while the public implementation uses a different data storage technology that supports much larger data volumes. As the customer grows the low scale relatively expensive per unit capacity implementation may be transparently reconfigured to provide a higher scale less expensive per unit capacity implementation. For example as the customer s data volume grows the initial smaller scale data storage technology used in the customer s private instance may be reconfigured by adding replacing or upgrading one or more components to scale up to a data storage technology that supports larger data volumes which may be but is not necessarily the data storage technology used in the public instance. This scaling up of the customer s private implementation of the service may happen more than once as usage increases over time and may happen in reverse for example scaling down the service private instance in response to a detected or anticipated decrease in usage.

This section describes example service provider network environments in which embodiments of the methods and apparatus for scalable private services may be implemented to provide private single tenant instances of virtualization services to at least some customers. However these example service provider network environments are not intended to be limiting embodiments of the methods and apparatus for scalable private services may be generally applied in service provider network environments to provide private single tenant instances of various web services to at least some customers.

Conventionally the service provider via the virtualization services may allow a customer e.g. customer A to dynamically associate at least some public IP addresses assigned to the customer with particular resource instances assigned to the customer. The service provider may also allow the customer to remap a public IP address previously mapped to one virtualized computing resource instance owned by the customer to another virtualized computing resource instance that the customer owns. Using the virtualized computing resource instances and public IP addresses provided by the service provider a customer A may for example implement customer specific applications and present the customer s applications on an intermediate network such as the Internet. A client on the intermediate network may then generate traffic to a destination public IP address published by the customer A the traffic is routed to the service provider data center and at the data center is routed via a network substrate to the private IP address of the virtualized computing resource instance currently mapped to the destination public IP address . Similarly response traffic from the virtualized computing resource instance may be routed via the network substrate back onto the intermediate network to the source client .

Private IP addresses as used herein refer to the internal network addresses of resource instances in a service provider network. Private IP addresses are only routable within the service provider network. Network traffic originating outside the service provider network is not directly routed to private IP addresses instead the traffic uses public IP addresses that are mapped to the resource instances. The service provider network may include network devices or appliances that provide network address translation NAT or similar functionality to perform the mapping from public IP addresses to private IP addresses and vice versa.

Public IP addresses as used herein are Internet routable network addresses that are assigned to resource instances either by the service provider or by the customer. Traffic routed to a public IP address is translated for example via 1 1 network address translation NAT and forwarded to the respective private IP address of a resource instance.

Some public IP addresses may be assigned by the service provider network infrastructure to particular resource instances these public IP addresses may be referred to as standard public IP addresses or simply standard IP addresses. In at least some embodiments the mapping of a standard IP address to a private IP address of a resource instance is the default launch configuration for all a resource instance types.

At least some public IP addresses may be allocated to or obtained by customers of the service provider a customer may then assign their allocated public IP addresses to particular resource instances allocated to the customer. These public IP addresses may be referred to as customer public IP addresses or simply customer IP addresses. Instead of being assigned by the service provider network to resource instances as in the case of standard IP addresses customer IP addresses may be assigned to resource instances by the customers for example via an API provided by the service provider. Unlike standard IP addresses customer IP Addresses are allocated to customer accounts and can be remapped to other resource instances by the respective customers as necessary or desired. A customer IP address is associated with a customer s account not a particular resource instance and the customer controls that IP address until the customer chooses to release it. Unlike conventional static IP addresses customer IP addresses allow the customer to mask resource instance or availability zone failures by remapping the customer s public IP addresses to any resource instance associated with the customer s account. The customer IP addresses for example enable a customer to engineer around problems with the customer s resource instances or software by remapping customer IP addresses to replacement resource instances.

In at least some embodiments the IP tunneling technology may map IP overlay addresses public IP addresses to substrate IP addresses private IP addresses encapsulate the packets in a tunnel between the two namespaces and deliver the packet to the correct endpoint via the tunnel where the encapsulation is stripped from the packet. In an example overlay network tunnel A from a virtual machine VM A on host A to a device on the intermediate network and an example overlay network tunnel B between a VM B on host B and a VM C on host C are shown. In some embodiments a packet may be encapsulated in an overlay network packet format before sending and the overlay network packet may be stripped after receiving. In other embodiments instead of encapsulating packets in overlay network packets an overlay network address public IP address may be embedded in a substrate address private IP address of a packet before sending and stripped from the packet address upon receiving. As an example the overlay network may be implemented using 32 bit IPv4 Internet Protocol version 4 addresses as the public IP addresses and the IPv4 addresses may be embedded as part of 128 bit IPv6 Internet Protocol version 6 addresses used on the substrate network as the private IP addresses.

Referring to at least some networks in which embodiments may be implemented may include hardware virtualization technology that enables multiple operating systems to run concurrently on a host computer e.g. hosts A and B of i.e. as virtual machines VMs on the hosts . The VMs may for example be rented or leased to customers of a network provider. A hypervisor or virtual machine monitor VMM on a host presents the VMs on the host with a virtual platform and monitors the execution of the VMs . Each VM may be provided with one or more private IP addresses the VMM on a host may be aware of the private IP addresses of the VMs on the host. A mapping service may be aware of all network IP prefixes and the IP addresses of routers or other devices serving IP addresses on the local network. This includes the IP addresses of the VMMs serving multiple VMs . The mapping service may be centralized for example on a server system or alternatively may be distributed among two or more server systems or other devices on the network. A network may for example use the mapping service technology and IP tunneling technology to for example route data packets between VMs on different hosts within the data center network note that an interior gateway protocol IGP may be used to exchange routing information within such a local network.

In addition a network such as the service provider data center network which is sometimes referred to as an autonomous system AS may use the mapping service technology IP tunneling technology and routing service technology to route packets from the VMs to Internet destinations and from Internet sources to the VMs . Note that an external gateway protocol EGP or border gateway protocol BGP is typically used for Internet routing between sources and destinations on the Internet. shows an example service provider data center implementing a network that provides resource virtualization technology and that provides full Internet access via edge router s that connect to Internet transit providers according to at least some embodiments. The service provider data center may for example provide customers the ability to implement virtual computing systems VMs via a hardware virtualization service and the ability to implement virtualized data stores on storage resources via a storage virtualization service.

The data center network may implement IP tunneling technology mapping service technology and a routing service technology to route traffic to and from virtualized resources for example to route packets from the VMs on hosts in data center to Internet destinations and from Internet sources to the VMs . Internet sources and destinations may for example include computing systems connected to the intermediate network and computing systems connected to local networks that connect to the intermediate network e.g. via edge router s that connect the network to Internet transit providers . The service provider data center network may also route packets between resources in data center for example from a VM on a host in data center to other VMs on the same host or on other hosts in data center .

A service provider that provides data center may also provide additional data center s that include hardware virtualization technology similar to data center and that may also be connected to intermediate network . Packets may be forwarded from data center to other data centers for example from a VM on a host in data center to another VM on another host in another similar data center and vice versa.

While the above describes hardware virtualization technology that enables multiple operating systems to run concurrently on host computers as virtual machines VMs on the hosts where the VMs may be rented or leased to customers of the network provider the hardware virtualization technology may also be used to provide other computing resources for example storage resources as virtualized resources to customers of a network provider in a similar manner.

Service provider may provide a service customer for example coupled to intermediate network via local network the ability to implement virtual computing systems via hardware virtualization service coupled to intermediate network and to the local network of service provider . In some embodiments hardware virtualization service may provide one or more APIs for example a web services interface via which a service customer may access functionality provided by the hardware virtualization service for example via a console . In at least some embodiments at the service provider each virtual computing system at customer may correspond to a computation resource that is leased rented or otherwise provided to service customer .

From an instance of a virtual computing system and or another customer device or console the customer may access the functionality of storage virtualization service for example via one or more APIs to access data from and store data to a virtual data store provided by the service provider . In some embodiments a virtualized data store gateway not shown may be provided at the service customer that may locally cache at least some data for example frequently accessed or critical data and that may communicate with virtualized data store service via one or more communications channels to upload new or modified data from a local cache so that the primary store of data virtualized data store is maintained. In at least some embodiments a user via a virtual computing system and or on another customer device may mount and access virtual data store volumes which appear to the user as local virtualized storage .

A customer s virtualized private network may be connected to a customer network via a private communications channel . A private communications channel may for example be a tunnel implemented according to a network tunneling technology or some other peering connection over an intermediate network . The intermediate network may for example be a shared network or a public network such as the Internet. Alternatively a private communications channel may be implemented over a direct dedicated connection between virtualized private network and customer network .

A public network may be broadly defined as a network that provides open access to and interconnectivity between a plurality of entities. The Internet or World Wide Web WWW is an example of a public network. A shared network may be broadly defined as a network to which access is limited to two or more entities in contrast to a public network to which access is not generally limited. A shared network may for example include one or more local area networks LANs and or data center networks or two or more LANs or data center networks that are interconnected to form a wide area network WAN . Examples of shared networks may include but are not limited to corporate networks and other enterprise networks. A shared network may be anywhere in scope from a network that covers a local area to a global network. Note that a shared network may share at least some network infrastructure with a public network and that a shared network may be coupled to one or more other networks which may include a public network with controlled access between the other network s and the shared network. A shared network may also be viewed as a private network in contrast to a public network such as the Internet. In embodiments either a shared network or a public network may serve as an intermediate network between a provider network and a customer network.

To establish a virtualized private network for a customer on service provider network one or more resource instances e.g. VMs A and B and storage A and B may be allocated to the virtualized private network . Note that other resource instances e.g. storage C and VMs C may remain available on the service provider network for other customer usage. A range of public IP addresses may also be allocated to the virtualized private network . In addition one or more networking devices routers switches etc. of the service provider network may be allocated to the virtualized private network . A private communications channel may be established between a private gateway at virtualized private network and a gateway at customer network .

In at least some embodiments in addition to or instead of a private gateway virtualized private network may include a public gateway that enables resources within virtualized private network to communicate directly with entities e.g. client via intermediate network and vice versa instead of or in addition to via private communications channel .

Virtualized private network may be but is not necessarily subdivided into two or more subnets . For example in implementations that include both a private gateway and a public gateway the private network may be subdivided into a subnet A that includes resources VMs A and storage A in this example reachable through private gateway and a subnet B that includes resources VMs B and storage B in this example reachable through public gateway .

The customer may assign particular customer public IP addresses to particular resource instances in virtualized private network . A client on intermediate network may then send traffic to a public IP address published by the customer the traffic is routed by the service provider to the associated resource instance. Return traffic from the resource instance is routed by the service provider back to the client over intermediate network . Note that routing traffic between a resource instance and a client may require network address translation to translate between the public IP address and the private IP address of the resource instance.

At least some embodiments may allow a customer to remap public IP addresses in a customer s virtualized private network as illustrated in to devices on the customer s external network . When a packet is received from a client e.g. client the network may determine that the destination IP address indicated by the packet has been remapped to an endpoint on external network and handle routing of the packet to the respective endpoint either via private communications channel or via the intermediate network . Response traffic may be routed from the endpoint to the client through the provider network or alternatively may be directly routed to the client by the customer network . From the perspective of the client it appears as if the client is communicating with the public IP address of the customer on the provider network . However the client has actually communicated with the endpoint on customer network .

While shows client as a client on intermediate network and external to service provider network a client may be an entity on service provider network. For example one of the resource instances provided by the service provider may be a client that sends traffic to a public IP address published by the customer.

In service provider network environments such as those illustrated in the customers virtualized resources provided through the virtualization services may generally be implemented on multi tenant devices. For example in a hardware virtualization service a single physical computing machine may be shared among multiple customers by providing each customer with one or more virtual machines hosted by the single physical computing machine. As another example in a storage virtualization service each customer s virtualized data store may be distributed across multiple data storage devices with a given storage device storing portions of data for two or more customers. However at least some customers of a service provider may desire or require some degree of isolation of the customers data and or processes on a service provider network. That is a customer may want to take advantage of cost or other benefits that may be provided via one or more virtualization services provided by a service provider but for one or more reasons e.g. regulatory security and performance reasons may desire or require that their virtualized resources be separated from the virtualized resources of other customers.

To achieve a degree of logical isolation for customers virtualized resources a service provider may provide virtualized private networks as illustrated in to enable a customer to connect existing infrastructure on the customer s network to a set of logically isolated service provider resource instances and to extend management capabilities such as security services firewalls and intrusion detection systems to include their service provider resource instances. However at least some of the underlying physical devices in a virtualized private network may still be shared with other customers of the service provider. For example referring to VMs A and B may be implemented together with the VMs C of other customers on multi tenant host systems. As another example storage A and storage B may be stored together with the storage C of other customers on shared multi tenant physical storage devices. In addition the customer shares the virtualization services with other customers via public API endpoints to the services as shown in . In customers A B and C share public API endpoint access to a multi tenant virtualization service provided by service provider . The virtualization service implements the customers resource instances on multi tenant hardware even if a customer e.g. customer A has established a virtual private network on the service provider network as illustrated in .

To achieve a further degree of logical isolation a service provider may provide customers with the ability to virtualize one or more of the virtualization services e.g. a storage virtualization service or a hardware virtualization service provided by the service provider. For example a service provider may allow a customer to mount a private API endpoint for a virtualization service in the customer s virtualized private network. illustrates that customer A has established a private API endpoint to virtualization service . This allows the customer A to establish a private access point to a virtualization service such as a storage virtualization service. The customer A and in some cases the customer s clients may then access the customer s resource instances provided via the virtualization service through the private API endpoint instead of through the virtualization service s public API endpoint . However while allowing the customer A to establish a private API endpoint to virtualization service provides logical isolation of the customer s virtualized resources customer A s resource instances may still be implemented by the virtualization service on multi tenant hardware that is shared with other customers B and C.

At least some customers of a service provider may desire or require physical resource isolation. That is a customer may want to take advantage of cost or other benefits that may be provided via one or more virtualization services provided by a service provider but for one or more reasons e.g. regulatory security and or performance reasons may not want to share the underlying physical resources with other customers.

Embodiments of scalable private services for service provider networks may provide physical isolation for a customer s resources provided through a virtualization service as illustrated in . A service provider may provide a service public instance A to customers e.g. customers B and C . A customer e.g. customer B shares the service public instance A with other customers e.g. customer C via a public API endpoint to the service. The service public instance A implements at least some of the customers resource instances on multi tenant hardware .

In at least some embodiments to provide physical isolation for a customer s resources the customer A may request a private instance of a virtualization service for example when establishing a private API endpoint to the virtualization service through the customer s virtualized private network. For example an IT administrator at the customer A may generate the request from a console at the service customer network as illustrated in . As another example in at least some embodiments a request for a private instance of a virtualization service may be automatically generated by a process of customer A. As an example a web services process executing at customer A or on a virtualized private network of customer A may generate a request for a service private instance.

Referring again to in response to the request for a private instance of the virtualization service a service private instance B may be established for the customer A by the service provider . In the service private instance B some or all of customer A s resource instances for providing the virtualization service to the customer A are instantiated on single tenant hardware that is not shared with any other customers. In addition a private API endpoint may be established to the service private instance B. While not shown in servers storage nodes routers switches NATs and other hardware and network infrastructure as well as new instances of software processes and or data that may be necessary to implement a separate instance of the virtualization service may also be included in service private instance B. Using a storage virtualization service as an example establishing service private instance B may involve creating a new installation of the storage virtualization service including dedicated computing devices web servers storage nodes network infrastructure and so on that are necessary to implement an instance of the storage service.

Note that service private instance B may include hardware software and or data components that collectively instantiate a functioning copy of the service. However two instances of a virtualization service e.g. service public instance A and service private instance B may be configured differently and do not necessarily include the same types or quantities of hardware software and or data components. For example in at least some embodiments an initial implementation of service private instance B may provide the virtualization service API interface via private API endpoint but may be smaller and simpler than service public instance A which is intended to support multiple customers via multi tenant hardware . Again using a storage virtualization service as an example in at least some embodiments an initial private instance of the storage virtualization service may be implemented that provides the storage virtualization service API interface but which is smaller simpler relatively easier to deploy and possibly more expensive per unit capacity than a typical public implementation of the storage virtualization service intended to support multiple customers via multi tenant hardware. For example the customer s virtualized data volume may initially be supportable via MySQL database technology or other smaller scale data storage technology while the public implementation uses a different data storage technology that supports a much larger data store. As another example the customer s single tenant virtualized data store may initially be implemented on one or a few single tenant data storage devices with one or a few web servers as a front end to the customer s single tenant virtualized data store while the public implementation may employ hundreds or thousands of multi tenant data storage devices and many web servers to implement the multi tenant virtualized data store. As yet another example the public implementation of the service may implement routing technology including routing hardware and or software that supports routing traffic from multiple customers accessing their respective data in the multi tenant virtualized data store. The service private instance may at least initially implement different routing technology or similar routing technology differently configured since traffic related to only the single customer is routed on the service private instance.

In at least some embodiments in response to automatically detecting or anticipating an increase in usage of a customer s private instance such as service public instance A or in response to a request for an upgrade by the customer the initial or current implementation of the service public instance A may be scaled up by reconfiguring the service public instance A. Reconfiguring a service private instance such as service public instance A may involve modifying upgrading replacing and or adding components to support the detected or anticipated increase in usage. Again using a storage virtualization service as an example as the customer s data volume grows or as traffic to the storage virtualization service increases one or more components of the data storage technology used in the customer s service private instance may be modified replaced or upgraded and or additional components may be added to support larger data volumes and or higher traffic rates. This scaling up of the customer s private implementation of the service may happen more than once as usage increases over time. Note that the customer s private implementation of the service may either initially employ the data storage technology used in the service public instance or may be scaled up to employ the data storage technology used in the service public instance. Also note that scaling up of a service private instance may but does not necessarily involve adding additional hardware devices to the service private instance.

In at least some embodiments the scaling up of a service private instance such as service public instance A may be performed transparently to the customer that is reconfiguration of the service private instance to achieve the scaling up may be automatically initiated in response to the service provider detecting a need to scale up the service private instance and may be manually and or automatically performed while not significantly affecting access to or performance of the service private instance from the customer s perspective.

In at least some embodiments a service private instance may also be scaled down by reconfiguring the service private instance. For example service public instance A may be scaled down in response to a detected or anticipated decrease in usage or in response to the customer requesting that the service private instance be scaled down. Note that scaling down a service private instance may but does not necessarily involve removing hardware devices from the service private instance. In at least some embodiments the scaling down of a service private instance such as service public instance A may be performed transparently to the customer that is the scaling down may be manually and or automatically performed and may not significantly affect access to and performance of the service private instance from the customer s perspective.

While shows service private instance B as being implemented independently of service public instance A in at least some embodiments a service private instance may be implemented in which one or more components or resources of the service provider network are shared by a service private instance and the service public instance. A virtualization service architecture may include two or more logical layers. For example a storage virtualization service may include a front end layer that includes web servers and a back end layer that includes storage nodes. The service public instance may provide resources e.g. web servers and storage nodes to customers on multi tenant hardware at each layer. To implement a service private instance the resources at one or more layers of the service private instance may be implemented on single tenant hardware while the resources at one or more other layers of the service private instance may be implemented on multi tenant hardware along with resources of the service public instance.

As shown in a storage virtualization service provided by a service provider is implemented as a storage service public instance . There are two layers to the storage virtualization service layer at which web servers are implemented and layer at which storage nodes are implemented. In storage service public instance web servers are implemented on multi tenant hardware and storage nodes are implemented on multi tenant hardware . For example to implement web servers on multi tenant hardware one or more physical multi tenant computing devices may be shared among multiple customers by providing each customer with one or more virtualized web servers hosted on the multi tenant computing devices. A single computing device may host virtualized web servers for two or more customers. To implement storage nodes on multi tenant hardware each customer s virtualized storage may be distributed across multiple data storage devices with a given storage device storing portions of data for two or more customers. Customers e.g. customers B and C generally access storage service public instance via a public API endpoint .

Referring to a customer A may desire or require more isolation for the customer s storage resources than is provided in the storage service public instance for example for security reasons. While not shown in the service provider may provide a virtualized private network for customer A as illustrated in . The service provider may allow the customer to mount a private API endpoint for the storage virtualization service in the customer s virtualized private network. At least some communications and data exchange between the customer s virtualized private network and external entities e.g. the customer s network as shown in may be over a private communications channel as shown in . The customer A may request a private API endpoint to the storage virtualization service and may also specifically request that resources provided to the customer A by the storage virtualization service are physically private resources i.e. implemented on single tenant hardware rather than logically private resources implemented on multi tenant hardware. In response to the customer s request a storage service private instance B separate from storage service public instance A may be automatically and or manually configured implemented and provided to the customer A. At least some of the devices used to implement the storage service private instance B are single tenant devices on which only customer A s processes and or data are instantiated.

As shown in isolation of customer A s storage resources may be accomplished by providing single tenant hardware for the customer A at all layers of the storage virtualization service so that little or nothing is shared between the customer s storage service private instance B and storage service public instance A. As shown in single tenant hardware is provided to the customer A at layer on which the customer s web server s are instantiated. Similarly single tenant hardware is provided to the customer A at layer on which the customer s storage nodes are instantiated. A private API endpoint to storage service private instance B is also provided to the customer A. While not shown separate instances of at least some processes of the storage virtualization service may be instantiated for the storage service private instance B. As shown in by layer being split into layers A and B and layer being split into layers A and B the layers of the storage service private instance B are effectively isolated from the layers of the storage service public instance A

However for at least some cases adequate or acceptable security and isolation may be achieved by isolating resources at one or more layers of the storage virtualization service as shown in rather than at all layers of the storage virtualization service as shown in .

As shown in web server s at layer of the storage service private instance B are implemented on single tenant hardware while storage nodes B at layer of the storage service private instance B are implemented on multi tenant hardware along with storage nodes A for customers of the storage service public instance A. Thus layer is not shared by the storage service private instance B and the storage service public instance A as shown by layer being implemented separately for the two instances as layer A and layer B.

In at least some implementations of a storage service private instance B as shown in to provide additional security for the customer s data data being written to the customer s virtualized storage in layer may be encrypted or otherwise secured before being passed to the public portion of the service provider network. In at least some implementations this securing of the customer s data may be performed at the web server layer layer B of the storage service private instance B.

As shown in storage nodes at layer of the storage service private instance B are implemented on single tenant hardware while web servers A at layer B of the storage service private instance B are implemented on multi tenant hardware along with web servers A for customers of the storage service public instance A. Thus layer is not shared by the storage service private instance B and the storage service public instance A as shown by layer being implemented separately for the two instances as layer A and layer B.

In at least some implementations of a storage service private instance B as shown in to provide additional security for the customer s data data in the customer s virtualized storage in layer B may be encrypted or otherwise secured at the virtualized storage layer layer B . Data packets sent from layer B to the web servers B on the public portion of the service provider network thus contain encrypted data portions while necessary routing information is left unencrypted.

In at least some implementations of a storage service private instance B as shown in a private API endpoint to the service private instance B may be established while a public API endpoint may be provided for the service public instance A. Alternatively a private API endpoint may not be provided and the service private instance B may be accessed via public API endpoint .

As indicated at in response to the request for a private instance of the virtualization service single tenant hardware to support the service private instance as specified may be manually and or automatically configured by the service provider. Configuring the service private instance may require installing configuring and connecting one or more single tenant hardware devices to support the service private instance. For example one or more of server devices storage devices routers switches cables power supplies and possibly other hardware necessary to implement the service private instance may be installed and appropriately configured and connected. Alternatively in at least some embodiments at least some of the single tenant hardware may be pre installed and may be manually and or automatically configured to implement the physical infrastructure of the service private instance. Note that in at least some embodiments a service private instance may be initially configured to support all of the functionality of the respective virtualization service or alternatively may be initially configured to support only a portion of the functionality of the respective virtualization service. In addition the service private instance is at least in part implemented on single tenant hardware dedicated to the single customer and thus at least a portion of the service private instance hardware is not shared among multiple customers as is the service public instance. Thus the service private instance may be at least initially configured with only a portion of the hardware and or software components that are necessary to support the service public instance.

The single tenant hardware for the service private instance may be installed in the same data center s in which the service provider network and service public instance are instantiated. Alternatively at least a portion of the single tenant hardware may be installed in other locations.

As indicated at necessary software for implementing the service may be manually and or automatically configured for the service private instance. Configuring the software may for example include installing software for implementing server processes network address translators NATs virtual machines and in general any software and data necessary to support functionality of the service private instance. Note that in at least some embodiments a service private instance may be initially configured to support all of the functionality of the respective virtualization service or alternatively may be initially configured to support only a portion of the functionality of the respective virtualization service. In addition the service private instance is at least in part implemented on single tenant hardware dedicated to the single customer and thus at least a portion of the service private instance hardware and software is not shared among multiple customers as is the service public instance. Thus the service private instance may be at least initially configured with only a portion of the software and or data that is used to implement the service public instance.

As indicated at a private API endpoint to the service private instance may be established. In at least some embodiments the private API endpoint may be established within the customer s virtualized private network on the service provider network. The private API endpoint may be accessible through the customer s virtual private network to access functionality of the virtualization service that is supported by the service private instance. Alternatively in at least some implementations the service private instance may be accessed via a public API endpoint to the service.

As previously noted for at least some cases adequate or acceptable security and isolation may be achieved by isolating resources at one or more layers of the storage virtualization service as shown in rather than at all layers of the storage virtualization service as shown in . Thus in these cases elements and of may be performed at one or more layers of a virtualization service to establish a service private instance while one or more other layers of the service private instance are implemented on the shared hardware and software provided in the service public instance. Note that establishing the service private instance in a shared layer of a virtualization service as illustrated in may require configuration of hardware and or software at the shared layer and may but does not necessarily require the installation of new hardware and or software at the shared layer.

After a service private instance is established for example according to the method illustrated in the customer may begin to use the service private instance. For example the service private instance may be a storage service private instance as illustrated in and the customer may begin to store data to the virtualized storage provided by the storage service private instance. As another example the service private instance may be a private instance of a hardware virtualization service as illustrated in and the customer may begin to use virtual machines provided by the hardware virtualization service private instance.

The initial needs of the customer may only require a relatively small number of hardware devices and virtualized resources to implement the customer s service private instance when compared to a full blown service public instance that supports many customers. In addition as previously noted in at least some embodiments a service private instance may be initially configured to support only a portion of the functionality of the respective virtualization service or may initially configured using different technology than the service public instance such as different database technology to support the customer s needs. However the customer s needs may grow over time as usage of the service private instance increases. For example traffic to the customer private instance may increase and or the amount of data that the customer stores to virtualized storage may increase. Thus at least some embodiments may support scaling up of an established service private instance to support detected or anticipated increase in usage.

As indicated at in response to detecting that the service private instance needs to be scaled up the service private instance may be manually and or automatically reconfigured to support the detected or anticipated increase in demand. Reconfiguring the service private instance may but does not necessarily involve manually and or automatically adding additional software and or hardware components to the service private instance. For example one or more of server devices storage devices routers switches cables power supplies and possibly other hardware may be installed and appropriately configured and connected to the service private instance. Alternatively in at least some embodiments at least some of the hardware may be pre installed and may be manually and or automatically configured as additions to the physical infrastructure of the service private instance. In addition additional software for implementing server processes network address translators NATs virtual machines and in general any software and data necessary to add required functionality to or increase the capacity of existing functionality of the service private instance may be added to the service private instance. Reconfiguring the service private instance may instead or may also involve replacing or upgrading one or more software and or hardware components of the service private instance. For example in a storage service private instance the customer s virtualized data volume may initially be supported via MySQL database technology or other smaller scale data storage technology reconfiguring the storage service private instance may involve replacing the MySQL database technology with a more robust database technology that can support much larger data storage volumes. Reconfiguring the service private instance may instead or may also involve implementing or enabling additional features of the virtualization service in the service private instance that were at least initially disabled or not implemented.

In at least some embodiments the scaling up of a service private instance by reconfiguring the service private instance may be performed transparently to the customer that is the reconfiguration may be automatically initiated in response to the service provider detecting a need to scale up the service private instance and may be manually and or automatically performed while not significantly affecting access to or performance of the service private instance from the customer s perspective.

Thus a customer s service private instance may be initially created as a relatively small instance of the virtualization service and may have limited functionality when compared to the full service public instance that supports multiple customers. However the service private instance may be dynamically scaled up over time and additional functionality may be dynamically added to the service private instance as necessary or desired to support the changing needs of the customer. In at least some embodiments the scaling up of a customer s service private instance may be performed by the service provider in response to the service provider detecting a need to support a detected or anticipated increase in usage of in the service private instance and thus the scaling up may be automatically and transparently performed from the perspective of the customer.

The customer s need for or usage of the virtualization service may also decrease over time. Thus at least some embodiments may support scaling down of an established service private instance. is a flowchart of a method for scaling down a service private instance according to at least some embodiments. As indicated at a manual or automated detection process may detect or anticipate a decrease in usage of the service private instance and thus may determine that the service private instance can be scaled down. Because of the decrease in usage one or more software and or hardware components may no longer be required and thus may be removed from or disabled in the service private instance. In at least some embodiments to detect or anticipate a decrease in usage one or more metrics may be monitored by a human or by an automated process to detect if and when resource usage drops and stays below a threshold or thresholds. For example if the service is a storage service one or more storage usage metrics may be monitored by a human or by an automated process to detect if and when storage usage within the storage private service drops and stays below a storage threshold. Alternatively a customer may simply request that the service private instance be scaled down or may request that one or more resources be removed from the service private instance for example in anticipation of a decrease in usage.

As indicated at in response to detecting that the service private instance can be scaled down the service private instance may be manually and or automatically reconfigured. Reconfiguring the service private instance may but does not necessarily involve physically removing one or more software and or hardware components of the service private instance. For example one or more server devices storage devices routers switches cables power supplies and possibly other hardware may be uninstalled and disconnected from the service private instance. In addition software for implementing server processes network address translators NATs virtual machines and in general any software and data that may be removable from the service private instance to scale the private instance down may be removed from the service private instance. In at least some embodiments instead of physically removing a given component e.g. a single tenant hardware device from the service private instance when scaling down the service the component may be disabled while remaining physically within or attached to the service private instance. Reconfiguring the service private instance may instead or may also involve replacing or downgrading one or more software and or hardware components of the service private instance. Reconfiguring the service private instance may instead or may also involve disabling one or more features of the virtualization service in the service private instance that were previously enabled.

Note that scaling down a service private instance may involve consolidating functionality and or data on remaining hardware devices. For example in a storage private instance stored data on storage nodes to be removed may be migrated to storage nodes that will remain in the scaled down service private instance prior to or after removing or disabling the storage nodes. As another example two or more server processes or virtual machines on two or more devices may be consolidated to one device that will remain in the scaled down service private instance.

In at least some embodiments the scaling down of a service private instance by reconfiguring the service private instance may be performed transparently to the customer that is the reconfiguration may be automatically initiated in response to the service provider detecting or anticipating a decrease in usage of the service private instance and may be manually and or automatically performed while not significantly affecting access to or performance of the service private instance from the customer s perspective.

In at least some embodiments a server that implements a portion or all of one or more of the technologies including but not limited to the various service provider methods and apparatus and the methods and apparatus for providing scalable private services in service provider networking environments as described herein may include a general purpose computer system that includes or is configured to access one or more computer accessible media such as computer system illustrated in . In the illustrated embodiment computer system includes one or more processors coupled to a system memory via an input output I O interface . Computer system further includes a network interface coupled to I O interface .

In various embodiments computer system may be a uniprocessor system including one processor or a multiprocessor system including several processors e.g. two four eight or another suitable number . Processors may be any suitable processors capable of executing instructions. For example in various embodiments processors may be general purpose or embedded processors implementing any of a variety of instruction set architectures ISAs such as the x86 PowerPC SPARC or MIPS ISAs or any other suitable ISA. In multiprocessor systems each of processors may commonly but not necessarily implement the same ISA.

System memory may be configured to store instructions and data accessible by processor s . In various embodiments system memory may be implemented using any suitable memory technology such as static random access memory SRAM synchronous dynamic RAM SDRAM nonvolatile Flash type memory or any other type of memory. In the illustrated embodiment program instructions and data implementing one or more desired functions such as those methods techniques and data described above for service provider methods and apparatus and the methods and apparatus for providing scalable private services in service provider networking environments are shown stored within system memory as code and data .

In one embodiment I O interface may be configured to coordinate I O traffic between processor system memory and any peripheral devices in the device including network interface or other peripheral interfaces. In some embodiments I O interface may perform any necessary protocol timing or other data transformations to convert data signals from one component e.g. system memory into a format suitable for use by another component e.g. processor . In some embodiments I O interface may include support for devices attached through various types of peripheral buses such as a variant of the Peripheral Component Interconnect PCI bus standard or the Universal Serial Bus USB standard for example. In some embodiments the function of I O interface may be split into two or more separate components such as a north bridge and a south bridge for example. Also in some embodiments some or all of the functionality of I O interface such as an interface to system memory may be incorporated directly into processor .

Network interface may be configured to allow data to be exchanged between computer system and other devices attached to a network or networks such as other computer systems or devices as illustrated in for example. In various embodiments network interface may support communication via any suitable wired or wireless general data networks such as types of Ethernet network for example. Additionally network interface may support communication via telecommunications telephony networks such as analog voice networks or digital fiber communications networks via storage area networks such as Fibre Channel SANs or via any other suitable type of network and or protocol.

In some embodiments system memory may be one embodiment of a computer accessible medium configured to store program instructions and data as described above for for implementing embodiments of service provider methods and apparatus and the methods and apparatus for providing scalable private services in service provider networking environments. However in other embodiments program instructions and or data may be received sent or stored upon different types of computer accessible media. Generally speaking a computer accessible medium may include non transitory storage media or memory media such as magnetic or optical media e.g. disk or DVD CD coupled to computer system via I O interface . A non transitory computer accessible storage medium may also include any volatile or non volatile media such as RAM e.g. SDRAM DDR SDRAM RDRAM SRAM etc. ROM etc that may be included in some embodiments of computer system as system memory or another type of memory. Further a computer accessible medium may include transmission media or signals such as electrical electromagnetic or digital signals conveyed via a communication medium such as a network and or a wireless link such as may be implemented via network interface .

Various embodiments may further include receiving sending or storing instructions and or data implemented in accordance with the foregoing description upon a computer accessible medium. Generally speaking a computer accessible medium may include storage media or memory media such as magnetic or optical media e.g. disk or DVD CD ROM volatile or non volatile media such as RAM e.g. SDRAM DDR RDRAM SRAM etc. ROM etc as well as transmission media or signals such as electrical electromagnetic or digital signals conveyed via a communication medium such as network and or a wireless link.

The various methods as illustrated in the Figures and described herein represent exemplary embodiments of methods. The methods may be implemented in software hardware or a combination thereof. The order of method may be changed and various elements may be added reordered combined omitted modified etc.

Various modifications and changes may be made as would be obvious to a person skilled in the art having the benefit of this disclosure. It is intended to embrace all such modifications and changes and accordingly the above description to be regarded in an illustrative rather than a restrictive sense.

