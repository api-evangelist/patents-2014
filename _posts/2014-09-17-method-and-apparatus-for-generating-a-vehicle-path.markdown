---

title: Method and apparatus for generating a vehicle path
abstract: A method and apparatus for generating a representation of a vehicle path for display via a computer is disclosed, which involves receiving start location information including a start location and an initial orientation of the vehicle and end location information including a desired end location of the vehicle, and receiving a selection of a vehicle defined by parameters that define a turning behavior of the vehicle. The method involves receiving constraint information identifying at least one constraint to passage of the vehicle between the start and end locations and causing a processor circuit to generate a vehicle path for travel between the start and end locations, the vehicle path based on the turning behavior of the vehicle and being generated such that the vehicle path remains within the at least one constraint.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09404758&OS=09404758&RS=09404758
owner: Transoft Solutions, Inc.
number: 09404758
owner_city: Richmond, British Columbia
owner_country: CA
publication_date: 20140917
---
This application claims priority to under 35 U.S.C. Section 119 e to Provisional Application 61 883 755 filed on Sep. 27 2013. The disclosure of this application is hereby incorporated by reference in its entirety. Furthermore any and all priority claims identified in the Application Data Sheet or any correction thereto are hereby incorporated by reference under 37 C.F.R. 1.57.

This invention relates generally to traffic engineering and more particularly to generating a representation of a vehicle path for display via a computer.

Computer aided design of transport infrastructure such as railways roadways parking lots and garages airports and the like may be facilitated by various computer aided design CAD software products that represent aspects of the infrastructure so that design choices may be visualized on a computer display. As such traffic engineering CAD systems provide a valuable input into the design process and facilitate the generation of construction plans that may be used for construction of infrastructure. Additionally online web based mapping tools such as Google Maps or Google Earth provide graphic functionality that may be exploited to show traffic and other infrastructure.

There remains a need in traffic engineering systems for the generation and representation of vehicle paths for movement of vehicles through such infrastructure.

In accordance with one disclosed aspect there is provided a method for generating a representation of a vehicle path for display via a computer. The method involves receiving start location information at an interface of the computer the start location information including a start location and an initial orientation of the vehicle at the start location. The method also involves receiving end location information at the interface the end location information including a desired end location of the vehicle and receiving at the interface a selection of a vehicle for which the vehicle path is to be generated the vehicle being defined by vehicle parameters that define a turning behavior of the vehicle. The method further involves receiving constraint information at the interface the constraint information identifying at least one constraint to passage of the vehicle between the start location and the end location. The method also involves causing a processor circuit of the computer to generate at least one vehicle path for travel of the vehicle between the start location and the end location the vehicle path being based on the turning behavior of the vehicle and being generated such that the vehicle path remains within the at least one constraint.

Receiving the end location information may involve receiving end location information including a desired orientation of the vehicle at the end location.

Receiving the constraint information may involve receiving for the at least one constraint a constraint location and a tolerance value defining a permitted deviation of the vehicle path from the constraint location.

Receiving the constraint information may further involve receiving a desired orientation of the vehicle at the constraint location.

Receiving the constraint information may involve causing the processor circuit to determine whether the turning behavior of the vehicle acts as a constraint to generation of a vehicle path that would be able to reach the end location.

The method may involve causing the processor circuit to display an indication of a range of possible turns that the vehicle is capable of making from the start location and orientation.

Receiving the constraint information may involve receiving information defining a location and extent of an obstacle to movement of the vehicle between the start location and the end location.

Receiving the information defining the location and extent of the obstacle to travel may involve receiving information defining at least one of a man made structure a natural landscape feature and an edge of a roadway or thoroughfare.

The end location may include an intermediate end location and the method may further involve receiving at the interface end location information including a subsequent desired end location of the vehicle and causing the processor circuit to generate a subsequent vehicle path portion for travel of the vehicle between the intermediate end location and the subsequent end location.

Causing the processor circuit to generate the at least one vehicle path may involve causing the processor circuit to determine whether the turning behavior of the vehicle acts as a constraint to generation of a vehicle path that would be able to reach the end location and when the turning behavior of the vehicle acts as a constraint causing a warning to be issued and discontinuing generation of the vehicle path.

The method may involve causing the processor circuit to resume generation of the vehicle path in response to receiving revised end location information at the interface the revised end location information including an end location that permits generation of a vehicle path that would be able to reach the end location.

Receiving the constraint information may involve receiving constraint information identifying a plurality of constraints and causing the processor circuit to generate at least one vehicle path may involve causing the processor circuit to generate at least one vehicle path for travel of the vehicle between the start location and the end location within each of the plurality of constraints.

Receiving the constraint information may involve receiving constraint information identifying at least one of a roadway that permits travel of a motor vehicle a taxiway or runway that permits travel of an aircraft and a railway for travel of rolling stock.

The vehicle parameters include at least one parameter defining an extent of the vehicle and generating the at least one vehicle path may involve generating a vehicle path that causes the at least one extent of the vehicle to remain within the at least one constraint while traveling along the vehicle path.

Receiving the constraint information may involve receiving a data defining a vehicle path portion and generating the vehicle path may involve generating a vehicle path that includes the vehicle path portion.

Receiving the data defining the vehicle path portion may involve recovering data defining a straight line a curved line and a waypoint.

Causing the processor circuit to generate at least one vehicle path may involve causing the processor circuit to generate a plurality of alternative vehicle paths for travel of the vehicle between the start location and the end location within the at least one constraint.

The method may involve receiving at the interface an operator selection of one of the plurality of alternative vehicle paths.

Generating the figure of merit may involve generating a figure of merit for each vehicle path based on at least one of an operator workload associated with steering the vehicle to follow the vehicle path a number of turns required while following the vehicle path a time taken to traverse the vehicle path an expected vehicle speed while following the vehicle path safety criteria associated with travel along the vehicle path and a distance over which the vehicle path extends.

Receiving the start location information may involve receiving data defining a line disposed at the start location the line being oriented to define the orientation of the vehicle at the start location.

Causing the processor circuit to generate the at least one vehicle path may involve causing the processor circuit to generate a path having an initial trajectory extending from the line and aligned in a direction corresponding to an orientation of the line and a length of the initial trajectory is proportional to a length of the line.

Receiving the end location information may involve receiving data defining a line disposed at the end location the line being oriented to define the desired orientation of the vehicle at the end location.

Causing the processor circuit to generate the at least one vehicle path may involve causing the processor circuit to generate a path having a finishing trajectory aligned in a direction corresponding to the orientation of the line and where a length of the finishing trajectory is proportional to a length of the line.

Receiving the start location information and the end location information may involve causing the processor circuit to display a line in an initial orientation the line having at least one interactive region for receiving operator input via an input device and may further involve changing at least one of a location and an orientation of the line in response to receiving user input at the at least one interactive region.

The method may involve receiving at the interface operator input defining a change to the line and may further involve causing the processor circuit to generate an updated vehicle path for travel of the vehicle based on the changed line.

The vehicle parameters may include at least one parameter defining a reference location on the vehicle and generating the vehicle path may involve causing the processor circuit to display a line along which the reference location moves during passage of the vehicle between the start location and the end location.

The reference location on the vehicle may include one of a location of a steerable wheel of the vehicle and a location disposed midway between a pair of steerable wheels of the vehicle.

Causing the processor circuit to generate at least one vehicle path may involve causing the processor circuit to generate a vehicle path for travel of the vehicle in one of a forward direction and a reverse direction between the start location and the end location the vehicle path being based on the turning behavior of the vehicle when moving in the respective directions.

The method may involve causing the processor circuit to read vehicle parameters that define extents of the vehicle and generating a swept path of the vehicle for travel along the vehicle path.

The method may involve causing the processor circuit to generate a plurality of geometric elements representing outer edges of the swept path each geometric element representing at least a portion of the outer edge and having associated data defining a location and a shape of the geometric element.

In accordance with another disclosed aspect there is provided an apparatus for generating a representation of a vehicle path for display via a computer. The apparatus includes a processor circuit operably configured to receive start location information at an interface of the computer the start location information including a start location and an initial orientation of the vehicle at the start location. The processor circuit is also operably configured to receive end location information at the interface the end location information including a desired end location of the vehicle and to receive at the interface a selection of a vehicle for which the vehicle path is to be generated the vehicle being defined by vehicle parameters that define a turning behavior of the vehicle. The processor circuit is further operably configured to receive constraint information at the interface the constraint information identifying at least one constraint to passage of the vehicle between the start location and the end location. The processor circuit is also operably configured to cause the processor circuit of the computer to generate at least one vehicle path for travel of the vehicle between the start location and the end location the vehicle path being based on the turning behavior of the vehicle and being generated such that the vehicle path remains within the at least one constraint.

In accordance with another disclosed aspect there is provided a method for generating a representation for display via a computer of a vehicle path between a start location and an end location. The method involves receiving information at an interface of the computer defining lateral boundaries for movement of the vehicle between the start location and the end location. The method also involves receiving at the interface a selection of a vehicle for which the vehicle path is to be generated the vehicle being defined by vehicle parameters that define a steering behavior of the vehicle. The method further involves generating a negotiable passage between the lateral boundaries based on the steering behavior of the vehicle the negotiable passage defining a region of between the lateral boundaries within which the vehicle would be able to steer to negotiate the passage without encroaching on the lateral boundaries at least a portion of the negotiable passage having sufficient lateral extent to permit the vehicle to follow a plurality of different vehicle paths when moving along the portion. The method also involves generating the vehicle path by selecting between the different vehicle paths to reduce steering movements of the vehicle for movement along the negotiable passage.

Receiving information defining lateral boundaries may involve receiving data defining a left hand boundary curve extending at least partway between the start location and the end location and receiving data defining a right hand boundary curve extending at least partway between the start location and the end location.

The left hand boundary curve and the right hand boundary curve may be represented by continuous Bezier curves.

At least one obstacle to movement of the vehicle may be disposed between the start location and the end location and receiving information defining lateral boundaries may involve generating the lateral boundaries to avoid the at least one obstacle.

The method may involve receiving at the interface information imposing a movement preference defining preferred portions for vehicle movement within the lateral boundaries.

The receiving the information imposing a movement preference may involve receiving at least one of user input defining a user preferred portion within the lateral boundaries information defining the start location information defining the end location information defining an area having a movement constriction information defining lanes for guiding vehicle movement information defining an area that may be encroached on by a vehicle information defining a speed constraint and information defining a steering rate constraint.

Generating the negotiable passage may involve steering the vehicle along an interim vehicle path extending along each of the lateral boundaries while generating a plurality of vehicle extents and in response to one of the plurality of vehicle extents encroaching on one of the lateral boundaries spacing the interim vehicle path inwardly until the vehicle extent is able to pass within the one of the lateral boundaries and reducing an extent between the lateral boundaries based on the interim vehicle path.

Other aspects and features of the present invention will become apparent to those ordinarily skilled in the art upon review of the following description of specific embodiments of the invention in conjunction with the accompanying figures.

Referring to a block diagram of an apparatus for generating a representation of a vehicle path for display via a computer is shown generally at . The apparatus includes a computer configured to implement a CAD system and having an input for receiving operator input from an input device such as a keyboard and or a pointing device . The pointing device may be a computer mouse trackball or digitizing tablet or other device operable to produce pointer movement signals. The apparatus also includes a display and the computer includes an output for producing display signals for displaying the representation of the vehicle path on the display. The apparatus further includes a plotter and the computer includes an output for producing output data for causing the plotter to print a hardcopy representation of the representation of the vehicle path on the display .

The computer also includes an interface that provides access to CAD system functions implemented by the CAD system. The apparatus further includes a vehicle path generation functional block which provides functions for causing the computer to generate the representation of the vehicle path. The vehicle path generation functional block interfaces with the CAD system of the computer through the interface . The vehicle path may be generated for a specific traffic infrastructure such as roadways parking lots parking garages airports railways and other thoroughfares that facilitate passage of vehicles of various types including bicycles and motor bicycles passenger cars trucks abnormal loads trains aircraft and other transportation vehicles and appliances.

The CAD system may be provided by causing a computer to execute CAD system software such as the AutoCAD software application available from Autodesk Inc. of San Rafael Calif. USA. AutoCAD provides drawing elements such as lines polylines circles arcs and other complex elements. Customization of AutoCAD is provided through ObjectARX AutoCAD Runtime Extension which is an application programming interface API that permits access to a class based model of AutoCAD drawing elements. Customization code may be written in a programming language such as C which may be compiled to provide the functionality represented as the vehicle path generation functional block shown in .

Other CAD systems such as MicroStation sold by Bentley Systems Inc. of Exton Pa. USA provide similar CAD functionality and interfaces for customization. Advantageously using existing CAD software applications to provide standard CAD functionality allows operators to produce drawing files representing vehicle paths. The resulting drawing files may also be saved in such a manner to permit other operators who do not have access to the vehicle path generation functional block to view and or edit the drawings.

In other embodiments the CAD system functions may be provided in a web based mapping program such as Google Maps or Google Earth. For example Google maps provide an API for interacting with the map data on the Google Map servers and provide functionality that allows others to display additional information to displayed map data provided by Google.

Referring to a processor circuit embodiment for implementing the apparatus shown in is shown generally at . The processor circuit includes a microprocessor a program memory a variable memory a media reader and an input output interface port I O all of which are in communication with the microprocessor .

Program codes for directing the microprocessor to carry out various functions are stored in the program memory which may be implemented as a random access memory RAM flash memory and or a hard disk drive HDD for example. The program memory includes a first block of program codes for directing the microprocessor to perform operating system functions which in one embodiment may be a version of the Microsoft Windows operating system. The program memory includes a second block of program codes for directing the microprocessor to perform CAD system functions for implementing the CAD system shown in . The program memory also includes a third block of program codes for directing the microprocessor to perform vehicle path generation functions and a fourth block of program codes for directing the microprocessor to provide an interface between the CAD functions and the vehicle path generation functions. As disclosed above in embodiments where the second block of program codes implement the AutoCAD system the interface may be provided by the ObjectARX AutoCAD Runtime Extension API.

The media reader facilitates loading program codes into the program memory from a computer readable medium such as a CD ROM disk or a computer readable signal such as may be received over a network such as the internet for example.

The I O includes a user interface including the input for receiving operator input from the keyboard and pointing device . The I O also includes an interface for communicating via a wireless or wired network such as an intranet or the internet. The I O further includes the outputs and for producing output data for driving the display and plotter .

The variable memory includes a plurality of storage locations including a memory store for storing a start location a memory store for storing an end location a memory store for storing a vehicle selection and a memory store for storing a vehicle speed v and minimum turn radius R. The variable memory also includes a memory store for storing a steering increment a memory store for storing a vehicle database and a memory store for storing a tolerance value. The variable memory may be implemented as a Random Access Memory flash memory or a hard drive for example.

Referring to a flowchart depicting blocks of code for directing the processor circuit to generate a representation of a vehicle path is shown generally at . The blocks generally represent codes that may be read from the computer readable medium and stored in the program memory for directing the microprocessor to perform various functions for generating the vehicle path. The actual code to implement each block may be written in any suitable program language such as C or other program language supported by the CAD system implemented by the second block of program codes .

The process begins at block which directs the microprocessor to receive start location information at an interface of the computer such as the interface or interface . Referring to an example of a vehicle path representation is shown generally at . The start location is indicated by a start location line having interactive regions and that are configured to permit the operator input to locate and orientate the starting line with respect to an xy coordinate system . In this embodiment the location of the start location line within the xy coordinate system defines the start location and the orientation of the start location line defines an initial orientation at the start location. The start location line may thus be defined by coordinates of the interactive regions and . In other embodiments the start location may be indicated by a curved line or a point for example. Block also directs the microprocessor to store the start location information in variable memory at the memory store .

Block then directs the microprocessor to receive end location information at the interface or . The end location is indicated by an end location line having interactive regions and . In this embodiment the location of the end location line within the xy coordinate system defines a desired location and an orientation of the end location line defines an initial orientation of the vehicle at the start location. The end location line may thus be defined by coordinates of the interactive regions and and block also directs the microprocessor to store the start location information in variable memory at the memory store . In other embodiments the end location information may define only a location without a desired orientation in which case the end location line may be replaced by a point or a circle indication the desired end location.

The process then continues at block which directs the microprocessor to receive at the interface or a selection of a vehicle for which the vehicle path is to be generated. In the embodiment shown in the variable memory includes a vehicle database for storing sets of parameters that define a turning behavior for a plurality of different vehicles and the operator may select one of the vehicles for producing the representation of the vehicle path.

Referring to side view representations of standard vehicles used in traffic engineering are shown at and respectively. The vehicle is a BUS 40 standard bus the vehicle is a WB 50 semi trailer and the vehicle is a standard passenger car. The vehicles and are taken from the American Association of State Highway and Transportation Officials AASHTO library of standard vehicles.

Each of the vehicles and are defined by a plurality of vehicle parameters stored in the database shown in . Referring to a table listing exemplary parameters for the vehicles is shown generally at . The parameter listing includes a steering lock angle parameter representing an angle through which the steering of the vehicle is capable of turning from a straight ahead condition. The parameter listing includes a steering lock to lock time t representing a time for an average driver to steer from a left hand steering lock condition to a right hand steering lock condition or vice versa. The value of tmay be measured for each design vehicle under driving conditions or a default value such as 6 seconds may be assumed for the vehicle.

The parameter listing also includes dimensions for overall vehicle length front overhang body width and wheelbase . The front overhang dimension is taken from the center of the front wheel to the front extent of the vehicle and the wheelbase is the dimension between front and rear axles of the vehicle. For the WB 50 vehicle the wheelbase dimension is taken between the center of the front wheel and the center of a rear axle group which includes two spaced apart axles each having 4 wheels.

The parameter listing also includes parameters associated with a front axle group including the number of wheels per axle and a track dimension . In this embodiment the track dimension is the distance between outer edges of the tire tread measured across the axle.

The parameter listing also includes parameters associated with a rear axle group including the number of wheels per axle and a track dimension . The parameter listing further includes a number of parts parameter which when set to 1 indicates that the vehicle is an unarticulated vehicle and for values of 2 or higher indicates that the vehicle articulated. The vehicle is articulated and includes a tractor portion and a trailer portion connected to the tractor portion at a pivot location . The parameter listing also includes a pivot location dimension which is referenced to the center of the rear axle group of the tractor .

The parameter listing also includes trailer parameters such as a trailer length parameter and an articulating angle parameter . The articulating angle parameter represents is a maximum angle that may exist between a longitudinal centerline of a tractor portion and a longitudinal centerline of a trailer portion when turning the vehicle.

The database stores sets of parameters for a plurality of vehicles such as the vehicles to shown in and facilitates selection of such vehicles for producing the representation of the vehicle path. For example libraries of various standard design vehicles are implemented in the AutoTURN software product available from Transoft Solutions Inc. of British Columbia Canada. The libraries include commonly used design vehicles for different countries and also provide for custom definition of vehicles not available in the standard libraries.

Referring back to following selection of the vehicle from the database block directs the microprocessor to store an identification of the selected vehicle in the memory store and directs the microprocessor to read parameters for the selected vehicle from the vehicle database. In the embodiment shown in the selected vehicle is a passenger vehicle P and is shown at in . The track parameter read from the vehicle database for the passenger vehicle P is used to define a reference location on the vehicle which in this embodiment is a location disposed midway between the pair of steerable wheels and of the vehicle and the arrow indicates the forward movement direction of the vehicle. The vehicle also includes rear wheels and which in this embodiment are not steerable. The reference location is located at the interactive region of the start location line and the vehicle is aligned along the start location line. In other embodiments the reference location may be another location on the vehicle such as a location of one of the steerable wheels and .

Block then directs the microprocessor to receive constraint information at the interface or . The constraint information identifies at least one constraint to passage of the vehicle between the start location at start location line and the end location at the end location line . In one embodiment the constraint is provided by the turning behavior of the vehicle and block directs the microprocessor to determine whether the turning behavior of the vehicle acts as a constraint to generation of a vehicle path that would be able to reach the end location defined by the end location line . In other embodiments the constraint information may define a location and extent of an obstacle to movement of the vehicle between the start location and the end location as described later herein.

The process then continues at block which directs the microprocessor to generate at least one vehicle path for travel of the vehicle between the start location and the end location. Referring to the vehicle path is shown at and is based on the turning behavior of the vehicle and is generated such that the vehicle path remains within the turning constraints of the vehicle.

In one embodiment the end location defined by the end location line may be an intermediate end location and the process may be repeated using the end location line as a new start location at block . Blocks and of the process are repeated while blocks and would be redundant and may be omitted. In this case block would direct the microprocessor to receive a subsequent desired end location of the vehicle such as the end location line and block would generate a further path portion based on the turning behavior of the vehicle and generated such that the further path portion remains within the turning constraints of the vehicle.

The vehicle path is shown in greater detail in . Referring to the vehicle path extends between the interactive region of the start location line and interactive region of the end location line and in this embodiment the vehicle moved in a forward direction between the start and end locations. The vehicle path includes a plurality of path segments including a first straight line segment a transition segment an arc segment and a second straight line segment .

A process for implementing block of the process is shown in at . The process begins at block which directs the microprocessor to receive a vehicle speed v for the movement of the vehicle between the start and end location. In one embodiment the speed v is provided by operator input and block directs the microprocessor to store the speed in the memory store of variable memory . In other embodiments a default vehicle speed may be assumed for forward movements of the vehicle .

Block also directs the microprocessor to compute a minimum turn radius R. In this embodiment the minimum turn radius is computed in accordance with the formula 

The radius Ris computed and the value of Ris stored in the store . In other embodiments Rmay be calculated using a different formula or determined from other considerations.

Block then directs the microprocessor to compute a steering increment . In this embodiment the steering increment is computed in accordance with the following formulae 

In one embodiment the distance increment D is set to 4 inches. The steering increment thus represents a maximum rate at which a representative driver would be able to steer the vehicle based on the turning behavior of the vehicle and the vehicle speed. The value of the steering increment is then written to the store of the variable memory .

Referring to the vehicle may be represented by a bicycle model for computational convenience when generating the vehicle path . The bicycle model corresponds to the vehicle and includes a front wheel and a rear wheel which are separated by a distance corresponding to a wheelbase dimension of the vehicle . The front and rear wheels and are centered between the respective front and rear wheels of the vehicle i.e. the front and rear wheels are each located at half of the respective track dimensions and shown in . The front wheels of the vehicle are steerable and the corresponding front wheel of the bicycle model is also steerable while the rear wheel of the bicycle model is fixed. Various other configurations of bicycle model may be constructed to represent other vehicles from the database . For any arbitrary location of the bicycle model the vehicle parameters stored in the vehicle database may be used to determine corresponding locations of the wheels of the vehicle . For example the front left hand wheel of the vehicle is spaced apart from the front wheel of the bicycle model by half of the track width dimension .

The process then continues at block which directs the microprocessor to move the bicycle model forward by D and turn the front wheel by the steering increment . It should be noted that in the spacing D is exaggerated for sake of clarity. In practice as mentioned above D may be a small increment of about 4 inches thus producing a large plurality of locations along the vehicle path . Block then directs the microprocessor to compute a value of an instantaneous turn radius R where n 1 2 3 . . . . Computing the first radius Rinvolves determining an intersection between lines and which each extend perpendicularly outward from the respective front and rear wheels and of the bicycle model in accordance with the formula 

The process then continues at block which directs the microprocessor to construct an arc of radius Rcentered at the center of rotation and extending outwardly from the front wheel of the bicycle model . Block also directs the microprocessor to construct a tangent line that is parallel to the line and tangent to the arc .

Block then directs the microprocessor to determine whether the tangent line lies beyond the location line i.e. above the end location line in in which case the transition segment and arc segment are not yet complete and block directs the microprocessor to block where n is incremented. Block then directs the microprocessor back to block the remaining blocks of process are repeated. At the repeat of block the front wheel is turned through a further angle and a radius Ris computed using Eqn 4 with n 2. The radius Rdefines a new center of rotation for moving the bicycle model from the second location to a third location. Similarly at the third location a radius Ris computed using Eqn 4 with n 3 and the radius Rdefines a new center of rotation an arc and a tangent line . Blocks of the process continue until at block the tangent line lies on or below the end location line . For the third iteration in the arc has a tangent line that lies below the end location line than thus the transition segment and arc segment are completed and block directs the microprocessor to block .

Block directs the microprocessor to complete the transition segment of the vehicle path . Block also directs the microprocessor to define the arc segment of the vehicle path using the last arc of radius R i.e. the arc . Block then directs the microprocessor to construct the first and second straight line segments and . At this point in the process the arc would still lie below or on the end location line and block directs the microprocessor to move the transition segment and arc segment up to the end location line by the distance between the end location line and the tangent line . Block also directs the microprocessor to construct the first straight line segment between the interactive region of the start location line and the start of the transition segment . Finally block directs the microprocessor to construct the second straight line segment extending between the interactive region of the end location line and the arc segment .

The transition segment thus represents a portion of the vehicle path where the driver of the vehicle is steering the vehicle by successive steering increments corresponding to an increasingly smaller turning radius R. In this embodiment the transition segment thus has a generally spiral shape of reducing radius. The arc segment represents a portion of the path where the driver of the vehicle holds the steering angle constant throughout the segment.

If at block the radius Ris greater than the value of Rstored in the memory store the microprocessor is directed to block for further processing. In this case the turning behavior of the vehicle acts as a constraint to generation of the vehicle path that would prevent the vehicle from reaching the end location line . In one embodiment block directs the microprocessor to cause a warning to be issued and to discontinue generation of the vehicle path .

In another embodiment the end location line has an associated tolerance value T defining a permitted deviation of the vehicle path at the end location. The tolerance value may be set by receiving input from the operator or may be set as a global default and is stored in the store in the variable memory . In this embodiment block directs the microprocessor to read the tolerance value T from the store and to determine whether the vehicle is able to reach a location between the end location line and a line spaced away from the end location line by T as shown in . If the vehicle is able to reach a location within the tolerance value then block directs the microprocessor to continue the process of blocks .

While the path generation embodiment shown in has been described in relation to the start location line and end location line being oriented substantially at right angles the same process can also be used to generate a vehicle path for start and end location lines that are oriented at angles other than a right angle. Further in other embodiments the transition segment may be generated using a radius that reduces non linearly for example the radius may reduce in a parabolic progression . In still other embodiments a different plurality of segments may be used to make up the vehicle path . For example the arc segment may be followed by a further transition segment leading to the second straight line segment .

Referring to in another embodiment a start location line and the end location line are oriented such that the vehicle will need to follow an s shaped vehicle path between the start location and end location. The combination of segments making up the vehicle path shown in would not provide for passage of the vehicle between the start location line and end location line oriented as shown in . Accordingly in this embodiment the s shaped vehicle path includes a plurality of path segments including a first transition segment a first straight line segment a second transition segment an arc segment and a third straight line segment .

The first transition segment extends outwardly from an interactive region of the start location line and is generated following blocks to of the process where the front wheel is advanced by successive increments D while steering the front wheel by successive steering increments . At each successive iteration of the blocks microprocessor is directed to attempt to complete the vehicle path by constructing segments and as described above in connection with . The segments and follow the same sequence of straight line transition arc and straight line segments as the segments and in and the process may be implemented as described above for the attempt to complete the vehicle path . If at block the radius Ris greater than Rthen it is not yet possible to complete the vehicle path and the first transition segment is extended further.

In some embodiments the start and end locations may be disposed such that either the combination of segments of the vehicle path shown in or the combination of segments shown in would both provide viable paths between the start and end locations. In such embodiments the vehicle path may be preferentially selected over the vehicle path shown in .

Referring to in another embodiment a start location line provides a start location for a vehicle path that passes through a plurality of intermediate locations. In the embodiment shown the intermediate locations are indicated by a first circle a second circle and a third circle and it is desired that the vehicle path pass through the center of each of these circles. The embodiment shown also includes an end location . The intermediate locations and may be received as operator input for example by receiving input from the pointing device . The vehicle path includes a plurality of segments including a first straight line segment a first transition segment a first arc segment a second transition segment a second arc segment a third transition segment a third arc segment a fourth transition segment a fourth arc segment and a second straight line segment .

The first straight line segment first transition segment and first arc segment are generated using blocks of the process shown in where the first transition segment and first arc segment are generated to pass through the center of the first circle . Accordingly the vehicle or a bicycle model representing the vehicle are successively moved through distance increments D while steering the front wheel by steering increments until the first arc segment passes through the center of the first circle .

Bocks to may then be repeated for the second transition segment and second arc segment for passing through the second circle . Similarly the process may be again repeated for the third transition segment and third arc segment for passing through the third circle . Finally the process may be again repeated for the fourth transition segment and the fourth arc segment and the second straight line segment may be constructed between the fourth arc segment as described above in connection with .

For more complex vehicles such as the articulated vehicle shown in the vehicle paths may be generated in a similar manner by using the appropriate parameters from the vehicle parameter listing shown in .

The above examples of vehicle paths in in and the vehicle path in are generated for forward movement of the vehicle . In another embodiment vehicle paths for reverse movements of the vehicle a between start location line and an end location line may be generated. In the embodiment shown a reverse vehicle path is generated for a reference location disposed midway between the pair of rear wheels and of the vehicle and the arrow shows the forward direction of the vehicle.

The path includes a first straight line segment an arc segment and a second straight line segment . While reversing the speed of the vehicle will generally be at very low speed and in this embodiment spiral or other transition sections are not implemented since it is assumed that if necessary the driver may turn the front steerable wheels of the vehicle while the vehicle is either stationery or at very low speed. The arc may thus be generated by successively increasing the steering angle until an arc segment radius R results in a tangent line as described above in connection with that is below the end location line . Similarly the straight line segments and may be generated in a similar manner to that disclosed in connection with .

In other embodiments an s turn vehicle path for a reversing vehicle may be generated by generating a first arc segment followed by a second arc segment and then constructing straight line segments at either end of the path.

For reversing movements of more complex vehicles such as the articulated vehicle shown in movements of the tractor portion and the trailer portion generate a more complex vehicle path. An example of such a path is shown in at . The path is for an s turn path of a 2 part vehicle which includes a first transition segment second transition segment straight line segment third transition segment arc segment fourth transition segment a second straight line segment . The reverse movement for a 2 part vehicles may be limited to a vehicle speed of 6 mph 10 km h or less. At locations along the path such as between and or the wheels are turned at stop and the vehicle may be assumed to be starting the next segment of the path from a complete stop.

Combined forward and reverse movements may be generated based on a sequence in which intermediate locations between a start location and end location are input by the operator.

For each of the vehicle path generation embodiments described herein the vehicle parameters in the parameter listing in may be used to generate vehicle extents associated with passage of the vehicle along the vehicle paths. Referring to for the vehicle path shown in the vehicle extents may be defined by the wheels of the vehicle extent lines and may be generated by offsetting locations of the wheels from to determine a swept path of the vehicle while the vehicle is steered along the vehicle path . In a similar manner vehicle extent lines may be generated for any of the disclosed embodiments herein.

In another embodiment the constraint to passage of the vehicle between the start location and the end location may be provided by lateral boundaries for movement of the vehicle between the start location and the end location. For example the lateral boundaries may be provided by a traffic intersection such as the roundabout intersection representation shown in at . The representation of the roundabout includes a central island surrounded by a circulatory lane . In other embodiments an initial shape of the central island may be elliptical oval or an irregular shape. The circulatory lane extends between the central island and an outer perimeter . The roundabout also includes a plurality of approach roadways and which in this embodiment each include an entry lane and an exit lane. For example the approach roadway includes an entry lane and an exit lane and the approach roadway includes an entry lane and exit lane . In this embodiment the outer perimeter is used to define portions of a plurality of splitter islands and that bound the circulatory lane and also to divide the respective approach roadways into entry and exit lanes. In this embodiment the roundabout also includes a truck apron extending outwardly from the central island into the circulatory lane . Larger vehicles moving through the roundabout are permitted to encroach on the truck apron while smaller vehicles are discouraged from driving on the apron by a painted lane marking raised portion or by paving the truck apron using a different paving material for example.

In the embodiment shown in a representation of an articulated vehicle is shown at a start location adjacent a lane marking between the entry lane and exit lane . Referring to a flowchart depicting blocks of code for directing the processor circuit to generate a representation of a vehicle path for moving the articulated vehicle from the start location to an end location is shown generally at . In the embodiment shown the end location is adjacent to a lane marking between the entry lane and exit lane of the approach roadway .

The process begins at block which directs the microprocessor to receive start location information defining the start location at the interface or of the computer. Block then directs the microprocessor to receive lateral boundaries for movement of the vehicle. Referring back to in the embodiment shown the lateral boundaries are provided by the central island outer perimeter truck apron and the approach roadways and of the roundabout representation . The lateral boundaries may be defined by lines and or curves in a Cartesian coordinate system represented by the axes . In one embodiment the lateral boundaries are defined by continuous Bezier curves.

The process then continues at block which directs the microprocessor to receive a selection of a vehicle for which the vehicle path is to be generated. In this embodiment the vehicle selection may be the WB 50 vehicle defined in the vehicle database parameter listing shown in . The vehicle parameters facilitate a determination of the steering behavior of the articulated vehicle .

Block then directs the microprocessor to generate a negotiable passage between the lateral boundaries the negotiable passage being represented by the shaded region in . The negotiable passage is based on the steering behavior of the vehicle and represents a region between the lateral boundaries within which the vehicle would be able to steer to negotiate the roundabout without encroaching on the lateral boundaries. At least a portion of the negotiable passage has sufficient lateral extent to permit the vehicle to follow a plurality of different vehicle paths when moving along the portion of the negotiable passage. The negotiable passage would thus have sufficient extent to accommodate the articulated vehicle and in some places would allow a driver of the vehicle to select between a number of different steering paths. The process then continues at block which directs the microprocessor to select between the different vehicle paths within the negotiable passage to generate the vehicle path. The vehicle path is selected to reduce steering movements by the driver of the vehicle for movement along the negotiable passage . Details of a process for implementing block are described later herein.

Referring to a flowchart depicting blocks of code for directing the processor circuit to implement blocks and of the process in accordance with one embodiment is shown generally at . The process begins at block which directs the microprocessor to generate a plurality of gates that indicate lateral boundaries and or movement preferences. Referring to a plurality of gates are shown on the roundabout representation . The gate extends across the entry lane between the edge of the lane and the splitter island . The gate has a first gate portion shown as a solid line extending between the edge of the approach roadway and the truck apron and a second portion shown as a broken line extending from the truck apron to the central island . The portion represents extents of preferred lateral boundaries while the portion represents an encroachable lateral boundary portion. The gates are similarly defined. The gates and do not include an encroachable portion since there are obstructions to either side of the gates that cannot be encroached on. For example in the case of gate the obstacles are the edge of the plurality of approach roadways and splitter island . Each of the gates thus designate a drivable passage through the respective gates while areas outside of the gates represent obstructions to passage of vehicles. In the embodiment shown the gates are generally perpendicular to the direction of movement through the roundabout but in other embodiments the gates may be at a greater angle. The gates may be generated from the geometry of the roundabout or may be defined by operator input.

The process then continues at block which directs the microprocessor to generate initial lateral boundaries for movement of the vehicle. The left hand initial lateral boundary is defined by a continuous Bezier curve extending along the lane marking edge of the splitter island the left hand edge of the gate the truck apron and left hand edge of the solid portion of gates and the left edge of the gate the splitter island and the lane marking . The right hand lateral boundary is defined by another continuous Bezier curve extending along the edge of the entry lane of the approach roadway the right hand edge of the gate the right hand edge of gate the outer perimeter and right hand edges of gates and the right hand edge of gate and the edge of the exit lane of the approach roadway . The initial lateral boundaries are represented by the shaded area in .

Block then directs the microprocessor to generate vehicle extents for passage of the vehicle along the left hand initial lateral boundary and the right hand initial lateral boundary while taking account of the steering behaviour of the vehicle. When the vehicle is steered along a radius by turning the front wheels the path followed by the rear axel and wheels is displaced with respect to the radius by an off tracking distance Owhich is given by the following relation square root over Eqn 5 where ris the turning radius of the first part of the articulated vehicle at the current position wis the wheelbase of vehicle part k and dis the distance between a rear connection position and rear pivot of the vehicle part k. The vehicle is steered along the initial left hand lateral boundary by distance increments D and at each position the initial left hand lateral boundary is spaced inwardly toward the right hand lateral boundary by the off tracking distance Ocalculated using Eqn 5. The resulting boundary is represented by the broken line at . The vehicle is then steered along the initial right hand lateral boundary by distance increments D and at each position the initial right hand lateral boundary is spaced inwardly toward the left hand lateral boundary by the off tracking distance O. The resulting right hand boundary is represented by the broken line at . The vehicle would thus have to steer within the broken lines and to avoid encroaching outside the lateral boundaries .

Block then directs the microprocessor to determine whether the initial lateral boundaries provide sufficient clearance to permit passage of the vehicle . In the embodiment shown in the vehicle would encroach on the lateral boundaries since the width W between the broken lines and is less than the track width dimension T of the vehicle . If at block the vehicle would encroach on the lateral boundaries the microprocessor is directed to block .

Block then directs the microprocessor to extend the lateral boundaries. In the embodiment shown in the gates define an encroachable portion of the passage for example the second portion and the vehicle is therefore permitted to encroach on the truck apron . Block directs the microprocessor to encroach on the truck apron by a proportion of the difference between the track width dimension T and the width W. In one embodiment the boundaries are extended by an amount given by the following relation 

Referring to the extended lateral boundary is shown as the shaded area and has an additional portion extending onto the truck apron . The broken line has also moved inwardly within the lateral boundaries such that the width W is equal to or greater than the track width T. Under these conditions the vehicle is able to pass through the roundabout within the lateral boundaries . The area between the broken lines and is the negotiable passage shown as the shaded region .

Still referring to at last some portions of the negotiable passage have sufficient width to permit the vehicle to steer along a plurality of different paths while remaining within the lateral boundaries . A process for selecting between the plurality of different paths is shown in . Referring to a flowchart depicting blocks of code for directing the processor circuit to implement block of the process in accordance with one embodiment is shown generally at . The process begins at block which directs the microprocessor to locate the vehicle at the start location. Referring to a portion of the roundabout is shown in enlarged view in at and the vehicle is shown at the start location .

Block of the process then directs the microprocessor to construct a line segment from the vehicle to intersect the left hand boundary of the negotiable passage . Block also directs the microprocessor to construct a line segment from the vehicle to intersect the right hand boundary of the negotiable passage .

Block then directs the microprocessor to extend each of the line segments by the distance increment D. The extended line segments are shown at and in . The process then continues at block which directs the microprocessor to determine whether the new intersection points with the respective left and right boundaries of the negotiable passage are behind the respective previous intersection points. In the case of the line segments and the intersection points are not behind the previous intersection points i.e. a driver would be able to see both intersection points and block directs the microprocessor back to block . At block the line segments are again extended by a distance increment D along the boundaries and blocks and are repeated until each line segment and has an intersection point behind a previous intersection point. Referring to a line segment meets this criterion for the right hand boundary since the intersection point is obscured by the previous intersection point . Similarly a line segment meets this criterion for the left hand boundary since the intersection point is obscured by the previous intersection point .

The process then continues at block which directs the microprocessor to select the intersection point that is closest to the vehicle . In the intersection point is closer to the vehicle than the intersection point and the point is thus selected as a steering target point for the vehicle.

Block then directs the microprocessor to compute the steering rate SR using Eqn 2 the steering increment using Eqn 3 and the instantaneous turn radius Rusing Eqn 4 as generally described earlier herein. The steering rate and steering increment are thus dependent on the vehicle speed and will constrain the steering rate of the vehicle . Block then directs the microprocessor to turn the front wheel of the vehicle by and to move the vehicle forward about the instantaneous turn radius Rby the distance increment D toward the intersection point .

Block then directs the microprocessor to save the path traveled by the vehicle while advancing by D as the first portion of the vehicle path for steering along the negotiable passage . Block then directs the microprocessor back to block and blocks are repeated for the new vehicle location.

Implementation of the process thus results in a vehicle path being constricted on a portion by portion basis through the negotiable passage . Referring again to the selected vehicle path of the vehicle through the negotiable passage is represented by the line . The vehicle path represents a smooth vehicle path along the negotiable passage that avoids obstacles such as edges of the roadways and splitter islands while reducing steering required by the driver of the vehicle and reducing the overall distance traveled around the roundabout .

In some embodiments where the edges of the intersection or roadway have large variations for example a winding road the process may result in a vehicle path that is not smooth and may cause the vehicle to swing from left to right. This potential problem may be avoided by ignoring intersection points that meet the criterion in block but are closer than a pre determined distance to the vehicle . However in some cases ignoring a point that is within the pre determined distance to the vehicle may cause the vehicle to steer outside of the negotiable passage . An additional criterion would thus be required at block to determine whether ignoring the point within the pre determined distance would have this effect in which case the closer intersection point would remain the steering target point even though the point falls within the pre determined distance.

Referring back to in the embodiment shown the roundabout has no geometry defined beyond the end of the exit lane which would cause the process to fail at the approach to the end location . Accordingly when generating the vehicle path for the exit lane the process may be discontinued when the vehicle is within a pre determined distance of the end location . In one embodiment the pre determined distance may be a distance equal to twice the length of the tractor part of the articulated vehicle .

While specific embodiments of the invention have been described and illustrated such embodiments should be considered illustrative of the invention only and not as limiting the invention as construed in accordance with the accompanying claims.

