---

title: Pull down navigation mode
abstract: In examples of the disclosure, a user may both expand a menu and select a menu item by overscrolling the displayed contentâ€”that is, by attempting to scroll the displayed content past a boundary of the content (e.g., an edge of a document or image, among other possibilities). The menu may be expanded in response to detection of overscrolling, and the selection of the menu item may be based on a determined overscroll value.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09600172&OS=09600172&RS=09600172
owner: Apple Inc.
number: 09600172
owner_city: Cupertino
owner_country: US
publication_date: 20140103
---
In a user interface of an electronic device a menu may be displayed in a first portion of the user interface for navigating content displayed in a separate portion of the user interface. For example a menu may allow a user to select a chapter bookmark and or section of the content among other possibilities. For a drop down menu a user may cause the menu to expand by touching or clicking on the drop down menu and a menu item may be selected by touching or clicking on a particular menu item.

In examples of the disclosure a user may both expand a menu and select a menu item by overscrolling the displayed content that is by attempting to scroll the displayed content past a boundary of the content e.g. an edge of a document or image among other possibilities . The menu may be expanded in response to detection of overscrolling and the selection of the menu item may be based on a determined overscroll value.

For example the user may touch the content area with a finger and drag to overscroll the content area causing a menu to expand. Then the user can continue to drag to further overscroll thereby selecting different menu items depending on the total distance overscrolled. Once the desired menu item is selected the user may liftoff the finger touching the screen causing the menu to collapse and content associated with the selected menu item to be displayed.

In the following description of examples reference is made to the accompanying drawings which form a part hereof and in which it is shown by way of illustration specific examples that can be practiced. It is to be understood that other examples can be used and structural changes can be made without departing from the scope of the disclosed examples.

In a user interface of an electronic device a menu may be displayed in a first portion of the user interface for navigating content displayed in a separate portion of the user interface. For example a menu may allow a user to select a chapter bookmark and or section of the content among other possibilities and the selected chapter or the like may be displayed in the content area of the user interface. For a drop down menu a user may cause the menu to expand by touching or clicking on the drop down menu and a menu item may be selected by touching or clicking on a particular menu item.

In examples of the disclosure a user may both expand a menu and select a menu item by overscrolling the displayed content that is by attempting to scroll the displayed content past a boundary of the content e.g. an edge of a document or image among other possibilities . The menu may be expanded in response to detection of overscrolling and the selection of the menu item may be based on a determined overscroll value.

For example the user may touch the content area with a finger and drag to overscroll the content area causing a menu to expand. Then the user can continue to drag to further overscroll thereby selecting different menu items depending on the total distance overscrolled. Once the desired menu item is selected the user may liftoff the finger touching the screen causing the menu to collapse and content associated with the selected menu item to be displayed.

Although examples disclosed herein may be described and illustrated herein primarily in terms of a touch screen interface it should be understood that the examples are not so limited but are additionally applicable to user interfaces generally whether user input is accepted by touch screen touch pad mouse keyboard or other input device.

The content area may be scrollable wherein user input may be accepted on the content area to scroll the content area such that undisplayed portions of the content may be displayed. For example only a portion of an image may be displayed in the content area and user input may be accepted dragging the image to display other portions of the image. If content in the content area is dragged past a boundary of the content e.g. an edge of an image or document then an overscroll may be detected and the menu may be expanded in response.

After a menu item is selected and user input is received requesting display of content associated with the selected menu item the content may displayed and the menu may collapse as illustrated in . For example user input may be received including a liftoff of a contact from the touch surface thereby requesting display of content associated with the selected menu item.

Overscroll of the content area may be detected based on the user input . For example it may be determined that the user input scrolls past a boundary of the content. In response to the detection of overscroll the menu may be expanded . Expanding the menu may include displaying one or more additional items of the menu. In some examples the menu may be expanded based on a determination that an overscroll value exceeds a predetermined threshold.

The examples discussed above can be implemented in one or more Application Programming Interfaces APIs . An API is an interface implemented by a program code component or hardware component hereinafter API implementing component that allows a different program code component or hardware component hereinafter API calling component to access and use one or more functions methods procedures data structures classes and or other services provided by the API implementing component. An API can define one or more parameters that are passed between the API calling component and the API implementing component.

The above described features can be implemented as part of an application program interface API that can allow it to be incorporated into different applications e.g. spreadsheet apps utilizing touch input as an input mechanism. An API can allow a developer of an API calling component which may be a third party developer to leverage specified features such as those described above provided by an API implementing component. There may be one API calling component or there may be more than one such component. An API can be a source code interface that a computer system or program library provides in order to support requests for services from an application. An operating system OS can have multiple APIs to allow applications running on the OS to call one or more of those APIs and a service such as a program library can have multiple APIs to allow an application that uses the service to call one or more of those APIs. An API can be specified in terms of a programming language that can be interpreted or compiled when an application is built.

In some examples the API implementing component may provide more than one API each providing a different view of the functionality implemented by the API implementing component or with different aspects that access different aspects of the functionality implemented by the API implementing component. For example one API of an API implementing component can provide a first set of functions and can be exposed to third party developers and another API of the API implementing component can be hidden not exposed and provide a subset of the first set of functions and also provide another set of functions such as testing or debugging functions which are not in the first set of functions. In other examples the API implementing component may itself call one or more other components via an underlying API and thus be both an API calling component and an API implementing component.

An API defines the language and parameters that API calling components use when accessing and using specified features of the API implementing component. For example an API calling component accesses the specified features of the API implementing component through one or more API calls or invocations embodied for example by function or method calls exposed by the API and passes data and control information using parameters via the API calls or invocations. The API implementing component may return a value through the API in response to an API call from an API calling component. While the API defines the syntax and result of an API call e.g. how to invoke the API call and what the API call does the API may not reveal how the API call accomplishes the function specified by the API call. Various API calls are transferred via the one or more application programming interfaces between the calling API calling component and an API implementing component. Transferring the API calls may include issuing initiating invoking calling receiving returning or responding to the function calls or messages in other words transferring can describe actions by either of the API calling component or the API implementing component. The function calls or other invocations of the API may send or receive one or more parameters through a parameter list or other structure. A parameter can be a constant key data structure object object class variable data type pointer array list or a pointer to a function or method or another way to reference a data or other item to be passed via the API.

Furthermore data types or classes may be provided by the API and implemented by the API implementing component. Thus the API calling component may declare variables use pointers to use or instantiate constant values of such types or classes by using definitions provided in the API.

Generally an API can be used to access a service or data provided by the API implementing component or to initiate performance of an operation or computation provided by the API implementing component. By way of example the API implementing component and the API calling component may each be any one of an operating system a library a device driver an API an application program or other module it should be understood that the API implementing component and the API calling component may be the same or different type of module from each other . API implementing components may in some cases be embodied at least in part in firmware microcode or other hardware logic. In some examples an API may allow a client program to use the services provided by a Software Development Kit SDK library. In other examples an application or other client program may use an API provided by an Application Framework. In these examples the application or client program may incorporate calls to functions or methods provided by the SDK and provided by the API or use data types or objects defined in the SDK and provided by the API. An Application Framework may in these examples provide a main event loop for a program that responds to various events defined by the Framework. The API allows the application to specify the events and the responses to the events using the Application Framework. In some implementations an API call can report to an application the capabilities or state of a hardware device including those related to aspects such as input capabilities and state output capabilities and state processing capability power state storage capacity and state communications capability etc. and the API may be implemented in part by firmware microcode or other low level logic that executes in part on the hardware component.

The API calling component may be a local component i.e. on the same data processing system as the API implementing component or a remote component i.e. on a different data processing system from the API implementing component that communicates with the API implementing component through the API over a network. It should be understood that an API implementing component may also act as an API calling component i.e. it may make API calls to an API exposed by a different API implementing component and an API calling component may also act as an API implementing component by implementing an API that is exposed to a different API calling component.

The API may allow multiple API calling components written in different programming languages to communicate with the API implementing component thus the API may include features for translating calls and returns between the API implementing component and the API calling component however the API may be implemented in terms of a specific programming language. An API calling component can in one example call APIs from different providers such as a set of APIs from an OS provider and another set of APIs from a plug in provider and another set of APIs from another provider e.g. the provider of a software library or creator of the another set of APIs.

It will be appreciated that the API implementing component may include additional functions methods classes data structures and or other features that are not specified through the API and are not available to the API calling component . It should be understood that the API calling component may be on the same system as the API implementing component or may be located remotely and accesses the API implementing component using the API over a network. While illustrates a single API calling component interacting with the API it should be understood that other API calling components which may be written in different languages or the same language than the API calling component may use the API .

The API implementing component the API and the API calling component may be stored in a non transitory machine readable storage medium which includes any mechanism for storing information in a form readable by a machine e.g. a computer or other data processing system . For example a machine readable medium includes magnetic disks optical disks random access memory read only memory flash memory devices etc.

In the exemplary software stack shown in applications can make calls to Services A or B using several Service APIs and to Operating System OS using several OS APIs. Services A and B can make calls to OS using several OS APIs.

Note that the Service has two APIs one of which Service API receives calls from and returns values to Application and the other Service API receives calls from and returns values to Application . Service which can be for example a software library makes calls to and receives returned values from OS API and Service which can be for example a software library makes calls to and receives returned values from both OS API and OS API . Application makes calls to and receives returned values from OS API .

Touch I O device may include a touch sensing panel which is wholly or partially transparent semitransparent non transparent opaque or any combination thereof. Touch I O device may be embodied as a touch screen touch pad a touch screen functioning as a touch pad e.g. a touch screen replacing the touchpad of a laptop a touch screen or touchpad combined or incorporated with any other input device e.g. a touch screen or touchpad disposed on a keyboard or any multi dimensional object having a touch sensing surface for receiving touch input.

In one example touch I O device embodied as a touch screen may include a transparent and or semitransparent touch sensing panel partially or wholly positioned over at least a portion of a display. According to this example touch I O device functions to display graphical data transmitted from computing system and or another source and also functions to receive user input. In other examples touch I O device may be embodied as an integrated touch screen where touch sensing components devices are integral with display components devices. In still other examples a touch screen may be used as a supplemental or additional display screen for displaying supplemental or the same graphical data as a primary display and to receive touch input.

Touch I O device may be configured to detect the location of one or more touches or near touches on device based on capacitive resistive optical acoustic inductive mechanical chemical measurements or any phenomena that can be measured with respect to the occurrences of the one or more touches or near touches in proximity to device . Software hardware firmware or any combination thereof may be used to process the measurements of the detected touches to identify and track one or more gestures. A gesture may correspond to stationary or non stationary single or multiple touches or near touches on touch I O device . A gesture may be performed by moving one or more fingers or other objects in a particular manner on touch I O device such as tapping pressing rocking scrubbing twisting changing orientation pressing with varying pressure and the like at essentially the same time contiguously or consecutively. A gesture may be characterized by but is not limited to a pinching sliding swiping rotating flexing dragging or tapping motion between or with any other finger or fingers. A single gesture may be performed with one or more hands by one or more users or any combination thereof.

Computing system may drive a display with graphical data to display a graphical user interface GUI . The GUI may be configured to receive touch input via touch I O device . Embodied as a touch screen touch I O device may display the GUI. Alternatively the GUI may be displayed on a display separate from touch I O device . The GUI may include graphical elements displayed at particular locations within the interface. Graphical elements may include but are not limited to a variety of displayed virtual input devices including virtual scroll wheels a virtual keyboard virtual knobs virtual buttons any virtual UI and the like. A user may perform gestures at one or more particular locations on touch I O device which may be associated with the graphical elements of the GUI. In other examples the user may perform gestures at one or more locations that are independent of the locations of graphical elements of the GUI. Gestures performed on touch I O device may directly or indirectly manipulate control modify move actuate initiate or generally affect graphical elements such as cursors icons media files lists text all or portions of images or the like within the GUI. For instance in the case of a touch screen a user may directly interact with a graphical element by performing a gesture over the graphical element on the touch screen. Alternatively a touch pad generally provides indirect interaction. Gestures may also affect non displayed GUI elements e.g. causing user interfaces to appear or may affect other actions within computing system e.g. affect a state or mode of a GUI application or operating system . Gestures may or may not be performed on touch I O device in conjunction with a displayed cursor. For instance in the case in which gestures are performed on a touchpad a cursor or pointer may be displayed on a display screen or touch screen and the cursor may be controlled via touch input on the touchpad to interact with graphical objects on the display screen. In other examples in which gestures are performed directly on a touch screen a user may interact directly with objects on the touch screen with or without a cursor or pointer being displayed on the touch screen.

Feedback may be provided to the user via communication channel in response to or based on the touch or near touches on touch I O device . Feedback may be transmitted optically mechanically electrically olfactory acoustically or the like or any combination thereof and in a variable or non variable manner.

Attention is now directed towards examples of a system architecture that may be embodied within any portable or non portable device including but not limited to a communication device e.g. mobile phone smart phone a multi media device e.g. MP3 player TV radio a portable or handheld computer e.g. tablet netbook laptop a desktop computer an All In One desktop a peripheral device or any other system or device adaptable to the inclusion of system architecture including combinations of two or more of these types of devices. is a block diagram of one example of system that generally includes one or more computer readable mediums processing system I O subsystem radio frequency RF circuitry audio circuitry and sensors circuitry . These components may be coupled by one or more communication buses or signal lines .

It should be apparent that the architecture shown in is only one example architecture of system and that system could have more or fewer components than shown or a different configuration of components. The various components shown in can be implemented in hardware software firmware or any combination thereof including one or more signal processing and or application specific integrated circuits.

RF circuitry can be used to send and receive information over a wireless link or network to one or more other devices and includes well known circuitry for performing this function. RF circuitry and audio circuitry can be coupled to processing system via peripherals interface . Interface can include various known components for establishing and maintaining communication between peripherals and processing system . Audio circuitry can be coupled to audio speaker and microphone and can include known circuitry for processing voice signals received from interface to enable a user to communicate in real time with other users. In some examples audio circuitry can include a headphone jack not shown . Sensors circuitry can be coupled to various sensors including but not limited to one or more Light Emitting Diodes LEDs or other light emitters one or more photodiodes or other light sensors one or more photothermal sensors a magnetometer an accelerometer a gyroscope a barometer a compass a proximity sensor a camera an ambient light sensor a thermometer a GPS sensor and various system sensors which can sense remaining battery life power consumption processor speed CPU load and the like.

Peripherals interface can couple the input and output peripherals of the system to processor and computer readable medium . One or more processors communicate with one or more computer readable mediums via controller . Computer readable medium can be any device or medium that can store code and or data for use by one or more processors . In some examples medium can be a non transitory computer readable storage medium. Medium can include a memory hierarchy including but not limited to cache main memory and secondary memory. The memory hierarchy can be implemented using any combination of RAM e.g. SRAM DRAM DDRAM ROM FLASH magnetic and or optical storage devices such as disk drives magnetic tape CDs compact disks and DVDs digital video discs . Medium may also include a transmission medium for carrying information bearing signals indicative of computer instructions or data with or without a carrier wave upon which the signals are modulated . For example the transmission medium may include a communications network including but not limited to the Internet also referred to as the World Wide Web intranet s Local Area Networks LANs Wide Local Area Networks WLANs Storage Area Networks SANs Metropolitan Area Networks MAN and the like.

One or more processors can run various software components stored in medium to perform various functions for system . In some examples the software components can include operating system communication module or set of instructions touch processing module or set of instructions graphics module or set of instructions and one or more applications or set of instructions . Each of these modules and above noted applications can correspond to a set of instructions for performing one or more functions described above and the methods described in this application e.g. the computer implemented methods and other information processing methods described herein . These modules i.e. sets of instructions need not be implemented as separate software programs procedures or modules and thus various subsets of these modules may be combined or otherwise re arranged in various examples. In some examples medium may store a subset of the modules and data structures identified above. Furthermore medium may store additional modules and data structures not described above.

Operating system can include various procedures sets of instructions software components and or drivers for controlling and managing general system tasks e.g. memory management storage device control power management etc. and facilitates communication between various hardware and software components.

Communication module can facilitate communication with other devices over one or more external ports or via RF circuitry and can include various software components for handling data received from RF circuitry and or external port .

Graphics module can include various known software components for rendering animating and displaying graphical objects on a display surface. In examples in which touch I O device is a touch sensing display e.g. touch screen graphics module can include components for rendering displaying and animating objects on the touch sensing display.

One or more applications can include any applications installed on system including without limitation a browser address book contact list email instant messaging word processing keyboard emulation widgets JAVA enabled applications encryption digital rights management voice recognition voice replication location determination capability such as that provided by the global positioning system GPS a music player etc.

Touch processing module can include various software components for performing various tasks associated with touch I O device including but not limited to receiving and processing touch input received from I O device via touch I O device controller .

I O subsystem can be coupled to touch I O device and one or more other I O devices for controlling or performing various functions. Touch I O device can communicate with processing system via touch I O device controller which can include various components for processing user touch input e.g. scanning hardware . One or more other input controllers can receive send electrical signals from to other I O devices . Other I O devices may include physical buttons dials slider switches sticks keyboards touch pads additional display screens or any combination thereof.

If embodied as a touch screen touch I O device can display visual output to the user in a GUI. The visual output may include text graphics video and any combination thereof. Some or all of the visual output may correspond to user interface objects. Touch I O device can form a touch sensing surface that accepts touch input from the user. Touch I O device and touch screen controller along with any associated modules and or sets of instructions in medium can detect and track touches or near touches and any movement or release of the touch on touch I O device and can convert the detected touch input into interaction with graphical objects such as one or more user interface objects. In the case in which device is embodied as a touch screen the user can directly interact with graphical objects that are displayed on the touch screen. Alternatively in the case in which device is embodied as a touch device other than a touch screen e.g. a touch pad the user may indirectly interact with graphical objects that are displayed on a separate display screen embodied as I O device .

Touch I O device may be analogous to the multi touch sensing surface described in the following U.S. Pat. No. 6 323 846 Westerman et al. U.S. Pat. No. 6 570 557 Westerman et al. and or U.S. Pat. No. 6 677 932 Westerman and or U.S. Patent Publication 2002 0015024A1 each of which is hereby incorporated by reference.

In examples for which touch I O device is a touch screen the touch screen may use LCD liquid crystal display technology LPD light emitting polymer display technology OLED organic LED or OEL organic electro luminescence although other display technologies may be used in other examples.

Feedback may be provided by touch I O device based on the user s touch input as well as a state or states of what is being displayed and or of the computing system. Feedback may be transmitted optically e.g. light signal or displayed image mechanically e.g. haptic feedback touch feedback force feedback or the like electrically e.g. electrical stimulation olfactory acoustically e.g. beep or the like or the like or any combination thereof and in a variable or non variable manner.

System can also include power system for powering the various hardware components and may include a power management system one or more power sources a recharging system a power failure detection circuit a power converter or inverter a power status indicator and any other components typically associated with the generation management and distribution of power in portable devices.

In some examples peripherals interface one or more processors and memory controller may be implemented on a single chip such as processing system . In some other examples they may be implemented on separate chips.

Examples of the disclosure can be advantageous in allowing a user to expand a menu and select a menu item based on overscroll of a content area making for a more intuitive and easy to use user interface.

In some examples a computer implemented method is disclosed. The method may include displaying a user interface including an expandable menu and a scrollable content area receiving user input scrolling the scrollable content area detecting an overscroll of the content area based on the user input and in response to detection of the overscroll expanding the menu. Additionally or alternatively to one or more of the above examples the method may further include determining an overscroll value based on the user input and selecting an item of the menu based on the overscroll value. Additionally or alternatively to one or more of the above examples the method may further include receiving user input including liftoff of a contact on a touch surface in response to the liftoff displaying content associated with the selected item of the menu. Additionally or alternatively to one or more of the above examples the user interface may further include an item indicator and expanding the menu may include displaying an animation of the item indicator moving to the selected item of the menu. Additionally or alternatively to one or more of the above examples selecting the item based on the overscroll value may include comparing the overscroll value to a predetermined overscroll threshold associated with the item and determining the overscroll value exceeds the predetermined overscroll threshold. Additionally or alternatively to one or more of the above examples expanding the menu may include displaying a plurality of items of the menu. Additionally or alternatively to one or more of the above examples the menu may be a drop down menu and displaying the user interface including the menu may include displaying only a single item of the menu. Additionally or alternatively to one or more of the above examples receiving the user input scrolling the scrollable content area may include receiving touch input dragging the scrollable content area.

In some examples a non transitory computer readable medium is disclosed. The computer readable medium may contain instructions that when executed perform a method including displaying a user interface including an expandable menu and a scrollable content area receiving user input scrolling the scrollable content area detecting an overscroll of the content area based on the user input and in response to detection of the overscroll expanding the menu. Additionally or alternatively to one or more of the above examples the method may further include determining an overscroll value based on the user input and selecting an item of the menu based on the overscroll value. Additionally or alternatively to one or more of the above examples the method may further include receiving user input including liftoff of a contact on a touch surface in response to the liftoff displaying content associated with the selected item of the menu. Additionally or alternatively to one or more of the above examples the user interface may further include an item indicator and expanding the menu may include displaying an animation of the item indicator moving to the selected item of the menu. Additionally or alternatively to one or more of the above examples selecting the item based on the overscroll value may include comparing the overscroll value to a predetermined overscroll threshold associated with the item and determining the overscroll value exceeds the predetermined overscroll threshold. Additionally or alternatively to one or more of the above examples expanding the menu may include displaying a plurality of items of the menu. Additionally or alternatively to one or more of the above examples the menu may be a drop down menu and displaying the user interface including the menu may include displaying only a single item of the menu. Additionally or alternatively to one or more of the above examples receiving the user input scrolling the scrollable content area may include receiving touch input dragging the scrollable content area.

In some examples an electronic device is disclosed. The electronic device may include a processor to execute instructions and a memory coupled with the processor to store instructions which when executed by the processor cause the processor to perform operations to generate an application programming interface API that allows an API calling component to perform a method including displaying a user interface including an expandable menu and a scrollable content area receiving user input scrolling the scrollable content area detecting an overscroll of the content area based on the user input and in response to detection of the overscroll expanding the menu. Additionally or alternatively to one or more of the above examples the method may further include determining an overscroll value based on the user input and selecting an item of the menu based on the overscroll value. Additionally or alternatively to one or more of the above examples the method may further include receiving user input including liftoff of a contact on a touch surface in response to the liftoff displaying content associated with the selected item of the menu. Additionally or alternatively to one or more of the above examples the user interface may further include an item indicator and expanding the menu may include displaying an animation of the item indicator moving to the selected item of the menu. Additionally or alternatively to one or more of the above examples selecting the item based on the overscroll value may include comparing the overscroll value to a predetermined overscroll threshold associated with the item and determining the overscroll value exceeds the predetermined overscroll threshold. Additionally or alternatively to one or more of the above examples expanding the menu may include displaying a plurality of items of the menu. Additionally or alternatively to one or more of the above examples the menu may be a drop down menu and displaying the user interface including the menu may include displaying only a single item of the menu. Additionally or alternatively to one or more of the above examples receiving the user input scrolling the scrollable content area may include receiving touch input dragging the scrollable content area.

Although the disclosed examples have been fully described with reference to the accompanying drawings it is to be noted that various changes and modifications will become apparent to those skilled in the art. Such changes and modifications are to be understood as being included within the scope of the disclosed examples as defined by the appended claims.

