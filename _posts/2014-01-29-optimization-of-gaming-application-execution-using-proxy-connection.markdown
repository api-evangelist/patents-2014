---

title: Optimization of gaming application execution using proxy connection
abstract: Technology is disclosed herein for executing multiple gaming applications on a computing device. According to at least one embodiment, a computing device receives requests for network connections with remote servers from multiple gaming applications running on the computing device. The computing device further establishes a network connection with a proxy server. The proxy server initiates and maintains proxy network connections with the remote servers. The proxy server batches network messages received from the remote servers, where the network messages includes gaming content. The proxy server aggregates network messages received in a time period into a single batch, where a time length of the time period is determined based on one or more game events of the games being played on the computing device. Further, the proxy server batches network messages such that the computing device stays at a high power consumption state for a shorter time period than an overall time period required without batching.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08762491&OS=08762491&RS=08762491
owner: Nextbit Systems Inc.
number: 08762491
owner_city: San Francisco
owner_country: US
publication_date: 20140129
---
This application is a continuation in part of U.S. patent application Ser. No. 14 043 438 entitled DEVICE CONNECTION PROXY THROUGH CLOUD TO OPTIMIZE NETWORK MESSAGES filed on Oct. 1 2013 which claims the benefit of U.S. Provisional Patent Application No. 61 708 794 entitled CLOUD COMPUTING INTEGRATED OPERATING SYSTEM filed on Oct. 2 2012 which are incorporated by reference herein in their entirety.

At least one embodiment of the present invention pertains to mobile devices and more particularly to mobile devices using a cloud based connection proxy server to optimize network messages.

There are many applications running on computing devices e.g. mobile phones tablet computers laptop computers etc. that can receive push notifications and messages from remote servers. Instead of a pull messaging transaction that is initiated by a receiving application a remote server e.g. an information publisher initiates a push messaging transaction. Through a setting interface provided by an application or an operating system of a computing device a user can adjust the preference and the subscriptions regarding the push and pull messaging transactions.

For instance the Apple Push Notification Service is a push service. The Apple Push Notification Service forwards notifications from remote servers of applications to the Apple devices through a constantly open Internet Protocol IP connection. Such notifications can include badges sounds or test alerts. Developers of applications can take advantage of the push service by using application programming interface API calls provided by Apple Inc. The size of each notification message is usually restricted to a predetermined size e.g. 256 bytes. Cloud to Device Messaging C2DM is a push service that allows remote servers to send messages to mobile applications on computing devices. Remote servers can use this service to notify mobile applications to contact the server and fetch updated data.

These message push services can create serious drains on the batteries of the computing devices particularly for computing devices maintaining wireless network connections e.g. WiFi or cellular networks . Every time a new message notification is pushed to a computing device the computing device switches from a low power conservation state to a higher power consuming state for a period of time. Once entering the higher power consuming state the computing device has to remain in the state for at least a fixed time period before the device can return to a low power conservation state. When push notifications reach the computing device at different points in time the computing device needs to enter the higher power consuming state numerous times and overall for a long period of time to receive and process the push notifications resulting in draining the battery of the computing device.

Technology introduced here provides a mechanism to optimize executing multiple gaming applications on a computing device which require network connections using cloud proxy connections. According to at least one embodiment a computing device receives requests for network connections with remote servers from multiple gaming applications running on the computing device. The computing device further establishes a cloud network connection with a cloud proxy server. The cloud proxy server initiates and maintains proxy network connections with the remote servers.

The cloud proxy server batches network messages received from the remote servers where the network messages includes gaming content. The cloud proxy server aggregates the network messages received from the remote servers such that the cloud proxy server sends the network messages to the computing device continuously in a batch helping enable the computing device to conserve battery power. Further the cloud proxy server aggregates the network messages received in a time period into a single batch where a time length of the time period is determined based on one or more game events of the games being played on the computing device.

In accordance with the techniques introduced here therefore a proxy server for optimizing network connections is provided. The proxy server includes a processor a network component a device connection module a server connection module and a message aggregation module. The networking component is configured for network communications with computing devices and remote servers. The device connection module includes instructions which when executed by the processor establish a device network connection with a computing device. The server connection module includes instructions which when executed by the processor establish a server network connection with a remote server in response to a request of connecting the remote server from the computing device. The message aggregation module includes instructions which when executed by the processor aggregates network messages for the computing device received from multiple remote servers in a batch before sending the batch to the computing device.

Other aspects of the technology introduced here will be apparent from the accompanying figures and from the detailed description which follows.

References in this specification to an embodiment one embodiment or the like mean that the particular feature structure or characteristic being described is included in at least one embodiment of the present invention. Occurrences of such phrases in this specification do not all necessarily refer to the same embodiment however.

A cloud data interface can also be included to receive data from and send data to computing devices. The cloud data interface can include network communication hardware and network connection logic to receive the information from computing devices. The network can be a local area network LAN wide area network WAN or the Internet. The cloud data interface may include a queuing mechanism to organize data update received from or sent to the computing devices and .

The computing devices and can each communicate with remote servers via the cloud proxy service . When an application running on computing device or sends a message to a remote server the device or sends the message to the cloud proxy service instead. The cloud proxy service maintains the network connection with the remote server and relays the message to the remote server. When the remote server sends a message to the application the message reaches the cloud proxy service via the established network connection. The cloud proxy service determines the appropriate computing device to receive the message and relays the message to the computing device.

Although illustrates two computing devices and a person having ordinary skill in the art will readily understand that the technology disclosed herein can be applied to a single computing device or more than two computing devices connected to the cloud proxy service .

A computing device includes an operating system to manage the hardware resources of the computing device and provides services for running computer applications e.g. mobile applications running on mobile devices . The computer applications stored in the computing device require the operating system to properly run on the device . The computing device includes at least one local storage device to store the computer applications and user data. The computing device or can be a desktop computer a laptop computer a tablet computer an automobile computer a game console a smart phone a personal digital assistant or other computing devices capable of running computer applications as contemplated by a person having ordinary skill in the art.

The computer applications stored in the computing device can include applications for general productivity and information retrieval including email calendar contacts and stock market and weather information. The computer applications can also include applications in other categories such as mobile games factory automation GPS and location based services banking order tracking ticket purchases or any other categories as contemplated by a person having ordinary skill in the art.

The operating system of the computing device includes a socket redirection module to redirect network messages. The computer applications generate and maintain network connections directed to various remote servers e.g. remote servers and . Instead of directly opening and maintaining the network connections with these remote servers the socket redirection module routes all of the network messages for these connections of the computer applications to the cloud proxy service . The cloud proxy service is responsible for opening and maintaining network connections with the remote servers and .

All or some of the network connections of the computing device are proxied through the cloud proxy service . The network connections can include Transmission Control Protocol TCP connections User Datagram Protocol UDP connections or other types of network connections based on other protocols. When there are multiple computer applications that need network connections to multiple remote servers the computing device only needs to maintain one network connections with the cloud proxy service . The cloud proxy service will in turn maintain multiple connections with the remote servers on behalf of the computer applications .

The cloud proxy service can connect to the remote servers and via a network . The network can be for example the Internet a metropolitan area network MAN a wide area network WAN a LAN or any other type of network or combination of networks.

The cloud proxy server receives networking messages e.g. push or pull notifications from the remote servers. Instead of sending the messages to the applications running on the computing device the cloud proxy server can batch the incoming networking messages and optimize the wireless power consumption of the computing device by delaying networking messages and sending them to the computing devices in batches. This can lead to more efficient power usage of the computing device.

The computer applications running on the same computing device need not communicate with each other to coordinate their network connections with remote servers. The cloud proxy efficiently maintains the network connections with remote servers for the applications and controls the timing of sending messages back to the applications .

The networking component can be capable of switching between states including a high power consumption state and a low power conservation state. The network component can be e.g. a WiFi networking adapter a cellular phone networking adapter or a combination thereof. The battery is configured to provide power to the networking component and other components of the computing device . The computing device may further include a power adapter to be connected to a power source to provide power for the computing device in addition to the power provided the battery .

The processor is configured to run computer applications and the operating system of the computing device . The memory stores instructions of the operating system which when executed by the processor cause the operating system to perform processes for realizing certain functionalities of the computing device .

For instance the process of the operating system can receive from the computer applications requests for network connections with remote servers e.g. remote servers and in . The process of the operating system can further establish a cloud network connection via e.g. the network component with a cloud proxy server e.g. cloud proxy service in . The computer applications do not need to be aware of the cloud proxy server. The computer applications can perform and communicate with the remote servers as if the computer application were directly connected to the remote servers. The operating system running behind the computer applications is responsible to relay network messages to and from the cloud proxy server.

The cloud proxy server can be configured to maintain proxy network connections with the remote servers. The process of the operating system can further receive from the cloud proxy server via e.g. the network component network messages in a batch for the computer applications though the cloud network connection. The network messages are generated by the remote servers and can include e.g. push notifications. The cloud proxy server delays at least one network message of the network messages in order to aggregate the network messages in the batch.

In various embodiments the network messages can include other types of data. For instance the computer applications can include one or more instances of network browsers. The network browsers generate requests e.g. HTTP GET for Internet data from remote Hypertext Transfer Protocol HTTP servers. Instead of establishing TCP connections directly with the remote HTTP servers the computing device lets the cloud proxy server work as a proxy and establish TCP connections with the HTTP servers. The computing device receives network messages including the HTTP data from the cloud proxy server. The HTTP GET requests from different instances of browsers will be satisfied by batched HTTP data replayed and aggregated by the cloud proxy server. In this way the battery power and the network connections of computing device are optimized and utilized in a more efficient way.

The network component switches to the high power consumption state when the computing device receives the network messages from the cloud proxy server. The network messages can be aggregated in the batch such that the network component of the computing device remains at the high power consumption state to receive the network messages for as little time as possible. In this way the computing device can consume as little power as possible for receiving the network messages. As a result the battery life of the computing device is extended.

A socket redirection module runs on top of the kernel . The socket redirection module is responsible for directing the network communications also referred to as socket communications of the computer applications to the cloud proxy server. The socket redirection module is configured to redirect the requests from the computer applications for network connections with the remote server to the cloud proxy server. So instead of connecting directly with the remote servers as requested by the computer applications the computing device connects with the cloud proxy server using the socket redirection module . The socket redirection module is responsible for network communications with the cloud proxy server while the computer applications running on the computing device are not necessarily aware of the existence of the cloud proxy server.

In some embodiments the operating system can further include a message modification module configured to modify the network messages received from the cloud proxy server before the network messages are fed to the computer applications. The message modification module modifies the received network messages to network messages as if they were directly sent from the remote servers. For instance the message modification module may change source socket addresses of the received network messages from a socket address of the cloud proxy server to socket addresses of the remote servers. Then the modified network messages are fed to the corresponding computer applications e.g. depending on port numbers . Since the computer applications receive the modified network messages with target socket addresses pointing to the remote servers the computer applications can process and treat these modified network messages as if they are directly sent from the remote servers without any intermediate proxies.

In some alternative embodiments the operating system may provide a socket handle controlled by the socket redirection module . The socket handle may be a modified version of a normal handle. When applications running on top of the operating system call the socket handle the socket redirection module is controlling the socket handle to redirect network connection transactions to the cloud proxy server. The computer application or the developer of the computer application does not need to be aware of the socket redirection module . When the computer application calls the socket handle to open a connection with the remote servers the socket redirection module of the operating system takes over and instead redirects the network connection to the cloud proxy server.

The developers of the computer applications do not need to design the computer application with two network modes e.g. WiFi mode and cellular data mode in mind. The computing device is connected to the cloud proxy server. The cloud proxy server is handling the network communication between the computing device and the outside remote servers. The computer applications can be designed to perform as if the computing device is connected to a WiFi network all the time. The operating system of the computing device and the cloud proxy server is handling and optimizing the network communications without the intervention of the computer applications.

The device connection module includes instructions which when executed by the processor establishes a device network connection with a computing device. The server connection module includes instructions which when executed by the processor establishes a server network connection with a remote server in response to a request to connect the remote server from the computing device. The request can be generated by a computer application running at the computing device. The server connection module can maintain multiple server network connections with multiple remote servers as a proxy of one or more computer applications of the computing devices.

The message aggregation module includes instructions which when executed by the processor aggregates network messages for the computing device received from multiple remote servers in a batch before sending the batch to the computing device. During the aggregating process the message aggregation module can identify network messages for one computing device among received network messages for different computing devices connected to the proxy server . The message aggregation module can further delay at least one of the network messages for the computing device such that the network messages for the computing device can be sent in a batch.

The message aggregation module can aggregate network message received in a time period into a single batch. The time length of the time period can be determined by factors including a battery life of the computing device a current battery level of the computing device a usage pattern of the computing device a workload of the computing device or a frequency of receiving network messages for the computing device. For instance the time length for batching can be increased when the current battery level of the computing device is low or the current workload of the computing device is high. The time length for batching can be decreased if the frequency of receiving network messages for the computing device is higher than certain value. If the computing device is not used frequently according to the usage pattern the time length for batching may be increased.

The message aggregation module can also aggregate network messages generated by the computer applications for the remote servers. The message aggregation module can receive the message from the computing device and delay some of the messages so that the messages can be sent out to the remote servers in one or more batches.

The technology disclosed herein can be applied to various computing devices including e.g. game systems or devices capable of running game applications. For instance illustrates an example of game systems connected to a cloud based proxy server. As depicted in a proxy server may provide a cloud based game messaging service to multiple game systems and over a network . The network can be e.g. the Internet. Examples of game devices and may include but are not limited to a mobile phone a smartphone a personal digital assistant PDA a tablet a mobile game console a laptop computer a desktop computer or any other devices having communication capability.

In some embodiments proxy server relays all network communications of game systems to remote game servers e.g. servers and . The proxy server serves as a proxy for all messages from and to the game systems and .

For instance when an application running on a game system requests to establish a network connection with remote game server the operating system of the game system forwards the request to the proxy server instead of the remote game server . The proxy server then establishes a network connection with the remote game server . The remote game server may send some game messages or game data for the game system to the proxy server . The proxy server in turn relays the game messages or data to the game system in batches.

In some embodiments proxy server may determine the time interval for sending the messages in batches to the game systems. The determination can be made based on e.g. the work load of the game systems the battery levels of the game systems or the game event about to happen in the game systems. For instance the proxy server may identify that in game system a predetermined game event of entering a new stage is about to happen. Examples of the predetermined game event may include but are not limited to starting a game by a player of the game entering a new stage in the game by the player entering a new place in the game by the player completing a mission in the game by the player obtaining a game item by the player meeting another character in the game by the player talking with another character in the game by the player occurrence of a scene change in the game any other pre defined game related events or milestones or even suspension of the game at a point intended to avoid disrupting the high quality experience for the user. The proxy server can send the messages from the remote game server in a batch to the proxy system when it determines that the game event is going to happen soon.

Although illustrates all devices as game systems a person having ordinary skill in the art can readily understand that other types of devices can be included. For example game systems and can be replaced with e.g. tablets smart phones or laptop computers.

Similarly the technology disclosed herein can also be applied to devices for social network messaging. For instance illustrates an example of social media devices connected to a proxy server. As depicted in a proxy server may provide a proxy service to multiple computing devices and over a network . Examples of devices and may include but are not limited to a mobile phone a smartphone a personal digital assistant PDA a tablet a mobile game console a laptop computer a desktop computer or any other devices having communication capability.

In some embodiments proxy server relays all social media communications of devices to remote servers e.g. servers and . The proxy server serves as a proxy for all social media messages from and to the devices and .

For instance when a social media application running on a device requests to establish a network connection with remote social media server the operating system of the system forwards the request to the proxy server instead of the remote game server . The proxy server then establishes a network connection with the remote social media server . The remote social media server may send some social messages for the device to the proxy server . The proxy server in turn relays the social messages to the device in batches.

In some embodiments proxy server may determine the time interval for sending the messages in batches to the devices . The determination can be made based on e.g. the work load of the devices the battery levels of the game systems.

At step the computing device establishes a cloud network connection with a cloud proxy server. The cloud network connection is used to receive messages for the multiple computer applications from the remote servers relayed by the cloud proxy server. The cloud proxy server is separate from the remote servers. The cloud proxy server can serve as a proxy between the computer applications running on the computing device and remote servers. At step the cloud proxy server initiates and maintains proxy network connections with the remote servers. In various embodiments the cloud network connection can be e.g. a Transmission Control Protocol TCP socket connection between the computing device and the cloud proxy server. The proxy network connections can be e.g. Transmission Control Protocol TCP socket connections between the cloud proxy server and the remote servers.

At step the cloud proxy server receives network messages that are generated by the remote servers. These network messages are for the computer applications at the computing device.

At step the cloud proxy server delays at least one network message of the network messages such that the cloud proxy server can send the network messages to the computing device in a batch. At step the cloud proxy server sends the batched network messages to the computing device in a batch. The cloud proxy server batches the network messages to reduce power consumption of the computing device.

At step the computing device receives network messages in a batch for the computer applications through the cloud network connection with the cloud proxy server. By receiving the network messages in a batch the computing device can stay at a high power consumption state for a time period shorter than an overall time period for which the computing device would stay at the high power consumption if the network messages were sent individually without batching. Since the operating system of the computing device is responsible for communicating with the cloud proxy server and relays the messages to the computer applications the computer applications receive the network messages from the cloud proxy server as if the network messages are received directly from the remote servers.

Those skilled in the art will appreciate that the logic illustrated in and described above and in each of the flow diagrams discussed below if any may be altered in a variety of ways. For example the order of the logic may be rearranged substeps may be performed in parallel illustrated logic may be omitted other logic may be included etc.

The processor s is are the central processing unit CPU of the computer and thus control the overall operation of the computer . In certain embodiments the processor s accomplish this by executing software or firmware stored in memory . The processor s may be or may include one or more programmable general purpose or special purpose microprocessors digital signal processors DSPs programmable controllers application specific integrated circuits ASICs programmable logic devices PLDs trusted platform modules TPMs or the like or a combination of such devices.

The memory is or includes the main memory of the computer . The memory represents any form of random access memory RAM read only memory ROM flash memory or the like or a combination of such devices. In use the memory may contain a code containing instructions according to the technology disclosed herein.

Also connected to the processor s through the interconnect are a network adapter and a storage adapter . The network adapter provides the computer with the ability to communicate with remote devices over a network and may be for example an Ethernet adapter or Fibre Channel adapter. The network adapter may also provide the computer with the ability to communicate with other computers. The storage adapter allows the computer to access a persistent storage and may be for example a Fibre Channel adapter or SCSI adapter.

The code stored in memory may be implemented as software and or firmware to program the processor s to carry out actions described above. In certain embodiments such software or firmware may be initially provided to the computer by downloading it from a remote system through the computer e.g. via network adapter .

The techniques introduced herein can be implemented by for example programmable circuitry e.g. one or more microprocessors programmed with software and or firmware or entirely in special purpose hardwired circuitry or in a combination of such forms. Special purpose hardwired circuitry may be in the form of for example one or more application specific integrated circuits ASICs programmable logic devices PLDs field programmable gate arrays FPGAs etc.

Software or firmware for use in implementing the techniques introduced here may be stored on a machine readable storage medium and may be executed by one or more general purpose or special purpose programmable microprocessors. A machine readable storage medium as the term is used herein includes any mechanism that can store information in a form accessible by a machine a machine may be for example a computer network device cellular phone personal digital assistant PDA manufacturing tool any device with one or more processors etc. . For example a machine accessible storage medium includes recordable non recordable media e.g. read only memory ROM random access memory RAM magnetic disk storage media optical storage media flash memory devices etc. etc.

The term logic as used herein can include for example programmable circuitry programmed with specific software and or firmware special purpose hardwired circuitry or a combination thereof.

In addition to the above mentioned examples various other modifications and alterations of the invention may be made without departing from the invention. Accordingly the above disclosure is not to be considered as limiting and the appended claims are to be interpreted as encompassing the true spirit and the entire scope of the invention.

