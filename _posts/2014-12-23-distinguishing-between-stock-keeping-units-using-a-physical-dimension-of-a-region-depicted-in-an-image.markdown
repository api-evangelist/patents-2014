---

title: Distinguishing between stock keeping units using a physical dimension of a region depicted in an image
abstract: The disclosure includes a system and method for distinguishing between stock keeping units of similar appearance that vary in size. An image recognition application receives an image including a shelving unit stocking a plurality of items, identifies each item in the image, generates a region of interest for each identified item in the image, identifies a physical dimension of a portion of region depicted in the image, determines a dimension of the region of interest for each identified item and the portion of region in pixels, determines a pixel-to-physical dimension ratio using the dimension in pixels of the portion of region and the physical dimension of the portion of region depicted in the image, and determines a stock keeping unit identifier of each identified item in the image based on the pixel-to-physical dimension ratio and the dimension of the region of interest for each identified item.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09330474&OS=09330474&RS=09330474
owner: RICOH CO., LTD.
number: 09330474
owner_city: Tokyo
owner_country: JP
publication_date: 20141223
---
The specification generally relates to identifying and distinguishing between products in an image that vary in size but have a similar product packaging. In particular the specification relates to a system and method for determining a size of each identified product in the image based on a physical dimension identified for a portion of region depicted in the image.

A planogram is a visual representation of products in a retail environment. For example a planogram may describe where in the retail environment and in what quantity products should be located. Such planograms are known to be effective tools for increasing sales managing inventory and otherwise ensuring that the desired quantity and sizes of an item are placed to optimize profits or other parameters. However presentation and maintenance of adequate levels of stock on shelves racks and displays stands is a labor intensive effort thereby making enforcement of planograms difficult. While the location and quantity of products in retail stores can be manually tracked by a user attempts are being made to automatically recognize the products.

Previous attempts at recognizing products have deficiencies. For example existing image recognition techniques fail to distinguish between objects that are similar in appearance but vary in size.

The techniques introduced herein overcome the deficiencies and limitations of the prior art at least in part with a system and method for distinguishing between stock keeping units of similar appearance that vary in size. In one embodiment the system includes an image recognition application. The image recognition application is configured to receive an image of a plurality of items and to identify each item in the image. The image recognition application is further configured to generate a region of interest for each identified item in the image and to identify a physical dimension of a portion of a region depicted in the image. The image recognition application is further configured to determine a pixel dimension of the region of interest for each identified item and the portion of the region depicted in the image. Using the pixels dimension of the portion of the region and the physical dimension of the portion of the region depicted in the image the image recognition application is further configured to determine a pixel to physical dimension ratio for the image. The image recognition application is further configured to determine a stock keeping unit identifier of each identified item in the image based on the pixel to physical dimension ratio and the pixel dimension of the region of interest for each identified item. The image of the plurality of items for example can include items of different sizes in similar packaging stocked on a shelf of a retail store.

Other aspects include corresponding methods systems apparatuses and computer program products for these and other innovative aspects.

The features and advantages described herein are not all inclusive and many additional features and advantages will be apparent to one of ordinary skill in the art in view of the figures and description. Moreover it should be noted that the language used in the specification has been principally selected for readability and instructional purposes and not to limit the scope of the techniques described.

The network can be a conventional type wired or wireless and may have numerous different configurations including a star configuration token ring configuration or other configurations. Furthermore the network may include a local area network LAN a wide area network WAN e.g. the Internet and or other interconnected data paths across which multiple devices may communicate. In some embodiments the network may be a peer to peer network. The network may also be coupled to or include portions of a telecommunications network for sending data in a variety of different communication protocols. In some embodiments the network may include Bluetooth communication networks or a cellular communications network for sending and receiving data including via short messaging service SMS multimedia messaging service MMS hypertext transfer protocol HTTP direct data connection WAP email etc. Although illustrates one network coupled to the client devices and the recognition server in practice one or more networks can be connected to these entities.

In some embodiments the system includes a recognition server coupled with the network . In some embodiments the recognition server may be either a hardware server a software server or a combination of software and hardware. The recognition server may be or may be implemented by a computing device including a processor a memory applications a database and network communication capabilities. In the example of the components of the recognition server are configured to implement an image recognition application described in more detail below. In one embodiment the recognition server provides services to consumer packaged goods firm for identifying products on shelves racks or displays. While the examples herein describe recognition of products in an image of shelves such as a retail display it should be understood that the image may include any arrangement of organized objects. For example the image may be of a warehouse stockroom store room cabinet etc. Similarly the objects in addition to retail products may be tools parts used in manufacturing construction or maintenance medicines first aid supplies emergency or safety equipment etc.

In some embodiments the recognition server sends and receives data to and from other entities of the system via the network . For example the recognition server sends and receives data including images of products to and from the client device . The images of products received by the recognition server can include an image captured by the client device an image copied from a website or an email or an image from any other source. Although only a single recognition server is shown in it should be understood that there may be any number of recognition servers or a server cluster. The recognition server also includes a data storage which is described below in more detail with reference to .

The client device may be a computing device that includes a memory a processor and a camera for example a laptop computer a desktop computer a tablet computer a mobile telephone a smartphone a personal digital assistant PDA a mobile email device a webcam a user wearable computing device or any other electronic device capable of accessing a network . The client device provides general graphics and multimedia processing for any type of application. The client device includes a display for viewing information provided by the recognition server . In some embodiments the client device may include built in sensors that measure motion orientation temperature humidity distance etc. The client device may also interface with an external sensor such as an ultrasound sensor etc. While illustrates two client devices and the disclosure applies to a system architecture having one or more client devices .

In some embodiments the client device determines location information using global positioning system GPS circuitry included within the device itself to determine its location. In some embodiments the client device accesses a database including pairs of media access control MAC addresses and locations over the internet. The client device retrieves the location corresponding to the access point MAC address from the database to determine the location of the client device . For determining the client device s location indoors the client device employs radio frequency ultra sound signal or invisible light communication Bluetooth and magnetic field variations. For example the client device determines its location on a floor in a building through wireless access points based on measuring the intensity of received signals. In some embodiments the integration of a GPS enabled client device with location sensing through wireless access points is determined to resolve location sensing to a few feet etc. In another embodiment similar position transmitting devices will resolve location sensing to closer than a few feet. In some embodiments the client device detects distance of an object in front of an ultrasound sensor coupled to the client device . For example the ultrasound sensor can be connected to a power port of the smartphone. In another example the ultrasound sensor can be coupled wirelessly through Bluetooth to the smartphone. The client device detects the distance of the object in front by triggering the ultrasound sensor to send out a burst of ultrasound pulse and listen for the echo when it bounces off the object. The client device determines the distance based on the time it took for the echo to return to the ultrasound sensor.

The client device is adapted to send and receive data to and from the recognition server . For example the client device sends a query image to the recognition server and the recognition server provides data in JSON JavaScript Object Notation format about one or more objects recognized in the query image to the client device .

The image recognition application may include software and or logic to provide the functionality for receiving query images and identifying multiple stock keeping units SKUs varying in size in the query images. In some embodiments the image recognition application can be implemented using programmable or specialized hardware such as a field programmable gate array FPGA or an application specific integrated circuit ASIC . In some embodiments the image recognition application can be implemented using a combination of hardware and software. In other embodiments the image recognition application may be stored and executed on a combination of the client devices and the recognition server or by any one of the client devices or recognition server .

In some embodiments the image recognition application acts as a thin client application with some functionality executed on the client device and additional functionality executed on the recognition server by recognition application . For example the image recognition application on the client device could include software and or logic for capturing the image transmitting the image to the recognition server and displaying image recognition results. A thin client application may include additional functionality described herein with reference to recognition application such as processing the image and performing feature identification.

In some embodiments the image recognition application receives an image depicting a plurality of items. For example the image may be of a shelving unit holding breakfast cereal boxes in a retail supermarket. The image recognition application identifies each product in the image and generates a region of interest for each identified product. The image recognition application determines a pixel dimension of the region of interest for each identified product in the image. For example in various embodiments the pixel dimension of the region of interest me be a height a width an area a diagonal length etc. in pixels. The image recognition application identifies a physical dimension of a portion of region depicted in the image. The image recognition application determines a pixel dimension of the portion of region depicted in the image. The image recognition application determines a pixel to physical dimension ratio using the pixel dimension of the portion of the region and the physical dimension of the portion of the region depicted in the image. The image recognition application determines a size of each identified item in the image based on the pixel to physical dimension ratio and the dimension of the region of interest for each identified product. The operation of the image recognition application and the functions listed above are described below in more detail below with reference to .

The processor may execute software instructions by performing various input output logical and or mathematical operations. The processor may have various computing architectures to process data signals including for example a complex instruction set computer CISC architecture a reduced instruction set computer RISC architecture and or an architecture implementing a combination of instruction sets. The processor may be physical and or virtual and may include a single processing unit or a plurality of processing units and or cores. In some implementations the processor may be capable of generating and providing electronic display signals to a display device supporting the display of images capturing and transmitting images performing complex tasks including various types of feature extraction and sampling etc. In some implementations the processor may be coupled to the memory via the bus to access data and instructions therefrom and store data therein. The bus may couple the processor to the other components of the computing device including for example the memory the communication unit the image recognition application and the data storage . It will be apparent to one skilled in the art that other processors operating systems sensors displays and physical configurations are possible.

The memory may store and provide access to data for the other components of the computing device . The memory may be included in a single computing device or a plurality of computing devices as discussed elsewhere herein. In some implementations the memory may store instructions and or data that may be executed by the processor . The instructions and or data may include code for performing the techniques described herein. For example in one embodiment the memory may store the image recognition application . The memory is also capable of storing other instructions and data including for example an operating system hardware drivers other software applications databases etc. The memory may be coupled to the bus for communication with the processor and the other components of the computing device .

The memory may include one or more non transitory computer usable e.g. readable writeable device a static random access memory SRAM device an embedded memory device a discrete memory device e.g. a PROM FPROM ROM a hard disk drive an optical disk drive CD DVD Blu ray etc. mediums which can be any tangible apparatus or device that can contain store communicate or transport instructions data computer programs software code routines etc. for processing by or in connection with the processor . In some implementations the memory may include one or more of volatile memory and non volatile memory. For example the memory may include but is not limited to one or more of a dynamic random access memory DRAM device a static random access memory SRAM device an embedded memory device a discrete memory device e.g. a PROM FPROM ROM a hard disk drive an optical disk drive CD DVD Blu ray etc. . It should be understood that the memory may be a single device or may include multiple types of devices and configurations.

The communication unit is hardware for receiving and transmitting data by linking the processor to the network and other processing systems. The communication unit receives data such as requests from the client device and transmits the requests to the controller for example a request to process an image including a plurality of products. The communication unit also transmits information including recognition results to the client device for display for example in response to a query image. The communication unit is coupled to the bus . In one embodiment the communication unit may include a port for direct physical connection to the client device or to another communication channel. For example the communication unit may include an RJ45 port or similar port for wired communication with the client device . In another embodiment the communication unit may include a wireless transceiver not shown for exchanging data with the client device or any other communication channel using one or more wireless communication methods such as IEEE 802.11 IEEE 802.16 Bluetooth or another suitable wireless communication method.

In yet another embodiment the communication unit may include a cellular communications transceiver for sending and receiving data over a cellular communications network such as via short messaging service SMS multimedia messaging service MMS hypertext transfer protocol HTTP direct data connection WAP e mail or another suitable type of electronic communication. In still another embodiment the communication unit may include a wired port and a wireless transceiver. The communication unit also provides other conventional connections to the network for distribution of files and or media objects using standard network protocols such as TCP IP HTTP HTTPS and SMTP as will be understood to those skilled in the art.

The data storage is a non transitory memory that stores data for providing the functionality described herein. The data storage may be a dynamic random access memory DRAM device a static random access memory SRAM device flash memory or some other memory devices. In some embodiments the data storage also may include a non volatile memory or similar permanent storage device and media including a hard disk drive a floppy disk drive a CD ROM device a DVD ROM device a DVD RAM device a DVD RW device a flash memory device or some other mass storage device for storing information on a more permanent basis.

In the illustrated embodiment the data storage is communicatively coupled to the bus . The data storage stores data for analyzing a received image and results of the analysis and other functionality as described herein. For example the data storage may store the stock keeping unit SKU table that maps a plurality of product attributes to each product identifier. The data storage may similarly store a product feature table that associates features of a product to a product identifier to support feature based query results retrieval. In some embodiments the data storage stores a floor map of a retail store identifying a location of each aisle and corresponding physical dimensions of a shelving unit in the aisle. In some embodiments data storage may store captured regions and or associated dimension information each region captured by a user either using an interactive rectangle of the user device or other means of calculation as described in more detail below. Additionally the data storage may store identified products in the received image the corresponding regions of interest and the pixel dimensions of the regions of interest. The data storage may also store the pixel to physical dimension ratio as described herein. The data stored in the data storage is described below in more detail.

In some embodiments the image recognition application may include a controller an indexer an image processor a pixel to physical dimension ratio engine a size engine and a user interface engine . The components of the image recognition application are communicatively coupled via the bus .

The controller may include software and or logic to control the operation of the other components of the image recognition application . The controller controls the other components of the image recognition application to perform the methods described below with reference to . The controller may also include software and or logic to provide the functionality for handling communications between the image recognition application and other components of the computing device as well as between the components of the image recognition application . In some embodiments the controller can be implemented using programmable or specialized hardware including a field programmable gate array FPGA or an application specific integrated circuit ASIC . In some embodiments the controller can be implemented using a combination of hardware and software executable by processor . In some embodiments the controller is a set of instructions executable by the processor . In some implementations the controller is stored in the memory and is accessible and executable by the processor . In some implementations the controller is adapted for cooperation and communication with the processor the memory and other components of the image recognition application via the bus .

In some embodiments the controller sends and receives data via the communication unit to and from one or more of a client device and a recognition server . For example the controller receives via the communication unit an image from a client device operated by a user and sends the image to the image processor . In another example the controller receives data for providing a graphical user interface to a user from the user interface engine and sends the data to a client device causing the client device to present the user interface to the user.

In some embodiments the controller receives data from other components of the image recognition application and stores the data in the data storage . For example the controller receives data including a pixel to physical dimension ratio from the pixel to physical dimension ratio engine and stores the data in the data storage . In other embodiments the controller retrieves data from the data storage and sends the data to other components of the image recognition application . For example the controller retrieves data including the stock keeping unit SKU table data from the data storage and sends the retrieved data to the size engine .

The indexer may include software and or logic to provide the functionality for storing images of products in a database table for image recognition. In some embodiments the indexer can be implemented using programmable or specialized hardware including a field programmable gate array FPGA or an application specific integrated circuit ASIC . In some embodiments the indexer can be implemented using a combination of hardware and software executable by processor . In some embodiments the indexer is a set of instructions executable by the processor . In some implementations the indexer is stored in the memory and is accessible and executable by the processor . In some implementations the indexer is adapted for cooperation and communication with the processor the memory and other components of the image recognition application via the bus .

In some embodiments the indexer may receive an image of a packaged product as a base image. For example an image of a packaged product may include a cylindrical soda bottle a rectangular breakfast cereal box a rectangular tea box a circular tray of sandwich cookies etc. In some embodiments the packaged product may have a plurality of base images associated with it. For example the indexer may receive images of the top bottom front back and sides of the packaged product as base images of the packaged product for storing in the data storage . The indexer extracts a set of features and stores the set of features identified for the base image for image recognition in the data storage . The set of features stored for image recognition can be robust to variations in scale rotation ambient lighting image acquisition parameters etc. In some embodiments the indexer maps the base image to a set of values such as product name product identifier company planogram delivery schedule employee who stocks the product on store shelves number of units on stock etc. The mapping may be stored on the data storage in an acceptable file format for example an Extensible Markup Language XML file format. In some embodiments the indexer includes the set of features identified for each product and a relative location to a point in the base image e.g. the location of one identified feature where each feature occurs. In some embodiments the indexer organizes the indices to store the mappings in the data storage to support a feature based query search and result retrieval. The results of the feature based query may be presented in a suitable file format for example in a JavaScript Object Notation JSON file format.

In some embodiments the indexer receives a product description including physical dimensions for a stock keeping unit from a consumer packaged goods CPG company. A stock keeping unit SKU is a distinct item such as a product offered for sale. The stock keeping unit can be identified by attributes that makes the item distinguishable from other items. For example the attributes include manufacturer size color packaging a product description material etc. The stock keeping unit may also refer to a unique identifier that refers to the particular product or service in inventory. In some embodiments the stock keeping units may vary in size while having a packaged cover that is visually similar in appearance. For example breakfast cereal boxes of a particular brand ABC can be sold in more than one package size in supermarkets to suit different consumer needs. However while being visually similar in appearance each package size is a distinct stock keeping unit. The product description may be in a computer readable form for example in a JSON JavaScript Object Notation format for indexing.

Using the product descriptions or other information input by a user the indexer generates a stock keeping unit SKU table for a plurality of the stock keeping units having a package cover that is visually similar in appearance but varying in size. The SKU table maps an identity of a particular product to a plurality of product attributes. Product attributes may include for example product name stock keeping unit identifier width height depth area diagonal length product size manufacturer brand model number price product item image or the like. The indexer stores the SKU table in the data storage . For example as shown in the example of a SKU table may include entries for ABC breakfast cereal boxes such as a first entry for a one kilogram size of ABC breakfast cereal box correspondingly mapped to a height of 225 mm a width of 180 mm a SKU identifier X123 etc. a second entry for a 500 gram size of ABC breakfast cereal box correspondingly mapped to a height of 150 mm a width of 120 mm a SKU identifier Y123 etc. and a third entry for a 250 gram size of ABC breakfast cereal box correspondingly mapped to a height of 100 mm a width of 80 mm a SKU identifier Z123 etc. The SKU table shown in may include separate entries for other products such as tea packets cookies sodas etc. For example the SKU table may include entries for XYZ tea packets such as a fourth entry for a 900 gram size of XYZ tea packet correspondingly mapped to a height of 127 mm a width of 76 mm a SKU identifier A456 etc. In other embodiments the indexer stores the dimensions of the products in the SKU table using other systems of measurements such as inches feet centimeters meters etc. and the size of the products in other systems for measurements such as liters gallons ounces pounds kilograms fluid ounces etc.

In some embodiments the indexer may receive an annotation from a user e.g. sales executive auditor etc. on an indoor floor map of the retail store identifying a location of an aisle and corresponding physical dimensions of a shelving unit in the aisle. The floor map can be displayed on the client device for receiving the annotation from the user. In some embodiments the indexer maps the shelving unit at the aisle location to the corresponding physical dimensions of the shelving unit. For example the indexer receives a selection of an aisle 2 in a floor map of the retail supermarket. The aisle 2 can be stocking bathroom supplies. The indexer receives a height of the shelving unit in aisle 2 as three feet and maps it to the shelving unit located in aisle 2 . In another example the indexer receives a selection of an aisle 3 in the floor map of the retail supermarket. The aisle 3 can be stocking soda bottles. The indexer receives a first height for the top shelf in the shelving unit of aisle 3 as three feet and a second height for the bottom shelf in the shelving unit of aisle 3 as two feet. The indexer maps both heights to the shelving unit located in aisle 3 . In some embodiments the indexer stores the data including the floor map in the data storage .

The image processor may include software and or logic to provide the functionality for receiving and processing images of stock keeping units on a shelf in retail stores. In some embodiments the image processor can be implemented using hardware including a field programmable gate array FPGA or an application specific integrated circuit ASIC . In some embodiments the image processor can be implemented using a combination of hardware and software executable by processor . In some embodiments the image processor is a set of instructions executable by the processor . In some implementations the image processor is stored in the memory and is accessible and executable by the processor . In some implementations the image processor is adapted for cooperation and communication with the processor the memory and other components of the image recognition application via the bus .

In some embodiments the image processor receives an image as a query from a user. The image processor may process individual images serially or in parallel. In some embodiments the image processor may stitch multiple images received from the user into a single query image for processing. The query image may be received for recognition and may include multiple items of interest on a shelving unit in a retail store. For example the query image can be an image of packaged products such as rectangular breakfast cereal boxes circular soda bottles etc. captured by the client device at a distance from the shelving unit. The packaged product may include textual and pictorial information printed on its surface that distinguishes it from other items on the shelf. The packaged product may also sit in an arbitrary orientation on the shelf at any given time. For example a box like packaged product such as a breakfast cereal box might be positioned with the front the back the top the bottom or the sides of the breakfast cereal box exposed to the user looking at the shelf. In another example a cylindrically packaged product such as a chocolate chip cookies package might be positioned rotated on its horizontal axis with the textual and pictorial information printed on its surface partially exposed to the user looking at the shelf. In some embodiments the image processor determines whether the received image is optimal for recognition and instructs the user interface engine to generate graphical data for instructing the user to retake the image of the shelf if a section of the image taken has limited information for complete recognition e.g. packaged products on top shelf is cut off the image is too blurry the image has an illumination artifact e.g. excessive reflection etc.

In some embodiments the image processor extracts features from the received image of products on the shelving unit and matches the extracted features to those features stored in the database for recognition. The image processor identifies the products in the received image matching the stored features. The image processor returns the matched items and an associated region of interest ROI bordering each of the matched items in the received image. A region of interest can be of any shape for example a circle with a center point and a diameter a rectangular shape of a width a height and one or more reference points for the region e.g. a center point one or more corner points for the region etc. In some embodiments the image processor identifies each region of interest associated with the items of interest in the image in a numbered sequence. For example as shown in the example of which is described in more detail below the image processor identifies 11 ABC breakfast cereal boxes in a received image of the shelving unit and returns 11 rectangular polygon ROIs one for each of the ABC breakfast cereal boxes. The 11 ABC breakfast cereal boxes in the image may have the same product packaging while varying in content size. The 11 ABC rectangular polygon ROIs may be numbered in a sequence. In another example the image processor identifies five soda bottles in a received image. The five soda bottles may vary in volume size. The image processor returns five polygon ROIs bordering the exposed labeling containing pictorial and textual information on each one of the soda bottles. In some embodiments the image processor stores all the identified items in the received image and their corresponding regions of interest in the data storage . To distinguish between products in the image that vary only in size the image processor determines pixel dimensions of each identified item in the received image. In some embodiments the image processor determines the pixel dimensions of the region of interest associated with the identified product in the received image. For example as shown in the example of the image processor determines the height in pixels of stock keeping units such as breakfast cereal boxes in different sizes identified in the received image of . In other examples the image processor may determine a width in pixels an area in pixels a diagonal length in pixels etc. of the region of interest. In some embodiments the image processor sends the pixel dimensions of the regions of interest of each identified product in the received image to the size engine .

In some embodiments the image processor instructs the user interface engine to generate graphical user interface that depicts an interactive graphical geometric shape superimposed on the received image. For example the image processor instructs the user interface engine to generate an interactive rectangle to be superimposed on a region depicted in the image on the display of the client device . Other examples of interactive graphical geometric shape may include a polygon a circle an ellipse etc. The interactive graphical geometric shape superimposed on the received image may be flexible in terms of sizing and placement and the image processor receives input from the user to align the interactive graphical geometric shape to superimpose on a desired region depicted in the received image for which the physical dimensions may be known. For example the image processor receives user input to increase and or decrease the length and or breadth of the interactive rectangle to align and superimpose on a product packaging such as a tea pack depicted in the received image. In another example the image processor receives user input to align and superimpose the interactive rectangle on a shelf depicted in the received image. In yet another example the image processor receives user input to align the interactive rectangle to superimpose the shelving unit depicted in the image. In some embodiments the image processor receives a physical dimension of the desired region depicted in the received image and superimposed by the interactive graphical geometric shape as an input from the user. The physical heights of the tea pack the shelf and the shelving unit in the above examples may be known to the user and received as input. For example the image processor receives a height of six feet for the shelving unit superimposed by the interactive rectangle as user input. In another example the image processor receives a height of two feet for a shelf in the shelving unit that is superimposed by the interactive rectangle as user input e.g. as depicted in the example of with reference to interactive rectangle . In some embodiments the image processor determines pixel dimension of the interactive graphical geometric shape superimposed on a region as depicted in the image. For example the image processor determines the height in pixels of the interactive rectangle superimposed on the shelf in the shelving unit. In some embodiments the image processor sends data including the pixel dimension of the interactive graphical geometric shape superimposed on a region depicted in the received image to the pixel to physical dimension ratio engine for determining a pixel to physical dimension ratio which is explained in more detail below.

In some embodiments the image processor retrieves the physical dimension of the desired region depicted in the received image and superimposed by the interactive graphical geometric shape based on a detected location of the client device when the image of the shelving unit is received. In some embodiments the image processor retrieves a floor map of the retail store and detects a current location of the client device on the floor map when the image processor receives the image of the shelving unit. The image processor identifies the aisle in the retail store corresponding to the current location of the client device on the floor map and retrieves physical dimensions of the shelving unit mapped to the aisle on the floor map. For example the image processor identifies the location of the client device to be on aisle 2 and determines the height of the interactive rectangle superimposing a shelf in the received image to be three feet. In some embodiments the image processor sends the physical dimensions of the desired region as depicted and superimposed by the interactive graphical geometric shape in the received image to the pixel to physical dimension ratio engine for determining the pixel to physical dimension ratio.

In some embodiments the image processor determines the physical dimensions of the captured region as depicted in the received image. The image processor identifies an aperture angle for the client device that captures the image of products on the shelving unit e.g. as depicted in the example of . The aperture angle of the client device is the apparent angle of the lens aperture as seen from the focal point. For example the image processor identifies the aperture angle from camera specifications stored in the data storage . In some embodiments the image processor identifies a distance of the client device that captures the image from the shelving unit where the products are stocked. The image processor determines the physical dimensions of the captured region depicted in the received image of products on the shelving unit based on the distance of the client device from the shelving unit and the aperture angle of the client device . The formula to determine the physical height of captured region can be formally stated as 

In some embodiments the image processor identifies the distance d of the client device from the shelving unit for determining the height h of the region depicted in the image captured by the client device . This may be a preprocessing step before an image of the shelving unit stocking products is received by the image processor for image recognition as described previously. In some embodiments the image processor instructs the user interface engine to generate graphical data for instructing the user to capture an image of the base of the shelving unit to determine the distance of the client device from the shelving unit. The base of the shelving unit and the feet of the user who is capturing the image may be level with each other. The image processor receives the image of the base of the shelving unit and determines an angle of tilt of the client device in order to position the base of the shelving unit at the center and middle of the image. The image processor approximates a height of the client device off the ground as a height of the user using the client device and the image processor receives the height of the user as a user input. In some embodiments the image processor instructs the indexer to store the height of the user who is auditing the retail store in the data storage . The image processor determines the distance of the shelving unit from the client device by multiplying the height of the client device off the ground with a tangent of the angle of tilt of the client device .

In some embodiments the image processor determines an item of interest on the shelving unit that is in focus in the image captured by the client device . The image processor determines a distance of the client device from the shelving unit based on the distance of the item of interest that is in focus in the image from the client device . For example the image processor determines the distance of a breakfast cereal box on the shelf from the client device . The image processor may communicate with the built in functions of the client device and can access raw distance data measured by the client device while focusing on an item of interest. For example the image processor can make an application programming interface API call to retrieve the estimated distance between the camera in a smartphone and the item of interest in focus. In some embodiments the image processor determines a distance of the item of interest on the shelving unit from the client device by triggering a burst of ultrasound pulse from an ultrasound sensor and listening for the echo when it bounces off the item of interest. For example the image processor triggers the ultrasound pulse from the ultrasound sensor coupled to the smartphone via Bluetooth and determines the time taken by the pulse to travel to hit the breakfast cereal box on the shelf and bounce back to the ultrasound sensor. The image processor determines the distance between the shelving unit and the client device based on the time taken and the speed of sound.

The pixel to physical dimension ratio engine may include software and or logic to provide the functionality for determining a relationship between the pixel dimension of a depicted portion of region in the received image and its actual physical dimensions. In some embodiments the pixel to physical dimension ratio engine can be implemented using hardware including a field programmable gate array FPGA or an application specific integrated circuit ASIC . In some embodiments the pixel to physical dimension ratio engine can be implemented using a combination of hardware and software executable by processor . In some embodiments the pixel to physical dimension ratio engine is a set of instructions executable by the processor . In some implementations the pixel to physical dimension ratio engine is stored in the memory and is accessible and executable by the processor . In some implementations the pixel to physical dimension ratio engine is adapted for cooperation and communication with the processor the memory and other components of the image recognition application via the bus .

In some embodiments the pixel to physical dimension ratio engine receives the pixel dimension of the interactive graphical geometric shape superimposed over a region depicted in the received image from the image processor . For example as shown in the example of the pixel to physical dimension ratio engine receives a height in pixels for the interactive rectangle superimposed on a shelf in the shelving unit in the received image to be 1079. In some embodiments the pixel to physical dimension ratio engine receives the physical dimensions of the desired region as depicted and superimposed by the interactive graphical geometric shape in the received image. For example as shown in the example of the pixel to physical dimension ratio receives the physical height of the shelf to be 609.6 mm or two feet. The pixel to physical dimension ratio engine determines a pixel to physical dimension ratio PPR by dividing the dimension in pixels of the interactive graphical geometric shape by the physical dimension of the region as depicted and superimposed by the interactive graphical geometric shape in the received image. For example if the height in pixels for the interactive rectangle superimposed on a shelf in the shelving unit is 1079 and its actual height is 609.6 mm the pixel to physical dimension ratio engine determines the pixel to physical dimension ratio using these two parameters to be 1.77.

In another example the pixel to physical dimension ratio engine may determine a pixel to physical dimension ratio using a dimension e.g. height width etc. in pixels of the interactive graphical geometric shape and a corresponding physical dimension of the region superimposed by the interactive graphical geometric shape. In some embodiments the pixel to physical dimension ratio that is determined using the width in pixels may be different from the pixel to physical dimension ratio that is determined using the height in pixels due to pixel aspect ratio PAR . The pixel aspect ratio is a mathematical ratio describing how the width of a pixel in an image compares to the height of the pixel. The pixel aspect ratio remains constant for varying sizes of a packaged product in an image in a single image.

In some embodiments the pixel to physical dimension ratio engine stores the pixel to physical dimension ratio in the data storage . In some embodiments the pixel to physical dimension ratio engine sends the pixel to physical dimension ratio to the size engine .

The size engine may include software and or logic to provide the functionality for determining a size of each identified product in the received image. In some embodiments the size engine can be implemented using hardware including a field programmable gate array FPGA or an application specific integrated circuit ASIC . In some embodiments the size engine can be implemented using a combination of hardware and software executable by processor . In some embodiments the size engine is a set of instructions executable by the processor . In some implementations the size engine is stored in the memory and is accessible and executable by the processor . In some implementations the size engine is adapted for cooperation and communication with the processor the memory and other components of the image recognition application via the bus .

In some embodiments the size engine receives the pixel to physical dimension ratio from the pixel to physical dimension ratio engine and the pixel dimension of the region of interest of each identified product in the received image from the image processor . The size engine determines the size of each identified product in the received image based on the pixel to physical dimension ratio and the pixel dimension for each identified product in the received image. In some embodiments the size engine determines an actual physical dimension corresponding to each identified product by dividing the pixel dimension for each identified product by the candidate pixel to physical dimension ratio. The formula to determine the actual physical dimension of a product can be formally stated as 

For example as shown in the example of which is described in more detail below if the height in pixels for a first ABC breakfast cereal box e.g. product number 1 in identified in the received image is 400 and the pixel to physical dimension ratio is determined to be 1.77 then the actual physical height is determined to be 400 1.77 225.9 mm. In another example if the height in pixels for a second ABC breakfast cereal box e.g. product number 3 in identified in the received image is 265 and the pixel to physical dimension ratio is determined to be 1.77 then the actual physical height is determined to be 265 1.77 149.7 mm. In yet another example if the height in pixels for a third ABC breakfast cereal box e.g. product number 7 in identified in the received image is 175 and the pixel to physical dimension ratio is determined to be 1.77 then the actual physical height is determined to be 175 1.77 98.9 mm. In other examples the size engine may determine other actual physical dimensions such as width area diagonal length etc. for each identified product in the received image based on corresponding pixel to physical dimension ratios determined by the pixel to physical dimension ratio engine .

In some embodiments the size engine retrieves the information from the SKU table from the data storage . In some embodiments the size engine uses the physical dimension determined for an identified product in the image to look up a closest matching physical dimension stored for the identified product in the SKU table. The size engine subsequently identifies a corresponding size of the identified product based on the closest match. For example the size engine identifies that a first ABC breakfast cereal box with a calculated physical height of 225.9 mm is closest to a height 225 mm associated with a one kilogram ABC breakfast cereal box in the SKU table. In another example the size engine identifies that a second ABC breakfast cereal box with a calculated physical height of 149.7 mm is closest to a height of 150 mm associated with a 500 gram ABC breakfast cereal box in the SKU table. In yet another example the size engine identifies that a third ABC breakfast cereal box with a calculated physical height of 98.9 mm is closest to a height of 100 mm associated with a 250 gram ABC breakfast cereal box in the SKU table. In some embodiments the size engine may use other physical dimensions such as width area diagonal height etc. to improve accuracy in distinguishing the identified products varying only in size in the received image.

In some embodiments the size engine uses the closest matching physical dimension of each identified product to retrieve stock keeping unit information from the SKU table in the data storage . The size engine determines a SKU identifier for the identified product based on the closest matching physical dimension. For example using the height of 225 mm associated with a one kilogram ABC breakfast cereal box the size engine retrieves a stock keeping unit identifier X123 from the SKU table for the one kilogram ABC breakfast cereal box.

One of the advantages of using the techniques introduced here to distinguish between products of varying size in an image of a retail shelf is that the plurality of products can be audited by a sales executive more quickly and accurately. In some embodiments the size engine uses the SKU identifier of each identified product in the image to retrieve planogram information corresponding to that product from the data storage . The planogram describes a product s location in an aisle and on a shelf and the quantity of the product to be stocked at that location. In some embodiments the size engine receives the data including identified items of interest in the image from the image processor and determines the location of each of the identified items of interest. The size engine checks whether the location and position of the product of its size identified in the image are compliant with a planogram received from the consumer packaged goods company or companies producing the products. In some embodiments the size engine instructs the user interface engine to generate a notification for the user when the planogram compliance is breached. For example a soft drink company planogram may list that soda A of two liter volume should be at eye level in the beverage aisle and the size engine determines whether the identified soda A cans of two liter volume in the query images sent by the user comply with the planogram. One advantage of effecting planogram compliance using the techniques described in this disclosure is increased sales due to the product being in the right place at the right time. Additionally the customer loyalty to a particular product is not lost as the product is rearranged and or restocked on the retail shelves to ensure its availability to the customers.

In some embodiments the size engine determines whether changes in an item inventory of particular sizes identified in the received image exceed a threshold. If the changes exceed a threshold the size engine instructs the user interface engine to generate a notification for the user. For example the size engine can determine whether 250 gram size ABC breakfast cereal boxes identified in the image of a product shelf are out of stock or nearly empty compared to the one kilogram and 500 gram breakfast cereal boxes based on a planogram. The size engine instructs the user interface engine to notify the user to restock the 250 gram size ABC breakfast cereal boxes. In some embodiments the size engine generates statistics associated with the items of various sizes identified in the image. The statistics could detail the performance of an item of a certain size on the shelf. For example the statistics may provide details that the 250 gram size breakfast cereal boxes sell faster than those of other sizes etc. In another example the statistics may provide details that a promotional sale of tea pack with 20 free tea bags sells faster than other tea packs etc. Consequently this is advantageous in that it is easier to infer trends in sales and performances of trade promotions in retail stores which can help retail managers to alter and or reallocate promotion budgets. In some embodiments the size engine associates the statistics with the item description in the indices stored in the data storage .

The user interface engine may include software and or logic for providing user interfaces to a user. In some embodiments the user interface engine can be implemented using hardware including a field programmable gate array FPGA or an application specific integrated circuit ASIC . In some embodiments the user interface engine can be implemented using a combination of hardware and software executable by processor . In some embodiments the user interface engine is a set of instructions executable by the processor . In some implementations the user interface engine is stored in the memory and is accessible and executable by the processor . In some implementations the user interface engine is adapted for cooperation and communication with the processor the memory and other components of the image recognition application via the bus .

In some embodiments the user interface engine receives instructions from the image processor to generate a graphical interface that instructs the user to capture image of a shelf stocking products. In some embodiments the user interface engine receives instructions from the image processor to generate a graphical interface that instructs the user to align and superimpose an interactive graphical geometric shape on a region depicted in the image for which physical dimensions may be known. In some embodiments responsive to a user of a client device capturing the image including products the user interface engine receives information including product identification from the image processor and generates a polygon outline to identify the region of interest around each identified product. In some embodiments the user interface engine generates a graphical image for displaying the notification received from the size engine . In other embodiments the user interface engine sends the graphical data to an application e.g. a browser in the client device via the communication unit causing the application to display the data in a user interface.

At the pixel to physical dimension ratio engine determines a pixel to physical dimension ratio using the pixel dimension and the physical dimension of the portion of region. For example if the height in pixels of the interactive rectangle superimposed on a shelf in the shelving unit in the image is 1079 then the pixel to physical dimension ratio divides the height in pixels 1079 by the actual height of 609.6 mm and determines the pixel to physical dimension ratio to be 1.77. The pixel to physical dimension ratio of 1.77 that is determined can be used to identify the sizes of identified items in the image.

At the size engine determines a physical dimension for each identified product using the pixel to physical dimension ratio and the pixel dimension of the region of interest for each identified product in the image. The size engine determines a physical dimension corresponding to each identified product by dividing the pixel dimension for each identified product by the pixel to physical dimension ratio. For example if the height in pixels for a breakfast cereal box identified in the received image is 400 and the pixel to physical dimension ratio is determined to be 1.77 then the actual physical height is determined to be 400 1.77 225.9 mm. At the size engine determines a SKU identifier of each identified product in the image by using the physical dimension for each identified product to lookup a SKU table. For example the size engine identifies that the ABC breakfast cereal box with a calculated physical height of 225.9 mm is closest to a height of 225 mm associated with a one kilogram ABC breakfast cereal box in the SKU table and retrieves the SKU identifier X123 for the one kilogram ABC breakfast cereal box.

At the image processor determines a distance of the camera from the shelving unit. In some embodiments the image processor instructs the user interface engine to generate graphical data for instructing the user to capture an image of the base of the shelving unit to determine the distance of the client device from the shelving unit. The image processor determines an angle of tilt of the client device in order to position the base of the shelving unit at the center and middle of the image. The image processor approximates a height of the client device off the ground as a height of the user using the client device and the image processor receives the height of the user as an input. The image processor determines the distance of the shelving unit from the client device by multiplying the height of the client device off the ground with a tangent of the angle of tilt of the client device . In some embodiments the image processor determines an item of interest on the shelving unit that is in focus in the image captured by the client device . The image processor determines a distance of the client device from the shelving unit based on the distance of the item of interest that is in focus in the image from the client device . The image processor may communicate with the built in functions of the client device and can access raw distance data measured by the client device while focusing on an item of interest. For example the image processor can make an application programming interface API call to retrieve the estimated distance between the camera in a smartphone and the item of interest in focus. In some embodiments the image processor determines a distance of the item of interest on the shelving unit from the client device by triggering a burst of ultrasound pulse from an ultrasound sensor for e.g. coupled to the client device and listening for the echo when it bounces off the item of interest. The image processor determines the distance between the shelving unit and the client device based on a time taken by the ultrasound pulse to travel to hit the item of interest on the shelving unit and bounce back to the ultrasound sensor and the speed of sound.

At the image processor determines a physical height of a captured portion of region depicted in the image of the shelving unit based on the angle of aperture and the distance of the camera from the shelving unit. The formula to determine the physical height of captured portion of region can be formally stated as 

At the pixel to physical dimension ratio engine determines a pixel to physical dimension ratio by dividing the height in pixels of the captured portion of region by the physical height of the captured portion of region depicted in the image. For example if the height in pixels for captured portion of region from the image is 1079 and the actual height of the captured portion of region depicted in the image is 609.6 mm the pixel to physical dimension ratio engine determines the pixel to physical dimension ratio using these two parameters to be 1.77.

At the size engine determines a physical height for each identified product in the image by dividing the dimension in pixels for each identified product by the pixel to physical dimension ratio. For example if the height in pixels for a first breakfast cereal box identified in the received image is 400 and the pixel to physical dimension ratio is determined to be 1.77 then the actual physical height is determined to be 400 1.77 225.9 mm. At the size engine determines a SKU identifier of each identified product in the image by using the physical height for each identified product to lookup a SKU table. For example the size engine identifies that the first ABC breakfast cereal box with a calculated physical height of 225.9 mm is closest to a height of 225 mm associated with a one kilogram ABC breakfast cereal box in the SKU table and retrieves the SKU identifier X123 for the one kilogram ABC breakfast cereal box from the SKU table.

A system and method for identifying and distinguishing between products of similar appearance that vary in size has been described. In the above description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the techniques introduced above. It will be apparent however to one skilled in the art that the techniques can be practiced without these specific details. In other instances structures and devices are shown in block diagram form in order to avoid obscuring the description and for ease of understanding. For example the techniques are described in one embodiment above primarily with reference to software and particular hardware. However the present invention applies to any type of computing system that can receive data and commands and present information as part of any peripheral devices providing services.

Reference in the specification to one embodiment or an embodiment means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment. The appearances of the phrase in one embodiment in various places in the specification are not necessarily all referring to the same embodiment.

Some portions of the detailed descriptions described above are presented in terms of algorithms and symbolic representations of operations on data bits within a computer memory. These algorithmic descriptions and representations are in some circumstances used by those skilled in the data processing arts to convey the substance of their work to others skilled in the art. An algorithm is here and generally conceived to be a self consistent sequence of steps leading to a desired result. The steps are those requiring physical manipulations of physical quantities. Usually though not necessarily these quantities take the form of electrical or magnetic signals capable of being stored transferred combined compared and otherwise manipulated. It has proven convenient at times principally for reasons of common usage to refer to these signals as bits values elements symbols characters terms numbers or the like.

It should be borne in mind however that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the following discussion it is appreciated that throughout the description discussions utilizing terms such as processing computing calculating determining displaying or the like refer to the action and processes of a computer system or similar electronic computing device that manipulates and transforms data represented as physical electronic quantities within the computer system s registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage transmission or display devices.

The techniques also relate to an apparatus for performing the operations herein. This apparatus may be specially constructed for the required purposes or it may comprise a general purpose computer selectively activated or reconfigured by a computer program stored in the computer. Such a computer program may be stored in a computer readable storage medium such as but is not limited to any type of disk including floppy disks optical disks CD ROMs and magnetic disks read only memories ROMs random access memories RAMs EPROMs EEPROMs magnetic or optical cards flash memories including USB keys with non volatile memory or any type of media suitable for storing electronic instructions each coupled to a computer system bus.

Some embodiments can take the form of an entirely hardware embodiment an entirely software embodiment or an embodiment containing both hardware and software elements. One embodiment is implemented in software which includes but is not limited to firmware resident software microcode etc.

Furthermore some embodiments can take the form of a computer program product accessible from a computer usable or computer readable medium providing program code for use by or in connection with a computer or any instruction execution system. For the purposes of this description a computer usable or computer readable medium can be any apparatus that can contain store communicate propagate or transport the program for use by or in connection with the instruction execution system apparatus or device.

A data processing system suitable for storing and or executing program code can include at least one processor coupled directly or indirectly to memory elements through a system bus. The memory elements can include local memory employed during actual execution of the program code bulk storage and cache memories which provide temporary storage of at least some program code in order to reduce the number of times code must be retrieved from bulk storage during execution.

Input output or I O devices including but not limited to keyboards displays pointing devices etc. can be coupled to the system either directly or through intervening I O controllers.

Network adapters may also be coupled to the system to enable the data processing system to become coupled to other data processing systems or remote printers or storage devices through intervening private or public networks. Modems cable modem and Ethernet cards are just a few of the currently available types of network adapters.

Finally the algorithms and displays presented herein are not inherently related to any particular computer or other apparatus. Various general purpose systems may be used with programs in accordance with the teachings herein or it may prove convenient to construct more specialized apparatus to perform the required method steps. The required structure for a variety of these systems will appear from the description below. In addition the techniques are not described with reference to any particular programming language. It will be appreciated that a variety of programming languages may be used to implement the teachings of the various embodiments as described herein.

The foregoing description of the embodiments has been presented for the purposes of illustration and description. It is not intended to be exhaustive or to limit the specification to the precise form disclosed. Many modifications and variations are possible in light of the above teaching. It is intended that the scope of the embodiments be limited not by this detailed description but rather by the claims of this application. As will be understood by those familiar with the art the examples may be embodied in other specific forms without departing from the spirit or essential characteristics thereof. Likewise the particular naming and division of the modules routines features attributes methodologies and other aspects are not mandatory or significant and the mechanisms that implement the description or its features may have different names divisions and or formats. Furthermore as will be apparent to one of ordinary skill in the relevant art the modules routines features attributes methodologies and other aspects of the specification can be implemented as software hardware firmware or any combination of the three. Also wherever a component an example of which is a module of the specification is implemented as software the component can be implemented as a standalone program as part of a larger program as a plurality of separate programs as a statically or dynamically linked library as a kernel loadable module as a device driver and or in every and any other way known now or in the future to those of ordinary skill in the art of computer programming. Additionally the specification is in no way limited to embodiment in any specific programming language or for any specific operating system or environment. Accordingly the disclosure is intended to be illustrative but not limiting of the scope of the specification which is set forth in the following claims.

