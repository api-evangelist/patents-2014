---

title: Metering software infrastructure in a cloud computing environment
abstract: A system and method include determining, by a processing device, a first duration of usage of a hardware resource on which a virtual machine is instantiated in a cloud, determining, by the processing device from the virtual machine on the cloud, a second duration of usage of a software resource that is utilized by a user on the virtual machine, the software resource comprising at least part of an operating system, and calculating, by the processing device, a usage of the cloud by the user in view of the first duration and the second duration.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09100311&OS=09100311&RS=09100311
owner: Red Hat, Inc.
number: 09100311
owner_city: Raleigh
owner_country: US
publication_date: 20140602
---
This application is a Continuation of U.S. patent application Ser. No. 12 551 514 the entire contents of which are hereby incorporated by reference herein.

This invention relates generally to products and services more particularly to systems and methods for cloud computing related services and products.

The advent of cloud based computing architectures has opened new possibilities for the rapid and scalable deployment of virtual Web stores media outlets and other on line sites or services. In general a cloud based architecture deploys a set of hosted resources such as processors operating systems software and other components that can be combined or strung together to form virtual machines. A user or customer can request the instantiation of a virtual machine or set of machines from those resources from a central server or management system to perform intended tasks or applications. For example a user may wish to set up and instantiate a virtual server from the cloud to create a storefront to market products or services on a temporary basis for instance to sell tickets to an upcoming sports or musical performance. The user can lease or subscribe to the set of resources needed to build and run the set of instantiated virtual machines on a comparatively short term basis such as hours or days for their intended application. Likewise entities such as companies corporations and universities can utilize clouds in order to pool their internal computing resources in order to perform various computing processes.

Typically when determining the usage of a cloud the hardware usage of a particular virtual machine is measured. For example when determining the cost for leasing cloud resources a vendor of the cloud will measure the hardware resources i.e. processor cycles amount of memory etc. used by a particular customer.

For simplicity and illustrative purposes the principles of the present teachings are described by referring mainly to exemplary embodiments thereof. However one of ordinary skill in the art would readily recognize that the same principles are equally applicable to and can be implemented in all types of information and systems and that any such variations do not depart from the true spirit and scope of the present teachings. Moreover in the following detailed description references are made to the accompanying figures which illustrate specific embodiments. Electrical mechanical logical and structural changes may be made to the embodiments without departing from the spirit and scope of the present teachings. The following detailed description is therefore not to be taken in a limiting sense and the scope of the present teachings is defined by the appended claims and their equivalents.

Embodiments of the present teachings relate to systems and methods for metering infrastructure utilization in a cloud computing environment. More particularly embodiments relate to platforms and techniques in which a cloud management system can meter both hardware and software infrastructure utilization in a cloud computing environment.

According to embodiments a cloud management system can be configured to include a metering tool for metering infrastructure utilization in a cloud. The metering tool can be configured to monitor the software resources of the cloud to meter the software utilization of the cloud. In particular the metering tool can be configured to cooperate and communicate with the cloud management system to determine the software resources utilized by processes instantiated in the cloud and to track the duration of the utilization. The metering tool can be configured to store the tracked utilization in a record.

By tracking the utilization of the software infrastructure the cloud management system can accurately and reliably monitor the demands placed on the software infrastructure of the cloud. As such an operator can enhance the flexibility power and reliability of the cloud environment. Additionally by tracking the utilization of the software infrastructure the operator can price access to the cloud based on the utilization of the software resources.

In embodiments the entire set of resource servers or other hardware or software resources used to support the cloud along with its instantiated virtual machines can be managed by a cloud management system . The cloud management system can comprise a dedicated or centralized server and or other software hardware and network tools that communicate via one or more networks such as the Internet or other public or private network with all sets of resource servers to manage the cloud and its operation. To instantiate a new set of virtual machines a user can transmit an instantiation request to the cloud management system for the particular type of virtual machine they wish to invoke for their intended application. A user can for instance make a request to instantiate a set of virtual machines configured for email messaging or other applications from the cloud . The request can be received and processed by the cloud management system which identifies the type of virtual machine process or other resource being requested. The cloud management system can then identify the collection of resources necessary to instantiate that machine or resource. In embodiments the set of instantiated virtual machines or other resources can for example comprise virtual transaction servers used to support Web storefronts or other transaction sites.

In embodiments the user s instantiation request can specify a variety of parameters defining the operation of the set of virtual machines to be invoked. The instantiation request for example can specify a defined period of time for which the instantiated machine or process is needed. The period of time can be for example an hour a day or other increment of time. In embodiments the user s instantiation request can specify the instantiation of a set of virtual machines or processes on a task basis rather than for a predetermined amount of time. For instance a user could request resources until a software update is completed. The user s instantiation request can specify other parameters that define the configuration and operation of the set of virtual machines or other instantiated resources. For example the request can specify an amount of processing power or input output I O throughput the user wishes to be available to each instance of the virtual machine or other resource. In embodiments the requesting user can for instance specify a service level agreement SLA acceptable for their application. Other parameters and settings can be used. One skilled in the art will realize that the user s request can likewise include combinations of the foregoing exemplary parameters and others.

When the request to instantiate a set of virtual machines or other resources has been received and the necessary resources to build that machine or resource have been identified the cloud management system can communicate with one or more set of resource servers to locate resources to supply the required components. The cloud management system can select providers from the diverse set of resource servers to assemble the various components needed to build the requested set of virtual machines or other resources. It may be noted that in some embodiments permanent storage such as hard disk arrays may not be included or located within the set of resource servers available to the cloud management system because the set of instantiated virtual machines or other resources may be intended to operate on a purely transient or temporary basis. In embodiments other hardware software or other resources not strictly located or hosted in the cloud can be leveraged as needed. For example other software services that are provided outside of the cloud and hosted by third parties can be invoked by in cloud virtual machines. For further example other non cloud hardware and or storage services can be utilized as an extension to the cloud either on an on demand or subscribed or decided basis.

With the resource requirements identified the cloud management system can extract and build the set of virtual machines or other resources on a dynamic or on demand basis. For example one set of resource servers can respond to an instantiation request for a given quantity of processor cycles with an offer to deliver that computational power immediately and guaranteed for the next hour. A further set of resource servers can offer to immediately supply communication bandwidth for example on a guaranteed minimum or best efforts basis. In other embodiments the set of virtual machines or other resources can be built on a batch basis or at a particular future time. For example a set of resource servers can respond to a request for instantiation at a programmed time with an offer to deliver the specified quantity of processor cycles within a specific amount of time such as the next 12 hours.

The cloud management system can select a group of servers in the set of resource servers that match or best match the instantiation request for each component needed to build the virtual machine or other resource. The cloud management system can then coordinate the integration of the completed group of servers from the set of resource servers to build and launch the requested set of virtual machines or other resources. The cloud management system can track the combined group of servers selected from the set of resource servers or other distributed resources that are dynamically or temporarily combined to produce and manage the requested virtual machine population or other resources.

In embodiments the cloud management system can generate a resource aggregation table that identifies the various sets of resource servers that will be used to supply the components of the virtual machine or process. The sets of resource servers can be identified by unique identifiers such as for instance Internet Protocol IP addresses or other addresses. The cloud management system can register the finalized group of servers in the set resource servers contributing to an instantiated machine or process.

The cloud management system can then set up and launch the initiation process for the virtual machines processes or other resources to be delivered from the cloud. The cloud management system can for instance transmit an instantiation command or instruction to the registered group of servers in set of resource servers . The cloud management system can receive a confirmation message back from each participating server in a set of resource servers indicating a status regarding the provisioning of their respective resources. Various sets of resource servers can confirm for example the availability of a dedicated amount of processor cycles amounts of electronic memory communications bandwidth or applications or other software prepared to be served.

As shown for example in the cloud management system can then instantiate one or more than one set of virtual machines or other processes based on the resources supplied by the registered set of resource servers . In embodiments the cloud management system can instantiate a given number for example 10 500 1000 or other number of virtual machines to be made available to users on a network such as the Internet or other public or private network. Each virtual machine can be assigned an instantiated machine ID that can be stored in the resource aggregation table or other record or image of the instantiated population. Additionally the cloud management system can store the duration of each virtual machine and the collection of resources utilized by the complete set of instantiated virtual machines .

In embodiments the cloud management system can further store track and manage a user s identity and associated set of rights or entitlements to software hardware and other resources. Each user that populates a set of virtual machines in the cloud can have specific rights and resources assigned and made available to them. The cloud management system can track and configure specific actions that a user can perform such as provision a set of virtual machines with software applications or other resources configure a set of virtual machines to desired specifications submit jobs to the set of virtual machines or other host manage other users of the set of instantiated virtual machines or other resources and other privileges or actions. The cloud management system can further generate records of the usage of instantiated virtual machines to permit tracking billing and auditing of the services consumed by the user. In embodiments the cloud management system can for example meter the usage and or duration of the set of instantiated virtual machines to generate subscription billing records for a user that has launched those machines. Other billing or value arrangements are possible.

The cloud management system can configure each virtual machine to be made available to users of the one or more networks via a browser interface or other interface or mechanism. Each instantiated virtual machine can communicate with the cloud management system and the underlying registered set of resource servers via a standard Web application programming interface API or via other calls or interfaces. The set of instantiated virtual machines can likewise communicate with each other as well as other sites servers locations and resources available via the Internet or other public or private networks whether within a given cloud or between clouds.

It may be noted that while a browser interface or other front end can be used to view and operate the set of instantiated virtual machines from a client or terminal the processing memory communications storage and other hardware as well as software resources required to be combined to build the virtual machines or other resources are all hosted remotely in the cloud . In embodiments the set of virtual machines or other resources may not depend on or require the user s own on premise hardware or other resources. In embodiments a user can therefore request and instantiate a set of virtual machines or other resources on a purely off premise basis for instance to build and launch a virtual storefront or other application.

Because the cloud management system in one regard specifies builds operates and manages the set of instantiated virtual machines on a logical level the user can request and receive different sets of virtual machines and other resources on a real time or near real time basis without a need to specify or install any particular hardware. The user s set of instantiated virtual machines processes or other resources can be scaled up or down immediately or virtually immediately on an on demand basis if desired. In embodiments the various sets of resource servers that are accessed by the cloud management system to support a set of instantiated virtual machines or processes can change or be substituted over time. The type and operating characteristics of the set of instantiated virtual machines can nevertheless remain constant or virtually constant since instances are assembled from abstracted resources that can be selected and maintained from diverse sources based on uniform specifications.

In terms of network management of the set of instantiated virtual machines that have been successfully configured and instantiated the cloud management system can perform various network management tasks including security maintenance and metering for billing or subscription purposes. The cloud management system of a given cloud can for example install or terminate applications or appliances on individual machines. The cloud management system can monitor operating virtual machines to detect any virus or other rogue process on individual machines and for instance terminate the infected application or virtual machine. The cloud management system can likewise manage an entire set of instantiated virtual machines or other resources on a collective basis for instance to push or deliver a software upgrade to all active virtual machines. Other management processes are possible.

In embodiments more than one set of virtual machines can be instantiated in a given cloud at the same overlapping or successive times. The cloud management system can in such implementations build launch and manage multiple sets of virtual machines based on the same or different underlying set of resource servers with populations of different sets of instantiated virtual machines such as may be requested by different users. The cloud management system can institute and enforce security protocols in a cloud hosting multiple sets of virtual machines. Each of the individual sets of virtual machines can be hosted in a respective partition or sub cloud of the resources of the cloud . The cloud management system of a cloud can for example deploy services specific to isolated or defined sub clouds or isolate individual workloads processes within the cloud to a specific sub cloud. The subdivision of the cloud into distinct transient sub clouds or other sub components which have assured security and isolation features can assist in establishing a multiple user or multi tenant cloud arrangement. In a multiple user scenario each of the multiple users can use the cloud platform as a common utility while retaining the assurance that their information is secure from other users of the overall cloud system. In further embodiments sub clouds can nevertheless be configured to share resources if desired.

In embodiments and as also shown in the set of instantiated virtual machines generated in a first cloud can also interact with a set of instantiated virtual machines or processes generated in a second third or further cloud . The cloud management system of a first cloud can interface with the cloud management system of a second cloud to coordinate those domains and operate the clouds and or virtual machines or processes on a combined basis. The cloud management system of a given cloud can track and manage individual virtual machines or other resources instantiated in that cloud as well as the set of instantiated virtual machines or other resources in other clouds.

In the foregoing and other embodiments the user making an instantiation request or otherwise accessing or utilizing the cloud network can be a person customer subscriber administrator corporation organization or other entity. In embodiments the user can be or include another virtual machine application or process. In further embodiments multiple users or entities can share the use of a set of virtual machines or other resources.

In embodiments the cloud can include one or more computing systems such as the set of resource server as described above coupled to one or more networks . The computing systems can be any type of computing systems to provide resources to the cloud such as servers laptops desktops and the like. The computing systems can include a number of hardware resources that are used to support virtual machines software appliances processes and the like in the cloud such as such as processors memory network hardware and bandwidth storage devices etc. Likewise the computing system can include software resources that are used to support virtual machines software appliances processes and the like in the cloud . The software resources can include operating systems application programs and the like.

In embodiments the cloud can be used for a variety of purposes. For example the cloud can be owned and or operated by a cloud vendor such as AMAZON Inc. in order to provide the resources of the cloud to subscribers and customers. Likewise for example the cloud can be owned and or operated by a entity e.g. company corporation university etc. and the resources of the cloud can be used by the entity to support various computing processes.

In embodiments the software resources included in the computing systems can depend on the particular usage of the cloud . For example if the cloud is operated by a cloud vendor the software resources can include operating systems such as LINUX provided by Red Hat Corporation and various application programs requested or typically desired by subscribers such as middleware applications web hosting applications electronic mail email applications and the like. Likewise for example if the cloud is operated by an entity for internal use the software resources can include software resources required to support the specific internal uses. For instance the cloud can be utilized by a corporation to perform simulations on a product and the software resources can include operating systems and application programs to run the simulations.

In embodiments as also described above the cloud management system can be configured to monitor manage and maintain the cloud . The cloud management system can be configured to allocate the resources hardware resources and software resources of the computing systems in order to allow the usage of the cloud . For example the cloud management system can be configured to include a virtual machine monitor . The virtual machine monitor can be configured to allocate the resources of the computing systems instantiate virtual machines on the computing systems monitor the virtual machines during their instantiation and terminate the virtual machines once use is finished. The virtual machine monitor can be any type of conventional open source or proprietary virtual machine monitor such as Xen that allows several guest operating systems to be run on the same hardware resources. Likewise the cloud management system can be configured to instantiate monitor and terminate other processes in the cloud such as software appliances individual applications and other processes.

In embodiments the cloud management system can be configured to include the metering tool in order to determine track and record the utilization of the hardware resources and software resources of the cloud . In particular the metering tool can be configured to determine the resources hardware resources and software resources that are utilized in the cloud track the duration that the resources are utilized and record the utilization for accounting or other purposes.

In embodiments to determine and track the utilization the metering tool can be configured to cooperate with other components of the cloud management system such as the virtual machine monitor to determine the resources utilized in the cloud and track the utilization of the resources. Likewise the metering tool can be configured to directly query and monitor the computing systems to determine and track the utilization of the resources of the cloud . For instance the metering tool can be configured to cooperate and communicate with operating systems running on the computing systems in order to determine when resources of the computing systems are utilized.

In embodiments the metering tool can be implemented as an application program that is configured to cooperate with the components of the cloud management system and configured to directly query and monitor the computing system in order to determine the resources that are utilized in the cloud . As such the metering tool can be configured to include the necessary logic commands and instructions to communicate with the components of the cloud management system such as the virtual machine monitor . Likewise the metering tool can be configured to include the necessary logic commands and instructions to communicate with the hardware resources of the computing systems and the software resources such as the operating system and applications programs. The metering tool can be implemented as a component of the cloud management system . Likewise the metering tool can be implemented as a standalone application program that can communicate with the cloud management system . In any implementation the metering tool can be written in any type of conventional programming language such as C C JAVA Perl and the like.

In embodiments one or more instances of the metering tool can operate in the cloud . For instance the cloud management system can be configured to include or communicate with if separate one instance of the metering tool in order to coordinate and control the determination and tracking of the utilization of the resources of the cloud . Likewise for example one or more instances of the metering tool can be located on the computing systems . When located on the computing systems the metering tools can be configured to query and monitor the computing system to determine and track resource utilization and configured to report the resource utilization to the instance of the metering tool located in or communicating with the cloud management system .

In embodiments the metering tool can be configured to determine and track the utilization of the hardware resource of the cloud . In particular the metering tool can be configured to actively monitor the hardware resources of the computing systems and track the utilization of the hardware resources. For example as virtual machines software appliances and other processes use the hardware resources of the computing systems the metering tool can monitor the hardware resources to determine the type processors memory storage network devices the amount number of processing cycles amount of memory amount of storage amount of network bandwidth and the duration seconds minutes hours days the hardware resources are utilized.

In embodiments the metering tool can be configured to determine and track the utilization of the software resources by processes instantiate in the cloud . In particular the metering tool can be configured to cooperate and communicate with the cloud management system in order to determine the type of software resources utilized the number of instances of each type of software resources utilized and the duration each instance of software resources is utilized. Likewise the metering tool can be configured to cooperate and communicate directly with the computing system in order to determine the type of software resources utilized and the duration each type of software resources is utilized. For example the metering tool can be configured to determine the types and numbers of host and or guest operating systems LINUX WINDOWS etc and applications programs middleware applications web hosting applications email applications etc. that are utilized and the duration seconds minutes hours days that each type is utilized.

In embodiments for example the metering tool can be configured to determine and track the software resources utilized in the virtual machines instantiated in the cloud . To achieve this the metering tool can be configured to communicate with the virtual machine monitor to determine and track the software resources utilized in the virtual machines. For instance when a virtual machine is instantiated the virtual machine monitor can notify the metering tool that a virtual machine has been instantiated. The notification can include an identification of the virtual machine the type of the host operating system and the type of the guest operating system created for the virtual machine. As software resources are utilized in the virtual machine the virtual machine monitor can notify the metering tool of the type of software resources the start time of the software resources utilization and the end time of the software resources utilization. As such the metering tool can track the duration that particular types of software resources that are utilized by the virtual machines. Likewise the virtual machine monitor can notify the metering tool of the start time and termination time of the virtual machine. As such the metering tool can determine and track the duration of the utilization of the guest operating system and the host operating system.

In embodiments for example the metering tool can be configured to determine and track the software resources utilized in other process instantiate in the cloud such as software appliances and individual application programs. In particular the metering tool can be configured to communicate with the cloud management system and monitor the computing systems to determine and track the utilization of the software resources . For instance when the cloud management system instantiates a software appliance in the cloud the cloud management system can notify the metering tool of the software resources included in the appliance e.g. operating system and application programs the start time of the appliance and the end time of the appliance. Likewise for instance the metering tool can monitor the computing systems for software appliances being started on the computing systems and can track the duration that the software appliance runs on the computing systems . As such the metering tool can track the duration that the software resources included in the software appliance are utilized.

Likewise for instance the metering tool can determine and track when a particular software resource is individually utilized on the computing systems . The metering tool can be configured to communicate with operating systems running on the computing systems in order to identify when the particular software resource is utilized and the duration the software resource is utilized.

In embodiments as the metering tool determines and tracks resource utilization the metering tool can be configured to store the utilization of the software resources in a software record and configured to store the utilization of the hardware resources in the hardware record . The record can be configured to store the type of the software resources utilized and the duration the software resources are utilized. The metering tool can be configured to maintain the hardware record and the software record in computer readable storage devices or media CD DVD hard drive portable storage memory etc. whether local to the cloud management system or remotely located. The metering tool can be configured to maintain the hardware record and the software record in the computer readable storage devices or media in any type of format that is accessible by a computing system such as a file tree database or other format.

In embodiments the software record can be configured to store the utilization of the software resources in any type of data structure that allows the type of a particular software resources to be associated with the duration that particular resource is utilized. illustrates an exemplary software record that can store the utilization of the software. As illustrated in the software record can be configured a table including a number of rows and columns . Each of the rows can store the utilization of software resources by a particular process instantiate in the cloud e.g. virtual machine software appliance etc. . Each of the columns can identify the data relevant to each particular process stored in the rows such as an identification of the process the type of software resources utilized in the process and the duration of the utilization of the software resource.

In embodiments the metering tool can be configured to search the software record and or the hardware record and configured to output the data contained in the software record and or the hardware record . For example the metering tool can receive a request for data contained in the software record and or the hardware record from the cloud management system or any user or entity associated with the cloud . To achieve this the metering tool can be configured to provide the an interface to receive requests for data and provide the requested data. The interface can be configured to receive the request and to provide the data from the software record and or the hardware record utilizing any type of communications such as email web page text message and the like. As such the metering tool can contain the necessary logic commands and instructions to generate graphical user interfaces GUIs e.g. dialog boxes and web pages and or contain the necessary logic commands and instructions to utilize other programs or applications to communicate with the cloud management systems or other entities. Likewise the metering tool can contain the necessary logic commands and instructions to search the software record and or the hardware record according to the requests and retrieve the data.

In embodiments the data regarding the utilization of the software resources contained in the software record can be used for a variety of purposes. For example the owner or operator of the cloud can use the data to track the usage of the software resources determine a charge for subscribers utilization of the cloud determine a need for additional software resources and the like.

Processor also communicates with the cloud management system which can include the metering tool to execute control logic and allow for tracking resource utilization as described above and below. Other configurations of the computing system associated network connections and other hardware and software resources are possible.

While illustrates the computing system as a standalone system including a combination of hardware and software the computing system can include multiple systems operating in cooperation. The cloud management system which can include the metering tool can be implemented as a software application or program capable of being executed by the computing system as illustrated or other conventional computer platforms. Likewise the metering tool can also be implemented as a software module or program module capable of being incorporated in other software applications and programs. In either case the cloud management system and the metering tool can be implemented in any type of conventional proprietary or open source computer language. When implemented as a software application or program code the cloud management system and the metering tool can be stored in a computer readable storage medium such as storage accessible by the computing system . Likewise during execution a copy of the cloud management system and the metering tool can be stored in the memory .

To determine the software resources for example the metering tool can communicate with the virtual machine monitor to determine the software resources utilized in the virtual machines. For instance when a virtual machine is instantiated the virtual machine monitor can notify the metering tool that a virtual machine has been instantiated. The notification can include an identification of the virtual machine the type of the host operating system and the type of the guest operating system created for the virtual machine. As software resources are utilized in the virtual machine the virtual machine monitor can notify the metering tool of the type of software resources utilized.

Likewise for example the metering tool can determine the software resources utilized in other process instantiate in the cloud such as software appliances and individual application programs. In particular the metering tool can communicate with the cloud management system and monitor the computing systems to determine the utilization of the software resources . For instance when the cloud management system instantiates a software appliance in the cloud the cloud management system can notify the metering tool of the software resources included in the appliance e.g. operating system and application programs . Likewise for instance the metering tool can monitor the computing systems for software appliances being started on the computing systems . Additionally for instance the metering tool can determine when a particular software resource is individually utilized on the computing systems .

In the metering tool can track the duration of the utilization of the software resources . For example when a virtual machine is instantiated the virtual machine monitor can notify the metering tool of the start time and termination time of the virtual machine. Additionally as software resources are utilized in the virtual machine the virtual machine monitor can notify the metering tool of the type of software resources the start time of the software resources utilization and the end time of the software resources utilization. As such the metering tool can track the duration that particular types of software resources that are utilized by the virtual machines and track the duration of the utilization of the guest operating system and the host operating system.

Likewise for example the metering tool can track the software resources utilized in other process instantiate in the cloud such as software appliances and individual application programs. For instance when the cloud management system instantiates a software appliance in the cloud the cloud management system can notify the start time of the appliance and the end time of the appliance. Likewise the metering tool can monitor the computing systems can track the duration that the software appliance runs on the computing systems . As such the metering tool can track the duration that the software resources included in the software appliance are utilized. Additionally for example the metering tool can determine and track when a particular software resource is individually utilized on the computing systems . The metering tool can communicate with operating systems running on the computing systems in order to identify when the particular software resource is utilized and the duration the software resource is utilized.

In the metering tool can store the tracked utilization in a software record . The software record can store the utilization of the software resources in any type of data structure that allows the type of a particular software resources to be associated with the duration that particular resource is utilized. The metering tool can maintain the hardware record and the software record in computer readable storage devices or media CD DVD hard drive portable storage memory etc. whether local to the cloud management system or remotely located.

In the metering tool can output the stored utilization data. For example the metering tool can receive a request for data contained in the software record from the cloud management system or any user or entity associated with the cloud . The metering tool can provide an interface to receive requests for data and provide the requested data. The interface can be configured to receive the request and to provide the data from the software record utilizing any type of communications such as email web page text message and the like. The metering tool can search the software record according to the requests and retrieve the data.

Certain embodiments may be performed as a computer application or program. The computer program may exist in a variety of forms both active and inactive. For example the computer program can exist as software program s comprised of program instructions in source code object code executable code or other formats firmware program s or hardware description language HDL files. Any of the above can be embodied on a computer readable medium which include computer readable storage devices and media and signals in compressed or uncompressed form. Exemplary computer readable storage devices and media include conventional computer system RAM random access memory ROM read only memory EPROM erasable programmable ROM EEPROM electrically erasable programmable ROM and magnetic or optical disks or tapes. Exemplary computer readable signals whether modulated using a carrier or not are signals that a computer system hosting or running the present teachings can be configured to access including signals downloaded through the Internet or other networks. Concrete examples of the foregoing include distribution of executable software program s of the computer program on a CD ROM or via Internet download. In a sense the Internet itself as an abstract entity is a computer readable medium. The same is true of computer networks in general.

While the teachings has been described with reference to the exemplary embodiments thereof those skilled in the art will be able to make various modifications to the described embodiments without departing from the true spirit and scope. The terms and descriptions used herein are set forth by way of illustration only and are not meant as limitations. In particular although the method has been described by examples the steps of the method may be performed in a different order than illustrated or simultaneously. Furthermore to the extent that the terms including includes having has with or variants thereof are used in either the detailed description and the claims such terms are intended to be inclusive in a manner similar to the term comprising. As used herein the term one or more of with respect to a listing of items such as for example A and B means A alone B alone or A and B. Those skilled in the art will recognize that these and other variations are possible within the spirit and scope as defined in the following claims and their equivalents.

