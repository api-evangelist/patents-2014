---

title: Validation of a location resource based on recipient access
abstract: Aspects of the present disclosure relate to a method, a system, and a computer program product for validating a location resource, e.g., a hyperlink, embedded in a message for one or more recipients. The method includes receiving, by a computing node in a distributed computing environment and from a messaging application on a remote client computer, an identifier of a user profile and a location resource. The location resource is embedded in a message and that indicates a path to a computing resource outside of the remote client computer. The method also includes querying a repository in the distributed computing environment to obtain access permission information about the location resource. The method also includes determining, based upon the access permission information about the location resource, whether the user profile has access permission for the location resource.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09407639&OS=09407639&RS=09407639
owner: International Business Machines Corporation
number: 09407639
owner_city: Armonk
owner_country: US
publication_date: 20140903
---
The present disclosure relates to exchanging a message between users over a computer communications network and more specifically to validating location resources within messages for recipient access.

Messages are exchanged between users over communication networks. Some examples of messages include electronic mail instant messaging IM and Short Message Service SMS i.e. text messaging. Typically emails are composed and sent using a mail client application. A given email message may include payload in the form of text or in line figures as well as attachments e.g. documents pictures video files . Further the email message may include hyperlinks. As is known a hyperlink is a reference from one document e.g. the email message to another e.g. a web page . Generally a hyperlink facilitates content browsing. Content browsing refers to the retrieval and presentation of electronic content via a client application such as a Web browser. Generally content may include electronic documents graphical images audio and audiovisual and video materials. Typically content may be stored in a server environment and published for access by content consumers over a computer communications network such as the Internet. Content consumers in turn can retrieve content over the network by reference to a network address for the content. Once retrieved the content may be rendered by the client application.

Aspects of the present disclosure relate to a method a system and a computer program product for validating a location resource e.g. a hyperlink embedded in a message for one or more recipients.

One embodiment relates to a method for validating the location resource. The method includes receiving by a computing node in a distributed computing environment and from a messaging application on a remote client computer an identifier of a user profile and a location resource. The location resource is embedded in a message and that indicates a path to a computing resource outside of the remote client computer. The method also includes querying a repository in the distributed computing environment to obtain access permission information about the location resource. The method also includes determining based upon the access permission information about the location resource whether the user profile has access permission for the location resource. The method also includes communicating the access permission for the location resource to the messaging application within the remote client computer in response to the user profile having access permission for the location resource.

Another embodiment relates to a system. The system includes a remote client computer. The remote client computer further includes a messaging application configured to send a message to one or more recipients with a location resource that is embedded in the message and that indicates a path to a computing resource outside of the remote client computer. The messaging application is also configured to communicate visually access permission of a recipient for the location resource to a sender. The system also includes a distributed computing environment. The distributed computing environment includes a repository of the location resource with access permission for a user profile associated with the recipient. The distributed computing environment also includes a processing engine hosted by a computing node in the distributed computing environment. The processing engine is configured to receive from the messaging application the location resource and the user profile associated with the recipient of the message. The processing engine is further configured to query within a repository in the distributed computing environment the location resource. The processing engine is further configured to determine whether an identifier of the user profile has access permission for the location resource. The processing engine is further configured to communicate the access permission for the location resource to the messaging application in response to the user profile having access permission for the location resource.

Yet another embodiment is directed towards a computer program product. The above summary is not intended to describe each illustrated embodiment or every implementation of the present disclosure.

While the invention is amenable to various modifications and alternative forms specifics thereof have been shown by way of example in the drawings and will be described in detail. It should be understood however that the intention is not to limit the invention to the particular embodiments described. On the contrary the intention is to cover all modifications equivalents and alternatives falling within the spirit and scope of the invention.

Aspects of the present disclosure relate to exchanging a message between users over a computer communications network and more specifically to validating a location resource within messages for recipient access. A location resource is a network resource on another server. The location resource can indicate a path to a computing resource outside of a remote client computer. The location resource may be an address to access the resource. A common form of location resource is a hyperlink. Aspects of the present disclosure relate to validating that a recipient of a message has access to the location resource e.g. a hyperlink embedded in the message. The sender may view the recipients that have access to the location resource prior to sending the message. The message may be sent through a messaging application e.g. e mail program Multi Media Message Service MMS or Short Message Service SMS .

The location resource e.g. a hyperlink can be validated using a repository within a cloud based computing system. The cloud based computing system can access the repository and return data regarding the access permission of the recipient to the location resource. The access permission can be sent to the messaging application. The messaging application can visually indicate which recipient has access permission to the location resource. While the present disclosure is not necessarily limited to such applications various aspects of the disclosure may be appreciated through a discussion of various examples using this context.

With the advent of permission based access control to hyperlinks a recipient of a message may not have the same access permission for the hyperlink as the sender of the message. Furthermore each recipient may not have the same access permission as other recipients. Thus it may be advantageous for a sender to know which recipient will have access to the hyperlink before the message is sent. It may also be advantageous for a sender to know if there is an alternate hyperlink for the recipient.

An example of a hyperlink is a Uniform Resource Locator URL . A URL is a string of characters used to identify or name a resource on a network such as the Internet. A common way to identify a piece of content available on a computer network such as the Internet is through an addressing scheme including a protocol identifier such as http a physical server address such as domain.com a file system address such as root sub level and a file name such as mypage.html such that the combined URL appears as http domain.tld root sub level mypage.html referring to the electronic document mypage.html . Further many pieces of content included in a Web page such as graphical images may each be associated with and retrieved through a respective URL.

Activating a hyperlink in content in a content browser generally causes content referenced by the hyperlink to be retrieved and displayed in the client application. In some circumstances activating the hyperlink can result in launching a new client application e.g. a word processor application that can display or otherwise render the referenced content. Of note hyperlinked content is not limited to textual content. For instance hyperlinked content may include multimedia elements or even files selected for download. Further some advanced Web applications utilize hyperlinks to initiate commands in a backend computing system such as initiation of a database query or submission of a form.

It is understood in advance that although this disclosure includes a detailed description on cloud computing implementation of the teachings recited herein are not limited to a cloud computing environment. Rather embodiments of the present invention are capable of being implemented in conjunction with any other type of computing environment now known or later developed.

Cloud computing is a model of service delivery for enabling convenient on demand network access to a shared pool of configurable computing resources e.g. networks network bandwidth servers processing memory storage applications virtual machines and services that can be rapidly provisioned and released with minimal management effort or interaction with a provider of the service. This cloud model may include at least five characteristics at least three service models and at least four deployment models.

On demand self service a cloud consumer can unilaterally provision computing capabilities such as server time and network storage as needed automatically without requiring human interaction with the service s provider.

Broad network access capabilities are available over a network and accessed through standard mechanisms that promote use by heterogeneous thin or thick client platforms e.g. mobile phones laptops and PDAs .

Resource pooling the provider s computing resources are pooled to serve multiple consumers using a multi tenant model with different physical and virtual resources dynamically assigned and reassigned according to demand. There is a sense of location independence in that the consumer generally has no control or knowledge over the exact location of the provided resources but may be able to specify location at a higher level of abstraction e.g. country state or datacenter .

Rapid elasticity capabilities can be rapidly and elastically provisioned in some cases automatically to quickly scale out and rapidly released to quickly scale in. To the consumer the capabilities available for provisioning often appear to be unlimited and can be purchased in any quantity at any time.

Measured service cloud systems automatically control and optimize resource use by leveraging a metering capability at some level of abstraction appropriate to the type of service e.g. storage processing bandwidth and active user accounts . Resource usage can be monitored controlled and reported providing transparency for both the provider and consumer of the utilized service.

Software as a Service SaaS the capability provided to the consumer is to use the provider s applications running on a cloud infrastructure. The applications are accessible from various client devices through a thin client interface such as a web browser e.g. web based e mail . The consumer does not manage or control the underlying cloud infrastructure including network servers operating systems storage or even individual application capabilities with the possible exception of limited user specific application configuration settings.

Platform as a Service PaaS the capability provided to the consumer is to deploy onto the cloud infrastructure consumer created or acquired applications created using programming languages and tools supported by the provider. The consumer does not manage or control the underlying cloud infrastructure including networks servers operating systems or storage but has control over the deployed applications and possibly application hosting environment configurations.

Infrastructure as a Service IaaS the capability provided to the consumer is to provision processing storage networks and other fundamental computing resources where the consumer is able to deploy and run arbitrary software which can include operating systems and applications. The consumer does not manage or control the underlying cloud infrastructure but has control over operating systems storage deployed applications and possibly limited control of select networking components e.g. host firewalls .

Private cloud the cloud infrastructure is operated solely for an organization. It may be managed by the organization or a third party and may exist on premises or off premises.

Community cloud the cloud infrastructure is shared by several organizations and supports a specific community that has shared concerns e.g. mission security requirements policy and compliance considerations . It may be managed by the organizations or a third party and may exist on premises or off premises.

Public cloud the cloud infrastructure is made available to the general public or a large industry group and is owned by an organization selling cloud services.

Hybrid cloud the cloud infrastructure is a composition of two or more clouds private community or public that remain unique entities but are bound together by standardized or proprietary technology that enables data and application portability e.g. cloud bursting for load balancing between clouds .

A cloud computing environment is service oriented with a focus on statelessness low coupling modularity and semantic interoperability. At the heart of cloud computing is an infrastructure comprising a network of interconnected nodes.

Referring now to a schematic of an example of a cloud computing node is shown. Cloud computing node is only one example of a suitable cloud computing node and is not intended to suggest any limitation as to the scope of use or functionality of embodiments of the invention described herein. Regardless cloud computing node is capable of being implemented and or performing any of the functionality set forth hereinabove.

In cloud computing node there is a computer system server which is operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems environments and or configurations that may be suitable for use with computer system server include but are not limited to personal computer systems server computer systems thin clients thick clients hand held or laptop devices multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics network PCs minicomputer systems mainframe computer systems and distributed cloud computing environments that include any of the above systems or devices and the like.

Computer system server may be described in the general context of computer system executable instructions such as program modules being executed by a computer system. Generally program modules may include routines programs objects components logic data structures and so on that perform particular tasks or implement particular abstract data types. Computer system server may be practiced in distributed cloud computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed cloud computing environment program modules may be located in both local and remote computer system storage media including memory storage devices.

As shown in computer system server in cloud computing node is shown in the form of a general purpose computing device. The components of computer system server may include but are not limited to one or more processors or processing units a system memory and a bus that couples various system components including system memory to processor .

Bus represents one or more of any of several types of bus structures including a memory bus or memory controller a peripheral bus an accelerated graphics port and a processor or local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA local bus and Peripheral Component Interconnect PCI bus.

Computer system server typically includes a variety of computer system readable media. Such media may be any available media that is accessible by computer system server and it includes both volatile and non volatile media removable and non removable media.

System memory can include computer system readable media in the form of volatile memory such as random access memory RAM and or cache memory . Computer system server may further include other removable non removable volatile non volatile computer system storage media. By way of example only storage system can be provided for reading from and writing to a non removable non volatile magnetic media not shown and typically called a hard drive . Although not shown a magnetic disk drive for reading from and writing to a removable non volatile magnetic disk e.g. a floppy disk and an optical disk drive for reading from or writing to a removable non volatile optical disk such as a CD ROM DVD ROM or other optical media can be provided. In such instances each can be connected to bus by one or more data media interfaces. As will be further depicted and described below memory may include at least one program product having a set e.g. at least one of program modules that are configured to carry out the functions of embodiments of the invention.

Program utility having a set at least one of program modules may be stored in memory by way of example and not limitation as well as an operating system one or more application programs other program modules and program data. Each of the operating system one or more application programs other program modules and program data or some combination thereof may include an implementation of a networking environment. Program modules generally carry out the functions and or methodologies of embodiments of the invention as described herein.

Computer system server may also communicate with one or more external devices such as a keyboard a pointing device a display etc. one or more devices that enable a user to interact with computer system server and or any devices e.g. network card modem etc. that enable computer system server to communicate with one or more other computing devices. Such communication can occur via Input Output I O interfaces . Still yet computer system server can communicate with one or more networks such as a local area network LAN a general wide area network WAN and or a public network e.g. the Internet via network adapter . As depicted network adapter communicates with the other components of computer system server via bus . It should be understood that although not shown other hardware and or software components could be used in conjunction with computer system server . Examples include but are not limited to microcode device drivers redundant processing units external disk drive arrays RAID systems tape drives and data archival storage systems etc.

Referring now to illustrative cloud computing environment is depicted. As shown cloud computing environment comprises one or more cloud computing nodes with which local computing devices used by cloud consumers such as for example personal digital assistant PDA or cellular telephone A desktop computer B laptop computer C and or automobile computer system N may communicate. Nodes may communicate with one another. They may be grouped not shown physically or virtually in one or more networks such as Private Community Public or Hybrid clouds as described hereinabove or a combination thereof. This allows cloud computing environment to offer infrastructure platforms and or software as services for which a cloud consumer does not need to maintain resources on a local computing device. It is understood that the types of computing devices A N shown in are intended to be illustrative only and that computing nodes and cloud computing environment can communicate with any type of computerized device over any type of network and or network addressable connection e.g. using a web browser .

Referring now to a set of functional abstraction layers provided by cloud computing environment is shown. It should be understood in advance that the components layers and functions shown in are intended to be illustrative only and embodiments of the invention are not limited thereto. As depicted the following layers and corresponding functions are provided 

Hardware and software layer includes hardware and software components. Examples of hardware components include mainframes in one example IBM zSeries systems RISC Reduced Instruction Set Computer architecture based servers in one example IBM pSeries systems IBM xSeries systems IBM BladeCenter systems storage devices networks and networking components. Examples of software components include network application server software in one example IBM WebSphere application server software and database software in one example IBM DB2 database software. IBM zSeries pSeries xSeries BladeCenter WebSphere and DB2 are trademarks of International Business Machines Corporation registered in many jurisdictions worldwide .

Virtualization layer provides an abstraction layer from which the following examples of virtual entities may be provided virtual servers virtual storage virtual networks including virtual private networks virtual applications and operating systems and virtual clients.

In one example management layer may provide the functions described below. Resource provisioning provides dynamic procurement of computing resources and other resources that are utilized to perform tasks within the cloud computing environment. Metering and Pricing provide cost tracking as resources are utilized within the cloud computing environment and billing or invoicing for consumption of these resources. In one example these resources may comprise application software licenses. Security provides identity verification for cloud consumers and tasks as well as protection for data and other resources. User portal provides access to the cloud computing environment for consumers and system administrators. Service level management provides cloud computing resource allocation and management such that required service levels are met. Service Level Agreement SLA planning and fulfillment provide pre arrangement for and procurement of cloud computing resources for which a future requirement is anticipated in accordance with an SLA.

Workloads layer provides examples of functionality for which the cloud computing environment may be utilized. Examples of workloads and functions which may be provided from this layer include mapping and navigation software development and lifecycle management virtual classroom education delivery data analytics processing transaction processing and user validation to virtual machines.

In various embodiments the term distributed computing environment refers to the cloud computing environment in . The term compute node may refer to the cloud computing node in .

The remote computing system can have a messaging application that creates a message. A sender may use the messaging application on the remove computing system to send a message to one or more recipients. The message may include an embedded location resource. The location resource refers to a network resource accessed by the remote computing system but external to the remote computing system. The location resource can indicate a path to the network resource e.g. a hyperlink a file server path or a Uniform Resource Locator URL . The cloud based computing system can validate the embedded location resource for the recipient. Each recipient of the message has a user profile. The user profile contains one or more identifying factors which are factors that indicate an identity of an individual associated with the user profile. The cloud based computing system can further validate the access by querying information regarding access permission of the user profile associated with the recipient to the embedded location resource.

If there is no access permission data then the cloud based computing system can request the access permission data for the recipient from a network based application through an Application Programming Interface API . The network based application may be external to the cloud based computing system . Once the recipient is found in the cloud based computing system then the cloud based computing system communicates the access permission to the remote computing system where it is conveyed to the sender.

The request to validate an embedded location resource originates at the remote computing system . The remote computing system is a device that performs computing operations and may run the messaging application either locally or part of local instance of a cloud based computing system . The remote computing system can be a mobile phone a laptop computer or a virtual machine from the cloud based computing system. The remote computing system can have a messaging application that provides messaging services such as Short Message Service SMS Multimedia Message Service MMS e mail instant messaging etc.

The remote computing system can include a monitoring engine and a messaging application . A sender of the remote computing system interacts with a messaging application . The messaging application can have a graphical user interface. The graphical user interface can relay instructions from the user to the messaging application . The sender can use the messaging application to create a message to send to one or more recipients. The message includes an embedded location resource. A monitoring engine checks the embedded location resource to ensure that the location resource is working. In various embodiments the monitoring engine can determine whether a request to a location resource is received. If the location resource is not functional e.g. where the location resource is broken then the monitoring engine can communicate to the messaging application that the location resource is non functional. If the location resource is functional then the monitoring engine can communicate a request to validate the embedded location resource for each recipient with the cloud based computing system .

According to embodiments the cloud based computing system can correspond to the cloud computing environment in . The cloud based computing system can configured to be a private or public cloud but for enhanced security the cloud may be private. The cloud based computing system may contain a repository and a processing engine . The processing engine may be hosted on one or more compute nodes e.g. the compute node described in within the cloud based computing system . In various embodiments the processing engine can be located within the cloud based computing system for purposes of fast access. The processing engine is responsible for receiving the request to validate the embedded location resource. The processing engine can manage various validation functions. For example the processing engine can query the repository for the embedded location resource information and the recipient. The repository can be a cloud based database in a relational format. In various embodiments the repository can be a high speed database separate from a cloud based computing system .

For each query the processing engine can retrieve data regarding access permission for a recipient. If the access permission data is present in the repository the processing engine can communicate the access permission for the recipient to the user interface . If the access permission data is not present in the repository then the processing engine can request for additional access permission data from the network based application or communicate to the remote computing system that the access to the embedded location resource is not validated.

Consistent with embodiments the network based application may be an independent third party application that neither the remote computing system nor the cloud based computing system can control. In various embodiments the network based application can be an external application from the messaging application . The network based application can also refer to an application that is segregated from the cloud based computing system and the messaging application . The network based application shares a relationship with the embedded location resource. For example if the embedded location resource is a URL of https webname.com photos johndoe then the network based application can check if the recipient has access to John Doe s photos. The network based application can include an API for webname.com. The network based application can use a variety of methods to determine whether the recipient has access to John Doe s photos. For example if the a user name for webname.com is associated with the recipient i.e. a common email address then the API for webname.com can readily determine access permission.

If there is no username for webname.com then the API may use a given name such as Jane Doe to determine if a user of webname.com that shares the name Jane Doe and that the user Jane Doe has access John Doe s photos. The network based application may use various administrative rules and a private public profile to help identify the recipient. The administrative rules may be a collection of predefined rules or user preferences. For example if access permission to John Doe s photos are queried then the network based application will return all of the users that are friends with John Doe. The private public profile can contain information unique to a user. For example Jane Doe may be able to have her webname.com public profile accessed to determine whether there is a name associated with the user profile but not her private profile which includes a telephone number.

In various embodiments the network based application may not be configured for an external API. If the processing engine does not have communication with the network based application or cannot validate the access permission e.g. due to insufficient access permission data then the processing engine may communicate the lack of communication with the remote computing system .

Once the network based application determines that there is access permission data associated with the recipient then the processing engine can update the repository with the updated access permission data. In various embodiments the processing engine can communicate the new access permission data to the remote computing system . If the recipient does not have access permission to the location resource then the processing engine may return an alternate location resource. The alternate location resource is a location resource that is able to be accessed by a recipient. A recipient may not have access permission to access one location resource e.g. because the recipient is not friends with a sender. The recipient may have access to the alternate location resource e.g. because the content of the location resource and alternate location resource has identical content and the recipient is friends with the alternate location resource owner. In various embodiments the alternate location resource is provided to the messaging application in response to the recipient not having access permission for the location resource. The alternate location resource is described further herein.

The repository may contain structured information in a relational database element such as a table. In this example the table contains a requested URL i.e. a location resource to Jane Doe s photos on webname.com. The recipient is identified by the user identification ID user profile used by the messaging application. Identifying factors of the recipient such as the work email name and location are noted. However for the access permission data the field is incomplete and redirected to the webname.com API.

The processing engine may note the absence of the access permission data of the recipient in the repository . The processing engine may follow the redirect to the webname.com API e.g. . If the recipient johnd is in an office setting but does not have his work email johnd work domain associated with his webname.com username then the webname.com API may also receive identifying factors from the processing engine . The two identifying factors that the recipient s name is John Doe and that his location is Anywhere Alaska may be used by the webname.com API to match to a user in the webname.com database. The webname.com API may be further configured to check to see if the matched user has access to user Jane Doe s photos.

Assuming that the matched user exists then the access permission data for the user profile recipient is communicated to the processing engine . The processing engine updates the information in the repository and communicates the access permission to a remote computing system. Each API from network based applications may function in a different manner. In various embodiments a network based application may not allow queries into whether a recipient is an authorized user without credentials.

In operation the processing engine receives a location resource and a user profile associated with the recipient. The location resource can indicate the location of a resource of a computer system resource. For example a URL indicates the network address to access a webpage on a server. The user profile is a compilation of identifying factors associated with a particular recipient of a message validation system. Once the location resource and the user profile are received then the method continues to operation .

In operation the processing engine queries a location resource in a repository. The repository is located within the cloud based computing system and may be a high speed storage device. In the repository the location resource is identified and along with multiple identification factors. Access permission data may also be associated with the location resource in the repository. Once queried then the method continues to operation .

In operation the processing engine determines whether the location resource access permission data exists. The location resource access permission data refers to the presence of access permission for the location resource. The access permission data refers to the presence of any data and not necessarily whether a user profile has access permission for the location resource. For example the repository may not have access permission data associated with the location resource which would indicate that the processing engine has insufficient data on whether the recipient has access permission to the location resource. Insufficient data may be different than not having access permission to the location resource according to various embodiments. If the location resource access permission data does not exist i.e. a non existence of access permission data then the method continues to operation . If the location resource access permission data exists then the method continues to operation .

In operation the processing engine can obtain the location resource access permission data for the user profile. The processing engine can obtain the location resource access permission data by requesting the location resource access permission data from a network based application. The application may be able to obtain access permission data for a user profile and be described further herein. Once the processing engine requests location resource access permission data then the method continues to operation .

In operation the processing engine can determine if the access permission data for the user profile is obtainable. The access permission data may not be obtainable if there is no communication with the application. The access permission data may not be obtainable if the application does not allow disclosure of user data. For example if only a friend of a user of the application can access the user s photos then the application not releasing a list of friends of the user will make the access permission for the user unobtainable. The processing engine can receive the access permission data from the application. The receipt of the access permission data can indicate to the processing engine that it is obtainable. If the location resource access permission data is obtainable the method continues to operation . If the location resource access permission data is not obtainable then the method halts.

In operation the processing engine determines whether the access permission for the recipient is validated. The access permission is validated whenever the recipient has access to the location resource. The access permission may be found in the repository. If the access permission is not validated i.e. the recipient does not have access permission to the location resource then the method continues to operation . If the access permission is validated for the location resource then the method continues to operation .

In operation the processing engine communicates the location resource validation to the remote computing system. The remote computing system may receive the location resource validation and communicate the location resource validation to the messaging application. In various embodiments the messaging application may consolidate the access permissions for the location resource for a plurality of user profiles for the recipients of the message.

In operation the processing engine determines whether an alternate location resource exist. The processing engine may have to search for an alternate whenever the recipient does not have access permission to the location resource. The alternate location resource may have the same or substantially similar content as the location resource. For example the location resource may be a URL to a shared document. If recipient A does not have access permission to the shared document because the shared document e.g. a resume is owned by owner B with no relationship with recipient A then the processing engine can check for an alternate location resource. The alternate location resource can be the same shared document but accessed on a different URL. The owner of the shared document with the different URL may be owner C who has a relationship with recipient A. Thus the alternate location resource allows another path to access the shared document.

The alternate location resource may be present in the repository. The alternate location resource may be found while the processing engine is performing background operations. For example the processing engine can scan multiple external databases applications for documents with the same filename or metadata. If there is no alternate location resource then the method halts. If there is an alternate location resource then the method continues to operation . In operation the processing engine selects the alternate location resource. Once the alternate is selected then the analysis of alternate location resource continues in place of the location resource in operation . There may be circumstances where the alternate location resource specified in the repository for a user profile is not actually validated for the user profile.

Alternatively once selected the processing engine can recommend an alternate location resource to the remote computing system in operation . The recommending of the alternate location resource may also indicate that the location resource is not validated for the user profile. The remote computing system can receive the recommendation and pass the recommendation of the alternate location resource to the messaging application.

In operation the processing engine can send a request for access permission data for the location resource to a network based application. The application may be accessible via the cloud based computing system. The network based application may also be a separate database. Once the request is sent to the network based application then the application may process the request for the user profile. The method continues to operation .

In operation the processing engine can receive identification factors necessary for the location resource access permission. The identification factors may identify the user to the network based application. Examples of identification factors include a user name an email address a location a name a photo key or a combination thereof. In various embodiments the identification factors may be accessible to the application API without credentials for the recipient. In various embodiments the identification factors are sent along with the request for access permission data in operation . Thus operation and may be considered optional. Once the identification factors necessary are received by the processing engine then the method continues to operation .

In operation the processing engine can fetch the necessary identification factors for the user profile from the repository. The identification factors can be stored in the repository and associated with the user profile. Once the identification factors are fetched then the method can continue to operation .

In operation the processing engine determines whether the application recognizes the identification factors. The external application may not recognize the identification factors if the processing engine does not receive an answer for the request in operation . In various embodiments the network based application may not provide permissions to queries regarding access permission data.

The external application may not recognize the identification factors if the identification factors are not formatted for the application. The network based application may only recognize identification factors in a particular format. For example if a name is transmitted as John H. Doe but the format for the API is Doe John H. then the application may not recognize the identification factor. If the application does not recognize the identification factor then the method halts. If the application recognizes the identification factors then the method continues to operation .

In operation the processing engine can receive the access permission data from the application. Once received then the method continues to operation . In operation the processing engine can associate the access permission data with the location resource.

As a visual communication the MMS application can indicate the status of the URL by color to indicate a status. Each color may indicate a proportion of recipients that have access to the location resource. For example a red URL can indicate that fewer than 25 of the recipients will have access permission to the URL a yellow URL can indicate that fewer than 50 of the recipients will have access permission and a green URL can indicate that fewer than 75 of the recipients will have access permission.

The MMS application can also indicate the access permission of each recipient. For example the processing engine can validate access for recipient A and recipient B but not recipient C. The access permission of recipient C can be indicated visually by highlighting the recipient in the MMS application with a different color. For example when a recipient does not have access permission for a hyperlink then the sender of the message may need to distinguish which recipient does not have access so that the sender can make special arrangements to provide the content of the hyperlink to the recipient. By having visual cues for the recipients that have or do not have access permission to the hyperlink the sender can more easily make the determination.

In various embodiments the MMS application can also propose an alternate location resource. For example if recipient c cannot access user A s photos because recipient C does not have access permission then the processing engine running on the back end can determine which photos in user A s photos are public and refer recipient C to the alternate location resource.

The present invention may be a system a method and or a computer program product. The computer program product may include a computer readable storage medium or media having computer readable program instructions thereon for causing a processor to carry out aspects of the present invention.

The computer readable storage medium can be a tangible device that can retain and store instructions for use by an instruction execution device. The computer readable storage medium may be for example but is not limited to an electronic storage device a magnetic storage device an optical storage device an electromagnetic storage device a semiconductor storage device or any suitable combination of the foregoing. A non exhaustive list of more specific examples of the computer readable storage medium includes the following a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory a static random access memory SRAM a portable compact disc read only memory CD ROM a digital versatile disk DVD a memory stick a floppy disk a mechanically encoded device such as punch cards or raised structures in a groove having instructions recorded thereon and any suitable combination of the foregoing. A computer readable storage medium as used herein is not to be construed as being transitory signals per se such as radio waves or other freely propagating electromagnetic waves electromagnetic waves propagating through a waveguide or other transmission media e.g. light pulses passing through a fiber optic cable or electrical signals transmitted through a wire.

Computer readable program instructions described herein can be downloaded to respective computing processing devices from a computer readable storage medium or to an external computer or external storage device via a network for example the Internet a local area network a wide area network and or a wireless network. The network may comprise copper transmission cables optical transmission fibers wireless transmission routers firewalls switches gateway computers and or edge servers. A network adapter card or network interface in each computing processing device receives computer readable program instructions from the network and forwards the computer readable program instructions for storage in a computer readable storage medium within the respective computing processing device.

Computer readable program instructions for carrying out operations of the present invention may be assembler instructions instruction set architecture ISA instructions machine instructions machine dependent instructions microcode firmware instructions state setting data or either source code or object code written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The computer readable program instructions may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider . In some embodiments electronic circuitry including for example programmable logic circuitry field programmable gate arrays FPGA or programmable logic arrays PLA may execute the computer readable program instructions by utilizing state information of the computer readable program instructions to personalize the electronic circuitry in order to perform aspects of the present invention.

Aspects of the present invention are described herein with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer readable program instructions.

These computer readable program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks. These computer readable program instructions may also be stored in a computer readable storage medium that can direct a computer a programmable data processing apparatus and or other devices to function in a particular manner such that the computer readable storage medium having instructions stored therein comprises an article of manufacture including instructions which implement aspects of the function act specified in the flowchart and or block diagram block or blocks.

The computer readable program instructions may also be loaded onto a computer other programmable data processing apparatus or other device to cause a series of operational steps to be performed on the computer other programmable apparatus or other device to produce a computer implemented process such that the instructions which execute on the computer other programmable apparatus or other device implement the functions acts specified in the flowchart and or block diagram block or blocks.

The flowchart and block diagrams in the Figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of instructions which comprises one or more executable instructions for implementing the specified logical function s . In some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or carry out combinations of special purpose hardware and computer instructions.

The descriptions of the various embodiments of the present disclosure have been presented for purposes of illustration but are not intended to be exhaustive or limited to the embodiments disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the described embodiments. The terminology used herein was chosen to explain the principles of the embodiments the practical application or technical improvement over technologies found in the marketplace or to enable others of ordinary skill in the art to understand the embodiments disclosed herein.

