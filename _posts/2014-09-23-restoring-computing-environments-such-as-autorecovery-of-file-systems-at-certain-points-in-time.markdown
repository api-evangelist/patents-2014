---

title: Restoring computing environments, such as autorecovery of file systems at certain points in time
abstract: A method and system for restoring a computing environment from a secondary data store, and facilitating such restoration, is described. In some examples, the system copies the configuration parameters of a computing environment, such as a file system, as well as the data within the file system, and transfers the copies to secondary storage for later restoration. For example, the system may generate an xml file of the configuration parameters of the computing environment when a backup operation of the computing environment is performed, and store the xml file along with copies of the data from the computing environment in secondary storage.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09092378&OS=09092378&RS=09092378
owner: Commvault Systems, Inc.
number: 09092378
owner_city: Tinton Falls
owner_country: US
publication_date: 20140923
---
The present application is a continuation of U.S. patent application Ser. No. 13 076 792 filed Mar. 31 2011 which is hereby incorporated herein by reference in its entirety.

Data storage systems facilitate the retention and subsequent recovery of electronic data produced by computing systems. Often data is stored remotely from a computing system in secondary or even tertiary storage devices. Example storage devices may include magnetic tapes optical disks flash memory and so on. Data is retained for a wide variety of purposes such as for compliance purposes backup purposes and so on. Once data is no longer needed to be readily or quickly available it may be sent to archive storage or other long term storage.

Typically recovery of a computing environment such as a file system and its associated data required many steps to be performed. For example an administrator may boot up a live CD to establish an interface such as an ISO image in which to restore the environment. Once running the interface may request parameters to be entered by the administrator such as host specific parameters e.g. name IP address name of server that contains the restoration data and so on . Once the parameters are received the interface may request information regarding the system configuration or data set that the administrator would like to be restored e.g. what point in time and so on . Once receiving this information the interface may restore the computing environment and data as desired by the administrator. Utilization of such conventional multi touch or multi stage recovery techniques of a computing environment can be time consuming costly and resource intensive among other problems.

There is a need for a system that overcomes the above problems as well as providing additional benefits.

A method and system for restoring a computing environment from a secondary data store and facilitating such restoration is described. In some examples the system copies the configuration parameters of a computing environment such as a file system as well as the data within the file system and transfers the copies to secondary storage for later restoration. For example the system may generate an xml file of the configuration parameters of the computing environment when a backup operation of the computing environment is performed and store the xml file along with copies of the data from the computing environment in secondary storage.

In some examples the system restores and or recovers a computing environment by mounting and booting a live CD retrieving the configuration parameter information and retrieving the data. For example upon mount a live CD an interface is established that provisions a new computing environment retrieves an xml file containing the configuration parameters of the computing environment to be restored and locates and restores the data associated with the recovered computing environment.

In some examples the system may utilize a cloud computing environment such as a virtual machine or virtual layer hosted by a secondary storage environment in order to facilitate the restoring of a computing environment. For example a backup or other data copy process the system transfers an xml file containing configuration information for a computing environment along with the computing environment to cloud based computing resources. Having access to the configuration information the cloud based resources may host and or stage the computing environment in anticipation of future recovery requests. In response to a recovery request the system may locate the staged computing environment restore data associated with the computing environment and provide a fully restored computing environment.

The system therefore enables administrators and other users to quickly e.g. with few touches or inputs restore a computing environment at a specified point in time among other benefits. Unlike conventional systems that may only store the data of a system or require a data restoration interface to poll a user for information regarding a desired configuration of a restored computing environment the inventors have realized that providing configuration information to a bootable CD and or staging computing environments in a cloud based computing systems accessible by virtual environments enables a data storage system to quickly and efficiently recover computing environments such as file systems to users upon request.

The system will now be described with respect to various embodiments. The following description provides specific details for a thorough understanding of and enabling description for these embodiments of the system. However one skilled in the art will understand that the system may be practiced without these details. In other instances well known structures and functions have not been shown or described in detail to avoid unnecessarily obscuring the description of the embodiments of the system.

The terminology used in the description presented below is intended to be interpreted in its broadest reasonable manner even though it is being used in conjunction with a detailed description of certain specific embodiments of the system. Certain terms may even be emphasized below however any terminology intended to be interpreted in any restricted manner will be overtly and specifically defined as such in this Detailed Description section.

Aspects of the system can be embodied in a special purpose computer or data processor that is specifically programmed configured or constructed to perform one or more of the computer executable instructions explained in detail herein. Aspects of the system can also be practiced in distributed computing environments where tasks or modules are performed by remote processing devices which are linked through a communications network such as a Local Area Network LAN Wide Area Network WAN Storage Area Network SAN Fibre Channel or the Internet. In a distributed computing environment program modules may be located in both local and remote memory storage devices.

Aspects of the system may be stored or distributed on computer readable media including magnetically or optically readable computer discs hard wired or preprogrammed chips e.g. EEPROM semiconductor chips nanotechnology memory biological memory or other tangible data storage media. Indeed computer implemented instructions data structures screen displays and other data under aspects of the system may be distributed over the Internet or over other networks including wireless networks on a propagated signal on a propagation medium e.g. an electromagnetic wave s a sound wave etc. over a period of time or they may be provided on any analog or digital network packet switched circuit switched or other scheme . Those skilled in the relevant art will recognize that portions of the system reside on a server computer while corresponding portions reside on a client computer and thus while certain hardware platforms are described herein aspects of the system are equally applicable to nodes on a network.

The data storage server may perform various copy operations to make secondary copies of the data within the client and may transfer copies of the data to a secondary storage server . Additionally the data storage server may perform various copy operations of information associated with the configuration of the computing environment of the client such as configuration parameters or metadata. The secondary storage server may include a secondary data store such as one or more secondary storage devices e.g. magnetic tape optical disks and so on . The secondary storage server may also host various resources capable of expanding its physical storage capacity such as a virtual layer or virtual machine that utilizes resources within a cloud computing system . The cloud computing system may provide computation resources software resources data access resources data storage resources and so on to the secondary storage server and or the data storage server . For example the cloud computing system may maintain and or establish a portion of a restored computing environment to the data storage server during restoration of a computing environment originally provided at the client .

As described herein in some examples the secondary storage server includes a virtual layer configured to expand the storage capacity and provide other resources to the secondary storage server by providing a virtual computing environment. In general virtualization refers to the simultaneous hosting of one or more operating systems on a physical computer. Such virtual operating systems and their associated virtual resources are called virtual machines. Virtualization software sits between the virtual machines and the hardware of the physical computer. The applications may be any applications e.g. database applications file server applications mail server applications web server applications transaction processing applications UPnP serving applications media streaming applications data storage applications data restoration applications and so on that may run on the operating system. The virtual machine may also be connected to the various networks described herein.

The operating system may be connected to the virtual storage disks via the SAN which may be any type of SAN such as a Fibre Channel SAN an iSCSI SAN or any other type of SAN. A primary storage data store may store the virtual disks of the virtual machine hosted by the virtual layer . A virtual disk may correspond to one or more files e.g. one or more .vmdk or .vhd files on the primary storage data store. The primary storage data store may store a primary copy of the data of the virtual machine. Additionally or alternatively the virtual disks may be stored by other storage devices in a data storage system such as in the data store. Further details regarding the operation and components of the virtual layer may be found in U.S. patent application Ser. No. 12 553 294 filed on Sep. 3 2009 entitled SYSTEMS AND METHODS FOR MANAGEMENT OF VIRTUALIZATION DATA which is incorporated by reference in its entirety.

As discussed herein in some examples the system facilitates the storage and or restoration of data from a computing environment e.g. an environment at client to secondary storage resources e.g. secondary storage server . Further details regarding the components and processes utilized in the creating and storing of data such as the migrating of data from secondary storage to archive storage and the various hardware and software computing resources that implement the components shown in will now be discussed with respect to . is a block diagram illustrating various components and resources of a suitable data storage system .

The resources in the data storage system may employ the processes and techniques described herein. The data storage system includes a storage manager one or more data agents one or more secondary storage computing devices one or more storage devices one or more clients one or more data or information stores and a single instancing database an index a jobs agent an interface agent and a management agent . The system may represent a modular storage system such as the CommVault QiNetix system and also the CommVault GALAXY backup system available from CommVault Systems Inc. of Oceanport N.J. aspects of which are further described in commonly assigned U.S. Pat. No. 7 035 880 the entirety of which is incorporated by reference herein. The system may also represent a modular storage system such as the CommVault Simpana system also available from CommVault Systems Inc.

The data storage system may generally include combinations of hardware and software components associated with performing storage operations on electronic data. Storage operations include copying backing up creating storing retrieving and or migrating primary storage data e.g. data stores and or and secondary storage data which may include for example snapshot copies backup copies HSM copies archive copies and other types of copies of electronic data stored on storage devices . The system may provide one or more integrated management consoles for users or system processes to interface with in order to perform certain storage operations on electronic data as further described herein. Such integrated management consoles may be displayed at a central control facility or several similar consoles distributed throughout multiple network locations to provide global or geographically specific network data storage information.

In some examples storage operations may be performed according to various storage preferences for example as expressed by a user preference a storage policy a schedule policy and or a retention policy. A storage policy is generally a data structure or other information source that includes a set of preferences and other storage criteria associated with performing a storage operation. The preferences and storage criteria may include but are not limited to a storage location relationships between system components network pathways to utilize in a storage operation data characteristics compression or encryption requirements preferred system components to utilize in a storage operation a single instancing or variable instancing policy to apply to the data and or other criteria relating to a storage operation. For example a storage policy may indicate that certain data is to be stored in the storage device retained for a specified period of time before being aged to another tier of secondary storage copied to the storage device using a specified number of data streams and so on.

A schedule policy may specify a frequency with which to perform storage operations and a window of time within which to perform them. For example a schedule policy may specify that a storage operation is to be performed every Saturday morning from 2 00 a.m. to 4 00 a.m. In some cases the storage policy includes information generally specified by the schedule policy. Put another way the storage policy includes the schedule policy. Storage policies and or schedule policies may be stored in a database of the storage manager to archive media as metadata for use in restore operations or other storage operations or to other locations or components of the system .

The system may comprise a storage operation cell that is one of multiple storage operation cells arranged in a hierarchy or other organization. Storage operation cells may be related to backup cells and provide some or all of the functionality of backup cells as described in commonly assigned U.S. Pat. No. 7 395 282 which is incorporated herein by reference in its entirety. However storage operation cells may also perform additional types of storage operations and other types of storage management functions that are not generally offered by backup cells.

Storage operation cells may contain not only physical devices but also may represent logical concepts organizations and hierarchies. For example a first storage operation cell may be configured to perform a first type of storage operations such as HSM operations which may include backup or other types of data migration and may include a variety of physical components including a storage manager or management agent a secondary storage computing device a client and other components as described herein. A second storage operation cell may contain the same or similar physical components however it may be configured to perform a second type of storage operations such as storage resource management SRM operations and may include monitoring a primary data copy or performing other known SRM operations.

Thus as can be seen from the above although the first and second storage operation cells are logically distinct entities configured to perform different management functions HSM and SRM respectively each storage operation cell may contain the same or similar physical devices. Alternatively different storage operation cells may contain some of the same physical devices and not others. For example a storage operation cell configured to perform SRM tasks may contain a secondary storage computing device client or other network device connected to a primary storage volume while a storage operation cell configured to perform HSM tasks may instead include a secondary storage computing device client or other network device connected to a secondary storage volume and not contain the elements or components associated with and including the primary storage volume. The term connected as used herein does not necessarily require a physical connection rather it could refer to two devices that are operably coupled to each other communicably coupled to each other in communication with each other or more generally refer to the capability of two devices to communicate with each other. These two storage operation cells however may each include a different storage manager that coordinates storage operations via the same secondary storage computing devices and storage devices . This overlapping configuration allows storage resources to be accessed by more than one storage manager such that multiple paths exist to each storage device facilitating failover load balancing and promoting robust data access via alternative routes.

Alternatively or additionally the same storage manager may control two or more storage operation cells whether or not each storage operation cell has its own dedicated storage manager . Moreover in certain embodiments the extent or type of overlap may be user defined through a control console or may be automatically configured to optimize data storage and or retrieval.

Data agent may be a software module or part of a software module that is generally responsible for performing storage operations on the data of the client stored in data store or other memory location. Each client may have at least one data agent and the system can support multiple clients . Data agent may be distributed between client and storage manager and any other intermediate components or it may be deployed from a remote location or its functions approximated by a remote process that performs some or all of the functions of data agent .

The overall system may employ multiple data agents each of which may perform storage operations on data associated with a different application. For example different individual data agents may be designed to handle Microsoft Exchange data Lotus Notes data Microsoft Windows 2000 file system data Microsoft Active Directory Objects data and other types of data known in the art. Other examples may employ one or more generic data agents that can handle and process multiple data types rather than using the specialized data agents described above.

If a client has two or more types of data one data agent may be required for each data type to perform storage operations on the data of the client . For example to back up migrate and restore all the data on a Microsoft Exchange 2000 server the client may use one Microsoft Exchange 2000 Mailbox data agent to back up the Exchange 2000 mailboxes one Microsoft Exchange 2000 Database data agent to back up the Exchange 2000 databases one Microsoft Exchange 2000 Public Folder data agent to back up the Exchange 2000 Public Folders and one Microsoft Windows 2000 File System data agent to back up the file system of the client . These data agents would be treated as four separate data agents by the system even though they reside on the same client .

Alternatively the overall system may use one or more generic data agents each of which may be capable of handling two or more data types. For example one generic data agent may be used to back up migrate and restore Microsoft Exchange 2000 Mailbox data and Microsoft Exchange 2000 Database data while another generic data agent may handle Microsoft Exchange 2000 Public Folder data and Microsoft Windows 2000 File System data and so on.

Data agents may be responsible for arranging or packing data to be copied or migrated into a certain format such as an archive file. Nonetheless it will be understood that this represents only one example and any suitable packing or containerization technique or transfer methodology may be used if desired. Such an archive file may include metadata a list of files or data objects copied the file and data objects themselves. Moreover any data moved by the data agents may be tracked within the system by updating indexes associated with appropriate storage managers or secondary storage computing devices . As used herein a file or a data object refers to any collection or grouping of bytes of data that can be viewed as one or more logical units.

Storage manager may be a software module or other application that coordinates and controls storage operations performed by the system . Storage manager may communicate with some or all elements of the system including clients data agents secondary storage computing devices and storage devices to initiate and manage storage operations e.g. backups migrations data recovery operations and so on.

Storage manager may include a jobs agent that monitors the status of some or all storage operations previously performed currently being performed or scheduled to be performed by the system . Jobs agent may be communicatively coupled to an interface agent e.g. a software module or application . Interface agent may include information processing and display software such as a graphical user interface GUI an application programming interface API or other interactive interface through which users and system processes can retrieve information about the status of storage operations. For example in an arrangement of multiple storage operations cell through interface agent users may optionally issue instructions to various storage operation cells regarding performance of the storage operations as described and contemplated herein. For example a user may modify a schedule concerning the number of pending snapshot copies or other types of copies scheduled as needed to suit particular needs or requirements. As another example a user may employ the GUI to view the status of pending storage operations in some or all of the storage operation cells in a given network to monitor the status of certain components in a particular storage operation cell e.g. the amount of storage capacity left in a particular storage device to provide criteria for searches of data stored in storage devices and so on.

Storage manager may also include a management agent that is typically implemented as a software module or application program. In general management agent provides an interface that allows various management agents in other storage operation cells to communicate with one another. For example assume a certain network configuration includes multiple storage operation cells hierarchically arranged or otherwise logically related in a WAN or LAN configuration. With this arrangement each storage operation cell may be connected to the other through each respective interface agent . This allows each storage operation cell to send and receive certain pertinent information from other storage operation cells including status information routing information information regarding capacity and utilization etc. These communications paths may also be used to convey information and instructions regarding storage operations.

For example a management agent in a first storage operation cell may communicate with a management agent in a second storage operation cell regarding the status of storage operations in the second storage operation cell. Another illustrative example includes the case where a management agent in a first storage operation cell communicates with a management agent in a second storage operation cell to control storage manager and other components of the second storage operation cell via management agent contained in storage manager .

Another example is the case where management agent in a first storage operation cell communicates directly with and controls the components in a second storage operation cell and bypasses the storage manager in the second storage operation cell. If desired storage operation cells can also be organized hierarchically such that hierarchically superior cells control or pass information to hierarchically subordinate cells or vice versa.

Storage manager may also maintain an index a database or other data structure . The data stored in database may be used to indicate logical associations between components of the system user preferences management tasks media containerization and data storage information or other useful data. For example the storage manager may use data from database to track logical associations between secondary storage computing device and storage devices or movement of data as containerized from primary to secondary storage .

Generally speaking the secondary storage computing device which may also be referred to as a media agent may be implemented as a software module that conveys or transfers data as directed by storage manager between a client and one or more storage devices such as a tape library a magnetic media storage device an optical media storage device or any other suitable storage device. In some examples secondary storage computing device may be communicatively coupled to and control a storage device . A secondary storage computing device may be considered to be associated with a particular storage device if that secondary storage computing device is capable of routing and storing data to that particular storage device .

In operation a secondary storage computing device associated with a particular storage device may instruct the storage device to use a robotic arm or other retrieval means to load or eject a certain storage media and to subsequently archive migrate or restore data to or from that media. Secondary storage computing device may communicate with a storage device via a suitable communications path such as a SCSI or Fibre Channel communications link. In some embodiments the storage device may be communicatively coupled to the storage manager via a SAN.

Each secondary storage computing device may maintain an index a database or other data structure that may store index data generated during storage operations for secondary storage SS as described herein including creating a metabase MB . For example performing storage operations on Microsoft Exchange data may generate index data. Such index data provides a secondary storage computing device or other external device with a fast and efficient mechanism for locating data stored or backed up. Thus a secondary storage computing device index or a database of a storage manager may store data associating a client with a particular secondary storage computing device or storage device for example as specified in a storage policy while a database or other data structure in secondary storage computing device may indicate where specifically the data of the client is stored in storage device what specific files were stored and other information associated with storage of the data of the client . In some examples such index data may be stored along with the data backed up in a storage device with an additional copy of the index data written to index cache in a secondary storage device. Thus the data is readily available for use in storage operations and other activities without having to be first retrieved from the storage device .

Generally speaking information stored in a cache is typically recent information that reflects certain particulars about operations that have recently occurred. After a certain period of time this information is sent to secondary storage and tracked. This information may need to be retrieved and uploaded back into a cache or other memory in a secondary computing device before data can be retrieved from storage device . In some examples the cached information may include information regarding format or containerization of archives or other files stored on storage device .

One or more of the secondary storage computing devices may also maintain one or more single instance databases . Single instancing alternatively called data deduplication generally refers to storing in secondary storage only a single instance of each data object or data block in a set of data e.g. primary data .More details as to single instancing may be found in one or more of the following previously referenced U.S. patent application Ser. Nos. 11 269 512 12 145 347 12 145 342 11 963 623 11 950 376 and 61 100 686 which are incorporated by reference in their entirety.

In some examples the secondary storage computing devices maintain one or more variable instance databases. Variable instancing generally refers to storing in secondary storage one or more instances but fewer than the total number of instances of each data object or data block in a set of data e.g. primary data . More details as to variable instancing may be found in the previously referenced U.S. Patent Application No. 61 164 803 which is incorporated by reference in its entirety.

In some examples certain components may reside and execute on the same computer. For example in some embodiments a client such as a data agent or a storage manager coordinates and directs local archiving migration and retrieval application functions as further described in the previously referenced U.S. patent application Ser. No. 09 610 738 which is incorporated by reference in its entirety. This client can function independently or together with other similar clients .

The secondary storage computing devices each has its own associated metabase . Each client may also have its own associated metabase . However in some embodiments each tier of storage such as primary storage secondary storage tertiary storage etc. may have multiple metabases or a centralized metabase as described herein. For example rather than a separate metabase or index associated with each client the metabases on this storage tier may be centralized. Similarly second and other tiers of storage may have either centralized or distributed metabases. Moreover mixed architecture systems may be used if desired that may include a first tier centralized metabase system coupled to a second tier storage system having distributed metabases and vice versa and so on.

Moreover in operation a storage manager or other management module may keep track of certain information that allows the storage manager to select designate or otherwise identify metabases to be searched in response to certain queries as further described herein. Movement of data between primary and secondary storage may also involve movement of associated metadata and other tracking information as further described herein.

In some examples primary data may be organized into one or more sub clients. A sub client is a portion of the data of one or more clients and can contain either all of the data of the clients or a designated subset thereof. As depicted in the data store includes two sub clients. For example an administrator or other user with the appropriate permissions the term administrator is used herein for brevity may find it preferable to separate email data from financial data using two different sub clients having different storage preferences retention criteria and so on.

In some examples the data storage system includes a content indexing component not shown . The context indexing component may select a copy of data to be indexed or stored identify content within the copy of the data and update an index of content to make the content available for searching or other purposes. For example the component may add information such as the location of the content keywords found within the content and other supplemental information about the content that may be helpful for locating the content during a search.

Thus computing environment and or data storage system may include a request component configured to receive a request to restore a computing environment at a specified point in time a configuration component configured to configure a restoration interface using a configuration file associated with the computing environment and or a retrieval component configured to retrieve data associated with the computing environment.

As described herein the system in some examples facilitates the restoration of a computing environment by storing configuration parameters of a computing environment along with data from the computing environment in secondary storage. is a flow diagram illustrating a routine for storing data along with parameters of a computing environment in a secondary data store.

In step the system receives an indication to generate a copy of a computing environment such as a file system. For example a data storage server receives instructions from a storage management server within a hierarchical data storage system to create and or generate a secondary copy of the file system at client .

In step the system captures parameters associated with the computing environment at a specified point in time and or state of the computing environment. For example the data storage server performs a copy operation of the configuration parameters associated with the file system of client . The data storage server may copy various metadata such as a host name of the file system the IP or network address of the file system disk layout information time information data storage information and other metadata providing information for a system at a specified point in time. That is the system captures some or all parameters of a system that identify the state of the system at a certain point in time such as parameters associated with the device and processes composing a system.

For example the data storage server may capture some or all parameters from a system configuration xml file such as 

In step the system makes a copy of the captured parameters. The system may perform some or all of the copy operations described herein when making a copy of the system configuration. For example the data storage server may make an xml copy of the system configuration file of the computing environment of client . In step the system makes a copy of the current data within the computing environment such as the data generated by the file system. For example the data storage server may create one or more secondary copies of data stored at client such as those described herein.

In step the system transfers the copy of the captured parameters associated with the computing environment along with one or more copies of the data within the computing environment to secondary storage. For example the data storage server may stream or otherwise transfer the copies to the secondary storage server .

In some examples the system may determine in step whether new data is created within the computing environment. When new data is created routine may proceed to step and make a copy of the changed data. That is the system makes a copy of the changed or incremental data within the computing environment such as the data generated by the file system since a previous copy operation. Thus in some cases the system may generate a backup copy of a computing environment that includes one copy of the system configuration of the computing environment and one or more copies of the data created and or modified within the computing environment. Further details regarding the storage of secondary copies associated with a computing environment will now be discussed.

By storing the system configuration copy along with a live CD within the cloud computing system the system may facilitate the hosting and or staging a computing environment to be restored at later dates. For example a data storage server may access via the virtual machine a staged or operable computing environment at various points in time hosted by the cloud computing system . Such access facilitates a quick and easy restoration of the computing environment among other things which will now be discussed.

As described herein the system in some examples provides for a one touch or quick restoration of a computing environment such as a file system. is flow diagram illustrating a routine for restoring a computing environment from a secondary data store and or recovering a computing environment on a different computer.

In step the system receives a request to restore a file system or other computing environment at a certain point in time. For example the system via the data storage server receives a request to recover the computing environment of a computer that crashed.

In step the system retrieves the captured parameters of the file system as well as a desired secondary copy of the data within the file system. For example the data storage server retrieves one or more secondary copies of the data from the computing environment along with an xml file containing parameters associated with the configuration of the file system.

In step the system boots an interface with the retrieve parameters and the one or more copies of the data. For example the system boots a live CD and configures the retrieved xml file . In step the system restores the file system at the requested point in time. That is the system provisions a machine with the live CD configures the provisioned machine with the parameters from the xml file retrieves the data from the secondary copies of the data and finishes the restoration of the file system. Thus the system enables a user to simply request restoration of a file system with a desired version of the data and automatically establishes and configures the file system during restoration.

In some examples the system hosts and or stages a computing environment in advance of requests to restore the computing environment. is a flow diagram illustrating a routine for restoring a computing environment from a cloud based secondary data store.

In step the system receives a request to restore a file system or other computing environment at a certain point in time. For example the system via the data storage server receives a request to recover the computing environment of a computer that is no longer operable.

In step the system determines a requested version of a file system is running and or staged within a virtual computing environment. For example the system identifies a version of the file system e.g. a bootable image and a configuration file that is available to be restored.

In step the system selects the data to be restored. For example the system may select one or more secondary copies of the data of the file system to be restored along with the configure file system. That is the system may select one or more secondary copies from a group of secondary copies performed on different days of the week.

In step the system restores the file system at the requested point in time. That is the system retrieves the configured file system retrieves the data from the secondary copies of the data and finishes the restoration of the file system. Thus the system enables a user to simply request restoration of a computing environment with a desired version of the data and automatically provides the computing environment during restoration.

Thus in some examples the system enables the restoration of a computing environment such as a file system without requiring a requesting user to provide information associated with the computing environment to be restored. By storing system configuration parameters along with data to be recovered the system in some examples automatically provisions configures and or recovers a computing environment. That is the system may provide one touch recovery of a computing environment among other benefits.

From the foregoing it will be appreciated that specific examples and implementations of the system have been described herein for purposes of illustration but that various modifications may be made without deviating from the spirit and scope of the system. Accordingly the system is not limited except as by the appended claims.

Unless the context clearly requires otherwise throughout the description and the claims the words comprise comprising and the like are to be construed in an inclusive sense as opposed to an exclusive or exhaustive sense that is to say in the sense of including but not limited to. The word coupled as generally used herein refers to two or more elements that may be either directly connected or connected by way of one or more intermediate elements. Additionally the words herein above below and words of similar import when used in this application shall refer to this application as a whole and not to any particular portions of this application. Where the context permits words in the above Detailed Description using the singular or plural number may also include the plural or singular number respectively. The word or in reference to a list of two or more items that word covers all of the following interpretations of the word any of the items in the list all of the items in the list and any combination of the items in the list.

The above detailed description of embodiments of the system is not intended to be exhaustive or to limit the system to the precise form disclosed above. While specific embodiments of and examples for the system are described above for illustrative purposes various equivalent modifications are possible within the scope of the system as those skilled in the relevant art will recognize. For example while processes or blocks are presented in a given order alternative embodiments may perform routines having steps or employ systems having blocks in a different order and some processes or blocks may be deleted moved added subdivided combined and or modified. Each of these processes or blocks may be implemented in a variety of different ways. Also while processes or blocks are at times shown as being performed in series these processes or blocks may instead be performed in parallel or may be performed at different times.

The teachings of the system provided herein can be applied to other systems not necessarily the system described above. The elements and acts of the various embodiments described above can be combined to provide further embodiments.

These and other changes can be made to the system in light of the above Detailed Description. While the above description details certain embodiments of the system and describes the best mode contemplated no matter how detailed the above appears in text the system can be practiced in many ways. Details of the system may vary considerably in implementation details while still being encompassed by the system disclosed herein. As noted above particular terminology used when describing certain features or aspects of the system should not be taken to imply that the terminology is being redefined herein to be restricted to any specific characteristics features or aspects of the system with which that terminology is associated. In general the terms used in the following claims should not be construed to limit the system to the specific embodiments disclosed in the specification unless the above Detailed Description section explicitly defines such terms. Accordingly the actual scope of the system encompasses not only the disclosed embodiments but also all equivalent ways of practicing or implementing the system under the claims.

While certain aspects of the system are presented below in certain claim forms the inventors contemplate the various aspects of the system in any number of claim forms. For example while only one aspect of the system is recited as embodied in a computer readable medium other aspects may likewise be embodied in a computer readable medium. Accordingly the inventors reserve the right to add additional claims after filing the application to pursue such additional claim forms for other aspects of the system.

