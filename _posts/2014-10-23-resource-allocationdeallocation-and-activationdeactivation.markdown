---

title: Resource allocation/de-allocation and activation/deactivation
abstract: A computer-implemented method, carried out by one or more processors, for managing resources in a server environment. In an embodiment, the method includes determining to prepare one or more virtual resources for activation of one or more allocated host resources, based, at least in part, on virtual resource definitions. The one or more allocated host resources and the one or more virtual resources are activated. Activation of the one or more virtual resources is finalized, wherein finalizing the activation includes updating the virtual resource definitions.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09400689&OS=09400689&RS=09400689
owner: International Business Machines Corporation
number: 09400689
owner_city: Armonk
owner_country: US
publication_date: 20141023
---
In a virtual server environment resources are typically allocated for utilization by virtual servers and other resource consumers. In a cloud environment where a large number of virtual servers competing for and sharing common resources is deployed the frequency of resource allocations and de allocations is by an order of magnitude higher than in traditional server environments. Additional focus is put on input and output resources where multiple and often time consuming actions may be needed to prepare a resource for use by a virtual server. It is desirable that the resource activations and corresponding deactivations be performed in an automated and synchronized manner.

Embodiments of the present invention disclose a method computer program product and computer system for managing resources in a server environment. A computer implemented method includes determining by one or more processors to prepare one or more virtual resources for activation of one or more allocated host resources based at least in part on virtual resource definitions. The allocated host resources and the one or more virtual resources are activated. Activation of the one or more virtual resources is finalized wherein finalizing the activation includes updating the virtual resource definitions.

Embodiments in accordance with the present invention manage resource allocations and activations as well as de allocations and deactivations. Virtual resources exist as part of a resource consumer. A Resource consumer may be a virtual server for example a hypervisor. Although a hypervisor is generally a resource consumer that provides virtual resources to its guests a hypervisor may also consume resources for its own internal purposes. Appropriate host resources are assigned to these virtual resources when the resource consumer is activated. Resource allocation pertains to assigning host resources to virtual resources such that a resource consumer can utilize the virtual resources. Embodiments in accordance with the present invention provide different types of host resources on multiple levels i.e. physical server and hypervisors that are assigned to resource consumers deployed on multiple levels of a server or within a server cluster. The number of available host resources is typically limited due to equipment constraints and even when the host resources are virtualized resources based on physical resources. For instance an upper limit exists for the number of virtual adapters hosted by a single physical adapter.

Resource allocation is typically performed on demand when resources are needed to activate a resource consumer or when additional resources are called for an active resource consumer. Correspondingly resource de allocation is typically performed when the resource consumer is deactivated. Therefore on subsequent resource consumer activations different host resources can be allocated to the virtual resources. Also the same host resource can be allocated to different virtual resources of the same or different resource consumers at different points in time.

In order to utilize a virtual resource a resource activation is typically performed. Resource activation actions can include clearing main memory before assignment to a resource consumer and updating network configuration and storage access to tables in host firmware i.e. physical server and or hypervisors . The activation procedure can depend on a virtualization type where the virtualization type is how the host resource is virtualized so that for instance a single physical host resource represents multiple virtualized host resources. The activation procedure can also depend on where the resource consumer is deployed more particularly on which hypervisor level. Activation of both the virtual resource and the assigned host resource allows for resource utilization by server firmware hypervisors and privileged operating systems.

Example embodiments in accordance with the present invention will now be described in detail with reference to the drawing figures. is a functional block diagram illustrating a distributed data processing environment in accordance with one embodiment of the present invention. The distributed data processing environment includes physical server management console and external physical host resource all interconnected over management network .

Physical server represents a computer system utilizing clustered computers and components that act as a single pool of seamless resources when accessed through I O network as is common in data centers and with cloud computing applications. In general physical server is representative of any programmable electronic device or combination of programmable electronic devices capable of executing machine readable program instructions and communicating with other computer devices via a network.

Management console manages physical server external physical host resource and the components therein. Management console provides both a graphical user interface GUI and application programming interfaces API for automated configuration management. Resource manager residing in management console allows for the management of activating and deactivating resources. Resource manager can bundle resource activation steps for two or more resource consumers where resource manager can perform activation steps in parallel for the two or more resource consumers. Resource manager can also execute activation and deactivation when reassigning host resources.

In this embodiment hypervisor provides execution environments for multiple virtual servers such as virtual server A and virtual server B to run on physical server . In addition to virtual server A and B hypervisor can host one or more additional hypervisors not illustrated in . Therefore virtual server A virtual server B and hypervisor can execute on one or more underlying levels of hypervisors. A server cluster can include one or more physical servers therefore virtual servers can execute on different nodes i.e. physical servers of the server cluster.

Virtual server A virtual server B and hypervisor are resource consumers and each includes virtual resource definitions . Virtual resource definitions can include but are not limited to processors memory and I O ports. Virtual resources are supported by physical resources which can exist internally or externally of physical server . Typically external and internal host resources include virtual host resources. For example virtual processors are based on physical processors and virtual network adapters are based on physical network adapters. Examples of providers for virtualization of host resources can include physical server hardware and firmware hypervisor or an independent virtualization entity not illustrated in . In this embodiment internal physical host resource and external physical host resource respectively include internal virtual host resources and external virtual host resources . I O network can connect physical server with external physical host resource .

In general management network can be any combination of connections and protocols that can support communications between physical server management console and external physical host resource . I O network can be any combination of connections and protocols that s can support communications between physical server and external physical host resource . Typically management network and I O network are independent from one and other. Management network and I O network can include for example a local area network LAN a wide area network WAN such as the internet a cellular network or any combination of the preceding and can further include wired wireless and or fiber optic connections.

Resource allocation allocation of host resources to virtual resources and resource activation of both virtual resources and the assigned host resources is typically performed when a resource consumer owning the virtual resources is activated and when resources are added to an active resource consumer. Resource de allocation and resource deactivation of both virtual resources and the assigned host resources is typically performed when a resource consumer owning a virtual resource is deactivated and when resources are removed from an active resource consumer. Typically the allocation and de allocation is a one step operation. However resource activation and deactivation can consist of multiple steps which affect both the virtual resources and the associated host resources and depend on the operational state of the resource consumer.

Virtual resources typically exist as part of a resource consumer more specifically as part of the definitions of the resource consumer. For each type of virtual resource there is a virtual resource provider managing the virtual resource. For example a network manager manages communication network ports or a storage manager manages storage resources and storage network ports. Managing virtual resources includes the activating and deactivating of the virtual resources. Host resources are present when there are underlying physical resources present and when the virtual entity providing appropriate virtualized host resources is present as well. Host resources can be organized in resource pools from which resource manager can allocated each individual resource. For each type of host resource there is a host resource provider that manages the host resource.

Resource manager prepares a virtual resource for activation of allocated host resources step . Resource manager queries defined virtual resources and host resources where resource manager utilizes a resource consumer for the queries. Resource manager determines availability of the host resources and allocates the host resources where resource manager utilizes resource consumer virtual resource providers and host resource pools for the determination and allocation. In this embodiment resource manager prepares internal virtual host resources and external virtual host resources for activation of allocated internal physical host resources and external physical host resources respectively. Resource manager utilizes the resource consumer and virtual resource providers to prepare a virtual resource for activation of allocated host resources. Virtual resource definitions dictate the preparation of internal virtual host resources and external virtual host resources .

Resource manager activates host resources step . In this embodiment resource manager activates both external physical host resource and internal physical host resource according to the needs of the resource consumers. Resource manager updates virtual resource definitions to indicate that external physical host resource and internal physical host resource are activated. Resource manager utilizes the resource consumer virtual resource providers host resource pools and host resource providers to activate the host resources i.e. external physical host resource and internal physical host resource .

Resource manager determines to continue virtual resource activation subsequent to the activation of the allocated host resources step . In this embodiment resource manager performs the virtual resource activation for internal virtual host resources and external virtual host resources . Resource manager utilizes the resource consumer and the virtual resource providers to continue the activation of virtual resources.

Resource manager finalizes virtual resource activations step . In this embodiment resource manager performs a finalization of the activation of internal virtual host resources and external virtual host resources . This finalization can include updating I O configuration definitions of a particular virtual machine associated with the virtual resource. In this example resource manager updates I O configuration definitions for virtual server A and virtual server B. Resource manager utilizes the resource consumer and the virtual resource providers to finalize the activation subsequent to resource consumer activation.

Resource manager prepares virtual resource for deactivation step . Resource manager prepares for virtual resource deactivation while the resource consumer is still active. Resource manager utilizes the resource consumer and virtual resource providers for the preparation of the virtual resource for deactivation.

Resource manager prepares virtual resource for deactivation of allocated host resources step . Subsequent to the deactivation of the virtual machines i.e. virtual server A and virtual server B resource manager prepares internal virtual host resources and external virtual host resources for deactivation of allocated internal physical host resources and external physical host resources respectively. Virtual resource definitions dictate the preparation of internal virtual host resources and external virtual host resources . Resource manager utilizes the resource consumer and virtual resource providers to prepare the virtual resources for deactivation of the associated host resources.

Resource manager deactivates host resources step . In this embodiment resource manager deactivates both external physical host resource and internal physical host resource . Resource manager updates virtual resource definitions to indicate that external physical host resource and internal physical host resource are deactivated. Resource manager utilizes the resource consumer virtual resource providers host resource pools and host resource providers to deactivate the host resources.

Resource manager determines to continue virtual resource deactivation subsequent to the deactivation of the allocated host resources step . In this embodiment resource manager performs the virtual resource deactivation for internal virtual host resources and external virtual host resources subsequent to the deactivation of both external physical host resource and internal physical host resource . Resource manager utilizes the resource consumer and the virtual providers to finalize virtual resource deactivation and de allocate the host resources.

Typically for each resource consumer there are multiple virtual resources defined where some of the virtual resources are of the same type. Accordingly the virtual resources of a resource consumer need multiple host resources where some of the host resources are of the same type. Resource manager has the ability to combine resource activations for virtual resources and host resources of the same type. For example virtual resources of the same type are sent to the responsible virtual resource provider in a single request rather than individual requests for each virtual resource. Similarly host resources of the same type are sent to the responsible host resource provider in a single request rather than individual requests for each host resource. To enable parallel execution of virtual resource and host resource activations by different virtual resource providers and host resource providers resource manager utilizes a separate execution thread for each virtual resource provider and host resource provider.

Resource manager prepares next activation step for resource consumer and step A B . In this embodiment resource manager prepares the next activation step for resource consumer of the first thread in parallel to the preparation of the next step for resource consumer of the second thread. Resource manager idles while waiting for the two pending resource consumer threads to arrive subsequent to the completion of the preparation for each resource consumer thread or for any of the resource consumer threads to timeout. Resource manager suspends all active resource consumer threads except one resource consumer thread.

Resource manager receives virtual resources host resources from resource consumer threads and sorts them by virtual resource provider host resource provider step . In this embodiment resource manager operating on one thread receives virtual resources and host resources from the first consumer thread and the second consumer thread. Resource manager sorts the virtual resources and the host resources according to virtual resource providers and host resource providers. Resource manager sorts the virtual resources according to associated virtual resource providers and sorts the host resources according to associated host resource providers.

Resource manager sends requests to virtual resource providers host resource providers step A B . In this embodiment resource manager sends a single request to each virtual resource provider or host resource provider rather than multiple requests to each virtual resource provider or host resource provider. For example in step A resource manager sends a request to a first virtual resource provider or host resource provider and in step B resource manager sends a request to a second virtual resource provider or host resource provider. In this embodiment resource manager performs step A and B independently but in parallel utilizing an additional thread for the second virtual resource provider or host resource provider.

Resource manager evaluates results of virtual resource providers host resource providers step . In this embodiment resource manager idles while waiting for the completion of the first virtual resource provider or host resource provider and the second virtual resource provider or host resource provider threads. Subsequent to the completion of the first virtual resource provider or host resource provider and the second virtual resource provider or host resource provider threads resource manager evaluates the results. Based on the evaluation resource manager can determine whether or not to perform a rollback on any one of the two virtual resource provider or host resource provider threads.

Resource manager resumes resource consumers step A B . For the resource consumer in the first thread of step A and the second thread of step B resource manager determines to resume the first resource consumer thread and the second resource consumer thread. The resulting continuation of the first resource consumer thread is independently parallel with the second resource consumer thread.

Typically resource manager does not perform further resource related activities when adding or removing virtual resource definitions to or from an inactive resource consumer. In the event there are additions to the virtual resource definition to an active resource consumer resource manager implements the additions to the virtual resource definitions to use a resource. Resource manager performs both the allocation of appropriate host resources and the multi step activation of the resource. The number of steps to activate the added resource is similar to the number of steps to activate the resource in the context of a resource consumer activation where the difference is that resource manager does not activate the resource consumer. In the event there is a removal of virtual resource definition from an active resource consumer resource manager deactivates and de allocates the resource. Resource manager can activate and allocate the resource for another resource consumer therefore resource manager performs a multi step deactivation of the resource and the de allocation of associated host resources. The number of steps to deactivate the resource to be removed is similar to the number of steps to deactivate a resource in the context of a the resource consumer deactivation where the difference is that resource manager does not deactivate the resource consumer.

Resource manager request preparation for virtual resource deactivations for resource consumer step . In this embodiment resource manager determines virtual resource definitions are removed for resource consumer . Resource manager can send a request to a virtual resource provider where the virtual resource provider prepares for the deactivation of the virtual resources of resource consumer .

Resource manager shuts down resource consumer step . In this embodiment resource manager shuts down resource consumer where shutting down resource consumer also includes subsequent steps of deactivating host resources for resource consumer .

Resource manager requests preparation for host resource deactivations step . In this embodiment resource manager sends a request to the virtual resource provider to prepare the host resources of resource consumer for deactivations. The virtual resource provider prepares for the deactivation of the host resources for resource consumer . Resource manager can bundle preparations for deactivation and activation of host resources of multiple resource consumers i.e. resource consumer and resource consumer for a single virtual resource provider where the single virtual resource provider performs preparations for deactivation and activation of host resources of multiple resource consumers concurrently.

Resource manager requests host resource deactivations step . In this embodiment resource manager sends a request to the host resource provider to deactivate host resources for resource consumer . The host resource provider deactivates the host resources for resource consumer . Resource manager can bundle the deactivation and activation of host resources of multiple resource consumers i.e. resource consumer and resource consumer for a single host resource provider where the single host resource provider performs deactivation and activation of host resources of multiple resource consumers concurrently.

Resource manager requests continuation of virtual resource deactivations step . In this embodiment resource manager sends a request to the virtual resource provider for continuation of deactivation of virtual resources of resource consumer . The virtual resource provider continues with the deactivation of the virtual resources for resource consumer . Resource manager can bundle the continuation of deactivation and activation of virtual resources of multiple resource consumers i.e. resource consumer and resource consumer for a single host resource provider where the single host resource provider performs continuations of deactivation and activation of virtual resources of multiple resource consumers concurrently.

Resource manager requests preparation for host resource activations step . In this embodiment resource manager sends a request to the virtual resource provider to prepare the host resources of resource consumer for activations. The virtual resource provider prepares for the activation of the host resources for resource consumer . As previously mentioned in the discussion of resource manager can bundle preparations for deactivation and activation of host resources of multiple resource consumers i.e. resource consumer and resource consumer for a single virtual resource provider where the single virtual resource provider performs preparations for deactivation and activation of host resources of multiple resource consumers concurrently.

Resource manager request host resource activations step . In this embodiment resource manager sends a request to the host resource provider to activate host resources for resource consumer . The host resource provider activates the host resources for resource consumer . As previously mentioned in the discussion of resource manager can bundle the deactivation and activation of host resources of multiple resource consumers i.e. resource consumer and resource consumer for a single host resource provider where the single host resource provider performs deactivation and activation of host resources of multiple resource consumers concurrently.

Resource manager requests continuation of virtual resource activations step . In this embodiment resource manager sends a request to the virtual resource provider for continuation of activation of virtual resources of resource consumer . The virtual resource provider continues with the activation of the virtual resources for resource consumer . As previously mentioned in the discussion of resource manager can bundle the continuation of deactivation and activation of virtual resources of multiple resource consumers i.e. resource consumer and resource consumer for a single virtual resource provider where the single virtual resource provider performs continuations of deactivation and activation of virtual resources of multiple resource consumers concurrently.

Resource manager starts up resource consumer step . In this embodiment resource manager starts up resource consumer where starting up resource consumer also includes subsequent steps of activating virtual resources for resource consumer .

Resource manager requests finalization of virtual resource activations step . In this embodiment resource manager can send a request to the virtual resource provider where the virtual resource provider finalizes the activation of the virtual resources of resource consumer . Finalization of the virtual resource activation allows for resource consumer to utilize the activated resources.

Management console include communications fabric which provides communications between computer processor s memory persistent storage communications unit and input output I O interface s . Communications fabric can be implemented with any architecture designed for passing data and or control information between processors such as microprocessors communications and network processors etc. system memory peripheral devices and any other hardware components within a system. For example communications fabric can be implemented with one or more buses.

Memory and persistent storage are examples of computer readable tangible storage devices. A storage device is any piece of hardware that is capable of storing information such as data program code in functional form and or other suitable information on a temporary basis and or permanent basis. In this embodiment memory includes random access memory RAM and cache memory . In general memory can include any suitable volatile or non volatile computer readable storage device.

Resource manager is stored in persistent storage for execution by one or more of computer processors via one or more memories of memory . In this embodiment persistent storage includes a magnetic hard disk drive. Alternatively or in addition to a magnetic hard disk drive persistent storage can include a solid state hard drive a semiconductor storage device read only memory ROM erasable programmable read only memory EPROM flash memory or any other computer readable storage medium that is capable of storing program instructions or digital information.

The media used by persistent storage may also be removable. For example a removable hard drive may be used for persistent storage . Other examples include optical and magnetic disks thumb drives and smart cards that are inserted into a drive for transfer onto another computer readable storage medium that is also part of persistent storage .

Communications unit in these examples provides for communications with other data processing systems or devices including systems and devices within or controlled by management console . In these examples communications unit includes one or more wireless network interface cards. Communications unit may provide communications through the use of either or both physical and wireless communications links. Computer programs and processes such as resource manager may be downloaded to persistent storage through communications unit or uploaded to another system through communications unit .

I O interface s allows for input and output of data with other devices that may be connected to management console . For example I O interface may provide a connection to external devices such as a keyboard keypad a touch screen and or some other suitable input device. External devices can also include portable computer readable storage media such as for example thumb drives portable optical or magnetic disks and memory cards. Software and data used to practice embodiments of the present invention can be stored on such portable computer readable storage media and can be loaded onto persistent storage via I O interface s . I O interface s may also connect to a display . Display provides a mechanism to display data to a user and may be for example a touch screen or a computer monitor.

The programs described herein are identified based upon the application for which they are implemented in a specific embodiment of the invention. However it should be appreciated that any particular program nomenclature herein is used merely for convenience and thus the invention should not be limited to use solely in any specific application identified and or implied by such nomenclature.

The present invention may be a system a method and or a computer program product. The computer program product may include a computer readable storage medium or media having computer readable program instructions thereon for causing a processor to carry out aspects of the present invention.

The computer readable storage medium can be a tangible device that can retain and store instructions for use by an instruction execution device. The computer readable storage medium may be for example but is not limited to an electronic storage device a magnetic storage device an optical storage device an electromagnetic storage device a semiconductor storage device or any suitable combination of the foregoing. A non exhaustive list of more specific examples of the computer readable storage medium includes the following a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory a static random access memory SRAM a portable compact disc read only memory CD ROM a digital versatile disk DVD a memory stick a floppy disk a mechanically encoded device such as punch cards or raised structures in a groove having instructions recorded thereon and any suitable combination of the foregoing. A computer readable storage medium as used herein is not to be construed as being transitory signals per se such as radio waves or other freely propagating electromagnetic waves electromagnetic waves propagating through a waveguide or other transmission media e.g. light pulses passing through a fiber optic cable or electrical signals transmitted through a wire.

Computer readable program instructions described herein can be downloaded to respective computing processing devices from a computer readable storage medium or to an external computer or external storage device via a network for example the Internet a local area network a wide area network and or a wireless network. The network may comprise copper transmission cables optical transmission fibers wireless transmission routers firewalls switches gateway computers and or edge servers. A network adapter card or network interface in each computing processing device receives computer readable program instructions from the network and forwards the computer readable program instructions for storage in a computer readable storage medium within the respective computing processing device.

Computer readable program instructions for carrying out operations of the present invention may be assembler instructions instruction set architecture ISA instructions machine instructions machine dependent instructions microcode firmware instructions state setting data or either source code or object code written in any combination of one or more programming languages including an object oriented programming language such as Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The computer readable program instructions may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider . In some embodiments electronic circuitry including for example programmable logic circuitry field programmable gate arrays FPGA or programmable logic arrays PLA may execute the computer readable program instructions by utilizing state information of the computer readable program instructions to personalize the electronic circuitry in order to perform aspects of the present invention.

Aspects of the present invention are described herein with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer readable program instructions.

These computer readable program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks. These computer readable program instructions may also be stored in a computer readable storage medium that can direct a computer a programmable data processing apparatus and or other devices to function in a particular manner such that the computer readable storage medium having instructions stored therein comprises an article of manufacture including instructions which implement aspects of the function act specified in the flowchart and or block diagram block or blocks.

The computer readable program instructions may also be loaded onto a computer other programmable data processing apparatus or other device to cause a series of operational steps to be performed on the computer other programmable apparatus or other device to produce a computer implemented process such that the instructions which execute on the computer other programmable apparatus or other device implement the functions acts specified in the flowchart and or block diagram block or blocks.

The flowchart and block diagrams in the Figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of instructions which comprises one or more executable instructions for implementing the specified logical function s . In some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or carry out combinations of special purpose hardware and computer instructions.

