---

title: Network entity registry for network entity handles included in network traffic policies enforced for a provider network
abstract: A provider network may implement network entity registry for network entity handles included in network traffic policies enforced for a provider network. Network entity entries may be maintained in a network entity registry that specify network address information for network entity handles included in network traffic control policies. Network traffic control policies may be enforced by a network traffic controller. When an update to an network entity entry is received, the network entity entry may be updated and network address information specified in the network entity entry may be provided to a subset of network traffic controls implemented in a provider network for those network traffic controls enforcing network traffic policies including the network entity handle for the updated network entity entry. Network entity entries may, in some embodiments, not be updated by a network entity entry owner.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09548897&OS=09548897&RS=09548897
owner: Amazon Technologies, Inc.
number: 09548897
owner_city: Reno
owner_country: US
publication_date: 20140117
---
The advent of virtualization technologies for commodity hardware has provided benefits with respect to managing large scale computing resources for many customers with diverse needs allowing various computing resources to be efficiently and securely shared by multiple customers. For example virtualization technologies may allow a single physical computing machine to be shared among multiple users by providing each user with one or more virtual machines hosted by the single physical computing machine with each such virtual machine being a software simulation acting as a distinct logical computing system that provides users with the illusion that they are the sole operators and administrators of a given hardware computing resource while also providing application isolation and security among the various virtual machines. As another example virtualization technologies may allow data storage hardware to be shared among multiple users by providing each user with a virtualized data store which may be distributed across multiple data storage devices with each such virtualized data store acting as a distinct logical data store that provides users with the illusion that they are the sole operators and administrators of the data storage resource.

Virtualization technologies may be leveraged to create many different types of services or perform different functions for client systems or devices. For example virtual machines may be used to implement a network based service for external customers such as an e commerce platform. Virtual machines may also be used to implement a service or tool for internal customers such as information technology IT service implemented as part of an internal network for a corporation. Network traffic may therefore be directed to these virtual machines in order to perform the various functions or tasks provided by the services or functions performed utilizing the virtual machines. In order to ensure that authorized or controlled access is enforced against network traffic received at virtual machines network traffic policies may be employed that control the network traffic both to and from virtual machines. As the network environment in which virtual machines operate may change network traffic policies may change correspondingly. However managing traffic policies for a diverse set of virtual machines the numbers of which may be scaled up or down on may prove burdensome when implementing multiple changes to network traffic policies.

While embodiments are described herein by way of example for several embodiments and illustrative drawings those skilled in the art will recognize that the embodiments are not limited to the embodiments or drawings described. It should be understood that the drawings and detailed description thereto are not intended to limit embodiments to the particular form disclosed but on the contrary the intention is to cover all modifications equivalents and alternatives falling within the spirit and scope as defined by the appended claims. The headings used herein are for organizational purposes only and are not meant to be used to limit the scope of the description or the claims. As used throughout this application the word may is used in a permissive sense i.e. meaning having the potential to rather than the mandatory sense i.e. meaning must . Similarly the words include including and includes mean including but not limited to.

The systems and methods described herein may implement a network entity registry for network entity handles included in network traffic policies enforced for a provider network according to some embodiments. A provider network may supply clients operators or other customers with access to and or control of one or more computing resources. These resources may include various types of computing systems or devices configured for communication over a network. For example in some embodiments a provider network may provide virtual computing resources to clients users or other type of customers in the form of reserved compute instances e.g. a virtual machine acting as a distinct logical computing system that provides users with the illusion that they are the sole operators and administrators of a given hardware computing resource . Clients of the provider network may reserve i.e. purchase or buy one or more compute resources such as compute instances to perform various functions services techniques and or applications. As part of performing these functions services techniques and or applications network traffic may be allowed prohibited or otherwise managed at different compute resources. For example a set of compute resources such as multiple servers providing an authentication service for an e commerce website may only accept network traffic from a set of particular internet protocol IP addresses. Such a restriction allowance prohibition or other network traffic control may be described in a network traffic policy e.g. ALLOW traffic on Port X from IP address Y . Provider clients may configure network traffic policies to be enforced the same for multiple compute resources forming a security group for the multiple compute resources. Security groups may apply multiple network traffic control policies which may in turn have one or more network flow control policies.

Provider clients who utilize computing resources may take advantage of the flexibility with which new resources can be acquired. Virtual compute resources for example can be quickly scaled to meet demand such as for a provider client implementing a fast growing web service. As the number of compute instances grows managing different security policies and security groups can become complex and time consuming. For example compute instances may belong to multiple different security groups each of which may enforce multiple different network traffic policies. Manually updating each security group for each change to a network traffic policy may prove costly to provider clients and may not allow for changes in network traffic policy to react quickly to changing network traffic conditions.

For example network entity may be a single system or endpoint for a system or network of computing devices . For example network entity registry may maintain an entry for network entity specifying network address information for network entity such as the IP address for addressable element . Network traffic controller may be configured to provide access to and from network addressable element over provider network . In another example network entity may include multiple addressable elements and along with their respective network traffic controllers and . Network address information for network entity may include a range of IP addresses or identify network entity as a subnet. Entries may also be maintained for network entities that are groups of addressable elements which may or may not be members of the same subnet as may be for network entity . For example network entity may be a security group that includes multiple addressable elements and as well as their respective network traffic controllers and which may be associated together to enforce common network traffic policies. Addressable element may be an endpoint to a network of other computing systems or devices while addressable elements and may be addressable elements to single computing systems. Network entities may contain varying numbers and or sizes. Network entity for example is a security group with 1 less addressable element addressable elements and as well as their respective network traffic controllers and than network entity . Network entities external to provider network may also have corresponding entries in network entity registry as network traffic from external entities may be directed toward various resources within provider network .

In various embodiments network entity registry may be implemented as part of service for managing network traffic policies for a provider network. For example a network entity registry may be implemented as part of a security group management service which may manage or coordinate network traffic policies for security groups established for resources of a provider network. A security group management service may communicate with other services such as a mapping service or other routing component or service to provide specified network address information for network entity entries to other systems enforce network traffic control policies. Although illustrated adjacent to addressable elements network traffic controllers may be located in some embodiments on separate systems or devices through which network traffic to an addressable elements flows.

For updated network entity entries or new network entity entries network address information specified in the network entity entry may be provided to network traffic controllers enforcing network traffic control policies that include a handle to e.g. include a handle id or other handle reference to the network entity entry . Network address information may be provided to network traffic controllers in different ways. For example in some embodiments a push technique may be implemented sending network address information for network entity entries to network traffic controllers when the update or new entry is received or maintained. For example security group management service may maintain information regarding network traffic policies associated with particular security groups as well as the membership of particular security groups. Thus network traffic controllers for security group A may described listed or indexed in security group management service and the network address information for network entity entries may be sent to network traffic controllers identified based on this membership information. Similarly for security group B and security group C membership information may be maintained that allows security group management service to identify network traffic controllers enforcing security group B and network traffic controllers enforcing security group C. Alternatively in some embodiments network traffic controllers and may request e.g. using a polling behavior network address information for new or updated network entity entries for respective network entity handles. Please note that in various embodiments network traffic controllers and may be a subset of a larger number of network traffic controllers enforcing network traffic policies in a provider network. For example those network traffic controllers enforcing network traffic policies that do not include a network entity handle for a new or updated network entity entry may not receive network address information in various embodiments.

As discussed above network traffic policies may include network entity handles to network entity entries maintained in a network entity registry. is a block diagram illustrating examples of network entity entries network traffic policies including network entity handles and security groups according to some embodiments. Network entity registry maintains multiple network entity entries such as entries and . Each network entity entry may include network address information for a network entity such as an IP address range of IP addresses masks and various other forms of network address information to identify and or communicate with a network entity. Network entity entries may also include a handle such as handle reference or identifier which may be included in network traffic policies to indicate the network entity entry which specifies network address information for the network traffic policy. In some embodiments a version identifier may be maintained that identifies a particular version of the network entity entry e.g. a version number or a timestamp . In some embodiments multiple prior versions of entity entries may be maintained in addition to a current entity entry which may be provided to network traffic controllers to roll back changes for instance.

Network traffic policies may implement many different types of network traffic control. For example some network traffic policies may be configured to allow or prohibit traffic. Network traffic policy allows incoming TCP traffic on port 9876 from network entity handle . While network traffic policy allows outgoing TCP traffic on port to network entity handle . Network traffic policies may also be used to enforce network flow controls such as throttling traffic as illustrated in network traffic policy handling traffic in a particular order or storing traffic in a particular way such as in network traffic policy . In some embodiment network bandwidth adjustments may be made using network traffic policies that include network entity handles. Various different types of attributes or information may be included in network traffic policies such as particular protocols ports and or types of traffic. As noted above in network entities may include multiple systems or devices as well as subnets endpoints for VPNs gateways or other security mechanisms as well as groups such as security groups of multiple network entities. Network traffic policies may therefore be configured in many different ways as to control traffic from these entities and thus the previous examples of network traffic policies are not intended to be limiting.

Network entity handles may be expanded with specified network address information in the particular network entity entry which the network entity handle references. If for example network entity handle has a handle reference of bob network then network entity entry which includes the handle bob network may specify the network address information to expand handle for enforcing network traffic policies and . Similarly network entity handle may have an id such as entity 2ABY1 which is also included in network entity entry .

In some embodiments network traffic policies may be associated with particular security groups enforced for all computing resources that are members or associated with a particular security group. Network traffic policies and for instance are both enforced for computing resources that are members of security group . Similarly network traffic policies and are both enforced for computing resources that are members or associated with security group . Computing resources may in some embodiments be associated with multiple security groups. Therefore a particular computing resource such as a particular compute instance may be a member of security group and

Please note that previous descriptions are not intended to be limiting but are merely provided as an example of provider networks network entity registries and network traffic policies. Various other components may interact with or assist in enforcing network traffic policies including handles for network entity entries.

This specification next includes a general description virtual computing resource provider which may implement a network entity registry for network entity handles included in network traffic policies enforced for a provider network. Then various examples of a virtual computing resource provider are discussed including different components modules or arrangements of components module that may be employed as part of implementing a virtual computing resource provider. A number of different methods and techniques to implement a network entity registry for network entity handles included in network traffic policies enforced for a provider network are then discussed some of which are illustrated in accompanying flowcharts. Finally a description of an example computing system upon which the various components modules systems devices and or nodes may be implemented is provided. Various examples are provided throughout the specification.

A virtual compute instance may for example comprise one or more servers with a specified computational capacity which may be specified by indicating the type and number of CPUs the main memory size and so on and a specified software stack e.g. a particular version of an operating system which may in turn run on top of a hypervisor . A number of different types of computing devices may be used singly or in combination to implement the compute instances of provider network in different embodiments including general purpose or special purpose computer servers storage devices network devices and the like. In some embodiments instance clients or other any other user may be configured and or authorized to direct network traffic to a compute instance .

Compute instances may operate or implement a variety of different platforms such as application server instances Java virtual machines JVMs general purpose or special purpose operating systems platforms that support various interpreted or compiled programming languages such as Ruby Perl Python C C and the like or high performance computing platforms suitable for performing client applications without for example requiring the client to access an instance . In some embodiments compute instances have different types or configurations based on expected uptime ratios. The uptime ratio of a particular compute instance may be defined as the ratio of the amount of time the instance is activated to the total amount of time for which the instance is reserved. Uptime ratios may also be referred to as utilizations in some implementations. If a client expects to use a compute instance for a relatively small fraction of the time for which the instance is reserved e.g. 30 35 of a year long reservation the client may decide to reserve the instance as a Low Uptime Ratio instance and pay a discounted hourly usage fee in accordance with the associated pricing policy. If the client expects to have a steady state workload that requires an instance to be up most of the time the client may reserve a High Uptime Ratio instance and potentially pay an even lower hourly usage fee although in some embodiments the hourly fee may be charged for the entire duration of the reservation regardless of the actual number of hours of use in accordance with pricing policy. An option for Medium Uptime Ratio instances with a corresponding pricing policy may be supported in some embodiments as well where the upfront costs and the per hour costs fall between the corresponding High Uptime Ratio and Low Uptime Ratio costs.

Compute instance configurations may also include compute instances with a general or specific purpose such as computational workloads for compute intensive applications e.g. high traffic web applications ad serving batch processing video encoding distributed analytics high energy physics genome analysis and computational fluid dynamics graphics intensive workloads e.g. game streaming 3D application streaming server side graphics workloads rendering financial modeling and engineering design memory intensive workloads e.g. high performance databases distributed memory caches in memory analytics genome assembly and analysis and storage optimized workloads e.g. data warehousing and cluster file systems . Size of compute instances such as a particular number of virtual CPU cores memory cache storage as well as any other performance characteristic. Configurations of compute instances may also include their location in a particular data center availability zone geographic location etc . . . and in the case of reserved compute instances reservation term length.

In various embodiments compute instances may be associated with one or more different security groups. As noted above security groups may enforce one or more network traffic policies for network traffic at members of the security group. Membership in a security group may not be related to physical location or implementation of a compute instance. Security group legend illustrates the various different shadings used to denote membership in a security group. For example compute instances and implemented on the same virtualization host may belong to different security groups A B and C. Other group members such as instance and for security group B are implemented at different physical locations. Similarly instances and for security group A and instances and for security group C are also located differently. The number of members or associations with a particular security group may vary and this previous discussion and illustration is not intended to be limiting as to the number of group members in a particular security group. Each security group A B and C may enforce respective network traffic policies for their member instances. In some embodiments one or more network traffic policies in each security group may include the same network entity handle as discussed above with regard to . The previous descriptions are not intended to be limiting but merely illustrative of the many different configurations possible for a compute instances provided by provider network .

As illustrated in a virtualization host such as virtualization hosts through may implement and or manage multiple compute instances in some embodiments and may be one or more computing devices such as computing system described below with regard to . A virtualization host may include a virtualization management module such as virtualization management modules through capable of instantiating and managing a number of different client accessible virtual machines or compute instances . The virtualization management module may include for example a hypervisor and an administrative instance of an operating system which may be termed a domain zero or dom0 operating system in some implementations. The dom0 operating system may not be accessible by clients on whose behalf the compute instances run but may instead be responsible for various administrative or control plane operations of the network provider including handling the network traffic directed to or from the compute instances .

As illustrated in virtualization management modules may include a network traffic controllers such as network traffic controller through . Network traffic controllers may be configured to enforce various network traffic policies for compute instances such as may be enforced based on the security group associations of compute instances . is a block diagram illustrating network traffic processed by a network traffic controller for a virtualization host according to some embodiments. As discussed above virtualization host may implement multiple compute instances through . Virtualization host may also implement a virtualization management module and network traffic controller . Network traffic for compute instances may be received at network traffic controller either from another network entity as inbound network traffic or a compute instance as outbound network traffic. For particular network traffic received network traffic control may identify particular network traffic policies to apply such as policies and or . For example a routing table or other metadata may be used to identify a particular instance s network traffic policies. Network traffic policies may be applied to the network traffic allowing denying restricting limiting etc. the network traffic according to the policy. Network entity handles included in the policy may be expanded to apply the network address information for the network entity referenced in the policy by the network entity handle according to the various techniques described below with regard to . In some embodiments network traffic controller may request specified network address information from security group management service and or network entity registry . In some embodiments network traffic controllers may maintain multiple versions of network address information received for a network entity handle and may revert between versions according to an instruction from a security group management service or registry or based on self determination.

Although illustrated as implemented by a virtualization host in some embodiments network traffic controllers may be implemented separately from a virtualization host such as on a different system or computing device. Network traffic controllers may be implemented anywhere through which network traffic for a particular addressable element e.g. instances may be required to travel in order to reach its destination i.e. in the traffic path . Thus the previous discussion and illustration of network traffic controllers in is not intended to be limiting.

Turning back to provider network may implement a security group management service in various embodiments to manage security group updates or changes such as by providing network address information specified in network entity entries in network entity registry to network traffic controllers and or mapping service according to the various techniques described below in . Security group management service may be implemented by one or more nodes services systems or devices such as computing system described below with regard to . Security group management service may in some embodiments maintain mapping information between network traffic controllers compute instances security groups network traffic policies and particular network entity handles. In some embodiments network traffic controllers may register a listener or otherwise indicate a relationship with a particular network entity entry with security group manager service in order to receive updates or notifications concerning the network entity entry.

In various embodiments security group management service may implement network entity registry . As discussed above with regard to network entity registry may be configured to maintain network entity entries for network entities including network address information a network entity handle as well as other information such as version identifier other versions of the network entity entry and or deployment or scheduling for the network entity entries. Network entity registry may be implemented as database index structured data store other scheme to maintain network entity entries. In some embodiments associations may also be maintained network traffic policies including respective network entity handles and or network security group associations.

Internal network may include the hardware e.g. modems routers switches load balancers proxy servers etc. and software e.g. protocol stacks accounting software firewall security software etc. necessary to establish a networking links between different components of provider network such as virtualization hosts mapping service and security group management service as well as external networks e.g. the Internet . In some embodiments provider network may employ an Internet Protocol IP tunneling technology to provide an overlay network via which encapsulated packets may be passed through internal network using tunnels. The IP tunneling technology may provide a mapping and encapsulating system for creating an overlay network on network and may provide a separate namespace for the overlay layer and the internal network layer. Packets in the overlay layer may be checked against a mapping directory e.g. provided by mapping service to determine what their tunnel target should be. The IP tunneling technology provides a virtual network topology the interfaces that are presented to clients may be attached to the overlay network so that when a client provides an IP address that they want to send packets to the IP address is run in virtual space by communicating with a mapping service e.g. mapping service that knows where the IP overlay addresses are. In some embodiments mapping service may provide network traffic control policies to the various network traffic controllers for enforcement. In such embodiments mapping service may obtain or be provided with access to network address information for network entity handles that are included in network traffic policies and provide the network address information to the network traffic controllers for enforcement. In various embodiments mapping service may receive network address information for network traffic policies in order to expand network entity handles. The expanded network entity handle may then be provided by mapping service to respective network traffic controllers that may enforce the network traffic policies including network entity handles.

Clients may encompass any type of client configurable to submit requests to network provider . For example a given client may include a suitable version of a web browser or may include a plug in module or other type of code module configured to execute as an extension to or within an execution environment provided by a web browser. Alternatively a client may encompass an application such as a database application or user interface thereof a media application an office application or any other application that may make use of compute instances to perform various operations. In some embodiments such an application may include sufficient protocol support e.g. for a suitable version of Hypertext Transfer Protocol HTTP for generating and processing network based services requests without necessarily implementing full browser support for all types of network based data. In some embodiments clients may be configured to generate network based services requests according to a Representational State Transfer REST style network based services architecture a document or message based network based services architecture or another suitable network based services architecture. In some embodiments a client e.g. a computational client may be configured to provide access to a compute instance in a manner that is transparent to applications implement on the client utilizing computational resources provided by the compute instance .

Clients may convey network based services requests to provider network via external network . In various embodiments external network may encompass any suitable combination of networking hardware and protocols necessary to establish network based communications between clients and provider network .

For example a network may generally encompass the various telecommunications networks and service providers that collectively implement the Internet. A network may also include private networks such as local area networks LANs or wide area networks WANs as well as public or private wireless networks. For example both a given client and provider network may be respectively provisioned within enterprises having their own internal networks. In such an embodiment a network may include the hardware e.g. modems routers switches load balancers proxy servers etc. and software e.g. protocol stacks accounting software firewall security software etc. necessary to establish a networking link between given client and the Internet as well as between the Internet and provider network . It is noted that in some embodiments clients may communicate with provider network using a private network rather than the public Internet.

In some embodiments a network entity entry modifier which may not be an owner of the network entity entry may send an update request to the network entity registry to update a particular network entity entry. In some embodiments approval for the update may be obtained by request update approval from the network entity entry owner as indicated at . If approved such as if approval is received form network entity entry owner then a notification of the updated network entity entry and or the specified network address information for the updated entry may be provided to network traffic controllers enforcing network traffic policies including a handle to the entry. In some embodiments if approval is not obtained the prior version of the entry may be reinstated at registry or an indication to network traffic controllers that may have received network address information may be sent to revert to or obtain a different version of the network address information for the network entity entry. An update or change to the network entity entry may in some embodiments be temporary e.g. with a specified or default time period of effectiveness . Update approval may in some embodiments be a reauthorization of the change either again as a temporary update or a permanent change.

The examples of implementing a network entity registry for network entity handles included in network traffic policies enforced for a provider network discussed above with regard to have been given in regard to virtual computing resources offered by a provider network. Various other types or configurations of a provider network may implement these techniques. Other virtual computing resources for example for which security groups and network traffic policies are implemented for instance may implement a network entity registry. For example virtual block storage volumes may enforce network traffic policies that are directed toward individual storage volumes. is high level flowchart illustrating various methods and techniques for implementing a network entity registry for network entity handles included in network traffic policies enforced for a provider network according to some embodiments. These techniques may be implemented using various components of virtual computing resource provider as described above with regard to or other provider network components.

As indicated at multiple network entity entries may be maintained at a network entity registry that each specify network address information for network entity handles included in network traffic policies enforced at network traffic controllers for addressable elements within a provider network. Addressable elements as noted above may be computing resources or other devices in a provider network which receive and sent network traffic for which one or more network traffic policies may be enforced by a network traffic controller in some embodiments. The network entity registry may maintain entries as noted above with regard to that include network address information for a network entity such as an IP address range of IP addresses masks and various other forms of network address information to identify and or communicate with a network entity. Network entity entries may also include a handle such as handle reference or identifier which may be included in network traffic policies to indicate the network entity entry which specifies network address information for the network traffic policy. In some embodiments a version identifier may be maintained that identifies a particular version of the network entity entry e.g. a version number or a timestamp . In some embodiments multiple prior versions of entity entries may be maintained in addition to a current entity entry.

As indicated at request to update a particular network entity entry may be received in some embodiments. For example the update request may wish to change the network address information in the entry e.g. add new IP address change range of IP addresses add a different or swap in a new subnet change deployment information for a network entity entry e.g. to network traffic controllers or any other change to the network entity entry. In some embodiments various authentication checks or protocols may be performed. For example the identity of the requestor may be validated as well as the authorization to perform the update may be determined. In response to receiving the request the particular network entity entry may be updated according to the request as indicated at .

As indicated at the network address information specified in the updated network entry may be provided to network traffic controllers in the provider network which enforce network traffic policies that include a network entity handle for the updated network entity entry. For example multiple network traffic control policies may be implemented by multiple network traffic controllers. A subset of these network traffic controllers may enforce network traffic policies that include a handle to the particular network entity entry that is updated. Therefore the specified network address information may be provided to the network traffic controllers of the subset of network traffic controllers in various embodiments. Network traffic information may not be directly provided to network traffic controllers in some embodiments. Instead network traffic information may be provided to an intermediary system or device which may ultimately provide the network traffic controllers with the network traffic information. For example a mapping service or other system may register and receive network address information for network entity handles and update provide send reconfigure network traffic controllers enforcing policies that include a network entity handle with the network address information for an updated entry.

A new network entity entry or an update to a network entity entry may not need to be performed in at least some embodiments in order to provide network address information to network traffic controllers. Thus in some embodiments elements and may not be performed but instead for a given network entity entry the network address information may be provided to a subset of network traffic controllers which enforce network traffic policies including the entry. The various techniques for providing network information such as the push or pull models discussed above and below may also be applied. For example network address information for different network entity entries may be periodically sent to network traffic controllers even if the network address information has not changed.

In some embodiments network entity entry updates may be temporary. For example the update request may specify duration for an update to a network entity entry. Upon expiration of the time period for the entry the network entity entry may revert to a prior version of the entry in some embodiments. Some network entity entries may be static or immutable and thus may not be updated in some embodiments although they may be deleted and or network traffic policies including the static network handle may be deleted .

Network address information may be provided to network traffic controllers in various ways. In some embodiments the network traffic controllers enforcing network traffic policies that include the handle to the particular network entity entry that is updated may be identified. For example network traffic controllers may register or request updates for specific network entity handles at the network entity registry. Based on this registration information network traffic controllers for a particular network entity entry may be identified. In some embodiments network traffic entity controller may request e.g. as part of a polling behavior for new versions of network address information for network entity entries. Network address information may also be provided to network traffic controllers according to a deployment schedule. For example network traffic controllers implemented for compute instances located in data center A may be provided with the network address information for the new version 2 hours before the network address information is provided to compute instances located in data center B. In some embodiments a randomized deployment schedule may be implemented to simulate network outage and other problems by randomly block and unblocking network traffic by updating network entity entries.

Network entity entries may be created registered updated or otherwise modified by many different entities in some embodiments. A client or other user of a provider network who owns controls configures or administers computing resources in some embodiments may set up or associate security groups and or network traffic policies for the security groups as well as the network entity entries for which handles are included in the network traffic policies. For example a developer or provider of a web service e.g. a content distribution service may utilize multiple compute instances and associated different instances with one or more security groups with attendant network traffic policies for handling various types of network traffic directed toward the compute instances of the web service. The developer may also authorize a third party or other entity to update or reconfigure network entity entries for the web service. If for example the content distribution service allows other services to connect to or upload media to the site e.g. a social media service then the content distribution service may authorize the trusted social media service to update a network entity entry which is referenced by a network entity handle included in a network traffic policy allowing traffic to the handle. Various authorization techniques may be used to delegate and or authorize other entities that are not network entity entry owners e.g. not the owner of the compute instance for which associated network flow control policies associated with the policy object . is high level flowchart illustrating various methods and techniques for obtaining approval for updates to network entity entries from a network entity entry owner according to some embodiments.

As indicated at an update request for a network entity entry may be received that is not from a network entity entry owner. In various embodiments the update request may include various authentication credentials e.g. identity token and or authorization credentials. The update request may be determined based at least in part on these or other credentials not to be from a network entity entry owner in some embodiments. The request may include a change to a network entity entry to be applied e.g. an additionally allowed or different IP address . The update request may be formatted and received according to an interface such as an API interface for registering creating and or modifying network entity entry at a registry such as registry described above with regard to . In some embodiments the update to the network entity entry may be performed and provided to network traffic controllers enforcing network traffic policies including a network entity handle for the network entity entry such as described by the various techniques discussed above with regard to . The updated network entity entry may additionally be in some embodiments marked as temporary or unapproved. Unapproved changes to network entity entries may trigger additional approval mechanisms.

For example as indicated at approval of the update to the network entity entry may be requested from the network entity entry owner in some embodiments. As noted above metadata describing the network entity entry may include the identity of a network entity entry owner a preferred contact method pre approved or authorized updates to the policy object or other information useful for implementing or updating a network entity entry. Approval may be requested by sending a message via a security group management service interface to the policy object owner. For example as a client of a virtual computing resource provider the network entity entry owner may have access to a graphical user interface such as a control panel for which indications alerts or other ways of notifying a network entity entry owner of an approval request may be communicated. In some embodiments a preferred notification or contact method may be previously provided to a security group management service which may indicate that electronic mail text messages or telephone calls are indicated to be directed toward specific accounts or telephone numbers. Included in the approval request may be information describing the change as well as the identity of the entity modifying the network entity entry. Approval may be provided using the same or different communication method via which the approval request was made. In some embodiments the approval request may include modifications to the change itself or changes to the implementation scheduling or enforcement of the network entity entry.

If approval is obtained as indicated by the positive exit from element then the network address information for the updated network entity entry may be maintained as indicated at in some embodiments. For example the updated network entity entry may be marked as approved or removed form a list of unapproved changes etc. in order to make the network entity entry change permanent in some embodiments. If approval is not obtained e.g. within a certain period of time or a negative or not approved response is received as indicated by the negative exit from element an indication may be provided e.g. to network traffic controllers that a previous version of network address information specified in the network entity entry is to be enforced as indicated at .

As noted above in some embodiments network traffic controllers may request network address information for an updated network entity entry. is a high level flowchart illustrating various methods and techniques for obtaining specified network address information for updated network entity entries according to some embodiments. As indicated at a request may be sent to a network entity registry for updated network address information for a network entity handle included in a network traffic policy enforced at the network traffic controller in some embodiments. For example the request may include a version number for the network entity entry. If a greater version number is available at the network entity registry then the updated network address information may be provided. If the updated network address information is provided as indicated by the positive exit form then the specified network address information may be used to enforce network traffic policies including the network entity handle for the network entity entry as indicated at . If however no updates are received or no response is received from the network entity registry a polling period may be allowed to elapse as illustrated at prior to sending another request for updated network address information as indicated at .

The methods described herein may in various embodiments be implemented by any combination of hardware and software. For example in one embodiment the methods may be implemented by a computer system e.g. a computer system as in that includes one or more processors executing program instructions stored on a computer readable storage medium coupled to the processors. The program instructions may be configured to implement the functionality described herein e.g. the functionality of various servers and other components that implement the virtual computing resource provider described herein . The various methods as illustrated in the figures and described herein represent example embodiments of methods. The order of any method may be changed and various elements may be added reordered combined omitted modified etc.

Embodiments of security group management for dynamically updating security group policies for virtual computing resources as described herein may be executed on one or more computer systems which may interact with various other devices. is a block diagram illustrating an example computer system according to various embodiments. For example computer system may be configured to implement nodes of a compute cluster a distributed key value data store and or a client in different embodiments. Computer system may be any of various types of devices including but not limited to a personal computer system desktop computer laptop or notebook computer mainframe computer system handheld computer workstation network computer a consumer device application server storage device telephone mobile telephone or in general any type of computing device.

Computer system includes one or more processors any of which may include multiple cores which may be single or multi threaded coupled to a system memory via an input output I O interface . Computer system further includes a network interface coupled to I O interface . In various embodiments computer system may be a uniprocessor system including one processor or a multiprocessor system including several processors e.g. two four eight or another suitable number . Processors may be any suitable processors capable of executing instructions. For example in various embodiments processors may be general purpose or embedded processors implementing any of a variety of instruction set architectures ISAs such as the x86 PowerPC SPARC or MIPS ISAs or any other suitable ISA. In multiprocessor systems each of processors may commonly but not necessarily implement the same ISA. The computer system also includes one or more network communication devices e.g. network interface for communicating with other systems and or components over a communications network e.g. Internet LAN etc. . For example a client application executing on system may use network interface to communicate with a server application executing on a single server or on a cluster of servers that implement one or more of the components of the data warehouse system described herein. In another example an instance of a server application executing on computer system may use network interface to communicate with other instances of the server application or another server application that may be implemented on other computer systems e.g. computer systems .

In the illustrated embodiment computer system also includes one or more persistent storage devices and or one or more I O devices . In various embodiments persistent storage devices may correspond to disk drives tape drives solid state memory other mass storage devices or any other persistent storage device. Computer system or a distributed application or operating system operating thereon may store instructions and or data in persistent storage devices as desired and may retrieve the stored instruction and or data as needed. For example in some embodiments computer system may host a storage system server node and persistent storage may include the SSDs attached to that server node.

Computer system includes one or more system memories that are configured to store instructions and data accessible by processor s . In various embodiments system memories may be implemented using any suitable memory technology e.g. one or more of cache static random access memory SRAM DRAM RDRAM EDO RAM DDR RAM synchronous dynamic RAM SDRAM Rambus RAM EEPROM non volatile Flash type memory or any other type of memory . System memory may contain program instructions that are executable by processor s to implement the methods and techniques described herein. In various embodiments program instructions may be encoded in platform native binary any interpreted language such as Java byte code or in any other language such as C C Java etc. or in any combination thereof. For example in the illustrated embodiment program instructions include program instructions executable to implement the functionality of a virtual computing resource provider network in different embodiments. In some embodiments program instructions may implement multiple separate clients server nodes and or other components.

In some embodiments program instructions may include instructions executable to implement an operating system not shown which may be any of various operating systems such as UNIX LINUX Solaris MacOS Windows etc. Any or all of program instructions may be provided as a computer program product or software that may include a non transitory computer readable storage medium having stored thereon instructions which may be used to program a computer system or other electronic devices to perform a process according to various embodiments. A non transitory computer readable storage medium may include any mechanism for storing information in a form e.g. software processing application readable by a machine e.g. a computer . Generally speaking a non transitory computer accessible medium may include computer readable storage media or memory media such as magnetic or optical media e.g. disk or DVD CD ROM coupled to computer system via I O interface . A non transitory computer readable storage medium may also include any volatile or non volatile media such as RAM e.g. SDRAM DDR SDRAM RDRAM SRAM etc. ROM etc. that may be included in some embodiments of computer system as system memory or another type of memory. In other embodiments program instructions may be communicated using optical acoustical or other form of propagated signal e.g. carrier waves infrared signals digital signals etc. conveyed via a communication medium such as a network and or a wireless link such as may be implemented via network interface .

In some embodiments system memory may include data store which may be configured as described herein. In general system memory e.g. data store within system memory persistent storage and or remote storage may store data blocks replicas of data blocks metadata associated with data blocks and or their state configuration information and or any other information usable in implementing the methods and techniques described herein.

In one embodiment I O interface may be configured to coordinate I O traffic between processor system memory and any peripheral devices in the system including through network interface or other peripheral interfaces. In some embodiments I O interface may perform any necessary protocol timing or other data transformations to convert data signals from one component e.g. system memory into a format suitable for use by another component e.g. processor . In some embodiments I O interface may include support for devices attached through various types of peripheral buses such as a variant of the Peripheral Component Interconnect PCI bus standard or the Universal Serial Bus USB standard for example. In some embodiments the function of I O interface may be split into two or more separate components such as a north bridge and a south bridge for example. Also in some embodiments some or all of the functionality of I O interface such as an interface to system memory may be incorporated directly into processor .

Network interface may be configured to allow data to be exchanged between computer system and other devices attached to a network such as other computer systems which may implement one or more storage system server nodes database engine head nodes and or clients of the database systems described herein for example. In addition network interface may be configured to allow communication between computer system and various I O devices and or remote storage . Input output devices may in some embodiments include one or more display terminals keyboards keypads touchpads scanning devices voice or optical recognition devices or any other devices suitable for entering or retrieving data by one or more computer systems . Multiple input output devices may be present in computer system or may be distributed on various nodes of a distributed system that includes computer system . In some embodiments similar input output devices may be separate from computer system and may interact with one or more nodes of a distributed system that includes computer system through a wired or wireless connection such as over network interface . Network interface may commonly support one or more wireless networking protocols e.g. Wi Fi IEEE 802.11 or another wireless networking standard . However in various embodiments network interface may support communication via any suitable wired or wireless general data networks such as other types of Ethernet networks for example. Additionally network interface may support communication via telecommunications telephony networks such as analog voice networks or digital fiber communications networks via storage area networks such as Fibre Channel SANs or via any other suitable type of network and or protocol. In various embodiments computer system may include more fewer or different components than those illustrated in e.g. displays video cards audio cards peripheral devices other network interfaces such as an ATM interface an Ethernet interface a Frame Relay interface etc. 

It is noted that any of the distributed system embodiments described herein or any of their components may be implemented as one or more network based services. For example a compute cluster within a computing service may present computing services and or other types of services that employ the distributed computing systems described herein to clients as network based services. In some embodiments a network based service may be implemented by a software and or hardware system designed to support interoperable machine to machine interaction over a network. A network based service may have an interface described in a machine processable format such as the Web Services Description Language WSDL . Other systems may interact with the network based service in a manner prescribed by the description of the network based service s interface. For example the network based service may define various operations that other systems may invoke and may define a particular application programming interface API to which other systems may be expected to conform when requesting the various operations. though

In various embodiments a network based service may be requested or invoked through the use of a message that includes parameters and or data associated with the network based services request. Such a message may be formatted according to a particular markup language such as Extensible Markup Language XML and or may be encapsulated using a protocol such as Simple Object Access Protocol SOAP . To perform a network based services request a network based services client may assemble a message including the request and convey the message to an addressable endpoint e.g. a Uniform Resource Locator URL corresponding to the network based service using an Internet based application layer transfer protocol such as Hypertext Transfer Protocol HTTP .

In some embodiments network based services may be implemented using Representational State Transfer RESTful techniques rather than message based techniques. For example a network based service implemented according to a RESTful technique may be invoked through parameters included within an HTTP method such as PUT GET or DELETE rather than encapsulated within a SOAP message.

Although the embodiments above have been described in considerable detail numerous variations and modifications may be made as would become apparent to those skilled in the art once the above disclosure is fully appreciated. It is intended that the following claims be interpreted to embrace all such modifications and changes and accordingly the above description to be regarded in an illustrative rather than a restrictive sense.

