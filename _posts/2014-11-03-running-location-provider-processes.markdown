---

title: Running location provider processes
abstract: Examples describe methods, computing devices, and systems for using location provider (LP) processes to accurately identify a proximate location of a computing device, while reducing the power consumption of the computing device. An example method may include executing, on a computing device, both a first LP process and a second LP process simultaneously for at least part of a time period to determine outputs indicative of locations of the computing device for the time period. Further, the method may include determining a motion model of the computing device that indicates expected locations of the computing device. Yet further, the method may include making a comparison of the outputs to the motion model for the time period. In addition, the method may include disabling one of the LP processes based on the comparison.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09439043&OS=09439043&RS=09439043
owner: Google Inc.
number: 09439043
owner_city: Mountain View
owner_country: US
publication_date: 20141103
---
This application claims priority to U.S. Provisional Patent App. No. 61 994 546 entitled Running Hardware and Software Processes to Determine Outputs Indicative of Locations filed on May 16 2014 the entirety of which is herein incorporated by reference.

Unless otherwise indicated herein the materials described in this section are not prior art to the claims in this application and are not admitted to be prior art by inclusion in this section.

A proximate location of a computing device may be determined by using many different processes. Further various types of data may be obtained to determine the proximate location of the computing device such as Global Positioning System GPS data and or data associated with a wireless access point such as a cellular base station or an 802.11 access point. For example a computing device may receive a GPS signal and responsively determine its position on the face of the Earth e.g. an absolute location . In another example the computing device may receive a signal from a cellular base station and or an 802.11 access point. Based on the signal received the computing device may calculate a proximate location of the computing device.

In some instances the proximate location of the computing device may be determined from multiple different networks. Many location based services may be implemented to determine the proximate location of the mobile computing device.

Embodiments herein provide example methods computing devices and systems for executing one or more location provider LP processes to determine an estimated location of a computing device. Each LP process may execute on the computing device for at least part of a given period of time using a respective processor. For example a first location provider LP process may execute on application first processor and a second LP process may execute on a second processor. By measuring the power consumed by each LP process one of the LP processes may be used for succeeding time periods possibly to save power in the computing device.

In one example a method is provided. The method includes executing on a computing device a first location provider LP process and a second LP process for at least part of a first time period where executing the first LP process includes using application first processor and where executing the second LP process includes using a second processor. Further the method includes obtaining a first estimated location of the computing device from the first LP process. Yet further the method includes obtaining a second estimated location of the computing device from the second LP process. In addition the method includes determining a first power consumption from the first LP process. Further the method includes determining a second power consumption from the second LP process. Based on at least the first power consumption and the second power consumption the method includes determining one of the first LP process and the second LP process to execute for at least part of a second time period.

In another example a system is provided. The system includes one or more processors where the one or more processors include a first processor and a second processor. Further the system includes data storage that includes instructions executable by the one or more processors to perform operations. The operations includes executing a first location provider LP process and a second LP process for at least part of a first time period where executing the first LP process includes using the first processor and where executing the second LP process includes using the second processor. Further the operations include obtaining a first estimated location of the system from the first LP process. Yet further the operations include obtaining a second estimated location of the system from the second LP process. In addition the operations include determining a first power consumption from the first LP process. Further the operations include determining a second power consumption from the second LP process. Based on at least the first power consumption and the second power consumption the operations include determining one of the first LP process and the second LP process to execute for at least part of a second time period.

In still another example a method is provided. The method includes executing on a computing device one of a first location provider LP process and a second LP process to obtain first estimated locations of the computing device where executing the first LP process includes using a first processor and where executing the second LP process includes using a second processor. Further the method includes determining a motion model of the computing device that provides expected locations of the computing device. Yet further the method includes making a comparison of the first estimated locations with the expected locations from the motion model. Based on at least the comparison the method includes enabling both the first LP process and the second LP process to execute on the computing device simultaneously for at least part of a time period to reevaluate which of the first LP process and the second LP process indicates second estimated locations closer to the expected locations.

In still another example a system is provided. The system includes means for executing on a computing device a first location provider LP process and a second LP process for at least part of a first time period where executing the first LP process includes using application first processor and where executing the second LP process includes using a second processor. Further the system includes means for obtaining a first estimated location of the computing device from the first LP process. Yet further the system includes means for obtaining a second estimated location of the computing device from the second LP process. In addition the system includes means for determining a first power consumption from the first LP process. Further the system includes means for determining a second power consumption from the second LP process. Based on at least the first power consumption and the second power consumption the system includes means for selecting one of the first LP process and the second LP process to execute for at least part of a second time period.

These as well as other aspects advantages and alternatives will become apparent to those of ordinary skill in the art by reading the following detailed description with reference where appropriate to the accompanying figures.

The following detailed description describes various features or operations of the disclosed systems and methods with reference to the accompanying figures. In the figures similar symbols identify similar components unless context dictates otherwise. The illustrative method devices and or system embodiments described herein are not meant to be limiting. It may be readily understood that certain aspects of the disclosed methods devices and or systems can be arranged and combined in a wide variety of different configurations all of which are contemplated herein

Various processes may run on a computing device to determine an estimated location of the computing device. For example consider a scenario in which a smartphone displays a map showing a blue dot representing the proximate location of the smartphone. In some instances the smartphone may obtain one or more signals to show the blue dot on the map. For example the smartphone may obtain signals such as a Global Positioning System GPS signal a Wi Fi signal and or a sensor signal. In some instances such signals may be combined or fused by running one or more location provider LP processes on the smartphone. As such the placement of the blue dot may be a result of running the one or more LP processes.

Yet with less than ideal conditions for using an LP process and or less than ideal LP processes alone the accuracy of the blue dot in the map may vary. In particular varying accuracies may cause jumpiness between estimated locations of the blue dot in the map. As such the blue dot may jump around on the map making it difficult to ascertain the proximate location of the computing device. In such instances multiple LP processes may be run on the smartphone to assess the accuracy of each LP process that estimates the proximate locations of the smartphone.

In some embodiments running multiple LP processes may be challenging. For example one of the LP process may involve waking up or running an application processor. In some instances running the application processor may draw more power than running other processors in the smartphone. For example running the application processor may consume more battery power due to heavy processing that may be involved with running the application processor. As such running an LP process on the application processor to identify the proximate location of the smartphone may cause the smartphone to lose power at an accelerated rate.

Therefore embodiments herein provide example methods computing devices and systems for executing multiple LP processes to accurately identify a proximate location of a computing device while reducing the power consumption of the computing device. For example considering the scenario above a first LP process may run on a first processor of the smartphone to illustrate the blue dot on the map. Further a second LP process may run on a second processor of the smartphone to estimate locations proximate to the location of the blue dot. Thus the smartphone may disable the first LP process and continue with the second LP process to reduce the power consumption involved with running the first processor among other possibilities.

The client device may be any type of client device and or a transmitting device such as a laptop computer a wearable computing device a head mountable computing device a mobile telephone and or a tablet computing device among other computing devices. The client device may be configured to transmit data to and or receive data from the server in accordance with the method and operations described herein. For example in a client device may communicate with a server via one or more wired and or wireless interfaces. The client device and the server may communicate within a network. Alternatively the client device and the server may each reside within a respective network.

The client device may include a user interface a communication interface a processor and data storage including non transitory computer readable mediums. The data storage may also include instructions executable by the processor for carrying out one or more operations relating to the data sent to or received by the server . The user interface of the client device may include buttons a touchscreen a microphone and or any other elements for receiving inputs as well as a speaker one or more displays and or any other elements for communicating outputs.

The server may be any entity or computing device arranged to carry out the methods and operations described herein. Further the server may be configured to send data to and or receive data from the client device . The server may include a location module which may be configured to process the data received from the client device to determine one or more estimated locations e.g. present and historical proximate locations associated with the client device .

The data received by the server from the client device may take various forms. For example the client device may provide data or information indicative of one or more proximate locations of the client device one or more movements of the client device and or inputs from a user of the client device . The server may then process the data to identify a location history that matches the received data.

The data sent to the client device from the server may take various forms. For example the server may send to the client device an indication of the one or more proximate locations updated location history information and or other information based on the one or more proximate locations of the device. For example the server may send to the client device data or information regarding the areas surrounding the proximate location of the client device .

In some implementations the client device may include a device platform or operating system which may be configured as a multi layered Linux platform and or a functionally equivalent operating system. The device platform may include different applications and an application framework as well as various kernels libraries and runtime entities. In other examples other formats or systems may operate the client device as well.

The client device may include an interface a wireless communication component a cellular radio communication component a global position system GPS sensor s data storage and a processor . Components illustrated in may be linked together by a communication link . The client device may also include additional hardware to enable communication within the client device and between the client device and another computing device such as the server in . Additional hardware of the client device may include transmitters receivers and antennas for example.

The interface may be configured to allow the client device to communicate with another computing device such as the server in . Thus the interface may be configured to receive input data from one or more other computing devices and may also be configured to send output data to the one or more other computing devices. In some examples the interface may also maintain and manage data or data records received and or sent by the client device . In other examples such data or data records may be maintained and managed by other components of the client device . The interface may also include a receiver and transmitter to receive and send data respectively. In other examples the interface may also include a user interface such as a keyboard a microphone and a touchscreen among other interfaces to receive inputs as well.

The wireless communication component may be a communication interface configured to send and receive wireless data for the client device according to one or more wireless communication standards. For example the wireless communication component may include a Wi Fi communication component that is configured to send and receive wireless data according to one or more IEEE 802.11 standards. As another example the wireless communication component may include a Bluetooth communication component configured to send and receive wireless data according to one or more Bluetooth standards among other possible standards.

The data storage may store program logic that can be accessed and executed by the processor and or processor . The data storage may also store collected sensor data that may include data collected by any of the wireless communication component the cellular radio communication component the GPS and any of sensors .

The communication link may be illustrated as a wired connection yet wireless connections may also be implemented as well. For example the communication link may be a wired serial bus such as a universal serial bus a parallel bus and or a wireless connection using short range wireless radio technology. Further additional wireless connections may be used such communication protocols described in IEEE 802.11 including any IEEE 802.11 revisions or Cellular technology among other possibilities.

The processor and the processor may be the same or different types of processors. In one example the processor may be an application processor and the processor may be a second processor of client device . The processor may be configured to send data to and receive data from various components of the client device . In some implementations the processor may be a general processing unit GPU or possibly a baseband processor also configured to send data to and receive data from various components of the client device . In some implementations the processor may also be an application processor possibly similar to or different than the processor .

In some instances processors and may run or execute one or more location provider LP processes to determine one or more estimated locations of the client device including the proximate locations of the client device . Processors and may run hardware processes involving the components of the client device and or software processes involving fused location providers FLP hardware abstraction layers HAL and location batching among other possibilities. Thus processors and may communicate with one or more of the interface the wireless communication component the cellular radio communication component the GPS the sensors the data storage and the processor to determine estimated locations of the client device.

In some embodiments processor may run a LP process that utilizes a location determination algorithm to determine an estimated location of client device . For example an estimated location of client device may be determined based on nearby cellular base stations. In particular the cellular radio communication component may be configured to at least identify a cell from which the client device is receiving one or more signals from a cellular network. Further the cellular radio communication component may also be configured to measure a round trip time RTT to a base station providing the signals. Processor may combine this information with the identified cell to estimate a proximate location of the client device . In another example the cellular communication component may be configured to use observed time difference of arrival OTDOA from three or more base stations such that processor may compute estimated locations of the client device .

In some implementations processor may run an LP process based on a presence and or a proximate location of one or more known wireless access points. For example the one or more access points may be in a wireless range of the client device . Further the wireless communication component may determine the identity of one or more wireless access points e.g. a MAC address and measure an intensity of signals received e.g. received signal strength indication from each of the one or more wireless access points. Thus the received signal strength indication RSSI from a wireless access point may be used such that the processor may compute a respective distance from each wireless access point. As such the distances may be compared to a database that stores information regarding where wireless access points are located. Based on the distance from each wireless access point and the known location of each of the wireless access point the processor may estimate locations of the client device may be determined.

In some embodiments running a first LP process and a second LP process may involve using the processors and . For example processor may run a first LP process involving a location determination algorithm that combines location estimates determined by multiple location determination components. In particular such components may include the interface the wireless communication component the cellular radio component the GPS the data storage and the sensors . Further the sensors may include accelerometers gyroscopes magnetometers and Bluetooth Low Energy among other possibilities. Yet further the processor may run a second LP process utilizing a Wi Fi database and cache data in hardware layers of the client device . The processor may determine estimated locations of the client device possibly saving power in the computing device . As such the second LP process may determine the estimated locations possibly while the client device is in a low power mode.

In some embodiments processors and may run LP processes involving receiving sensor data or sensor outputs. For example LP processes may involve receiving data from sensor s and or GPS . In some instances LP processes may receive the data to determine proximate locations of the computing device . In some instances LP processes may involve a hardware process such as a hardware abstraction layer HAL interfacing the operating system of the client device . For example HAL may provide an interface between the sensors and GPS and the operating system. In particular HAL may provide the interface that sensors and GPS call into allowing the sensors and GPS to function correctly and provide data indicating estimated locations of the computing device . The sensors may include one or multiple sensors. For example sensors may include an accelerometer gyroscope magnetometer pedometer light sensors microphone camera or other location and or context aware sensors.

In some embodiments running an LP process may involve accessing low level data such as GPS pseudo ranges obtained from GPS . For example the processor and or may run a location determination algorithm to determine the estimated locations of the client device based on GPS signals sent by GPS satellites above the Earth. For example the GPS system may be configured to estimate a proximate location of computing device by timing signals sent by the GPS satellites.

In some embodiments running an LP process may involve a fused location provider FLP . For example the FLP may fuse or combine location determining algorithms methods and or code to determine the estimated locations of the client device . For example processors may run an LP process involving a FLP such that it consumes more power than processor .

In some embodiments running an LP process may involve location batching. In some instances location batching may involve grouping or stacking estimated locations. For example location batching may involve using particular instructions for grouping locations during intervals LocationRequest.setDeliveryInterval long deliveryIntervalMs . In some instances time periods or waiting periods may be determined for sending estimated locations to the client device .

In some instances running an LP process may involve a callback mechanism. For example the LP process may involve multiple calls to batch locations. In particular an application programming interface API may be implemented with a listener callback 

In some instances the estimated locations may be sorted or ordered. For example the listener callback may be implemented to sort estimated locations from newest to oldest among other possibilities. In some instances LP processes may involve using one or more applications to perform operations. For example an application may be granted rights or privileges to perform operations. For such rights or privileges e.g. PendingtonIntent rights the applications may retrieve estimated locations ordered from newest to oldest 

In some implementations running the LP process may involve HAL batching possibly in addition to the listener callback. Yet if HAL batching is unavailable the LP process may involve Wi Fi batching with the listener callback to sort the estimated locations from newest to oldest among other possibilities.

Example methods described herein may be performed by one or more components of the client device or in combination by one or all of the components of the client device . In one instance portions of the client device may process data and provide an output internally in the client device to the processors and for example. In other instances portions of the client device may process data and provide outputs externally to other computing devices.

The server may include a communication interface a location module a processor and data storage . All of the components illustrated in may be linked together by a communication link e.g. wired or wireless link . The server may also include hardware to enable communication within the server and between the server and another computing device. The hardware may include transmitters receivers and antennas for example.

The communication interface may allow the server to communicate with another device such as a computing device described above in relation to . Thus the communication interface may be configured to receive input data from one or more computing devices and may also be configured to send output data to the one or more computing devices. In some examples the communication interface may also maintain and manage data and data records received and sent by the server . In other examples data records may be maintained and managed by other components of the server .

The location module may be configured to receive data from a computing device. Further the location module may determine a geographic location of the computing device. The determination may be based on data from an accelerometer gyroscope and or other sensors of the computing device. The location module may determine and store a history of sensor measurements of the computing device. In such instances the location module may reprocess such measurements based on updated data from networks and or information used to determine the locations.

The data storage may store program logic that can be accessed and executed by the processor . The data storage may also include a location database . In some instances the location database may be accessed by the processor to retrieve information regarding wireless access points locations of satellites in a GPS network floor plans of a building and any other type of information useful for determining a location of a computing device among other possibilities.

The server is illustrated with a second processor which may be an application processor and or a specific processor for input output functionality. In some instances functions of the processor and the processor may be combined and carried out by one or both of the processors.

In some embodiments measurements may be collected from various sensors of a computing device such as Wi Fi components GPS sensors and or inertial sensors among other possibilities. In some instances such measurements may be combined with information from external databases such as Wi Fi signal information or modeling information location information or Wi Fi access point information and or building information e.g. floor plans information . Further such measurements and or information may be used to estimate a proximate location or movement of the computing device in real time. By recording or analyzing the real time location estimates at all times or multiple time intervals the estimations may be used to produce a location history.

Method may include one or more operations functions or actions as illustrated by one or more of blocks through . Although the blocks are illustrated in a sequential order these blocks may also be performed in parallel and or in a different order than those described herein. Also the various blocks may be combined into fewer blocks divided into additional blocks and or removed based upon specific implementations.

In addition for the method other processes and other implementations disclosed herein the flow charts show functionality and possible implementations of present embodiments. In this regard each block may represent a module a segment or a portion of program code which includes one or more instructions executable by a processor for implementing logical functions or steps. The program code may be stored on any type of computer readable medium for example such as a storage device including a disk or hard drive.

The computer readable medium may include a non transitory computer readable medium for example such as computer readable media that stores data for short periods of time like register memory processor cache and Random Access Memory RAM . The computer readable medium may also include non transitory media such as secondary or persistent long term storage like read only memory ROM optical or magnetic disks compact disc read only memory CD ROM for example. The computer readable media may also be any other volatile or non volatile storage systems. The computer readable medium may be considered a computer readable storage medium a tangible storage device or other article of manufacture for example.

In addition for the method other processes and other methods disclosed herein each block in may correspond to hardware chipsets and or circuitry that are designed or wired to perform the specific logical functions in the processes.

Implementations of the method may be performed by a computing device or components of a computing device such as one or more processors or may be distributed across multiple computing devices and or a server. In some examples the computing device may receive data or information from sensors of the computing device. Further in some instances the computing device may be a server such that the information may be received from another device that collects the information.

At block of the method may include executing on a computing device a first location provider LP process and a second LP process for at least part of a first time period where executing the first LP process includes using a first processor and where executing the second LP process includes using a second processor. The first and second LP processes may include for example any of the LP processes as described above in relation to . For example the first LP process may run using the processor and the second LP process may run using the second processor . Further the processor may consume more power than the second processor . Yet further executing the first LP process may include running a software process and executing the second LP process may include running a hardware process. In addition the first LP process may include a fused location provider FLP as described above in relation to .

In some implementations the first LP process may involve modeling Wi Fi signals accessing Wi Fi databases and or determining estimated locations based on one or more known wireless access points within a wireless range of the computing device. Further the second LP process may involve determining an estimated location of computing device based on accessing low level data available in hardware e.g. GPS pseudo ranges. Yet further the first and or the second LP processes may involve fusing the GPS pseudo ranges with Wi Fi signal modeling among other possibilities.

In some implementations the first and second LP processes may involve receiving outputs from sensors of the computing device possibly fusing outputs to determine a probability or an estimated location of the computing device. Using one or more of the outputs from the sensors e.g. WiFi scan data temperature readings magnetometer readings etc. various comparisons and mapping may determine estimated locations of the computing device. For example the computing device may determine a particular set of data based on a Wifi scan a temperature reading and a magnetometer reading when the computing device is located outside between two given buildings. As such when the computing device determines this particular set of data the computing device may determine its proximate location to be outside between the two buildings.

At block the method may include obtaining a first estimated location of the computing device from the first LP process. At block the method may include obtaining a second estimated location of the computing device from the second LP process.

Estimated locations may be determined for example in any manner described above in relation to . For example the first estimated location of the computing device may be determined from running the first LP process on an application processor. Further the processor may be an application processor that runs the first LP process to determine the first estimated location of the computing device. Yet further the second estimated location of the computing device may be determined from running the second LP process on the second processor. In addition the processor may be the second processor that runs the second LP process to determine the second estimated location of the computing device where the second processor may consume less power than the application processor.

At block the method may include determining a first power consumption of the computing device from the first LP process. At block the method may include determining a second power consumption from the second LP process. In some instances the first power consumption may be based on using the first processor to determine the first estimated location. Further the second power consumption may be based on using the second processor to determine the second estimated location.

In some instances the method may include receiving an indication of a battery power level of the computing device falling below a threshold level. Further based on the battery power level falling below the threshold level the method may include disabling one of the first LP process and the second LP process.

At block the method may include based on at least the first power consumption and the power second consumption selecting one of the first LP process and the second LP process to execute for at least part of a second time period. For example the first power consumption based on the application process may be greater than the second power consumption based on the second processor. Further the second LP process may be determined to run for another time period possibly to save power in a battery of the computing device. Yet further the second LP process may be determined to run to maintain a battery power level of the computing device.

In some embodiments an indication of a battery power level of the computing device falling below a threshold level may be received. Further based on the battery power level falling below the threshold level one of the first LP process and the second LP process may be disabled. For example based on the battery power level falling below the threshold level the first LP process may be disabled and the second LP process may continue to run on the computing device.

In some embodiments the method may include disabling one of the LP processes. In some instances disabling one of the first LP process and the second LP process may involve deactivating power in certain components of the computing device. For example referring back to disabling the hardware process may involve deactivating power to the sensor s and or GPS . In some instances disabling an LP process may also involve deactivating power to wireless communication component and cellular radio communication component . Further disabling the LP process may involve ending or terminating one or more processes or algorithms executed by an application processor. As noted for example LP processes may be implemented with FLPs. For disabling such processes a callback mechanism used to call each batched location may be terminated.

As a general matter disabling one of the first LP process and the second LP process may reduce the power consumed by the computing device. Further both the first and second LP processes may be disabled during some time periods to further reduce the power consumed by the computing device. In some implementations when disabling one of the first process and the second process the disabled LP process may be disabled for periods of time e.g. one to two days possibly to reduce or avoid switching between the LP processes. In some instances switching between the first LP process and the second LP process may output sporadic locations of the computing device possibly causing jumpiness of the blue dot as described in the scenarios above.

In some embodiments a motion model may include various forms of data. Further the motion model may include data obtained from running LP processes. In particular the motion model may include data obtained from running LP processes that use accelerometers gyroscopes magnetometer pedometer light sensors microphone camera or other location and or context aware sensors. Yet further the motion model may include data from running LP processes on one or more processors. For example the motion model may include data from running the first LP process on processor .

As shown in data may include various types of data including activity data sensor data sensor data dead reckoning data and location data among other possible types of data. Activity data may be indicative of an estimated activity of a user carrying a computing device. In some instances the motion model may be based on the estimated activity of the user of the computing device. Yet further in some instances the estimated activity of the user may be based on the location data associated with the computing device.

Sensor data and may include data from one or more sensors. For example sensor data and may for example be output by one or more sensors of client device described above in relation to . Dead reckoning data may be indicative of one or more directions the computing device. In addition dead reckoning data may for example be output by one or more sensors of client device as described above in relation to . Location data may be indicative of one or more expected locations of the computing device. In particular location data indicative of the one or more expected locations of the computing device may be based on the activity data sensor data and and dead reckoning data .

In some embodiments activity data may include activity recognition data of the computing device that indicates an activity and a direction of a motion of the computing device. As such in some instances the motion model of the computing device may be based on the activity and the direction of the motion of the computing device.

For example data entry may include activity data motion data and location data . In this example consider a scenario in which activity data corresponds to a user driving a vehicle while carrying the computing device possibly driving the vehicle from the user s home to the user s work place. As such motion data may correspond to a velocity an acceleration and or a movement of the computing device indicative of driving the vehicle from the user s home to the user s work place. In addition location data may correspond to various locations of the computing device between the home and the work place.

Further data entry includes activity data temperature data and location data . In this example consider a scenario in which activity data corresponds to a user carrying the computing device and leaving the work place for lunch possibly exiting a work building to go outside the work building. As such temperature data may correspond to a temperature of the air around the computing device. For example referring back to the sensors of the client device may detect the outdoor temperature or possibly a change from the indoor temperature to the outdoor temperature. In addition location data may correspond to one or more proximate locations of the computing device outside of the work building.

Yet further data entry includes activity data motion data direction data and location data . In this example consider a scenario in which activity data corresponds to the user carrying the computing device on the way to a cafeteria for lunch. For instance consider the scenario above such that the cafeteria is in walking distance from the work building. As such motion data and direction data may be used to determine the direction and the path the user is walking to get to the cafeteria. As such location data may correspond to one or more proximate locations of the computing device along the path from the work building to the cafeteria.

As noted for method may include disabling one of the LP processes. For example consider the scenario in which activity data corresponds to the user carrying the computing device to the cafeteria. In such instances the first and second estimated locations indicated by the first and second LP processes respectively may determine estimated locations close to expected locations . As such the second LP process may be determined to accurately output the estimated locations of the computing device. As such the first LP process may be disabled possibly to reduce the power consumed by the computing device.

It should be noted that data records and may be empty. Yet these records may include data possibly related to one or more machine learning processes of the motion model. Further data may be added to and or removed from the motion model over time possibly adjusting to the user s day to day activities. In particular multiple other data entries may be added to data entries and as part of the motion model. In addition multiple other data types may be added to activity data sensor data and dead reckoning data and location data as part of the motion model of the computing device. For example the motion model may also include magnetometer data barometer data or changes in barometer readings. In addition the motion model may include gyroscope data indicating rotational and or circular movements of the computing device. Further the motion model may include data that indicates the position and or orientation of the computing device. Yet further the data may indicate that one or more positions of the computing device relative to a user have changed. In particular the data may indicate that the one or positions have changed based on the data indicating the inaccuracy of dead reckoning measurements.

In some embodiments data in a motion model may be analyzed. For example data of the motion model may be analyzed in an iterative manner. For instance data associated with a given confidence level may be analyzed. Further data associated with a lower confidence may be analyzed until all or most of the data is considered. As such a priority for analyzing the data may be performed in a number of ways. In a further example the data may be prioritized by determining that GPS data indicates one or more estimated locations also indicated by the dead reckoning data . In particular GPS data may indicate a given location and the dead reckoning data also indicate the given location. As such the dead reckoning data may be added to the motion model.

It may be possible to distribute steps of method between client device and server . For example client device may run a first LP process and a second LP process to determine first estimated locations of the client device . Further server may determine the motion model of the computing device that provides the expected locations of the client device .

In some embodiments LP processes and may be for example the LP processes described above in relation to . In some instances one or more of the LP processes and may involve determining estimated locations of a computing device. For example one or more of the LP processes and may determine the estimated locations based on accessing low level data available in hardware e.g. GPS pseudo ranges . Further one or more of the LP processes and may determine the estimated locations based on accessing large Wi Fi databases and identifying proximate locations of one or more known wireless access points within a wireless range of the computing device.

In some embodiments one or more of the LP processes and may run on a first processor of a computing device possibly to determine an estimated location of the computing device. Further LP processes and may run on a second processor of the computing device possibly to determine estimated locations of the computing device.

As shown in step of the LP process may run on a computing device for at least part of a time period to determine an estimated location of the computing device. In particular the LP process may run for at least part of the time period illustrated between times and . As shown in step a motion model may provide data D indicating expected locations of the computing device. In some instances data D may take for example the form of data described above in relation to . For example data D may take for example the form of location data and or . As such the motion model may provide expected locations of the computing device.

Further as shown in step of an LP process may run on the computing device for at least part of time period to determine an estimated location of the computing device. In particular LP process may run for at least part of the time period illustrated in between times and . In some instances the locations and may be compared to determine the accuracy of the LP processes and respectively.

Yet further as shown in step of an LP process may run on the computing device for at least part of time period to determine an estimated location of the computing device. In particular the LP process may run for at least part of the time period illustrated in between times and . In some instances running both a first LP process and a second LP process for at least part of the given time period may relate to block of . As such in some instances the LP process may run using a first processor of the computing device. Further the LP process may run using a second processor of the computing device. As such estimated locations and may be determined by the LP processes and respectively.

Referring back to the method may include the motion model of the computing device providing expected locations of the computing device. Further the method may include comparing the first estimated location and the second estimated location with the expected location . Further the method may include disabling the first LP process based on the second estimated location being within a threshold distance around the expected location . In particular if location is closer to expected locations then the LP process may be disabled from running on the first processor and reducing the power consumption of the computing device. As such as shown in step LP process may run using the second processor for a period of time to determine an estimated location of the computing device. In particular LP process may run for the time period illustrated in between times and .

Yet further location may be closer to expected location . For example consider that LP process involves receiving a GPS signal and an object e.g. a building or the construction of the building obstructs the GPS signal to the computing device. As such the location may be farther away from the expected location than location is from the expected location . Thus LP process may be disabled based on the comparison. In such instances LP process run on the first processor possibly consuming more power than the second processor. Yet the estimated location may be more accurate than estimated location . As such LP process may continue to run after the time period .

In addition the method may include receiving outputs from an accelerometer of the computing device. As such the method may also include determining changes in proximate locations of the computing device using the outputs from the accelerometer. Further the method may include determining an estimated activity of a user of the computing device based on the changes in location of the computing device. Yet further the method may include determining the expected locations of the motion model based on the estimated activity of the user. Further the method may also include making a second comparison of the estimated location with expected location of motion model . In addition the method may include enabling and or disabling LP process for another time period based on the second comparison among other possibilities.

Further block may be illustrated by step of . For example a computing device may run one of the first LP process and the second LP process . The first LP process may provide the first estimated location of the computing device. Further the second LP process may provide the estimated location of the computing device. Yet further the first LP process may run on an application processor of the computing device and the second LP process may run on a second processor of the computing device. In some instances the second LP process may run for more time periods than the first LP process possibly to reduce the power consumed by the application processor.

In some instances one or more of the estimated locations of the computing device may be inaccurate. For example with less than ideal conditions for using LP processes and the accuracy of estimated locations and or of the computing device respectively may be reduced. Consider one or more of the scenarios above where the computing device displays a map and the blue dot indicating the estimated location of computing device jumps around on the map. In such instances the LP process may run to provide estimated location that may be more accurate than other estimated locations where the application processor of the computing device may consume more power than the second processor.

At bock the method may include determining a motion model of the computing device that provides expected locations of the computing device. The motion model may for example be determined in any manner described above in relation to . In particular referring back to the motion model may be determined based on the data of the motion model including activity data sensor data and dead reckoning data and location data where location data may provide the expected locations of the computing device.

In some embodiments the computing device may determine the motion model based on outputs from an accelerometer of the computing device. For example consider one or more the scenarios above in which the user drives the vehicle while carrying a computing device possibly from the user s home to the user s work place. Further the computing device may for example take the form of client device from . As such computing device may include an accelerometer as part of the sensors . Thus motion data may correspond to a velocity an acceleration and or a movement indicative of the computing device moving from the user s home to the user s work place.

In some embodiments the computing device may determine the motion model based on changes in location. For example the computing device may determine the changes in location using the outputs from the accelerometer. For example the location data may be determined using the outputs from the accelerometer. Yet further the location data may correspond to various locations or changes in location of the computing device as the user drives from the home to the work place.

In some embodiments the computing device may determine the motion model in other ways. For example the computing device may determine an estimated activity of a user based on the changes in location of the computing device. Further considering the one or more scenarios above the activity data may correspond to an estimated activity of the user driving the vehicle with the computing device from the user s home to the user s work place. In particular the estimated activity may be based on the changes in location of the computing device possibly changing rapidly due to the speed of the vehicle. As such the motion model may be determined based on this estimated activity of the user driving the vehicle.

Further the computer device may determine the motion model based on dead reckoning estimations. For example referring back to consider the scenario in which the activity data corresponds to the user carrying the computing device to the cafeteria. Sensors in the computing device such as sensors in client device may output motion data and direction data of dead reckoning data . In some instances this data may be used to determine a direction and a path that the user is walking on to get to the cafeteria. As such data of the motion model may be determined based on the direction of motion of the computing device.

Further block of may be illustrated by step of . For example the motion model of the computing device may provide the expected locations during the time period . Yet the expected locations may be provided during other possible time periods and as well. Further the motion model may provide expected locations of the computing device before time and or after time .

At block the method may include making a comparison of the first estimated locations with the expected locations from the motion model. For example referring back to the first estimated locations may be compared with one or more of expected locations and of the motion model in .

Further block may be illustrated by steps and of . For example a comparison of the first estimated locations may be made with expected location from the motion model . Further in some instances a comparison of the estimated locations and may be made with expected location from the motion model among other possibilities.

At block based on at least the comparison the method may include enabling both the first LP process and the second LP process to run on the computing device simultaneously for at least part of the time period to reevaluate which of the first LP process and the second LP process indicates second estimated locations and respectively are closer to the expected locations . For example consider a scenario in which the second LP process provides the estimated locations that are closer to expected location than that of the first LP process . In such instances the LP process may run to provide the estimated location during the time period where the LP process may run using the second processor. In some implementations the LP processes and may run on the second processor possibly to reduce the power consumed by the computing device.

In some instances the second LP process may provide the estimated location indicative of a proximate location of the computing device more accurately compared to the first LP process . As such the first LP process may be disabled possibly to minimize or eliminate the power drawn by the application processor used to run the first LP process . In some instances the first LP process may provide estimated locations indicative of the proximate location of the computing device more accurately compared to the second LP process . As such the second LP process may be disabled possibly to minimize or eliminate the power drawn by the second processor used to run the second LP process .

In some instances data may include LP data LP data motion model data and threshold data . The threshold data may be determined for example in any manner described above in relation to . Further the LP data may correspond to for example LP processes and . Further LP data may correspond to LP processes and . Yet further motion model data may correspond to data D provided by the motion model . In particular data entries and may include data indicative of estimated locations and respectively that correspond to expected location of the computing device provided by the motion model .

In addition data entries through may include for example data indicating the estimated locations of the computing device described above in relation to . In particular data entry may include data indicative of an estimated location that corresponds to estimated location . Further data entry may include data indicative of estimated locations and that correspond to estimated locations and respectively. Yet further data entry may include data indicative of estimated location that corresponds to estimated location . In addition data entries and may include empty data records and that may be filled with data indicative of estimated locations of the computing device.

Further data entries through may include for example data indicating expected locations of the computing device described above in relation to . For example data entry may include data indicative of expected location that corresponds to an expected location provided by the motion model possibly before time . Further data entry may include data indicative of expected location that corresponds to the expected location . Yet further data entry may include data indicative of expected location that corresponds to an expected location provided by the motion model possibly after time .

In addition data entries and may include threshold data . For example data entry may include data indicative of a threshold distance data entry may include data indicative of a threshold distance and data entry may include data indicative of a threshold distance .

In some implementations a comparison of estimated locations and may be made with the expected location of the motion model data . Based at least on this comparison a first LP process and a second LP process may be enabled to run on the computing device simultaneously for a time period. In particular the first LP process and the second LP process may run to reevaluate which of the first LP process and the second LP process indicates estimated locations closer to the expected location .

As shown in a threshold distance around expected locations may establish a region . Thus any location within the region may be within the threshold distance around the expected locations indicated by the motion model . Further the distance around expected location may establish a region that is outside of the threshold distance .

As noted in one or more scenarios above a first LP process and a second LP process may run to provide a first estimated location and a second estimated location of a computing device respectively. In some instances the first LP process may be disabled based on the second estimated location being within a threshold distance around the expected location . Further the first LP process may be disabled based on the estimated locations and indicating locations beyond one or more of the threshold distances and from the expected locations . Yet in some instances the first LP process may be disabled based on the remaining power in the computing device. In such instances the first estimated location may be closer to the expected location than the second estimated location.

In some instances the second LP process may be disabled based on the first estimated location being within a threshold distance around the expected location . Further the second LP process may be disabled based on the estimated location and indicating locations beyond one or more of the threshold distances and from the expected locations .

Referring back to the method may also include receiving information indicating a battery power level of the computing device. Based on the battery power level being below a threshold amount the method may include disabling the first LP process and or the second LP process. As such the power level of the computing device may be preserved or conserved.

In some implementations the method may include receiving a request for location information from an application running on the computing device. Based on a quality of data required by the application a first LP process and or a second LP process may be selected to run on the computing device. For example a restaurant application may search and identify certain restaurants in the vicinity of the computing device. In particular the restaurant application may require accurate location information. As such the first LP process and or the second LP process may be selected to run on the computing device to meet the required accuracy for the application to run properly.

Further the method may also include making a determination that the estimated locations and of the computing device are outside of one or more threshold distances and around the expected locations . For example the estimated location may be outside of a threshold distance around the expected locations indicated by the motion model . Responsive to such determinations both the first LP process and the second LP process may be enabled to run on the computing device simultaneously to reevaluate which of the first LP process and the second LP process provides estimated locations of the computing device that are closer to expected locations indicated by the motion model data .

Yet further the method may also include determining that one of the first LP process and the second LP process running on the computing device stops reporting locations for a given period of time. As such the method may include enabling both the first LP process and the second LP process to run on the computing device simultaneously to reevaluate which of the first LP process and the second LP process provides outputs indicative of locations of the computing device that are closer to the expected locations indicated by the motion model .

In some instances the method further may include after expiration of a given time period running on the computing device both the first LP process and the second LP process simultaneously for at least part of another time period to provide additional estimated locations of the computing device. Further a second comparison of the additional estimated locations may be made with the expected locations of the motion model. Further one of the first LP process and the second LP process may be disabled based on the second comparison.

The first estimated location may be used instead of the second estimated location possibly after comparing the first and second estimated locations to the expected locations indicated by the motion model. Yet further at step the first LP process may for example run better for approximately one minute. In particular the first estimated location may be closer to the expected locations of the computing device compared to the second estimated location. Thus the second LP process may be disabled.

At step the first LP process may run on the computing device to determine or refresh the first estimated locations of the computing device. Further at step the first LP process may for example run for approximately 24 hours or a single day. As such returning to step both the first LP process and the second LP process may run on the computing device. At step the second LP process may for example run better for approximately one minute. In particular the second estimated locations may be closer to the expected locations of the computing device than the first estimated location. Thus the first LP process may be disabled.

At step the second LP process may run on the computing device to determine or refresh the second estimated locations of the computing device. Yet at step no second estimated locations of the computing device may be provided. The second LP process running on the computing device may stop providing the second estimated locations for a given period of time. As such returning to step both the first LP process and the second LP process may run on the computing device. At step no first estimated locations of the computing device may be provided. The first LP process running on the computing device may stop providing first estimated locations for a given period of time.

As noted for step both the first and second LP processes may run on the computing device simultaneously to determine the first and second estimated locations respectively. The second estimate location may be used instead of the first estimated location possibly after comparing the first and second estimated locations to the expected locations indicated by the motion model. Yet further at step the second LP process may for example run better for approximately one minute. In particular the second estimated location may be closer to the expected locations of the computing device than the first estimated locations. Thus the first LP process may be disabled.

As noted for step the second LP process may run on the computing device to determine the second estimated location of the computing device. Further at step the second LP process may for example run for approximately 24 hours or a single day. As such returning to step both the first LP process and the second LP process may run on the computing device. Yet further at step the first LP process may for example run better for approximately one minute. In particular the first estimated locations may be closer to the expected locations of the computing device than the second estimated locations. Thus the second LP process may be disabled. Further returning to step the first LP process may for example run for approximately 24 hours or a single day. As such returning to step both the first LP process and the second LP process may run on the computing device. As such the process may continue at step as described above.

It should be noted that the process above is provided for illustrative purposes and various other processes may also be possible. In particular logic may be added to process to determine other processes. For example at step depending on whether the first LP process or the second LP process runs better for a particular time period steps or may be carried out respectively. Yet further at step if the first LP process stops providing first estimated locations for a given period of time then steps and may be made among other possibilities.

The logs of data for which dead reckoning data and GPS data indicate similar locations may be provided to a non linear least squares optimizer for example. Logs of data for which the dead reckoning data and the GPS location do not indicate similar locations may be rejected as erroneous data or data with too much noise. The non linear least squares optimizer may optimize paths using GPS and dead reckoning as shown at block and as described above using for example a series optimizer and then build optimal Wi Fi maps while keeping the paths constant as shown at block . The non linear least squares optimizer may further jointly optimize paths and Wi Fi maps using a simultaneous localization and mapping SLAM optimization and output a Wi Fi map as shown at block .

Traces of data with unreliable GPS data at block may be received at a hierarchical Viterbi processor to perform a global search for most likely paths given associated Wi Fi scans in the traces as shown at block . As an example a path of a user trace may be determined using the Viterbi algorithm e.g. most likely path through a graph based on one or more of motion probabilities from dead reckoning transition probabilities from floor plan or emission probabilities from a Wi Fi model. The non linear least squares optimizer may receive the output of the global search and align with the dead reckoning to a Viterbi path as shown at block and jointly optimize all paths and Wi Fi maps using a SLAM optimization as shown at block .

The SLAM optimization is performed iteratively on growing subsets of states and constraints to determine a location of a user when data was collected based on all data collected. A first iteration uses subsets so that a function minimized is convex. Running SLAM on these subsets gives an estimate of the state subset. This estimate is used for determining the next subsets to include and the initialization to use for the next iteration. Thus more constraints are added using a previous determination as a time starting point as the best prediction. The system defines a process that selects states optimizes the states using a non linear least squares solver and runs SLAM algorithms to determine how to initialize the state for the next optimization iteration.

Although examples are described as determining a Wi Fi signal strength map similar or same functions may be performed to determine localization of passively collected traces for creation of other types of maps such as magnetometer maps.

It should be understood that arrangements described herein are for purposes of example only. As such those skilled in the art will appreciate that other arrangements and other elements e.g. machines interfaces functions orders and groupings of functions etc. can be used instead and some elements may be omitted altogether according to the desired results. Further many of the elements that are described are functional entities that may be implemented as discrete or distributed components or in conjunction with other components in any suitable combination and location or other structural elements described as independent structures may be combined.

While various aspects and embodiments have been disclosed herein other aspects and embodiments will be apparent to those skilled in the art. The various aspects and embodiments disclosed herein are for purposes of illustration and are not intended to be limiting with the true scope being indicated by the following claims along with the full scope of equivalents to which such claims are entitled. It is also to be understood that the terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting.

