---

title: Scripting of SOAP commands
abstract: A computer-implemented method processes a simple object access protocol (SOAP) command. The method includes interpreting an XML script to perform a function contained in the XML script, the XML script containing the SOAP command, parsing the SOAP command from the XML script, and passing the SOAP command to a SOAP interpreter for execution.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09591065&OS=09591065&RS=09591065
owner: PTC Inc.
number: 09591065
owner_city: Needham
owner_country: US
publication_date: 20140606
---
This application is a continuation and claims the benefit of priority under 35 USC 120 of U.S. application Ser. No. 13 252 437 filed Oct. 4 2011 to be issued U.S. Pat. No. 8 752 074 on Jun. 10 2014 which is a continuation of U.S. application Ser. No. 11 673 943 filed Feb. 12 2007 now U.S. Pat. No. 8 060 886 which is a divisional of U.S. application Ser. No. 10 123 960 filed Apr. 17 2002 now U.S. Pat. No. 7 178 149 . The disclosures of the prior applications Ser. Nos. 13 252 437 11 673 943 and 10 123 960 are considered part of and are incorporated by reference in the disclosure of this application as if set forth herein in full.

This invention relates generally to scripting simple object access protocol SOAP commands using extensible markup language XML and to providing the resulting XML script to a device for execution.

An apparatus may contain an embedded controller or agent software to monitor and control its operation. Any type of apparatus may have an embedded controller or agent including but not limited to home appliances office equipment medical devices and industrial tools. Other examples include robots blood analyzers multifunction copiers and air conditioners.

Embedded devices are often connected to an internal network such as a local area network LAN with an interface to the Internet. Other devices on the internal network may communicate with an embedded device over the internal network. However the embedded device is not generally addressable from the Internet. To address this problem the embedded device may initiate communications with an addressable external device. That is the embedded device may access the external device e.g. a server periodically to obtain necessary data.

SOAP is a standard for encoding function calls such as remote procedure calls RPCs in XML. SOAP defines rules i.e. a syntax for encoding the function calls in XML. The body of a SOAP command is defined at its start by and at its end by . Code in between these two commands includes the function to be performed by the SOAP command. A SOAP command may include other data as well such as header information.

Heretofore SOAP commands were only available as individual discrete commands. This is impractical for device initiated communication particularly if the device is unaware of any timing issues relating to execution of the SOAP commands. The invention therefore scripts one or more SOAP commands in XML and provides the XML script to a device such as an embedded controller for execution. The XML script is executed by the embedded controller much like a computer program to control execution of the SOAP commands. For example timing and sequence of execution of the SOAP commands may be specified in the XML script.

The invention also defines variables in the XML script which may be passed to and from the SOAP commands. This facilitates the combination of SOAP commands in XML script and provides an advantage over the use of traditional SOAP commands which are limited to passing hard coded numerical values i.e. non variables .

In general in one aspect the invention is directed to a computer implemented system for processing a simple object access protocol SOAP command. The system includes interpreting an XML script to perform a function contained in the XML script the XML script containing the SOAP command parsing the SOAP command from the XML script and passing the SOAP command to a SOAP interpreter for execution. This aspect of the invention may include one or more of the following features.

Plural SOAP commands may be contained in the XML script. The plural SOAP commands may be passed to the SOAP interpreter. The plural SOAP commands may be executed in a sequence specified by the XML script. At least one of an argument and a return value may be received from the SOAP command following execution of the SOAP command. The argument may be stored as a variable in the XML script.

The XML script may declare a variable. A value of the variable may be passed as an argument to the SOAP command prior to executing the SOAP command. The function may be a conditional statement. The conditional statement may be an If Then statement or an If Then Else statement. The function may be a control statement that affects a sequence of execution of the XML script and or the SOAP command. The control statement may be a loop. The function may be an exception handler that affects a sequence of execution of the XML script and or the SOAP command when an error condition exists. The function may be a statement that controls relative or absolute time to execute the SOAP command. Parsing may be performed by an XML interpreter and executing may be performed by the SOAP interpreter. The XML interpreter may pass the SOAP command to the SOAP interpreter and the SOAP interpreter may pass an output of the SOAP command to the XML interpreter.

In general in another aspect the invention is directed to a computer implemented system for generating extensible markup language XML script that contains a simple object access protocol SOAP command. The system includes receiving code that defines a function and the SOAP command and translating the code to XML script that performs the function and contains the SOAP command. This aspect of the invention may include one or more of the following features.

The XML script may be provided to a device. The device may include a controller that executes the XML script. The code may contain plural SOAP commands and functions. The XML script may contain the plural SOAP commands and functions. The XML script may declare a variable. A value of the variable value may be passed as an argument to the SOAP command in the XML script.

The function may be a conditional statement. The conditional statement may be an If Then statement or an If Then Else statement. The function may be a control statement that affects a sequence of execution of the XML script and or the SOAP command. The control statement may be a loop. The function may be an exception handler that that affects a sequence of execution of the XML script and or the SOAP command when an error condition exists. The function may be a statement that controls a relative or absolute time to execute the SOAP command.

Other features and advantages of the invention will become apparent from the following description including the claims and drawings.

Device is connected to an internal network such as a LAN. A router or modem couples internal network to an external network such as the Internet World Wide Web Web . External network runs TCP IP Transmission Control Protocol Internet Protocol or some other suitable protocol. Network connections are via Ethernet telephone line wireless or other transmission media.

External network contains a server which is a computer or any other processing device. Server communicates with embedded controller over external network and internal network . Embedded controller has a local IP Internet Protocol address that can be resolved within internal network . However this local IP address may not be recognizable by devices on external network such as server . As such server may not be able to directly address device .

Embedded controller runs software which includes Web client application and operating software . Web client application includes a TCP IP protocol stack that allows embedded controller to communicate over external network . Device operating software provides an interface between Web client application and a database in memory . Through device operating software embedded controller retrieves data stored in database and stores data in database .

Software also includes an XML interpreter and a SOAP interpreter . XML interpreter is a module that receives XML script parses the script and performs the functions identified by the script. As background XML is a self describing computer language meaning that fields in XML code identify variables and their values in the XML code. For example a data field is delineated by to indicate the start of the field and to indicate the end of the field. XML is used because it can be generated parsed and understood relatively easily.

Among the functions in the XML script may be an instruction to identify a SOAP command and to pass the SOAP command to SOAP interpreter for processing. An example of another function includes a statement that controls relative or absolute time to execute the SOAP command. SOAP interpreter receives SOAP commands from XML interpreter and executes those commands. Examples of SOAP commands that can be executed by the embedded controller or agent include setting the value of a variable uploading or downloading a file restarting the software or any action specific to the apparatus.

Database stores data such as operational parameters XML script and identification information for the instance of device . What is meant by instance is the specific identity of device as distinguished from other identical devices. The identification information stored in database identifies the instance of device . This identification information may include data identifying the type of the device a common or friendly name for the device the manufacturer of the device the model name of the device the model number of the device the serial number of the device or a universal unique identifier UUID for the device.

The device type is the name of the device. The common name of the device is how the device is known in the vernacular e.g. television . The manufacturer identifies the manufacturer of the device e.g. Sony . The model name identifies the particular model of the device e.g. Wega . The model number identifies the model number of the device e.g. XBR400 . The serial number identifies the serial number of a particular instance of the device e.g. D. The UUID is a universal identifier for the instance of the device e.g. 4A89EA70 73B4 11d4 80DF 0050DAB7BAC5. Of the data shown above generally only the serial number and the UUID are unique to the instance of device .

The identification data stored in database is used by embedded controller to retrieve XML script specific to the instance of device or for a particular type of device from server . A device initiated process for retrieving the XML script is described below.

Server is a computer that runs an HTTP Hypertext Transfer Protocol Web server computer program. Server includes a controller such as a microprocessor for executing software to perform the functions described below. To avoid confusion in terminology the following reads as though those functions are performed by server even though software in controller of server performs the functions.

Server executes Web server software to communicate over external network . Web server software also hosts a Web page associated with device . The Web page not shown is displayed on computer of a user such as the owner of device who may select some actions to be sent to the device. For example a remote operator may want to update three operational variables which requires three SOAP commands. These three SOAP commands are wrapped in an XML script that executes the commands as a single operation. The XML script along with any input updated operational parameters if desired are transmitted to Web server software over external network . Web server software stores the XML script in database of memory . An example of a process for updating operational parameters is described in U.S. patent application Ser. No. 09 667 737 filed Sep. 22 2000 the contents of which are incorporated into this application by reference as if set forth herein in full.

Web server software stores and retrieves XML script from database using application logic . Application logic is software for accessing database using Java servlets and a JDBC Java Data Base Connectivity database driver. The XML script can be stored in database individually or as part of a configuration file for an instance of device .

Computer is personal computer PC or other machine that includes a processor a memory and a storage medium see view . Storage medium stores computer programs which are executed by processor out of memory . Computer programs include a Web client application containing a TCP IP protocol stack for communicating over the Internet a Web browser such as Microsoft Internet Explorer for accessing Web pages an operating system OS such as Microsoft Windows98 and executable instructions for implementing process which is shown in .

Process generates XML script containing one or more SOAP commands from user generated code provided to computer . The code may be input by the user via a graphical user interface GUI not shown for example or it may be retrieved from a storage medium or over network .

The code has a syntax that can be understood and interpreted by instructions . For example the code may be a commonly understood computer language such as BASIC or C or a form of pseudo code specific to the invention. The code defines functions such as conditional statements e.g. If Then or If Then Else statements control statements e.g. do While or do Until loops or exception handlers meaning fail safe mechanisms that are triggered in the code in the event that an instruction in the code fails. The functions affect the sequence of execution of the resulting XML code and or SOAP commands.

Process receives code such as that shown above that defines one or more functions e.g. a While loop and one or more SOAP commands e.g. SomeFunction and AnotherFunction . Process translates the code to XML script that when interpreted performs the functions and contains the SOAP commands. To perform the translation process may compile the code interpret the functions in the compiled code and generate appropriate XML script from the compiled code. An appropriate compiler may be included within instructions for this purpose. The format of the SOAP commands may be static and known to the compiler or the format may be determined dynamically from a WSDL Web Services Description Language document. WSDL is a standard for describing SOAP commands. WSDL is itself an XML document that can be interpreted automatically. WSDL defines the set of functions available and the format of each of the SOAP commands.

WSDL usually describes the functionality for a particular device or Web service. By reading WSDL a program can display functions to a user then create SOAP command s for the function s selected by the user. By way of example there may be one thousand devices all with individual settings and it is desired to set all of the devices to 6 lower power usage. Using traditional SOAP commands the server must be able to address each device obtain each device s current setting calculate 94 of its value then write that new value back to each device all through issuing individual SOAP commands. Using a SOAP script the same script can be sent to all of the devices because the variable is evaluated locally at each device. As the population of monitored devices grows this kind of distributed processing becomes more useful.

Continuing with the example set forth above process translates the code into the following XML script 

An example of XML script containing a conditional IF statement is set forth in Appendix A attached hereto. An example of XML script containing an exception handler is set forth in Appendix B attached hereto.

After the code has been translated to XML script process provides the XML script to server over network . Process may send the XML script to server through a Web interface along with identification information that specifies the instance of device for which the XML script is intended. Web server software on server receives the XML script over network and application logic stores the XML script in database along with its associated identification information.

Embedded controller executes software to retrieve the XML script intended for device from remote server . In response server executes software to send the XML script to embedded controller . shows these processes in detail. The left half of titled Embedded Controller shows process performed by embedded controller and the right half of titled Server shows process performed by server .

Process generates and sends a command to server . The command or a modified version thereof is sent by embedded controller to server periodically. It is through this command that embedded controller polls server to determine if there is any new updated XML script for device on server .

The command includes XML data identifying device . The data identifies the specific instance of device and may include a device type field and one or both of a device serial number field and a device UUID. The command may also include a common name field a manufacturer name field a model name field and a model number field which specify the information set forth above for the device.

The command may be either an HTTP GET command or an HTTP post command. The data included in those commands is similar with the difference being that the HTTP GET command retrieves a document such as a file containing the XML script and the HTTP POST command retrieves information such as the XML script itself.

Process in server receives the HTTP command from embedded controller . Process identifies the command as either a POST or GET command based on a header such as POST CONTROL HTTP 1.1 for a POST command in the command. Process uses an XML parser to parse the various identifying fields such as device type serial number and UUID from the command.

Process identifies the instance of device based on the information parsed from the command. That is process uses the device type serial number and UUID field information to identify the instance of device .

The identification information from the command in particular the device serial number and or UUID is used to search through database for XML script specific to device . Once the appropriate XML script has been identified process retrieves that XML script from database using application logic . Process determines if the XML script has been updated since it was last retrieved. This may be done by examining a revision number or date included in a header associated with the XML script. If the XML script has been updated process adds the updated XML script to the reply portion of POST command and sends the POST command with the updated XML script back to embedded controller .

As was the case above with the POST command the identification information from the command is used to search through database for XML script for the specific instance of device . In particular the device serial number and or UUID are used to retrieve a configuration file that is specific to device . The configuration file contains the XML script for device . Process sends the configuration file to embedded controller .

Process receives the XML script containing one or more SOAP commands from server in response to the HTTP command. Process in particular Web client application in device provides the XML script to XML interpreter where the XML script is executed.

Referring to a process is shown for executing the XML script in embedded controller . Process is implemented by executable instructions in XML interpreter and SOAP interpreter .

XML interpreter interprets the XML script to perform the functions contained therein. For example if there are any conditional statements control statements or exception handlers defined by the XML script XML interpreter performs those functions on the appropriate commands and variables contained in the XML script.

During processing XML interpreter parses the XML script to identify any SOAP commands contained in the XML script. Identified SOAP commands are passed to SOAP interpreter which executes the SOAP commands. Results of the SOAP commands may be passed back to the XML interpreter for further processing. Likewise variables may be passed from the XML script to the SOAP commands.

Using XML script in this manner embedded controller is able to execute multiple SOAP commands in response to a single device initiated query. Thus device can perform reconfiguration operations or the like using multiple SOAP commands without maintaining communication with an external device such as server during the reconfiguration process. The XML script can specify future times at which the SOAP commands are to be executed thus providing the device with further control over its own operation. SOAP interpreter implements the SOAP standard to interpret and execute function calls. As more devices and software systems have support for SOAP device will be able to execute a script that controls multiple devices by calling their SOAP services.

Processes and are not limited to use with the hardware software configuration of they may find applicability in any computing or processing environment. Processes and may be implemented in hardware e.g. an ASIC Application Specific Integrated Circuit and or an FPGA Field Programmable Gate Array software or a combination of hardware and software.

Processes and may be implemented using one or more computer programs executing on programmable computers that each includes a processor a storage medium readable by the processor including volatile and non volatile memory and or storage elements at least one input device and one or more output devices.

Each such program may be implemented in a high level procedural or object oriented programming language to communicate with a computer system. Also the programs can be implemented in assembly or machine language. The language may be a compiled or an interpreted language.

Each computer program may be stored on a storage medium or device e.g. CD ROM hard disk or magnetic diskette that is readable by a general or special purpose programmable computer for configuring and operating the computer when the storage medium or device is read by the computer to perform processes and .

Processes and may also be implemented as an article of manufacture such as one or more machine readable storage media e.g. compact or floppy disc each configured with a computer program where upon execution instructions in the computer program cause a machine e.g. a computer to operate in accordance with one or more of processes and .

The invention is not limited to use with the protocols and standards described above. For example Web server may use Java Servlets ASP Active Server Pages ISAPI Internet Server Application Programming Interface or .NET interfaces to communicate with application logic . The HTTP commands sent by embedded controller and or server are not limited to HTTP GET and POST commands. Any commands and or requests for requesting and receiving data may be used.

The invention is not limited to the protocols and architecture described with respect to . Similarly the invention is not limited to device initiated transfers of the XML script. For example computer may transmit the XML script directly to embedded controller rather than by way of server via e mail file transfer protocol FTP message queues or any other type of data transfer mechanism. These other transfer protocols may also be used with device initiated transfers. Server may generate the XML script and transmit it directly to controller . The XML script may be used on any machine and is not limited to use with embedded controllers. RPCs other than SOAP calls may be scripted using XML and the resulting XML script may be processed in the manner described herein. SOAP commands other than those described herein may be used. The processes described herein may be implemented using circuitry such as programmable logic logic gates a processor and or a memory.

Other embodiments not specifically described herein are also within the scope of the following claims.

