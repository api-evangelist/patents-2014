---

title: Technologies for secure inter-virtual network function communication
abstract: Technologies for secure inter-virtual network function communication include a computing device to determine a cryptographic key for secure communication over at least one of an inter-virtual network function (VNF) network, an inter-virtual network function component (VNFC) network, or a VNF-VNFC network based on a security policy of the computing device; and. The computing device securely communicates over at least one of the inter-VNF, inter-VNFC, or VNF-VNFC network based on the determined cryptographic key.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09407612&OS=09407612&RS=09407612
owner: Intel Corporation
number: 09407612
owner_city: Santa Clara
owner_country: US
publication_date: 20141031
---
Various technical specifications define the way in which network functions and services are deployed and managed by network operators and service providers worldwide. For example specifications define the use of virtualized platforms to deliver services and oftentimes components within a service may be chained together. Such technical specifications include for example the European Telecommunication Standards Institute s standard for Network Functions Virtualization ETSI NFV . In some circumstances operators may require the ability to run various network functions in an unmodified manner. In a virtualized environment doing so may entail allowing network function vendors to run existing workloads on a virtualized platform which often translates into security requirements that all inter platform communications are untrusted e.g. in distributed deployments implementations . However executing sensitive inter virtual network function VNF and inter VNF component VNFC communication over unprotected networks may lead to unauthorized data snooping data alteration data duplication network routing privacy breaches and or other security concerns.

While the concepts of the present disclosure are susceptible to various modifications and alternative forms specific embodiments thereof have been shown by way of example in the drawings and will be described herein in detail. It should be understood however that there is no intent to limit the concepts of the present disclosure to the particular forms disclosed but on the contrary the intention is to cover all modifications equivalents and alternatives consistent with the present disclosure and the appended claims.

References in the specification to one embodiment an embodiment an illustrative embodiment etc. indicate that the embodiment described may include a particular feature structure or characteristic but every embodiment may or may not necessarily include that particular feature structure or characteristic. Moreover such phrases are not necessarily referring to the same embodiment. Further when a particular feature structure or characteristic is described in connection with an embodiment it is submitted that it is within the knowledge of one skilled in the art to effect such feature structure or characteristic in connection with other embodiments whether or not explicitly described. Additionally it should be appreciated that items included in a list in the form of at least one A B and C can mean A B C A and B B and C A and C or A B and C . Similarly items listed in the form of at least one of A B or C can mean A B C A and B B and C A and C or A B and C .

The disclosed embodiments may be implemented in some cases in hardware firmware software or any combination thereof. The disclosed embodiments may also be implemented as instructions carried by or stored on one or more transitory or non transitory machine readable e.g. computer readable storage medium which may be read and executed by one or more processors. A machine readable storage medium may be embodied as any storage device mechanism or other physical structure for storing or transmitting information in a form readable by a machine e.g. a volatile or non volatile memory a media disc or other media device .

In the drawings some structural or method features may be shown in specific arrangements and or orderings. However it should be appreciated that such specific arrangements and or orderings may not be required. Rather in some embodiments such features may be arranged in a different manner and or order than shown in the illustrative figures. Additionally the inclusion of a structural or method feature in a particular figure is not meant to imply that such feature is required in all embodiments and in some embodiments may not be included or may be combined with other features.

Referring now to a system for secure inter virtual network function communication illustratively includes a backbone network system a backhaul network system one or more tower systems and one or more subscriber devices . In the illustrative embodiment the subscriber devices communicate with the backhaul network system by virtue of the tower systems and the backhaul network system ensures the appropriate data packets are routed to the backbone network system for processing and or further routing. It should be appreciated that each of the backbone network system the backhaul network system the tower systems and the subscriber devices may be embodied as any suitable device or collection of devices for performing the functions described herein. In the illustrative embodiment each of the backbone network system the backhaul network system and the tower systems enable telecommunication between the subscriber devices and or other devices e.g. over the Internet . Further the backbone network system the backhaul network system and the tower systems may include any number of devices networks routers switches computers and or other intervening devices to facilitate their corresponding functions depending on the particular implementation.

In some embodiments the backbone network system may be embodied as a Network Function Virtualization NFV based Long Term Evolution LTE backbone network having a Virtual Evolved Packet Core vEPC architecture. It should be appreciated that the backbone network system may serve as a centralized network and in some embodiments may be communicatively coupled to another network e.g. the Internet . In the illustrative embodiment the backhaul network system includes one or more devices that communicatively couple e.g. via intermediate links the backbone network system to the tower systems subnetworks and or edge networks. In some embodiments the backhaul network system may be embodied as an LTE backhaul network system and may include a variety of networks including for example T IP optical ATM leased and or other networks.

The tower systems include hardware configured to permit communication devices for example mobile computing devices e.g. mobile phones and or other subscriber devices to communicate with one another and or other remote devices. In doing so the tower systems enable the subscriber devices to communicate with the backhaul network system . In some embodiments one or more of tower systems may include or otherwise be embodied as an evolved node eNodeB configured to communicate directly or indirectly with one or more of the subscriber devices e.g. mobile computing device handsets . Further the tower systems may include or serve as for example a base transceiver station BTS or another station system depending on the particular embodiment. The subscriber devices may be embodied as any type of computing device capable of performing the functions described herein. For example in embodiments in which an LTE backhaul and backbone system are utilized the subscriber devices may be embodied as mobile computing devices e.g. smartphones and may be configured to utilize a cellular network.

As described in detail below the system or more particularly the system may utilize various virtual network functions while ensuring that the inter VNF and inter VNFC communications e.g. VNF VNF communications VNFC VNFC communications and or VNF VNFC communications are protected. Further in some embodiments the system permits such communications without requiring vendors to modify their VNFs and therefore avoiding potentially unwieldy deployment scenarios.

Referring now to in the illustrative embodiment the backbone network system includes one or more VNFs one or more servers and a management system . Additionally in the illustrative embodiment the management system includes an orchestrator one or more VNF managers and one or more virtual infrastructure managers VIMs . Although the orchestrator the VNF managers and the VIMs are shown as independent devices or components in the illustrative embodiment it should be appreciated that the orchestrator the VNF managers and or the VIMs may be embodied on the same or different devices e.g. one or more servers in other embodiments. Further in some embodiments the system may be embodied as a system different from the backbone network system of . It should further be appreciated that in some embodiments each of the servers may include similar hardware software and or firmware components.

Referring now to an illustrative embodiment of the servers of the system is shown. As shown the illustrative server includes a processor an input output I O subsystem a memory a data storage a communication circuitry and one or more peripheral devices . Additionally in some embodiments the server may include a security co processor . Of course the server may include other or additional components such as those commonly found in a typical computing device e.g. various input output devices and or other components in other embodiments. Additionally in some embodiments one or more of the illustrative components may be incorporated in or otherwise form a portion of another component. For example the memory or portions thereof may be incorporated in the processor in some embodiments.

The processor may be embodied as any type of processor capable of performing the functions described herein. For example the processor may be embodied as a single or multi core processor s digital signal processor microcontroller or other processor or processing controlling circuit. As shown the processor may include one or more cache memories . It should be appreciated that the memory may be embodied as any type of volatile or non volatile memory or data storage capable of performing the functions described herein. In operation the memory may store various data and software used during operation of the server such as operating systems applications programs libraries and drivers. The memory is communicatively coupled to the processor via the I O subsystem which may be embodied as circuitry and or components to facilitate input output operations with the processor the memory and other components of the server . For example the I O subsystem may be embodied as or otherwise include memory controller hubs input output control hubs firmware devices communication links i.e. point to point links bus links wires cables light guides printed circuit board traces etc. and or other components and subsystems to facilitate the input output operations. In some embodiments the I O subsystem may form a portion of a system on a chip SoC and be incorporated along with the processor the memory and other components of the server on a single integrated circuit chip.

The data storage may be embodied as any type of device or devices configured for short term or long term storage of data such as for example memory devices and circuits memory cards hard disk drives solid state drives or other data storage devices. The data storage and or the memory may store various data during operation of the server useful for performing the functions described herein.

The communication circuitry may be embodied as any communication circuit device or collection thereof capable of enabling communications between the server and other remote devices over a network. The communication circuitry may be configured to use any one or more communication technologies e.g. wireless or wired communications and associated protocols e.g. Ethernet Bluetooth Wi Fi WiMAX etc. to effect such communication. In some embodiments the communication circuitry includes cellular communication circuitry and or other long ranged wireless communication circuitry. Further in some embodiments the communication circuitry includes a physical network switch such as a network interface card NIC that is configured to communicate with remote devices e.g. other servers .

The peripheral devices may include any number of additional peripheral or interface devices such as speakers microphones additional storage devices and so forth. The particular devices included in the peripheral devices may depend on for example the type and or intended use of the server .

The security co processor if included may be embodied as any hardware component s or circuitry capable of performing security functions cryptographic functions and or establishing a trusted execution environment. For example in some embodiments the security co processor may be embodied as a trusted platform module TPM or an out of band processor. Additionally in some embodiments the security co processor may establish an out of band communication link with remote devices e.g. corresponding security co processors of other servers .

Referring back to as shown the system includes one or more virtual network functions VNFs each of which may include one or more virtual network function components VNFCs . It should be appreciated that the VNFs may be embodied as any suitable virtual network functions similarly the VNFCs may be embodied as any suitable VNF components. For example in some embodiments the VNFs may include a security gateway SGW a packet data network gateway PNG a billing function and or other virtual network functions. In some embodiments a particular VNF may have multiple sub instances which could be executing on the same server or different servers . In other words when virtualized network functions traditionally handled by physical hardware co located with a particular server may be distributed as VNFs across one or more of the servers . In the illustrative embodiment the VNFCs are processes and or instances that cooperate to deliver the functionality of one or more VNFs . For example in some embodiments the VNFCs are sub modules of the VNFs . Similar to the VNFs it should be appreciated that the VNFCs may be distributed across one or more servers . Further it should be appreciated that a particular VNFC may be distributed across multiple servers and still form a part of a VNF established on a single server . In particular in some embodiments the VNFs and or the VNFCs may be executing on the same server . In other embodiments the VNFs and or the VNFCs may be executing within the same data center but on different servers . In yet other embodiments the VNFs and or the VNFCs may be executing across different data centers.

As described herein in the illustrative embodiment the VNFs of one or more servers may communicate with one another for example over an inter VNF communication network via one or more inter VNF VNF VNF communication mechanisms. Similarly the VNFCs of one or more servers may communicate with one another for example over an inter VNFC VNFC VNFC communication network via one or more inter VNFC communication mechanisms. Additionally in some embodiments a VNF of one or more servers may communicate with a VNFC of one or more servers over a VNF VNFC communication network not shown via one or more VNF VNFC communication mechanisms. It should be appreciated that the VNF VNF VNFC VNFC and VNF VNFC communication mechanisms may be embodied as any suitable mechanisms configured to enable such communication. For example in some embodiments the VNFs and or VNFCs may communicate with one another using an open switch with a hypervisor and packet parsing formatted packets based on a standard format shared memory e.g. physical virtual memory reserved by the hypervisor over a physical network switch and or other suitable mechanisms.

In the illustrative embodiment of each of the servers includes a network function virtualization infrastructure NFVI which includes a hypervisor a trusted execution environment TEE physical resources and virtual resources . Additionally the hypervisor includes one or more APIs a virtual switch vSwitch one or more encryption tunnels and a shared memory . Of course the servers may include additional components in some embodiments which are omitted for clarity of the description. As described below in the illustrative embodiment the corresponding network function virtualization infrastructure NFVI of the servers ensure that the VNF VNF VNFC VNFC and VNF VNFC communication is secure.

The hypervisor or virtual machine monitor runs one or more virtual machines VMs on the corresponding server . As such the hypervisor may establish and or utilize various virtualized hardware resources e.g. virtual memory virtual operating systems virtual networking components etc. . The particular APIs included in the hypervisor and or the server generally may vary depending on the particular server . In some embodiments the APIs include one or more proprietary APIs. In some embodiments the APIs may provide access to packets e.g. associated with a particular VNF by the TEE . The virtual switch may be utilized to enforce network policies and or enforce actions e.g. drop packets monitor flows perform deep inspection perform remediation actions etc. . For example the virtual switch may permit the networking of virtual machines VMs in the system . In some embodiments the session keys and or other cryptographic keys may be utilized by the virtual switch to ensure that VNF VNF VNFC VNFC and or VNF VNFC communications are secure. As described below in some embodiments the server may establish encryption tunnels for secure communication e.g. for VNF VNF VNFC VNFC and or VNF VNFC communication . In some embodiments the NFVI may utilize fuse keys and or other cryptographic keys that establish a root of trust to establish the encryption tunnels . Additionally in some embodiments one or more VMs VNFs and or VNFCs may utilize the shared memory . For example in some embodiments the VNFs and VNFCs may utilize the shared memory to communicate with one another. It should be appreciated that the shared memory may include physical memory and or virtual memory depending on the particular embodiment.

As described above the NFVI also includes the TEE the physical resources and the virtual resources . In the illustrative embodiment the TEE is established as a secure enclave such as Intel Software Guard Extensions SGX . However in other embodiments the TEE may be otherwise established for example as a Manageability Engine ME trusted platform module TPM Innovation Engine IE secure partition separate processor core and or otherwise established. For example in some embodiments the TEE may be embodied as or established by virtue of the security co processor . As discussed herein the TEE is configured to perform various key management functions cryptographic functions and or other security functions for the NFVI to ensure that the VNF VNF VNFC VNFC and VNF VNFC communication is protected. For example the TEE may establish cryptographic keys e.g. base and or session keys for various communicating entities e.g. VNFs and VNFCs in response to instantiation of the entities. In some embodiments the session keys may be dynamically updated based on for example the particular VNFs and VNFCs discovered by the corresponding server at a given time. It should be appreciated that in the illustrative embodiment the TEEs may communicate with one another over an out of band communication network.

The physical resources and the virtual resources may be embodied as any physical and virtual resources suitable for performing the functions described herein. In the illustrative embodiment the physical resources include computing hardware storage hardware and network hardware similarly the virtual resources include virtual computing resources virtual storage and virtual networking resources. For example in some embodiments the physical resources may include memory e.g. volatile and or non volatile memory or data storage cache engines e.g. a SoC graphics engine security engine audio engine cryptographic module TPM co processor communication link or channel switch and or another engine configured to process or otherwise handle data and or network interfaces e.g. a NIC . Further in some embodiments the virtual resources may include software defined storage a software defined networking module and or other software defined resources.

As discussed above the management system includes an orchestrator one or more VNF managers and one or more VIMs . In the illustrative embodiment the NFVI may utilize VNF discovery mechanisms to monitor orchestrator and or VNF manager messaging. As such when a particular VNF or VNFC is instantiated the NFVI discovers the instantiated entity. The VNF managers are responsible for managing scaling and deployment. For example the VNF managers may instruct various servers to instantiate particular VNFs and or VNFCs . In doing so the VNF managers may consult with the VIMs which identify the particular servers available for deployment of VNFs and or VNFCs . It should be appreciated that the VIMs may make such a determination using any suitable techniques algorithms and or mechanisms. In some embodiments the orchestrator instructs the VIM of the type of protection desired for an entity and therefore the associated service chain and the VIM ensures that those service chains are established. In the illustrative embodiment the corresponding VNFs and VNFCs communicate with each other to create the relevant service function chains and transmit network packets e.g. TCP IP packets IP route updates control traffic 802.11 based packets LTE 3G stack legacy packets etc. to one another. In some embodiments the VNFs and or the VNFCs may discover on another through service discovery protocols DNS and or other discovery mechanisms.

Additionally in the illustrative embodiment the management system transmits a security policy to the servers e.g. to which entities are deployed associated with the deployed VNFs and or VNFCs . The security policy may indicate for example the circumstances and or procedure by which the VNF VNF VNFC VNFC and or VNF VNFC communication should be protected. For example in some embodiments the security policy may indicate that it is unnecessary for the NFVI to encrypt communication between VNFs and or VNFCs that is constrained within a single server but that other communication should be encrypted. In such embodiments the security policy may consider the protection afforded by the hypervisor to be sufficient protection. In other embodiments the security policy may indicate that all VNF VNF VNFC VNFC and VNF VNFC communication should be protected regardless of the source and destination servers . Additionally in some embodiments the security policy identifies the process traffic flow of one or more packets based on the determined service chain. It should further be appreciated that in some embodiments the management system may ensure that regulatory requirements e.g. regulatory specific cryptographic algorithms key sizes block sizes unidirectional or bidirectional traffic protection etc. associated with VNF VNF VNFC VNFC and VNF VNFC communication are satisfied e.g. by incorporation into the security policy .

The orchestrator the VNF managers and the VIMs may be embodied as any server or computing device capable of performing the functions described herein. Further the orchestrator the VNF managers and the VIMs may include components similar to the components of the servers described above and or components commonly found in a server such as a processor memory I O subsystem data storage peripheral devices and so forth which are not illustrated in for clarity of the description.

Referring now to in use one or more of the servers establishes an environment for secure inter virtual network function communication or more specifically for secure VNF VNF VNFC VNFC and or VNF VNFC communication. The illustrative environment includes a network function virtualization infrastructure NFVI module and a communication module . Additionally the NFVI module includes a trusted execution environment module . Each of the modules of the environment may be embodied as hardware software firmware or a combination thereof. Additionally in some embodiments one or more of the illustrative modules may form a portion of another module and or one or more of the illustrative modules may be embodied as a standalone or independent module. For example each of the modules logic and other components of the environment may form a portion of or otherwise be established by the processor of the server .

The NFVI module is configured to perform various key management functions cryptographic functions secure communication channel management and or other security functions to ensure that the VNF VNF VNFC VNFC and VNF VNFC communication is protected to the extent required by the relevant security policy . It should be appreciated that in some embodiments protecting the VNF and VNFC communications e.g. via encrypted communications or an otherwise secure communication channel permits the VNFs and VNFCs to be run unmodified across various topologies i.e. the particular topologies may be arbitrarily chosen . Further as described below the NFVI module may perform key management transparently to the VNFs and or VNFCs e.g. without exposing keys and or key management metadata outside the NFVI module . Additionally the NFVI module may utilize fuse root keys e.g. established by OEM or component manufacturer as foundational cryptographic keys for establishing secure communication channels between the trusted execution environment module and a corresponding trusted execution environment module of another server . Further as described below in some embodiments the NFVI module may dynamically establish and or update secure sessions between VNFs and or VNFCs prevent communications to occur prior to establishing security e.g. via encryption keys and or tunnels between entities e.g. VNFs and or VNFCs enforce security processing of communication traffic e.g. all traffic between VNFs e.g. VNF VNF VNFC VNFC and or VNF VNFC traffic permit only VNFs and or VNFCs with established security policies communicate with one another and or perform security processing at various granularity e.g. all traffic management and or control traffic per packet per flow per policy headers on the corresponding packet etc. . It should be appreciated that in some embodiments each VNF VNFC process flow and or communicative entity pairing e.g. particular VNF and other VNF may have a separate cryptographic key or set of cryptographic keys for secure communication and may also have a separate security policy . The security policy may identify for example the key lifetimes expiration dates whether the keys can persist e.g. in storage key renewal requirements and or other parameters associated with the cryptographic keys utilized by the NFVI module .

The trusted execution environment TEE module of the NFVI module establishes a trusted execution environment e.g. the TEE or otherwise secure environment within the server and performs various cryptographic functions for secure communication between VNFs and VNFCs of the server and other VNFs and VNFCs e.g. instantiated on the same server or a remote server . Depending on the particular embodiment the TEE module may handle the generation and verification of cryptographic keys signatures hashes and or perform other cryptographic functions. In some embodiments the TEE may establish a trusted relationship with a corresponding TEE of another server . For example in doing so the TEEs may perform a cryptographic key exchange. In some embodiments the TEEs may communicate with one another over established encrypted and or otherwise secure tunnels. As described above in some embodiments the TEEs may communicate with one another over an out of band communication channel i.e. a communication channel separate from a common communication channel between the corresponding servers . In some embodiments the TEE module e.g. the TEE detects the instantiation of a new VNF or VNFC and generates the corresponding cryptographic keys as described herein. It should be appreciated that such detection may occur through any suitable algorithms techniques and or mechanisms. For example in some embodiments the TEE module may detect the instantiation of a VNF or VNFC through drivers established between the hypervisor and the TEE e.g. HECI by virtue of signals transmitted from the VNF manager to the NFVI though a control and management communication channel e.g. through the VIM and or by virtue of REST APIs e.g. using JSON data formats .

The communication module handles the communication between the server and remote devices e.g. other servers through a suitable network. For example as discussed above the TEEs of two servers may communicate with one another over an out of band communication channel or via encrypted tunnels.

Referring now to in use the server may execute a method for establishing cryptographic keys for secure inter virtual network function communication or more specifically for establishing cryptographic keys for secure VNF VNF VNFC VNFC and or VNF VNFC communication. It should be appreciated that in some embodiments the server executes the method with the NFVI module e.g. the NVFI . The illustrative method begins with block in which the server receives a security policy from the management system . In doing so in block the server may receive service chain data from the management system . For example as discussed above the security policy may identify the process traffic flow of one or more packets based on the determined service chain for one or more VNFs and or VNFCs to be instantiated on the server . Additionally the security policy may identify the particular security required for the VNF VNF VNFC VNFC and or VNF VNFC communication corresponding with VNFs and or VNFCs to be instantiated or established on the server . It should further be appreciated that in some embodiments each of the VNFs and or VNFCs may have its own security policy . In other embodiments such security policies may have even finer granularity e.g. associated with particular flows packets etc. .

In block the server establishes cryptographic keys for secure communication based on for example the one or more received or determined security policies . In doing so in block the server establishes cryptographic keys for VNF VNF VNFC VNFC and or VNF VNFC communication. Depending on the particular embodiment any of the VNF VNF VNFC VNFC and or VNF VNFC communication may be unidirectional or bidirectional communication. For example in some embodiments VNF VNFC communication may only occur in the sense that a particular VNF can transmit information to a particular VNFC but not receive information from the VNFC or a particular VNFC can transmit information to a particular VNF but not receive information from the VNF whereas in other embodiments the particular VNF and VNFC can bidirectionally communicate in the sense that both the VNF and the VNFC can transmit and receive information from one another. In some embodiments the cryptographic keys may be established in the virtual switch and or a physical switch e.g. in the NFVI to protect incoming and outgoing traffic between the VNFs and or VNFCs based on the security policies .

In block the server may establish one or more cryptographic keys as a function of a fuse key or other root of trust. That is in some embodiments one or more root fuse keys may be established on the server e.g. in a fuse bank by the OEM or the entity that established the NFVI . In some embodiments a root key is provisioned during the manufacturing of a particular hardware component s and is utilized to authorize the use of OEM keys. In other embodiments the root keys may be derived from OEM provisioned keys. Further in some embodiments the component s manufacturer and or the OEM may delegate NFVI keys or other suitable cryptographic keys to be utilized as root keys.

In block the server may communicate with the trusted execution environment e.g. the TEE module of one or more other servers to establish cryptographic keys. For example once the VNFs and or VNFCs have been established on the server the NFVI of the server may coordinate with corresponding NFVIs of the other servers to establish one or more cryptographic keys e.g. session keys for protecting the VNF VNFC traffic. In some embodiments session keys are derived from a mutual authentication protocol executed between the NFVIs or more particularly the corresponding TEEs and root keys of the servers may be used as shared secrets and or authorized credentials depending on the particular embodiment. For example in some embodiments the TEEs may use SSL IPSec and or another web security protocol to establish cryptographic keys e.g. session keys .

In block the server may establish different base keys and or session keys for a variety of purposes depending on the particular embodiment. For example in some embodiments the server may use the same or different derived keys for protecting control packets management traffic subscriber metadata subscriber data per flow traffic and or other data. It should be appreciated that in some embodiments the server may determine various base keys and derive session keys as a function of those base keys. In doing so the server may for example limit the exposure of the base keys and update the cryptographic keys utilizes for secure communication over time. However in order to provide clarity to the description both the base keys and session keys may be described herein simply as session keys.

It should be appreciated that in some embodiments each pair of communicative entities may have one or more unique cryptographic keys e.g. session keys . For example a first set of cryptographic keys may be established for secure VNF VNF communication between a first and second VNF and a second set of cryptographic keys may be established to secure VNF VNF communication between the first VNF and a third VNF . Further as discussed above in some embodiments the cryptographic keys may be established for protection of VNF VNF VNFC VNFC and or VNF VNFC communication at a finer granularity. For example in block the server may establish separate cryptographic keys for protecting different service flows e.g. between the same entities . As such one service flow requiring communication between a first pair of entities e.g. VNFs may be encrypted with a first cryptographic key whereas a different service flow also requiring communication between those entities may be encrypted with a different cryptographic key. It should be appreciate that in some embodiments the security policies identify the level of granularity and or scope of data that the cryptographic keys are to protect. It should further be appreciated that the particular cryptographic algorithms utilized may be embodied as any suitable cryptographic algorithms for performing the functions described herein. For example in some embodiments the session keys are generated based on a symmetric cryptographic key algorithm whereas in other embodiments asymmetric cryptographic algorithm may be utilized. Further in some embodiments multiple cryptographic key algorithms may be utilized in conjunction with one another e.g. a symmetric key for bulk encryption and an asymmetric key for encrypting the symmetric key or providing a cryptographic signature .

Referring now to in use the server may execute a method for secure inter virtual network function communication or more specifically for secure VNF VNF VNFC VNFC and or VNF VNFC communication. It should be appreciated that in some embodiments the server executes the method with the NFVI module e.g. the NVFI . The illustrative method begins with block in which the server is booted. In block the server determines whether security has been established on the server for secure inter VNF and or inter VNFC communication. In doing so in block the server may confirm that the TEE of the server has been securely established and has access to the relevant cryptographic security keys. For example in some embodiments the server determines whether the TEE has access to the cryptographic keys discussed above for secure VNF VNF VNFC VNFC and or VNF VNFC communication.

If the server determines in block that security has not been established e.g. the relevant cryptographic keys for secure communication are unavailable the server prevents communication with the VNFs and or VNFCs of the server depending on the requirements of the security policy . In doing so in block the server may prevent VNF VNF VNFC VNFC and or VNF VNFC communication based on the security policy . As discussed above the security policy may permit such communication between entities within a particular server in some embodiments due for example to some limited protection provided by the hypervisor . In other embodiments the security policy may prevent all communication e.g. incoming and outgoing with the VNFs and or VNFCs of the server .

Returning to block if the server determines that security has been established the server performs the VNF VNF VNFC VNFC and or VNF VNFC communication as required by the corresponding service flows in block . In doing so in block the server retrieves the corresponding cryptographic keys for secure communication based on the security policy and if the security policy indicates that the corresponding communication should be encrypted the server encrypts decrypts the secure communication with the retrieved keys in block . For example if a particular VNF must communicate information to another VNF instantiated on a remote device the VNF may encrypt the information with the relevant cryptographic key e.g. the session key corresponding with the two VNFs and transmit the encrypted information to the other VNF e.g. via the virtual switch and or physical switch of the NFVI . Upon receipt the remote VNF retrieves the corresponding decryption key e.g. a symmetric session key and decrypts the packet s . Similarly a VNF or VNF communicating with another VNF or VNF within the same server may encrypt data prior to transmission and decrypt the data upon receipt by the receiving entity.

In order to perform such secure VNF VNFC communications in some embodiments the server may perform packet identification for VNF VNFC communications using for example IP addresses TCP UDP or higher level protocol port numbers domain names routing domain names and or packet identifiers communicated by the VNF manager or orchestrator . Further in some embodiments the VNF VNFC traffic is seamlessly protected by the NFVI without making any changes to the particular VNFs or VNFCs running on the NFVI .

Illustrative examples of the technologies disclosed herein are provided below. An embodiment of the technologies may include any one or more and any combination of the examples described below.

Example 1 includes a computing device for secure inter virtual network function communication the computing device comprising a network function virtualization interface module to i determine a cryptographic key for secure communication over at least one of an inter virtual network function VNF network an inter virtual network function component VNFC network or a VNF VNFC network based on a security policy of the computing device and ii communicate securely over the at least one of the inter VNF inter VNFC or VNF VNFC network using the determined cryptographic key.

Example 2 includes the subject matter of Example 1 and wherein the network function virtualization interface module is further to establish the cryptographic key for the secure communication.

Example 3 includes the subject matter of any of Examples 1 and 2 and wherein to communicate securely over the at least one of the inter VNF inter VNFC or VNF VNFC network comprises to communicate with a corresponding trusted execution environment module of a remote computing device.

Example 4 includes the subject matter of any of Examples 1 3 and wherein to establish the cryptographic key comprises to utilize at least one of a root of trust or a fuse key of the computing device.

Example 5 includes the subject matter of any of Examples 1 4 and wherein to establish the cryptographic key comprises to generate a base cryptographic key based on the at least one of the root of trust or the fuse key of the computing device and generate a temporary cryptographic key based on the generated base cryptographic key for secure communication over at least one of the inter VNF inter VNFC or VNF VNFC network.

Example 6 includes the subject matter of any of Examples 1 5 and wherein to establish the cryptographic key comprises to establish a first cryptographic key for communication between a first pair of entities selected from a set of VNFs and VNFCs of the computing device.

Example 7 includes the subject matter of any of Examples 1 6 and wherein the network function virtualization interface module is further to establish a second cryptographic key for communication between a second pair of entities different from the first pair selected from the set of VNFs and VNFCs of the computing device.

Example 8 includes the subject matter of any of Examples 1 7 and wherein to establish the first cryptographic key for the communication between the first pair of entities comprises to establish the first cryptographic key for communication between the first pair of entities associated with a first service flow and wherein the trusted execution environment module is further to establish a second cryptographic key for communication between the first pair of entities associated with a second service flow different from the first service flow.

Example 9 includes the subject matter of any of Examples 1 8 and wherein to communicate securely over the at least one of the inter VNF inter VNFC or VNF VNFC network comprises to communicate securely over an inter VNF communication network.

Example 10 includes the subject matter of any of Examples 1 9 and wherein to communicate securely over the at least one of the inter VNF inter VNFC or VNF VNFC network comprises to communicate securely over an inter VNFC communication network.

Example 11 includes the subject matter of any of Examples 1 10 and wherein to communicate securely over the at least one of the inter VNF inter VNFC or VNF VNFC network comprises to communicate securely over a VNF VNFC communication network.

Example 12 includes the subject matter of any of Examples 1 11 and wherein the network function virtualization interface module is further to determine whether the trusted execution environment module has access to the cryptographic key and prevent communication over the at least one of the inter VNF inter VNFC or VNF VNFC network based on the security policy in response to determining that the trusted execution environment module does not have access to the cryptographic key.

Example 13 includes the subject matter of any of Examples 1 12 and wherein to determine the trusted execution environment module of the computing device does not have access to the cryptographic key comprises to determine that the trusted execution environment module has not been securely booted.

Example 14 includes the subject matter of any of Examples 1 13 and wherein to determine the cryptographic key comprises to retrieve the cryptographic key based on the security policy wherein the security policy defines corresponding cryptographic keys for secure communication between a plurality of pairs of entities selected from a set of VNFs and VNFCs of the computing device.

Example 15 includes a method for secure inter virtual network function communication by a computing device the method comprising determining by the computing device a cryptographic key for secure communication over at least one of an inter virtual network function VNF network an inter virtual network function component VNFC network or a VNF VNFC network based on a security policy of the computing device and communicating by the computing device securely over the at least one of the inter VNF inter VNFC or VNF VNFC network using the determined cryptographic key.

Example 16 includes the subject matter of Example 15 and further including establishing by the computing device the cryptographic key for the secure communication.

Example 17 includes the subject matter of any of Examples 15 and 16 and wherein establishing the cryptographic key comprises establishing the cryptographic key with a network function virtualization interface module of the computing device and wherein communicating securely over the at least one of the inter VNF inter VNFC or VNF VNFC network comprises communicating by the network function virtualization interface of the computing device.

Example 18 includes the subject matter of any of Examples 15 17 and wherein communicating securely over the at least one of the inter VNF inter VNFC or VNF VNFC network comprises communicating by a trusted execution environment module with a corresponding trusted execution environment module of a remote computing device.

Example 19 includes the subject matter of any of Examples 15 18 and wherein establishing the cryptographic key comprises utilizing at least one of a root of trust or a fuse key of the computing device.

Example 20 includes the subject matter of any of Examples 15 19 and wherein establishing the cryptographic key comprises generating a base cryptographic key based on the at least one of the root of trust or the fuse key of the computing device and generating a temporary cryptographic key based on the generated base cryptographic key for secure communication over at least one of the inter VNF inter VNFC or VNF VNFC network.

Example 21 includes the subject matter of any of Examples 15 20 and wherein establishing the cryptographic key comprises establishing a first cryptographic key for communication between a first pair of entities selected from a set of VNFs and VNFCs of the computing device.

Example 22 includes the subject matter of any of Examples 15 21 and further including establishing by the computing device a second cryptographic key for communication between a second pair of entities different from the first pair selected from the set of VNFs and VNFCs of the computing device.

Example 23 includes the subject matter of any of Examples 15 22 and wherein establishing the first cryptographic key for the communication between the first pair of entities comprises establishing the first cryptographic key for communication between the first pair of entities associated with a first service flow and further comprising establishing by the computing device a second cryptographic key for communication between the first pair of entities associated with a second service flow different from the first service flow.

Example 24 includes the subject matter of any of Examples 15 23 and wherein communicating securely over the at least one of the inter VNF inter VNFC or VNF VNFC network comprises communicating securely over an inter VNF communication network.

Example 25 includes the subject matter of any of Examples 15 24 and wherein communicating securely over the at least one of the inter VNF inter VNFC or VNF VNFC network comprises communicating securely over an inter VNFC communication network.

Example 26 includes the subject matter of any of Examples 15 25 and wherein communicating securely over the at least one of the inter VNF inter VNFC or VNF VNFC network comprises communicating securely over a VNF VNFC communication network.

Example 27 includes the subject matter of any of Examples 15 26 and further including determining by the computing device whether a network function virtualization interface module of the computing device has access to the cryptographic key and preventing by the computing device communication over the at least one of the inter VNF inter VNFC or VNF VNFC network based on the security policy in response to determining that the network function virtualization interface module does not have access to the cryptographic key.

Example 28 includes the subject matter of any of Examples 15 27 and wherein determining the network function virtualization interface of the computing device does not have access to the cryptographic key comprises determining that the network function virtualization interface module has not been securely booted.

Example 29 includes the subject matter of any of Examples 15 28 and wherein determining the cryptographic key comprises retrieving the cryptographic key based on the security policy wherein the security policy defines corresponding cryptographic keys for secure communication between a plurality of pairs of entities selected from a set of VNFs and VNFCs of the computing device.

Example 30 includes a computing device comprising a processor and a memory having stored therein a plurality of instructions that when executed by the processor cause the computing device to perform the method of any of Examples 15 29.

Example 31 includes one or more machine readable storage media comprising a plurality of instructions stored thereon that in response to execution by a computing device cause the computing device to perform the method of any of Examples 15 29.

Example 32 includes a computing device for secure inter virtual network function communication the computing device comprising means for determining a cryptographic key for secure communication over at least one of an inter virtual network function VNF network an inter virtual network function component VNFC network or a VNF VNFC network based on a security policy of the computing device and means for communicating securely over the at least one of the inter VNF inter VNFC or VNF VNFC network using the determined cryptographic key.

Example 33 includes the subject matter of Example 32 and further including means for establishing the cryptographic key for the secure communication.

Example 34 includes the subject matter of any of Examples 32 and 33 and wherein the means for establishing the cryptographic key comprises means for establishing the cryptographic key with a network function virtualization interface module of the computing device and wherein the means for communicating securely over the at least one of the inter VNF inter VNFC or VNF VNFC network comprises means for communicating by the network function virtualization interface of the computing device.

Example 35 includes the subject matter of any of Examples 32 34 and wherein the means for communicating securely over the at least one of the inter VNF inter VNFC or VNF VNFC network comprises means for communicating by a trusted execution environment module with a corresponding trusted execution environment module of a remote computing device.

Example 36 includes the subject matter of any of Examples 32 35 and wherein the means for establishing the cryptographic key comprises means for utilizing at least one of a root of trust or a fuse key of the computing device.

Example 37 includes the subject matter of any of Examples 32 36 and wherein the means for establishing the cryptographic key comprises means for generating a base cryptographic key based on the at least one of the root of trust or the fuse key of the computing device and means for generating a temporary cryptographic key based on the generated base cryptographic key for secure communication over at least one of the inter VNF inter VNFC or VNF VNFC network.

Example 38 includes the subject matter of any of Examples 32 37 and wherein the means for establishing the cryptographic key comprises means for establishing a first cryptographic key for communication between a first pair of entities selected from a set of VNFs and VNFCs of the computing device.

Example 39 includes the subject matter of any of Examples 32 38 and further including means for establishing a second cryptographic key for communication between a second pair of entities different from the first pair selected from the set of VNFs and VNFCs of the computing device.

Example 40 includes the subject matter of any of Examples 32 39 and wherein the means for establishing the first cryptographic key for the communication between the first pair of entities comprises means for establishing the first cryptographic key for communication between the first pair of entities associated with a first service flow and further comprising means for establishing a second cryptographic key for communication between the first pair of entities associated with a second service flow different from the first service flow.

Example 41 includes the subject matter of any of Examples 32 40 and wherein the means for communicating securely over the at least one of the inter VNF inter VNFC or VNF VNFC network comprises means for communicating securely over an inter VNF communication network.

Example 42 includes the subject matter of any of Examples 32 41 and wherein the means for communicating securely over the at least one of the inter VNF inter VNFC or VNF VNFC network comprises means for communicating securely over an inter VNFC communication network.

Example 43 includes the subject matter of any of Examples 32 42 and wherein the means for communicating securely over the at least one of the inter VNF inter VNFC or VNF VNFC network comprises means for communicating securely over a VNF VNFC communication network.

Example 44 includes the subject matter of any of Examples 32 43 and further including means for determining whether a network function virtualization interface module of the computing device has access to the cryptographic key and means for preventing communication over the at least one of the inter VNF inter VNFC or VNF VNFC network based on the security policy in response to a determination that the network function virtualization interface module does not have access to the cryptographic key.

Example 45 includes the subject matter of any of Examples 32 44 and wherein the means for determining the network function virtualization interface of the computing device does not have access to the cryptographic key comprises means for determining that the network function virtualization interface module has not been securely booted.

Example 46 includes the subject matter of any of Examples 32 45 and wherein the means for determining the cryptographic key comprises means for retrieving the cryptographic key based on the security policy wherein the security policy defines corresponding cryptographic keys for secure communication between a plurality of pairs of entities selected from a set of VNFs and VNFCs of the computing device.

