---

title: Providing social-network information to third-party systems
abstract: Particular embodiments receive, at a first computing device associated with a social-networking system and from a second computing device associated with a third-party system, a query comprising a first identifier corresponding to a user of the third-party system, wherein the first identifier is computed by applying a hash algorithm to a user credential associated with the user of the third-party system; determine, by the first computing device, whether the user of the third-party system matches any member of the social-networking system; and if the second identifier corresponding to a member of the social-networking system matches the first identifier, then send, by the first computing device to the second computing device, social-network information of the member of the social-networking system in response to the query.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09524348&OS=09524348&RS=09524348
owner: Facebook, Inc.
number: 09524348
owner_city: Menlo Park
owner_country: US
publication_date: 20140613
---
This application is a continuation under 35 U.S.C. 120 of U.S. patent application Ser. No. 12 980 221 filed 28 Dec. 2010 which is a continuation under 35 U.S.C. 120 of U.S. patent application Ser. No. 12 750 330 filed 30 Mar. 2010 now U.S. Pat. No. 7 890 501 issued 15 Jan. 2011 which is a continuation under 35 U.S.C. 120 of U.S. patent application Ser. No. 10 967 609 filed 18 Oct. 2004 now U.S. Pat. No. 7 788 260 issued 31 Aug. 2010 which is a continuation in part under 35 U.S.C. 120 of U.S. patent application No. 10 867 610 filed 14 Jun. 2004 now U.S. Pat. No. 7 478 078 issued 13 Jan. 2009.

The present invention generally relates to data processing and more particularly to a method and system for generating and presenting search results that are based on social network information.

Search engines have become popular tools to identify and locate specific information on the Internet. A search engine is a computer program that when queried for information retrieves either related information or pointers to the location of related information or both by evaluating content stored in its search database.

A key metric in evaluating the performance of search engines is relevance of the search results. Search engine developers are always striving to deliver search results that are relevant to the search query being processed. Consistent with this goal there have been attempts to rank search results based on a number of different factors. One of the more popular ways to rank search results involves analyzing the location and frequency of keywords on a web page. Another frequently used technique is analyzing how web pages link to each other. A web page gets a ranking boost based on the number of other web pages that are linked to it. Click through rates of search results are analyzed in some search engines. The general rule is the higher the click through rate the higher the ranking.

The invention provides still another technique to improve the relevance of search results. According to an embodiment of the invention search results including sponsored links and algorithmic search results are generated in response to a query and are ranked based on the frequency of clicks on the search results by members of social network who are within a predetermined degree of separation from the member who submitted the query. The predetermined degree of separation is equal to one if the click activities of only the friends of the member who submitted the query are to be examined.

A search result may also be marked based on its click history. In one embodiment a search result is marked with an image or a text string if there was a single click on the search result by a friend of the member who submitted the query. In other embodiments the frequency of clicks by members of social network who are within a predetermined degree of separation from the member who submitted the query is examined. If such frequency exceeds a minimum value the associated search result is marked with an image or a text string.

A social network is generally defined by the relationships among groups of individuals and may include relationships ranging from casual acquaintances to close familial bonds. A social network may be represented using a graph structure. Each node of the graph corresponds to a member of the social network. Edges connecting two nodes represent a relationship between two individuals. In addition the degree of separation between any two nodes is defined as the minimum number of hops required to traverse the graph from one node to the other. A degree of separation between two members is a measure of relatedness between the two members.

Degrees of separation in a social network are defined relative to an individual. For example in ME s social network H and ME are separated by 2 d s whereas in G s social network H and G are separated by only 1 d s. Accordingly each individual will have their own set of first second and third degree relationships.

As those skilled in the art understand an individual s social network may be extended to include nodes to an Nth degree of separation. As the number of degrees increases beyond three however the number of nodes typically grows at an explosive rate and quickly begins to minor the ALL set.

The member database contains profile information for each of the members in the online social network managed by the system . The profile information may include among other things a unique member identifier name age gender location hometown references to image files listing of interests attributes and the like. The profile information also includes VISIBILITY and CONTACTABILITY settings the uses of which are described in a commonly owned co pending application System and Method for Managing Information Flow Between Members of an Online Social Network U.S. patent application Ser. No. 10 854 057 filed May 26 2004 the contents of which are hereby incorporated by reference. The relationship database stores information defining to the first degree relationships between members. The relationship database stores information relating to the first degree relationships between members. In addition the contents of the member database are indexed and optimized for search and stored in the search database . The member database the relationship database and the search database are updated to reflect inputs of new member information and edits of existing member information that are made through the computers .

The application server also manages the information exchange requests that it receives from the remote computers . The graph servers receive a query from the application server process the query and return the query results to the application server . The graph servers manage a representation of the social network for all the members in the member database. The graph servers have a dedicated memory device such as a random access memory RAM in which an adjacency list that indicates all first degree relationships in the social network is stored.

A sample adjacency list that reflects the social network map of is shown in . A list item is generated for each member and contains a member identifier for that member and member identifier s corresponding to friend s of that member. As an alternative to the adjacency list an adjacency matrix or any other graph data structure may be used. The graph servers and related components are described in detail in a commonly owned co pending application System and Method for Managing an Online Social Network U.S. patent application Ser. No. 10 854 054 filed May 26 2004 the contents of which are hereby incorporated by reference.

The graph servers respond to requests from application server to identify relationships and the degree of separation between members of the online social network. The application server is further configured to process requests from a third party application to provide social network information e.g. the relationships between individuals for user records maintained in a third party database . The third party application makes the requests to the application server through an application programming interface API .

The API provides application developers with a set of methods method signatures data structures and the like that expose an interface used by the third party application to communicate with the application server . Application developers use the methods defined by the API to construct applications that can communicate with the application server . There are many programmatic and syntactical choices to define the API methods that will effectively encapsulate the data and operations that are used in the invention. Thus specific API methods routines and data structures described below are illustrative in nature and are neither limiting nor definitive of the API .

The relationships between individuals A B C D E and F are maintained in the relationship database and the graph servers . The flow diagram shown in is used to find out the relationships between individuals A B E F G and H namely to obtain the social network information used to construct the edges shown as dashed lines in between A B E F and A F .

The find Connections method accepts an array of ID Tokens an indication of the type of shared credentials used credential Type and an indication of the type of hash algorithms used hash Type . In response the find Connections method returns an array of relationship pairs comprising two ID tokens and an indication of the relationship between the members represented by the two ID tokens.

The shared credential types include an e mail address credential Type 1 first and last name credential Type 2 telephone number credential Type 3 and any other types or a combination of two or more types that might be used to identify an individual. Of the three types specifically identified here the e mail address type is preferred because in most instances an e mail address is associated with a single individual.

The hash algorithm types include none hash Type 0 MD5 one way hash algorithm hash Type 1 and SHA 1 one way hash algorithm hash Type 2 . When hash Type 1 or 2 the corresponding one way hash algorithm is used to create a hash value from the identifying information associated with the credential type selected e.g. e mail first and last name telephone number etc. and the hash value is used as a shared credential. When hash Type 0 a hash algorithm is not used and the shared credential comprises the identifying information associated with the credential type selected e.g. e mail first and last name telephone number etc. .

In Step after receiving the set of the ID tokens from the third party application the application server compares the value of each ID token from the set against ID tokens corresponding to the members of the online social network. The ID tokens corresponding to the members of the online social network are generated using the shared credential type and the hash algorithm type specified in the variables credential Type and hash Type. A match from this comparison indicates that there is a record for that individual in both the third party database and in the member database .

For some embodiments the application server may improve its processing efficiency by generating the ID tokens for its members ahead of time and having them stored for use in the comparison of Step . For example the application server may maintain an index of unique member identifiers each associated with the corresponding member s e mail address credential Type 1 hash Type 0 a hash value generated from the corresponding member s e mail address using the MD5 hash algorithm credential Type 1 hash Type 1 and a hash value generated from the corresponding member s e mail address using the SHA 1 hash algorithm credential Type 1 hash Type 2 .

At this point the application server has identified which ID Tokens have a member profile in the online social network. In Step the application server queries the graph servers to obtain the specific relationship information for the identified members. For example referring to for each member pair A B A E A F B E B F and E F the application server issues a query to the graph servers to obtain the degree of separation between the member pair.

Then in Step the application server returns an array which includes the ID tokens corresponding to each member pair and the degree of separation obtained for each member pair e.g. A B 1 A E 4 A F 3 B E 5 B F 4 and E F 1 . Optionally other attributes e.g. demographic information may be returned. Using the ID tokens that are returned the third party application identifies the corresponding members in the third party database and records the degrees of separation between the member pairs.

Note in the above example the application server returns a pair indicating a third degree relationship between A and F but does not include the connecting members C and D. Unless the set of ID tokens includes a token for each member with a record in the online social network the information returned by the application server may be incomplete in some respects. In other words when the relationship graph is reconstructed from the information returned by the application server A and F will be connected to two dummy nodes.

In another embodiment of the invention the third party application may use a method from API that requires the passing of a single ID token e.g. corresponding to member M1 a shared credential type a hash algorithm type and a d s setting N in its request to the application server . In response the application server returns an indication of Ml s social network up to N degrees of separation. The method signature is as follows 

The d s setting N is optional. If it is omitted a default value e.g. 3 is used. If it is specified the application server returns an indication of M1 s social network up to the specified degree of separation.

After receiving the request according to the get Network method the application server identifies the member corresponding to the ID token e.g. M1 provided by the third party application . If the ID token does not correspond to any member the application server returns an indication of this to the third party application . Otherwise the application server queries the graph servers to identify the members of the online social network that are related to M1 within N degrees of separation or a number specified in the get Network method . For each member identified the application server creates an ID token in accordance with the shared credential type and the hash algorithm type specified in the request. The application server returns all ID tokens so created along with an indication for each ID token the degree of separation from M1. The third party application then uses the returned set of ID tokens to determine whether the third party database contains records corresponding to the members in M1 s social network and if there are it stores the degree of separation information for each such record.

As an example the third party application may be an online gaming site and the third party database may be the database of registered users maintained by the online gaming site. The process described above would be used by the online gaming site to obtain social network information for its registered users from the computer system of so that each time a registered user logs in to play the online gaming site can invite by e mail or IM for example one or more additional registered users in his or her network to log on and play as well.

The present invention may also be used to clarify ambiguities in certain requests for information. For example if a user queried an online telephone directory for the number of John Smith many results may be returned. The online telephone directory could use the get Network API method to query the application server to identify a John Smith present in the requestor s social network likely eliminating all but one John Smith from consideration. illustrates the above process in further detail. In Step the ID token of the user requesting the number of John Smith e.g. M1 is transmitted by the third party application to the application server along with the get Network request which also specifies the shared credential type used the hash algorithm type used and the d s setting N. The application server then compares the ID token of the requesting user with the ID tokens of its members. If a match is found the application server queries the graph server for all members related to the member corresponding to the matching ID token within N degrees of separation. The ID tokens of all such members are then transmitted to the third party application . The third party application receives these ID tokens Step and compares them against the ID token of a John Smith candidate Step . If there s a match it is confirmed that the John Smith candidate is the John Smith that M1 is looking for Step . If there is not a match the John Smith candidate is not confirmed as the John Smith that M1 is looking for Step and the third party application compares the received ID tokens against the ID token of another John Smith candidate. This process is repeated until a match is found or all John Smith candidates have been exhausted.

The application server may be configured to provide the degree of separation between two individuals. A method signature from the API call for this could be the following 

The application server processes this call in a manner similar to the above calls. First the application server resolves which members in the member database correspond to IDToken1 and ID Token2. If the application server is unable to resolve one or both an error is returned. Otherwise the application server queries the graph servers to determine the degree of separation between the members corresponding to ID Token1 and IDToken2. Once determined the application server returns a number as the degree of separation between the two members. Using the degree of separation between the two individuals the third party application may manage transaction processing based on the relationship or lack thereof between the two members.

The third party application may use this information to control the visibility of information in the third party database . For example the third party application might store telephone numbers or other personal information related to a user M1 in the third party database and an access preference from M1 that specifies how closely related to M1 a user has to be expressed in terms of degrees of separation in order to view M1 s phone number. Using the relationship information obtained from the online social network as described above the third party application may limit access to M1 s information stored in the third party database to only those users who are within N degrees of separation where N is the degree of separation specified by M1 in the access preference.

In the above examples as an alternative to the MD5 and SHA 1 Message Authentication Code MAC may be used as the hash algorithm. MAC is also a one way hash algorithm but uses a secret key that the party maintaining social network information and the party requesting social network information through the API would agree to in advance. The use of the key provides extra security.

The sponsored links represent hyperlinks to web pages of advertisers who have agreed to pay the search engine operator for listing their hyperlinks on the search results page of users who submit search queries using certain keywords. In a typical arrangement the advertisers bid on keywords such that higher bids result in higher placement on the search results page. The bids represent the amount the advertisers are willing to pay per click on their online ads. The web search results represent what is commonly known in the art as algorithmic search results.

In this example the third party application is a search engine operator that manages a search results database and the third party database represents a plurality of databases including i a user database that keeps track of all search queries specified by each user and for each such search query a record of all hyperlinks that the user clicked on when search results responsive to the search query were served to the user ii a database containing information on advertisers keywords that the advertisers bid on and the sponsored links corresponding to the keywords and iii a database of web pages that are used to generate the algorithmic search results.

In Step the third party application receives a search query from a registered user. In Step the third party application retrieves the search results both sponsored links and algorithmic search results responsive to the search query from its search results database. The retrieved sponsored links are ranked in accordance with the bids submitted by their advertisers and the retrieved algorithmic search results are ranked based on their relevance as determined by the search engine. In Step the third party application searches the third party database for search queries that match the one received from the user in Step . If there are no matches the search results retrieved in Step are served to the user Steps and .

If there are one or more matches the algorithmic search results are re ordered based on the frequency of relevant clicks on the hyperlinks associated with the search results and then served to the user. Frequency of clicks is equal to the number of prior clicks on a hyperlink divided by the number of times that hyperlink was displayed and hyperlinks with higher frequencies are ranked higher than hyperlinks with lower frequencies. Relevant clicks are those clicks made by users who are within a specified degree of separation from the user who requested the search. The degree of separation information i.e. social network or relationship information may be maintained by the third party application or obtained from an online social network in the manner described above in connection with . The specified degree of separation may be any number or set as ALL in which case all clicks become relevant and it may be set by the operator of the search engine or it may be set by a user in his or her profile. For example if the user sets the specified degree of separation as 1 only clicks made by those who are friends of the user become relevant clicks.

In addition visual tags may be displayed on the search results page next to those search results both sponsored links and algorithmic search results for which relevant clicks have been recorded. shows a sample search query and search results which includes sponsored links and web search results that are generated in response to the sample search query . Visual tags are displayed next to those search results for which relevant clicks have been recorded. Visual tags may be an image or a text string . When the visual tag is an image the source for the web page that displays the search results specifies a pointer to a file that contains that image. When the visual tag is a text string the source for the web page that displays the search results includes the text string.

The computer system of the online social network may also deliver Internet search results to members of the online social network and to Internet users who are not members of the online social network. In this example the computer system is provided with an Internet search results database and an Internet search query database that keeps track of all Internet search queries specified by each member of the online social network and for each such search query a record of all hyperlinks that the member clicked on when search results responsive to the search query were served to the member.

When the computer system receives an Internet search query from one of its members it retrieves the search results responsive to the search query from the Internet search results database and searches the Internet search query database for search queries that match the one received from the member. If there are no matches the search results retrieved from the Internet search results database are served to the member. If there is one or more matches the search results retrieved from the Internet search results database are ranked based on the frequency of relevant clicks on the hyperlinks associated with the search results and then served to the member. Relevant clicks are those clicks made by members who are within a specified degree of separation from the member who requested the search. The specified degree of separation may be any number or set as ALL in which case all clicks become relevant and it may be set by the operator of the online social network or it may be set by a member in his or her profile. For example if the member sets the specified degree of separation as 1 only clicks made by those who are friends of the members become relevant clicks.

When the computer system receives an Internet search query from an Internet user who is not a member of the online social network it retrieves the search results responsive to the search query from the Internet search results database and searches the Internet search query database for search queries that match the one received from the user. If there are no matches the search results retrieved from the Internet search results database are served to the user. If there is one or more matches the search results retrieved from the Internet search results database are ranked based on the frequency of clicks on the hyperlinks associated with the search results and then served to the user.

In a slightly different embodiment the computer system of the online social network delivers both sponsored links and algorithmic search results to members of the online social network. This process is illustrated in . In this example the computer system is provided with a search query database that keeps track of all Internet search queries specified by each member of the online social network and for each such search query a record of all hyperlinks that the member clicked on when search results responsive to the search query were served to the member. It also includes or is connected to i a database containing information on advertisers keywords that the advertisers bid on and the sponsored links corresponding to the keywords and ii a database of web pages that are used to generate the algorithmic search results.

In Step the computer system receives an Internet search query from a member. In Step it retrieves records that are responsive to the search query from the sponsored links database and the algorithmic search results database and searches the Internet search query database for search queries that match the one received from the member.

In Steps it processes each of the retrieved records in sequence Step . In Step it computes the click through rate CTR on that record by members of the social network who are within a specified degree of separation from the member and in Step checks to see if the computed CTR is greater than a minimum value. The specified degree of separation may be any number or set as ALL and it may be set by the operator of the search engine or it may be set by a user in his or her profile. The minimum value may be zero or a small value e.g. 0.01 . If the computed CTR is greater than the minimum value the computer system determines the record to be relevant and specifies a marker to be displayed next to this record in the search results Step . Flow then proceeds to Step where it continues processing of the remaining records. If the computed CTR is less than or equal to the minimum value flow proceeds to Step where it continues processing of the remaining records. After the last record has been processed the records are sorted based on their computed CTR Step and the content is transmitted for display.

While particular embodiments according to the invention have been illustrated and described above those skilled in the art understand that the invention can take a variety of forms and embodiments within the scope of the appended claims.

