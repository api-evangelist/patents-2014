---

title: Voice communication system for simulated radio networks
abstract: A method of radio simulation is provided. The method includes a first computer executing a communication manager, the communication manager configured to provide a radio simulation environment comprising a virtual radio network. The method also includes the first computer executing a communication management controller, wherein the communication management controller receives radio control input for the virtual radio network. The method also includes the first computer executing a tactical and environment cue controller, the tactical and environment cue controller configured to provide simulated audible sounds for the radio simulation environment. The method also includes the first computer executing a configuration controller, the configuration controller coupled to the communication manager and configured to receive at least one radio simulator configuration that designates at least a number of radios and frequencies.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09640086&OS=09640086&RS=09640086
owner: THE BOEING COMPANY
number: 09640086
owner_city: Chicago
owner_country: US
publication_date: 20140412
---
The present disclosure relates generally to communication systems and in particular to a voice communication system providing flexible simulated radio environments for use in warfare and battleground simulations involving multiple participants.

Simulated radio networks have traditionally relied on hardware centric configurations wherein individual users provide their own hardware. Such users also must configure software specific to the hardware. When roles change users must also reconfigure their software tasks that may be beyond the capabilities and time limitations of many users. Such prior systems do not provide flexibility to rapidly change configurations regarding users roles and permission levels.

Such prior systems require custom hardware and a support and engineering team to build the implementations. In many cases previous simulated networks would only run on specific software platforms and provided limited user interfaces. Such systems do not provide adequate tools for system wide configuration monitoring and troubleshooting necessitating ad hoc configurations and increased costs of management.

The illustrative embodiments provide a method of radio simulation. The method includes a first computer executing a communication manager the communication manager configured to provide a radio simulation environment comprising a virtual radio network. The method also includes the first computer executing a communication management controller wherein the communication management controller receives radio control input for the virtual radio network. The method also includes the first computer executing a tactical and environment cue controller the tactical and environment cue controller configured to provide simulated audible sounds for the radio simulation environment. The method also includes the first computer executing a configuration controller the configuration controller coupled to the communication manager and configured to receive at least one radio simulator configuration that designates at least a number of radios and frequencies.

The illustrative embodiments also provide for a system. The system includes a processor and a memory connected to the processor the memory storing program code which when executed by the processor performs a computer implemented method the program code comprising program code for performing using the processor executing a communication manager the communication manager configured to provide a radio simulation environment comprising a virtual radio network program code for performing using the processor executing a communication management controller wherein the communication management controller receives radio control input for the virtual radio network program code for performing using the processor executing a tactical and environment cue controller the tactical and environment cue controller configured to provide simulated audible sounds for the radio simulation environment and program code for performing using the processor executing a configuration controller the configuration controller coupled to the communication manager and configured to receive at least one radio simulator configuration that designates at least a number of radios and frequencies.

The illustrative embodiments also provide for a method of radio simulation comprising a first computer creating a configuration file describing a radio simulation the configuration file designating at least a second computer associated with a participating communicant. The method also comprises the first computer posting the configuration file at a network location and the at least second computer accessing the configuration file from the network location. The method also comprises the at least second computer executing the configuration file and the at least second computer receiving admittance to the radio simulation with at least the first computer based on the configuration file.

The features functions and benefits may be achieved independently in various embodiments of the present disclosure or may be combined in yet other embodiments in which further details can be seen with reference to the following description and drawings.

The illustrative embodiments recognize and account for the limitations and disadvantages of prior radio network simulation systems. The illustrative embodiments therefore provide systems and methods of simulations of radio networks wherein users may take on various roles and receive appropriate access permissions and communications capabilities. Users invited to take part in a simulated radio session may access configuration files from a network location. When executed the configuration files provide application programming interfaces API network protocol interfaces and audio stream interfaces. The configuration files may be specific to the simulated radio session and may be created by designated users organizing the session.

In an embodiment an organization or entity seeking to create simulations of aerial and naval warfare and or battlefield environments may seek to build a voice network that realistically simulates radio communications in such environments. Participants may take on different roles and be provided access to various tools enabling participants to take actions including generating audible warfare sound effects.

Entities such as private defense contractors and military agencies may desire to quickly such as in a period of several days change warfare environments to test personnel and equipment in realistic battle scenarios. Personnel participating in radio network simulations may change roles and locations during campaigns and therefore need varying capabilities. The illustrative embodiments allow different radio simulations to be created with configurations distributed wherein participants may join the radio simulations without the need to locate and install specialized hardware and consume time and resources configuring hardware and software.

The illustrative embodiments enable a lead participant to create configuration files for distribution to other participants in a radio simulation. The configuration files may be customized for particular participants based on their roles in the simulation. The configuration files are downloadable by participants executing desktop objects. The downloaded media include control files that when executed adapt to particular participants hardware and software configurations. At the date and time a particular radio simulation session is to begin the participant is joined to the radio simulation and may listen speak and initiate other actions appropriate to the participant s role in a warfare or other scenario supported by the simulation.

The illustrative embodiments provide a service oriented architecture SOA that may use the Distributed Interactive Simulation DIS protocol for exchanging simulated radio transmissions. Other communications may use an application programming interface API for selection of configuration options such as real time control of frequencies volume control and push to talk options. The Distributed Interactive Simulation protocol is a standard of the Institute of Electrical and Electronics Engineers IEEE that may be used in simulations such as for example a simulation of conducting real time platform level war gaming across multiple host computers. The Distributed Interactive Simulation protocol is defined under Institute of Electrical and Electronics Engineers standard 1278 et seq.

In this protocol simulation state information is encoded in formatted messages that may be referred to as protocol data units PDUs . Simulation state information may be exchanged between hosts using existing transport layer protocols including multicast. The Broadcast User Datagram Protocol may also be supported.

Turning to the figures is a block diagram of a voice communication for simulated radio networks in accordance with an illustrative embodiment. depicts a system .

As defined herein the term participant is defined as a human user of computer . As defined herein the term communicant is defined as a software representation of computer in system and may also include a simulation of or virtual representation of a participant in a radio network simulation or a combination thereof. Thus for example communicant includes at least one application executing on computer . Computer hosts communicant . Communicant may further include various software components described in detail below.

System also includes communicant and communicant including software similar to software executing on computer and similarly representing other participants in a radio network simulation. While computers that may be similar to computer are not depicted in for communicant and communicant it is understood that communicant and communicant execute on computers described in detail in .

System also includes test director that is a role that a participant may function in as communicant . Test director may initiate a radio network simulation. Communicant functioning in the role of test director may have the permissions or authority to establish new radio simulations. In an embodiment communicant in the role of test director for a particular radio simulation may in another radio simulation be represented in a different role. For example in a first radio simulation communicant may have a role of test director and initiate the first radio simulation. On the following day and for a second radio simulation communicant may not be in the role of test director and may instead have the same role and privileges as communicant communicant and communicant for example as operator.

Test director is not necessarily a conference leader in the traditional sense that one might associate with a telephone conference call. In an embodiment a radio network simulation does not have a leader but instead has communicant communicant communicant and communicant each with its own specifically defined role which at times may include the ability and authority to establish a new radio network simulation as test director .

System also includes configuration file that may be created by test director to provide parameters for a new radio network simulation. Configuration file may be created using Extensible Markup Language XML or another language or format. Test director creates configuration file and may place configuration file at a network location or otherwise make configuration file generally accessible. Communicant communicant and communicant may regularly access the network location for various purposes. When configuration file indicates that at least one of communicant communicant and communicant is designated to take part in the radio network simulation for which configuration file was created communicant communicant and communicant may download or otherwise access configuration file . In an embodiment a user or other entity may create configuration file and may not be a participant in any radio network simulation or load any components provided herein.

Configuration file contains files and other electronic media necessary for the at least one of communicant communicant and communicant to join in the radio network simulation initiated by test director . When configuration file is executed on computer either manually by participant via script or via another manner files representing various components of communicant may execute on computer .

Discussion herein of software and hardware components installed and executing on computer and elsewhere enabling participant using computer to participate as communicant in a simulated radio network also applies to communicant communicant communicant and their respective hardware and software configurations. Communicant includes various software components that when executed on computer enable communicant to be joined to radio network simulation with the role and privileges provided by configuration file .

Communicant includes communication manager that is configured to control overall communications of computer in the radio network simulation. Communication manager manages routing and data management between the Distributed Interactive Simulation protocol and hardware and software audio components of computer used to participate in radio network simulation.

Communicant also includes communication management controller . Communication management controller receives radio control input including frequencies operation modes and commands for transmit and receive. Communication management controller provides controller functions which are interfaced to a voice communication system VCS application programming interface API for channel selection volume control and push to talk options. Communication management controller processes messages received from a network or internally from computer . Communication management controller may function as a wrapper that exposes interfaces in communication manager to external entities.

Communicant also includes tactical and environment cue controller . Tactical and environment cue controller is configured to provide to communication manager simulated sounds for a predetermined simulation actor. Simulated sounds may include engine noises for at least aircraft ground vehicles and naval vessels windscreen noise radio noise tank rumble shop noise soldier arms noise and weather among others.

Communicant also includes configuration controller that provides instructions to communication manager about identities and roles of other communicant communicant and communicant that may be involved in the radio network simulation. Configuration controller receives at least one radio simulator configuration that establishes a number of radios to be simulated during the radio network simulation. In an embodiment communicant may simulate more than one radio during a radio network simulation.

Communicant also includes data stream controller that provides an output stream for example through audio functionality provided by computer . Data stream controller may provide for speaking and listening capability or listen only capability. Communicant also includes logging controller configured to receive and store radio simulator operational messages and to communicate the messages responsive to a request. Communicant also includes presence controller configured to capture statistics generated regarding the configuration of communicant and performance by communicant during operation. Presence controller also communicates the statistics in response to a request.

Communicant also includes audio device that enables a participant to hear sounds and enter sounds for example spoken sounds during a radio network simulation. Audio device provides audio input stream for speech and other input and provides audio output stream for playing of sounds. Audio input stream includes microphone . Audio output stream includes speaker headset . Audio device may score and rank such devices as microphone and speaker headset for automatic selection.

Communicant also includes transceiver that provides virtual antennae radio transmitters and receivers data interfaces and control systems necessary for communicant communicant communicant and communicant to interact with each other. Transceiver may be a component of communication manager . Communicant also includes protocol agent which is an interface providing data exchange between communication manager and the Distributed Interaction Simulation DIS protocol or other protocols used by communicant . Protocol agent allows a participant to select a protocol to be used with a particular instance of transceiver at runtime. Protocol agent may be a component of transceiver .

As noted components corresponding to the components of communicant are not illustrated for communicant communicant and communicant but it is understood that communicant communicant and communicant include such components. It is understood that the components and capabilities of communicant apply to communicant communicant and communicant and that discussion herein about communicant may apply to communicant communicant and communicant unless noted otherwise.

Communicant communicant communicant and communicant interact with each other and with other components using the Distributed Interactive Simulation protocol and the voice communication system VCS application programming interface API a serialized interface between the components of the voice communication system. Each of communicant communicant communicant and communicant has some combination of voice communication system VCS application programming interface API interfaces a network protocol interface and an audio stream interface. Communicant communicant communicant and communicant tie outward facing interfaces internal communications models and data pipelines into cohesive software modules. Voice communication system VCS and application programming interface API may allow flexible applications to be developed. The API may allow components to interact as part of the same executable files or separate executable files on separate nodes of a network without recompiling or reconfiguration. The API may make such interaction between components possible by registering components as services and publishing information about the services.

Communicant also includes VCS Configuration a mechanism by which communicant communicant communicant and communicant may be instantiated at runtime. VCS Configuration may be a component of configuration controller . In an embodiment test director creates and publishes configuration file with the assistance of VCS Configuration .

A configuration mechanism of VCS Configuration enables the building of unique configurations on top of generic defaults. The unique configurations which may be those of communicant communicant communicant and communicant may be associated with multiple users or network nodes for example computer while still guaranteeing uniquely identifiable entries. The capabilities of VCS Configuration may make configuration of large distributed radio network simulations easier and less prone to errors than other implementations. All of communicant communicant communicant and communicant may be represented in a single file that may be configuration file and each data value may need to be expressed a single time.

System also includes network that may be a data network extending across a single building a campus or a larger area. Network may be a local area network or a wide area network. Network hosts radio network simulations provided herein.

Method may begin as the process may execute a communication manager the communication manager configured to provide a radio simulation environment comprising a virtual radio network operation . Next the process may execute a communication management controller wherein the communication management controller receives radio control input for the virtual radio network operation . Next the process may execute a tactical and environment cue controller the tactical and environment cue controller configured to provide simulated audible sounds for the radio simulation environment operation . Next the process may execute a configuration controller the configuration controller coupled to the communication manager and configured to receive at least one radio simulator configuration that designates at least a number of radios and frequencies operation .

First computer may activate at least one data stream controller for at least one of audible input and output. First computer may be computer provided by system . Data stream controller may be data stream controller provided by system . First computer may activate at least one logging controller configured to receive and store operational messages associated with the radio simulation environment and configured to communicate the operational messages in response to a request. Logging controller may be logging controller provided by system . Operational messages may include instructions from a mission control function to a pilot or operator function.

First computer may activate at least one presence controller configured to capture and communicate system configuration and performance statistics associated with the radio simulation environment. Presence controller may be presence controller provided by system . First computer may host a first communicant taking part in the radio simulation with at least a second communicant. First communicant may be communicant provided by system . Second communicant may one of communicant communicant communicant provided by system .

First computer may use at least the Distributed Interactive Simulation DIS protocol in the radio simulation environment. Radio control input for first computer may include at least one of frequencies operation modes and transmit and receive commands for the virtual radio network.

At least one of communication manager communication management controller configuration controller and tactical and environment cue controller may be provided to first computer in a configuration file created by a second computer. Communication manager may be communication manager provided by system . Communication management controller may be communication management controller provided by system . Configuration controller may be configuration controller provided by system . Tactical and environment cue controller may be tactical and environment cue controller provided by system . Configuration file may be configuration file provided by system . Second computer may host at least one of communicant communicant communicant provided by system

AudioDevice may be a wrapper around four components of a practical audio interface. AudioDevice includes AudioInputStream which includes AudioBuffer and PortAudio . In an embodiment PortAudio may be a commercially available product. AudioDevice also includes AudioOutputStream which includes AudioBuffer and PortAudio . AudioDevice also includes Mixer InputStream which includes HardwareMixer . AudioDevice also includes Mixer OutputStream which includes HardwareMixer . System also includes communication manager which corresponds to communication manager of system . System also includes OS which is operating system software executing on at least one of computer of system and computers executing at least one of communicant communicant communicant and communicant of system .

AudioDevice queries OS and uses rules to determine which devices for example speaker headset and microphone of system may belong together. The rules are also used to rank each device. The ranking is used to prioritize the devices making it possible to automatically select the best device at runtime and may eliminate a need to manually select or configure devices. Device levels may be monitored and adjusted to ensure the device levels are appropriate for audio capture and playback. Arrows depicted in as audio and ctrl between communication manager and AudioDevice and between AudioDevice and OS indicate the movement of audio content and control signals respectively between communication manager AudioDevice and OS .

Protocol interface provided by system translates audio from transceiver transceiver and transceiver to the desired protocol that may be Distributed Interactive Simulation DIS and manages the rules for formatting timing issuing that protocol. Interfaces between protocol agent protocol agent and protocol agent and transceiver transceiver and transceiver may be generic such that data being transmitted may be translated to many protocols.

Transceiver may function as a gate that controls data flow between protocol agent and communication manager that may function as a mixer. Transceiver considers both input from a participant and a protocol in use to determine if data can pass through transceiver in either direction. In transceiver is connected to radio . Radio may use rules for a given type of radio transmission to determine if a transmission can be received. Given types of radios may include AM amplitude modulation FM frequency modulation SATCOM satellite communication and Intercom. Radio considers qualities of the components of system as well as propagation losses that may impede reception.

Communication manager may mix audio received from the Distributed Interface Simulation DIS protocol or other protocol and may multiplex audio received from audio device . illustrates a point in system where transmission and reception of data come together. also illustrates a point in system at which a participant interacts with the audio streams and selects to which of at least one of transceiver transceiver transceiver and transceiver that audio will be routed.

System includes devices or entities that interact externally including network interface network interface network interface and network interface as well as user that may be a participant network interface sound card and file system . Application programming interface allows objects depicted along the right side of and along the left side of to interface with transceiver and communication manager .

In system application programming interface enables components such as HLA and DIS to interface with the devices or entities that interact externally. The acronym HLA stands for high level architecture. Application programming interface enables HLA to interface with transceiver . HLA is a simulation protocol that may be used in combination or interchangeably with the Distributed Interactive Simulation protocol. may illustrate how application programming interface enables transceiver to publish data in a variety of protocols for example HLA and DIS .

Application programming interface enables DIS or Distributed Interactive Simulation to interface with transceiver . DIS and Distributed Interactive Simulation are analogous terms. DIS as provided by system is an implementation of the Distributed Interactive Simulation protocol. Application programming interface overcomes incompatibilities between HLA and DIS and may enable a more complete transceiver to provide information to protocols such that the protocols may be able to communicate information about transceiver on radio simulation network.

Continuing discussion of and system and proceeding further down the left side of application programming interface enables XMPP to interface with network interface . Like DIS XMPP is another example of one of the protocols that interface with the devices or entities that interact externally as described above. The acronym XMPP stands for Extensible Messaging and Presence Protocol and is a peer protocol that interacts with various network interfaces for example network interface .

Continuing with combinations of protocols or other software components that interface with externally accessing devices application programming interface enables CEE Plugin to interface with network interface . CEE Plugin is a communication effects engine plugin that simulates radio propagation effects and line of sight effects used in radio simulations. CEE Plugin may also interface with a communications effects engine server not shown which provides information about specific transceivers and whether the specific transceivers should be receiving transmissions at any given time.

Referring to the right side of and continuing the discussion of component and interface interactions provided by system application programming interface enables communication panel to interface with user in providing access to communication manager and transceiver . User may be a participant as described herein. Immediately following below further depicts application programming interface enabling legacy crewstation interface to combine with communication panel and provide communicant cockpit simulation access to communication manager and transceiver . Legacy crewstation interface is a wrapper that receives legacy messages generated using older protocols and converts the legacy messages that may use application programming interface .

Continuing down the right side of application programming interface enables audio stream to interface with sound card . Application programming interface enables file stream to interface with file system .

Turning now to the center of transceiver is depicted interfacing with communication manager . Transceiver in addition to corresponding to transceiver of system also corresponds to transceiver of system and transceiver transceiver and transceiver of system . Communication manager also corresponds to communication manager of system .

In the center of transceiver and communication manager interface together and are in turn interfaced by application programming interface with the combinations of protocols plug in components and software elements with network interfaces users and devices described above. In an embodiment other combinations of protocols or standards with externally interacting devices or entities may be supportable.

In summary application programming interface ties components of system together while allowing the components to remain autonomous. Different components may share the same interface. For example audio stream and file stream share the same interface to communication manager . Either audio stream file stream or both may be instantiated and send or receive data from communication manager .

As noted in the discussion of and system combinations of protocols plug in components and software elements with network interfaces users and devices represent instances of communicant seeking to access a radio network simulation. While may provide eight such examples in embodiments other such combinations may be possible. Activity by communicant in accessing and participating in radio network simulation results in remote procedure calls RPC being generated. Application programming interface processes the remote procedure calls RPC such that communication manager transceiver and other components may understand and correctly process requests by communicant at the inception of and during participation by communicant in radio network simulation.

Thus in summary presents a conceptual presentation illustrating flexibility of application programming interface in accommodating various interfaces. The four combinations of components shown on the left side of and the four combinations of components shown on the right side of represent examples of how participants represented by at least one of communicant communicant communicant and communicant may use various interfaces to gain access to a radio simulation by generating remote procedure calls RPC .

System includes user that may be a participant as previously described. System also includes component RPC wherein RPC is remote procedure call generated by action of user. System also includes interface which is the mechanism used to transmit messaging between remote procedure calls and communication manager of system . System also includes component controller that corresponds to communication manager . System also includes component that may correspond to audio device of system .

In system interface uses the signals and slots language construct for communications. When a front end and a back end of an interface for example interface are part of the same process or application communications may be handled through a signals and slots pattern for example the pattern provided by interface . The relationship may be characterized as one to many wherein one controller for example component controller communicates with many of component RPC . System also includes numerous function calls between components including function call function call function call function call function call and function call . Function call function call function call function call function call and function call

The six function calls shown are not shown in specific detail as the function calls themselves are not important to the illustrative embodiments rather the six function calls are shown to illustrate that numerous function calls may be handled by system . However generally speaking function calls transmit requests and associated parameters generated by application programming interface of that arise from remote procedure calls made by communicant . Function calls also receive callback transmissions provided by component and component controller of in response to remote procedure calls. In any case these function calls are converted into messages that may be in turn converted into signals or network packets and transmitted and thereafter decoded by a receiving station or entity.

Interface includes a network layer for multiple processes. Messages are forwarded to a second process. Interface is depicted as Network TCP UDP wherein the acronym TCP stands for Transmission Control Protocol and the acronym UDP stands for User Datagram Protocol. Two parts of the application programming interface are separated between two processes. When a front end and a back end are split between two processes signals may be passed through a networking module for example vwc api Interface that serializes messages and passes messages between processes.

System includes interface that corresponds to interface provided by system . System includes component controller that corresponds to component controller provided by system . System includes component that corresponds to component provided by system . System also includes vwc api Interface that functions between interface and component controller . System also includes numerous function calls between components including function call function call function call function call function call function call function call and function call . Similar to and system function calls provided by and system transmit requests and associated parameters generated by application programming interface that arise from remote procedure calls made by communicant . Function calls also receive callback transmissions provided by component and component controller in response to remote procedure calls.

System also includes vwc api Service Discovery that communicates with component Rpc . System also includes vwc api Service Discovery that communicates with vwc api Interface . In an embodiment more than one of component controller may be present. Each of component controllers may be registered as at least one service using a service interface. Applications may then couple remote procedure calls and controllers based on attributes of the controllers rather than relying on network addresses. Remote procedure calls need not have knowledge about the existence of any particular component controller . Remote procedure calls may instead discover component controller at runtime and connect on an ad hoc basis.

Method may begin as the process may create by a first computer a configuration file describing a radio simulation the configuration file designating at least a second computer associated with a participating communicant operation . Next the process may post by the first computer the configuration file accessing the configuration file from the network location at a network location operation . Next the process may access by at least a second computer the configuration file from the network location operation . Next the process may execute by at least the second computer the configuration file operation . Next the process may receive by at least the second computer admittance to the radio simulation with at least the first computer based on the configuration file operation . Method may terminate thereafter.

First computer provided by method may correspond to computer hosting communicant provided by system . Communicant may function in a role of test director as provided by system . Configuration file provided in method may correspond to configuration file provided by system and may be created in Extensible Markup Language XML format. Second computer provided by method may correspond to computer provided by system . Second computer is associated with a testing lead. Testing lead is a function or role of at least one of communicant communicant and communicant . The radio simulation described in method may be of a warfare environment and may alternatively be of an environment other than a warfare environment. The radio simulation of method includes communications of the participating communicant associated with at least a Distributed Interactive Simulation DIS .

First computer in method may only create the configuration file and have no other role in method . The second computer and the first computer in an embodiment may be associated with the role of testing lead and in an embodiment may in an embodiment be associated with a role other than testing lead.

Processor unit serves to execute instructions for software that may be loaded into memory including communicant and its components. Processor unit may execute steps of method and method . Processor unit may be a number of processors a multi processor core or some other type of processor depending on the particular implementation. A number as used herein with reference to an item means one or more items. Further processor unit may be implemented using a number of heterogeneous processor systems in which a main processor is present with secondary processors on a single chip. As another illustrative example processor unit may be a symmetric multi processor system containing multiple processors of the same type.

Memory and persistent storage are examples of storage devices that may store communicant and other software components. A storage device is any piece of hardware that is capable of storing information such as for example without limitation data program code in functional form for example communicant and or other suitable information either on a temporary basis and or a permanent basis. Storage devices may also be referred to as computer readable storage devices in these examples. Memory in these examples may be for example a random access memory or any other suitable volatile or non volatile storage device. Persistent storage may take various forms depending on the particular implementation.

For example persistent storage may contain one or more components or devices. For example persistent storage may be a hard drive a flash memory a rewritable optical disk a rewritable magnetic tape or some combination of the above. The media used by persistent storage also may be removable. For example a removable hard drive may be used for persistent storage .

Communications unit in these examples provides for communications with other data processing systems or devices. Communications unit may be used to distribute software including configuration file . In these examples communications unit is a network interface card. Communications unit may provide communications through the use of either or both physical and wireless communications links.

Input output I O unit allows for input and output of data with other devices that may be connected to data processing system . For example input output I O unit may provide a connection for user input through a keyboard a mouse and or some other suitable input device. Further input output I O unit may send output to a printer. Display provides a mechanism to display information to a user. Input output I O unit may for example be microphone or speaker headset provided by system .

Instructions for the operating system applications and or programs may be located in storage devices which are in communication with processor unit through communications fabric . In these illustrative examples the instructions are in a functional form on persistent storage . These instructions may be loaded into memory for execution by processor unit . The processes of the different embodiments may be performed by processor unit using computer implemented instructions which may be located in a memory such as memory . The processes of the different embodiments may include actions associated with executing operations of at least method and method .

These instructions are referred to as program code computer usable program code or computer readable program code that may be read and executed by a processor in processor unit . The program code in the different embodiments may be embodied on different physical or computer readable storage media such as memory or persistent storage .

Program code is located in a functional form on computer readable media that is selectively removable and may be loaded onto or transferred to data processing system for execution by processor unit . Program code and computer readable media form computer program product in these examples. In one example computer readable media may be computer readable storage media or computer readable signal media . Computer readable storage media may include for example an optical or magnetic disk that is inserted or placed into a drive or other device that is part of persistent storage for transfer onto a storage device such as a hard drive that is part of persistent storage . Computer readable storage media also may take the form of a persistent storage such as a hard drive a thumb drive or a flash memory that is connected to data processing system . In some instances computer readable storage media may not be removable from data processing system .

Alternatively program code may be transferred to data processing system using computer readable signal media . Computer readable signal media may be for example a propagated data signal containing program code . For example computer readable signal media may be an electromagnetic signal an optical signal and or any other suitable type of signal. These signals may be transmitted over communications links such as wireless communications links optical fiber cable coaxial cable a wire and or any other suitable type of communications link. In other words the communications link and or the connection may be physical or wireless in the illustrative examples.

In some illustrative embodiments program code may be downloaded over a network to persistent storage from another device or data processing system through computer readable signal media for use within data processing system . For instance program code stored in a computer readable storage medium in a server data processing system may be downloaded over a network from the server to data processing system . The data processing system providing program code may be a server computer a client computer or some other device capable of storing and transmitting program code .

The different components illustrated for data processing system are not meant to provide architectural limitations to the manner in which different embodiments may be implemented. The different illustrative embodiments may be implemented in a data processing system including components in addition to or in place of those illustrated for data processing system . Other components shown in can be varied from the illustrative examples shown. The different embodiments may be implemented using any hardware device or system capable of running program code. As one example the data processing system may include organic components integrated with inorganic components and or may be comprised entirely of organic components excluding a human being. For example a storage device may be comprised of an organic semiconductor.

In another illustrative example processor unit may take the form of a hardware unit that has circuits that are manufactured or configured for a particular use. This type of hardware may perform operations without needing program code to be loaded into a memory from a storage device to be configured to perform the operations.

For example when processor unit takes the form of a hardware unit processor unit may be a circuit system an application specific integrated circuit ASIC a programmable logic device or some other suitable type of hardware configured to perform a number of operations. With a programmable logic device the device is configured to perform the number of operations. The device may be reconfigured at a later time or may be permanently configured to perform the number of operations. Examples of programmable logic devices include for example a programmable logic array programmable array logic a field programmable logic array a field programmable gate array and other suitable hardware devices. With this type of implementation program code may be omitted because the processes for the different embodiments are implemented in a hardware unit.

In still another illustrative example processor unit may be implemented using a combination of processors found in computers and hardware units. Processor unit may have a number of hardware units and a number of processors that are configured to run program code . With this depicted example some of the processes may be implemented in the number of hardware units while other processes may be implemented in the number of processors.

As another example a storage device in data processing system is any hardware apparatus that may store data. Memory persistent storage and computer readable media are examples of storage devices in a tangible form.

In another example a bus system may be used to implement communications fabric and may be comprised of one or more buses such as a system bus or an input output bus. Of course the bus system may be implemented using any suitable type of architecture that provides for a transfer of data between different components or devices attached to the bus system. Additionally a communications unit may include one or more devices used to transmit and receive data such as a modem or a network adapter. Further a memory may be for example memory or a cache such as found in an interface and memory controller hub that may be present in communications fabric .

Data processing system may also include at least one associative memory not shown . Associative memory may be in communication with communications fabric . Associative memory may also be in communication with or in some illustrative embodiments be considered part of storage devices .

The different illustrative embodiments can take the form of an entirely hardware embodiment an entirely software embodiment or an embodiment containing both hardware and software elements. Some embodiments are implemented in software which includes but is not limited to forms such as for example firmware resident software and microcode.

Furthermore the different embodiments can take the form of a computer program product accessible from a computer usable or computer readable medium providing program code for use by or in connection with a computer or any device or system that executes instructions. For the purposes of this disclosure a computer usable or computer readable medium can generally be any tangible apparatus that can contain store communicate propagate or transport the program for use by or in connection with the instruction execution system apparatus or device.

The computer usable or computer readable medium can be for example without limitation an electronic magnetic optical electromagnetic infrared or semiconductor system or a propagation medium. Non limiting examples of a computer readable medium include a semiconductor or solid state memory magnetic tape a removable computer diskette a random access memory RAM a read only memory ROM a rigid magnetic disk and an optical disk. Optical disks may include compact disk read only memory CD ROM compact disk read write CD R W and DVD.

Further a computer usable or computer readable medium may contain or store a computer readable or usable program code such that when the computer readable or usable program code is executed on a computer the execution of this computer readable or usable program code causes the computer to transmit another computer readable or usable program code over a communications link. This communications link may use a medium that is for example without limitation physical or wireless.

A data processing system suitable for storing and or executing computer readable or computer usable program code will include one or more processors coupled directly or indirectly to memory elements through a communications fabric such as a system bus. The memory elements may include local memory employed during actual execution of the program code bulk storage and cache memories which provide temporary storage of at least some computer readable or computer usable program code to reduce the number of times code may be retrieved from bulk storage during execution of the code.

Input output or I O devices can be coupled to the system either directly or through intervening I O controllers. These devices may include for example without limitation keyboards touch screen displays and pointing devices. Different communications adapters may also be coupled to the system to enable the data processing system to become coupled to other data processing systems or remote printers or storage devices through intervening private or public networks. Non limiting examples of modems and network adapters are just a few of the currently available types of communications adapters.

The description of the different illustrative embodiments has been presented for purposes of illustration and description and is not intended to be exhaustive or limited to the embodiments in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art. Further different illustrative embodiments may provide different features as compared to other illustrative embodiments. The embodiment or embodiments selected are chosen and described in order to best explain the principles of the embodiments the practical application and to enable others of ordinary skill in the art to understand the disclosure for various embodiments with various modifications as are suited to the particular use contemplated.

