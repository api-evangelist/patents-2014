---

title: Information processing apparatus and method therefor
abstract: An information processing apparatus that communicates with a peripheral device searches for a generic driver corresponding to compatible identification information of the peripheral device, if a specific driver corresponding to model information of the peripheral device has been found and if a setting is enabled to use a generic driver, and controls installation of the generic driver if the generic driver has been found.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09152361&OS=09152361&RS=09152361
owner: Canon Kabushiki Kaisha
number: 09152361
owner_city: Tokyo
owner_country: JP
publication_date: 20140214
---
The present disclosure generally relates to information processing and more particularly to a technique for controlling installation of a printer driver.

To use a peripheral device such as a printer via an information processing apparatus software such as a device driver that supports the peripheral device generally needs to be installed into a processing system e.g. an operating system OS that operates on the information processing apparatus. When the printer is used printing can be performed on a sheet or sheets by starting a printer driver from an application performing settings for the printing and transferring data acquired from the application to the printer.

As a technique for installing when a peripheral device such as a printer is connected to the information processing apparatus a device driver for using the connected peripheral device into the computer Plug and Play PnP has been well known. By using the PnP technique a user can be released from complicated installation work and setting work of the driver for using the peripheral device resulting in significantly improved convenience.

In PnP executed for a printer by Windows registered trademark that is an OS of Microsoft Corporation in the United states identification information is acquired from a printer via an interface of a universal serial bus USB or a web service on devices WSD . An OS searches for an optimum device driver based on the acquired identification information installs the device driver and sets a connection destination at which the printer has been detected as an output destination. In the PnP the OS acquires model identification information MDL of the printer from the printer searches for a printer driver corresponding to the MDL and installs the printer driver. In this case a specific driver serving as a printer driver uniquely corresponding to the printer is searched for. If the printer driver corresponding to the MDL has not been found the OS acquires compatible identification information CID of the printer searches for a printer driver corresponding to the CID and installs the printer driver. If the CID has been used a generic driver serving as a printer driver that can be shared among a plurality of printer models has been introduced. A generic driver that is shared among printers in a printer class is also referred to as a class driver.

A case where a generic driver has already been installed when a printer is newly detected on a network is assumed. In this case using the already installed generic driver without performing the processing for newly searching for and installing a printer driver can provide an environment for the new printer to perform printing easily and quickly. Further the generic driver can provide similar setting screens and usage to the printers that the generic driver supports regardless of models.

As a conventional technique Japanese Patent Application Laid Open No. 2010 160616 discusses a technique for selecting if a class driver has already been installed when a specific driver corresponding to model identification information is to be installed whether to delete the existing class driver or to cause the class driver and the specific driver to coexist.

However the printing system discussed in Japanese Patent Application Laid Open No. 2010 160616 is implemented by a technique using a dedicated installer and is not compatible with an installation method using PnP. If a printer driver to be updated exists automatic updating of the printer which is an advantage of PnP cannot be performed.

To solve the above mentioned issue when installation of a device driver is started installation of a specific driver and a generic driver needs to be flexibly controlled by assuming PnP.

Installation using PnP needs to be controlled by selecting the type of device driver to be used according to the system setting specified by a user or a group policy.

According to an aspect of the present disclosure an information processing apparatus that communicates with a peripheral device includes a receiving unit configured to receive model information and compatible identification information as device information from the peripheral device a first search unit configured to search for a specific driver for the peripheral device corresponding to the model information a second search unit configured to search for a generic driver corresponding to the compatible identification information and a control unit configured to control if a setting is enabled to use a generic driver installation of the generic driver found by the second search unit even if the first search unit has found the specific driver. Further the control unit controls installation of the specific driver if the first search unit has found the specific driver and if the setting is not enabled to use a generic driver.

Further features of the present disclosure will become apparent from the following description of exemplary embodiments with reference to the attached drawings.

Various exemplary embodiments features and aspects of the disclosure will be described in detail below with reference to the drawings.

A device manager installs and manages a printer driver for a printer class device i.e. the printer according to the present exemplary embodiment. The device manager calls a PnP manager not illustrated serving as a library of the OS for controlling installation of a printer driver using the PnP technique to perform PnP installation work. A policy manager reflects when the operation policy for the information processing apparatus is set to operate a printer driver the settings and restrictions within the information processing apparatus in the OS according to the content of the policy. The content of the policy not illustrated is described in the OS and can be set by a manager of the information processing apparatus via the policy manager . An application is software that operates on the OS and can also cause the printer to perform printing using the printer driver via an application programming interface API of the OS . Each of related printer drivers is stored as the print processing related program . A generic driver and a specific driver are examples of the related printer drivers.

A class driver which is usable as the generic driver is previously supplied with the OS as an in box driver.

A configuration of the printer will be described below. A CPU controls the entire operation of the printer . A RAM functions as a main memory or a work area of the CPU and is also used as an output information rasterization area or an environmental data storage area. The RAM also includes a nonvolatile RAM NVRAM area and can expand the memory capacity using an option RAM connected to an expansion port not illustrated . A ROM includes a font ROM storing various types of fonts a program ROM storing a control program executed by the CPU and a data ROM storing various types of data. The data ROM retains device information a device identification ID used in installation processing for a printer driver in a conventional printing system or in exemplary embodiments of the present disclosure. Information included in the device ID will be described with reference to and is used for all the exemplary embodiments of the present disclosure to be described below.

A bidirectional connection medium I F sends and receives data to and from the information processing apparatus . A printing unit I F controls an interface with a printing unit serving as a printer engine. An external memory is access controlled by an external memory I F includes a hard disk HD or an SSD to be connected as an option and stores font data an emulation program form data and the like. If the external memory such as the HD is not connected the data ROM in the ROM stores information used in the information processing apparatus . The data ROM stores the device ID used in the present exemplary embodiment. When the information processing apparatus and the printer have been connected to each other the printer sends the device ID as device identification information to the information processing apparatus . A plurality of external memories may also be included. For example a plurality of external memories storing an optional font card and a program for interpreting a printer control language of a different language system in addition to a built in font may be connectable. An operation unit is provided with an operation panel for receiving an operation by a user. A switch and a light emitting diode LED display not illustrated for the operation are disposed in the operation panel. Further the operation unit may include a NVRAM not illustrated and store printer mode setting information from the operation panel. The CPU outputs an image signal as output information to the printing unit via the printing unit I F based on a control program stored in the program ROM in the ROM . The CPU can control processing for communication with the information processing apparatus via the bidirectional communication medium I F . Through this communication the printer receives the print data sent from the information processing apparatus and can notify the information processing apparatus of information therein.

The latest generic and specific drivers and policy information can be provided to the information processing apparatus by retaining the latest driver and policy setting data in the server apparatus . If the server apparatus exists in an intranet an operation of a generic driver which has been subjected to customized settings appropriate for an in house operation policy can particularly be performed. Here the generic driver subjected to customized settings is for example a generic driver operated only within a company of which a specific print setting has been restricted the default setting has been changed or the user interface has been changed.

A generic driver which can be subjected to customized settings is not the above described class driver supplied with the OS but a generic driver also referred to as a universal driver serving as an out of box driver provided by a printer vender etc. In search processing for a printer driver based on compatible identification information CID both the generic driver and the class driver are found.

In step S the device manager issues a request for acquiring the device ID to the printer and acquires the device ID from the printer as a response to the request. The device manager further acquires model identification information MDL included in the acquired device ID . The content of information retained by the device ID will be described below with reference to . In step S the device manager searches for a specific driver corresponding to the MDL. In step S the device manager determines whether the specific driver corresponding to the MDL has been found. If the specific driver has been found YES in step S the processing proceeds to step S. If the specific driver has not been found NO in step S the processing proceeds to step S.

In step S the device manager checks whether the device ID includes compatible identification information CID . If the device ID includes the CID YES in step S the processing proceeds to step S. If the device ID does not include the CID NO in step S the processing proceeds to step S. In step S the device manager searches for a generic driver corresponding to the CID. In step S the device manager determines the presence or absence of the generic driver . If the generic driver has been found YES in step S the processing proceeds to step S. If the generic driver has not been found NO in step S the processing proceeds to step S.

In step S the device manager displays a dialog for receiving an input from the user to add a logical printer. illustrates an example of an Add Printer screen. The dialog is displayed to receive an input for a printer driver to be installed from the user. In step S the device manager waits for the user to specify the printer driver to be installed and checks whether the printer driver to be installed has been specified by the user. If the printer driver to be installed has not been specified NO in step S the device manager does not perform processing for installing a printer driver or adding a printer and the processing is ended. If the printer driver to be installed has been specified by the user YES in step S the processing proceeds to step S.

In step S the device manager checks whether the printer driver which has been instructed to be installed has already been installed in the information processing apparatus . If the applicable printer driver has not been installed in the information processing apparatus NO in step S the processing proceeds to step S. If the applicable printer driver has already been installed YES in step S the processing proceeds to step S. In step S the device manager performs processing for installing the applicable printer driver in the information processing apparatus . In step S the device manager generates a logical printer using a port which the OS has detected the printer is connected to as an output destination port. A logical printer is a logical object for using a printer driver and is an object to be referred to as a printer when a print application performs printing. One logical printer has one print queue.

The user can start installation processing for a printer driver by selecting a desired printer using manufacturer and printer drop down combo boxes and then pressing a Next button . When the user presses an Update button the device manager connects to the server apparatus through the connection medium capable of bidirectional communication such as the Internet or an intranet from the bidirectional connection medium I F via the OS . The driver management program in the server apparatus inquires of a search program and transmits a list of available printers to the information processing apparatus . The device manager updates the respective contents of the Manufacture and Printer drop down combo boxes. When the user presses a Use Disk button the device manager accesses the external memory via the external memory I F . A Cancel button and a Close Dialog button are used for closing the Add Printer dialog of the printer. An operation for closing the Add Printer dialog has been performed if a printer driver to be installed has not been determined.

In step S the device manager issues a request for acquiring the device ID to the printer and acquires the device ID from the printer as a response to the request. The device manager further extracts model identification information MDL and compatible identification information CID from the device ID . In step S the device manager searches for a specific driver corresponding to the extracted information. In step S if it is determined that the specific driver has been found YES in step S the processing proceeds to step S. If it is determined that the specific driver has not been found NO in step S the processing proceeds to step S.

In step S the device manager checks whether Use generic driver is set in the OS . If Use generic driver is set YES in step S the processing proceeds to step S. If Use generic driver is not set or the setting Use generic driver itself does not exist NO in step S the processing proceeds to step S. In step S the device manager determines whether compatible identification information CID is included in the device ID and has been extracted therefrom in step S. If the CID has been extracted from the device ID YES in step S the processing proceeds to step S. If the CID has not been extracted NO in step S the processing proceeds to step S. In step S the device manager searches for the generic driver corresponding to the CID. In step S the device manager determines whether the generic driver has been found. If the generic driver has been found YES in step S the processing proceeds to step S. If the generic driver has not been found NO in step S the processing proceeds to step S.

In step S the device manager displays the dialog for receiving an input from the user to add a logical printer. The device manager displays the dialog to receive an input for a printer driver to be installed from the user. In step S the device manager waits for the user to specify the printer driver to be installed and checks whether the printer driver to be installed has been specified. If the printer driver to be installed has not been specified NO in step S the device manager does not perform processing for installing a printer driver or adding a printer and the processing is ended. If the printer driver to be installed has been specified by the user YES in step S the processing proceeds to step S. In step S the device manager changes the setting in the OS from Use generic driver to Use specific driver if installation of the specific driver corresponding to the MDL has been specified.

In step S the device manager checks whether the printer driver to be installed which has been determined to be found in step S or S has already been installed in the information processing apparatus . For example the device manager can determine whether the printer driver to be installed has already been installed by acquiring a list of printer drivers installed in the information processing apparatus and checking whether a name of the printer driver instructed to be installed is included in the list. If the applicable printer driver has been found YES in step S the processing proceeds to step S. If the applicable printer driver has not been found NO in step S the processing proceeds to step S.

In step S the device manager checks whether a printer driver which can be used for the connected printer detected by the OS has already been installed for another printer. If the printer driver has already been installed YES in step S the processing proceeds to step S. If the printer driver has not been installed NO in step S the processing proceeds to step S. In step S the device manager determines whether the printer driver to be installed is more appropriate than the printer driver found installed in the information processing apparatus in step S. If the printer driver to be installed is determined to be more appropriate YES in step S the processing proceeds to step S. Otherwise NO in step S the processing proceeds to step S. In this determination the device manager for example compares the dates of files included in version information or configuration information between the printer drivers and then determines that the newer printer driver is more appropriate. In step S the device manager installs the printer driver which has been found installed in the information processing apparatus in step S again for the connected printer detected by the OS . In step S the device manager installs the printer driver to be installed in the information processing apparatus .

In step S the device manager generates a logical printer using a port which the OS has detected the printer is connected to as an output destination port so as to use the printer driver that has been specified as the one corresponding to the printer and then installed in the processes performed so far. Here a logical printer is a logical object for using a printer driver and is an object to be referred to as a printer when a print application performs printing. One logical printer has one print queue.

In step S the device manager determines whether both the specific driver and the generic driver corresponding to the printer have been found in the processes in steps S to S. If only one of the drivers has been found NO in step S the processing is ended. If both of the drivers have been found YES in step S the processing proceeds to step S.

In step S the device manager displays a message illustrated in on the display . The device manager prompts the user to select which to use preferentially the specific driver or the generic driver via the display screen illustrated in . Details of will be described below. In step S the device manager then determines whether the setting in the OS has been changed to Use generic driver according to the selection by the user via the display screen illustrated in . If it is determined that the setting has been changed YES in step S the processing proceeds to step S. If the specific driver has been selected or the setting has not been changed NO in step S the processing is ended. In step S the device manager changes the setting in the OS to Use generic driver according to the selection by the user and the processing returns to step S.

Through the processes illustrated in even in the installation processing by the OS the generic driver can be installed instead of the specific driver for a newly connected peripheral device detected by the OS according to the user s intension. Further a more appropriate driver can be installed by comparing with information about a generic driver that has already been installed.

A button is used for selecting the setting Use specific driver a button is used for selecting the setting Use generic driver and a button is used for opening a dialog that provides detailed settings for a specific driver and a generic driver. When the button is pressed the dialog is closed and the device manager displays a dialog box illustrated in on the display unit .

A detailed settings tab sheet allows the user to perform settings for a specific driver and a generic driver. When the button is pressed the dialog box is displayed on the display unit with the tab sheet selected.

A drop down combo box is used to select a printer driver. The name of the printer driver installed in is displayed. The drop down combo box can be used to select a desired printer driver from all lists of printer drivers installed in the information processing apparatus and associate the selected printer driver with the logical printer that has been generated in step S illustrated in . An Add Driver button is used for starting processing for adding a new printer driver other than candidate drivers in the drop down combo box . When the Add Driver button is pressed the device manager displays the screen illustrated in on the display unit allowing the user to perform processing for adding a printer driver to be installed. A radio button is used for selecting the type of printer driver to be used. The setting selected by the radio button is the current setting in the OS .

A second exemplary embodiment of the present disclosure will be described below. In the second exemplary embodiment installation processing for a device driver is implemented in consideration of a group policy.

In the second exemplary embodiment a configuration of the system and respective configurations of the information processing apparatus the printer and the server apparatus are similar to those in the first exemplary embodiment. Here the information processing apparatus in which the OS is loaded and executed is connected to the server apparatus via a network such as an intranet. Further the server apparatus manages a group policy associated with a user account.

In the group policy according to the second exemplary embodiment either the setting Use generic driver or the setting User specific driver has been specified. Further it can also be specified whether use of any driver other than the specified type of driver is prohibited. More specifically if a network manager recommends the use of only a generic driver the setting Use generic driver and the setting Prohibit use of driver other than specified type of driver are enabled as the group policy.

In step S the device manager issues a request for acquiring the device ID to the printer and acquires the device ID from the printer as a response to the request. The device manager further extracts model identification information MDL and compatible identification information CID from the device ID .

In step S the device manager acquires information about printer drivers that have been installed in the past. Here the device manager acquires at least one of a name list of printer drivers installed in the information processing apparatus and log information of installation processing performed in the past for example. By checking the list s the device manager can determine whether a printer driver to be installed this time has already been installed. Further the device manager checks a printer driver which was not actually installed but was available from the log information to increase the efficiency and the speed of driver search processing. In step S the device manager inquires of a policy manager and requests a group policy relating to the printer driver. If the group policy exists the policy manager sends the group policy to the information processing apparatus as a response to the request.

In step S the device manager determines whether the group policy exists. If the group policy exists YES in step S the processing proceeds to step S. If the group policy does not exist NO in step S the processing proceeds to step S. In step S the device manager determines whether the group policy indicates the setting Use generic driver . If the group policy indicates the setting Use generic driver YES in step S the processing proceeds to step S. If the group policy does not indicate the setting Use generic driver i.e. if the group policy indicates the setting Use specific driver NO in step S the processing proceeds to step S. In step S the device manager performs the installation processing illustrated in and the processing is ended.

In step S the device manager searches for specific and generic drivers corresponding to model identification information MDL and compatible identification information CID extracted from the device ID . In step S the device manager determines whether the generic driver has been found and the found generic driver is more appropriate than the printer driver that has already been installed. If the found generic driver is determined to be more appropriate YES in step S the processing proceeds to step S. Otherwise NO in step S the processing proceeds to step S. If the generic driver has not been found in the search in step S the processing proceeds to step S. If a printer driver corresponding to the connected printer detected by the OS has not yet been installed the processing proceeds to step S. In the determination in step S the device manager for example compares the dates of files included in version information or configuration information between the printer drivers and then determines that the newer printer driver is more appropriate.

In step S the device manager determines whether the use of the specific driver is prohibited by the group policy. If the use of the specific driver is prohibited YES in step S the processing proceeds to step S. If the use of the specific driver is not prohibited NO in step S the processing proceeds to step S. In step S the device manager determines whether the specific driver has been found and the found specific driver is more appropriate than the printer driver that has already been installed. If the found specific driver is more appropriate YES in step S the processing proceeds to step S. Otherwise NO in step S the processing proceeds to step S. If the specific driver has not been found in step S the processing proceeds to step S. If a printer driver corresponding to the connected printer detected by the OS has not yet been installed the processing proceeds to step S. In step S the device manager stores even if a printer driver has been found in step S information about the printer driver as a log without performing installation processing. The processing illustrated in is then ended.

In step S the device manager controls installation processing for the generic driver or the specific driver that has been found in step S. In step S the device manager generates a logical printer using a port which the OS has detected the printer is connected to as an output destination port so as to use the installed printer driver. The processing illustrated in is then ended.

The setting of the group policy described in the second exemplary embodiment and the setting of the OS described in the first exemplary embodiment may be used in combination. More specifically the device manager performs control if one of the settings has not been performed to perform installation processing for a printer driver according to the other setting. The device manager performs control if both of the settings have been performed to perform installation processing while giving the setting of the group policy a higher priority.

A third exemplary embodiment of the present disclosure will be described below. In the third exemplary embodiment it is assumed that all printer drivers corresponding to a newly connected printer are to be installed.

In the third exemplary embodiment a configuration of the system and respective configurations of the information processing apparatus the printer and the server apparatus are similar to those in the first exemplary embodiment.

In step S the device manager issues a request for acquiring the device ID to the printer and acquires the device ID from the printer as a response to the request. The device manager further extracts model identification information MDL and compatible identification information CID from the device ID . In step S the device manager searches for specific and generic drivers corresponding to the MDL and the CID extracted from the device ID .

In step S the device manager determines whether any of the drivers which have been found in the search processing in step S has not been subjected to processes in steps S to S. If an unprocessed driver has been found YES in step S the processing proceeds to step S. If an unprocessed driver has not been found NO in step S the processing proceeds to step S. In steps S to S the device manager performs processing on one of the unprocessed drivers which have been found in the search processing in step S as a target.

In step S the device manager installs the target printer driver. The device manager adds and generates a logical printer using a port which the OS has detected the printer is connected to as an output destination port. In the third exemplary embodiment a plurality of printer drivers can be installed for one print queue. A user uses a desired printer driver by switching the printer driver that has been installed as needed. In step S the device manager determines ranking of the printer drivers that have already been installed. For example the device manager compares the dates of files included in version information or configuration information among the installed printer drivers and then determines the ranking of the printer drivers. In step S the device manager generates a list of printer drivers corresponding to the print queue according to the ranking determined in step S.

In step S the device manager determines whether a logical printer has been generated. If the processes in steps S to S have not been performed the logical printer has not been generated. If the logical printer has been generated YES in step S the processing proceeds to step S. If the logical printer has not been generated NO in step S the processing proceeds to step S.

In step S the device manager determines whether both the specific driver and the generic driver corresponding to the connected printer detected by the OS have been installed. If both of the drivers have been installed YES in step S the processing proceeds to step S. If only one of the drivers has been installed NO in step S the processing proceeds to step S. In step S the device manager refers to the setting for the type of printer driver to be used. As a result of the reference in step S if Make all driver types usable is set the processing proceeds to step S. If Use only specific driver is set the processing proceeds to step S. If Use only generic driver is set the processing proceeds to step S. In step S the device manager sets the setting for the type of printer driver to be used to Make all driver types usable .

In step S the device manager generates a driver list including the installed drivers. The specific driver and the generic driver are arranged in an upper part and a lower part of the list respectively. In step S the device manager generates a driver list including only the installed specific drivers. In step S the device manager generates a driver list including only the installed generic drivers.

The list generated in the processes in steps S to S is used for managing a printer driver to be used in printing by the printer . This list is made by ordering the printer drivers according to the ranking determined in the processes in steps S to S. The list is information used for displaying and selecting a printer driver to be used by the user on a dialog box of the printer illustrated in to be described below and is stored as user information of the OS in the external memory .

In step S the device manager then sets a printer driver listed at the top of the generated driver list to a default printer driver. The processing is then ended.

In step S the device manager displays a dialog for receiving an input from the user to add a logical printer. In step S the device manager checks whether a printer driver to be installed has been specified by the user. If the printer driver to be installed has not been specified NO in step S the device manager does not perform processing for installing a printer driver or adding a printer and the processing is ended. If the printer driver to be installed has been specified YES in step S the processing proceeds to step S. In step S the device manager installs the specified printer driver generates a logical printer using a port which the OS has detected the printer is connected to as an output destination port and then the processing is ended.

A radio button is used for selecting the setting for the type of printer driver to be used. The radio button enables the current setting. A drop down combo box is used for selecting a printer driver to be used. On the drop down combo box the driver list generated in the processing illustrated in is displayed. A selected desired printer driver is associated with the logical printer generated in . The printer driver which has been set as a default printer driver in step S illustrated in is default displayed in the drop down combo box . A button is used for issuing an instruction to start processing for adding a new printer driver that cannot be selected by the drop down combo box . When the button is pressed the device manager displays the Add Printer dialog illustrated in on the display unit .

Through the above described processes the device manager installs all printer drivers that can be installed and generates a driver list in the priority order. Thus a more appropriate printer driver can be selected for example by comparing with generic printer drivers that have already been installed. Further if use of only a generic driver is set by the user a generic driver can be easily used instead of a specific driver.

Embodiments of the present disclosure can also be realized by a computer of a system or apparatus that reads out and executes computer executable instructions recorded on a storage medium e.g. a non transitory computer readable storage medium to perform the functions of one or more of the above described embodiment s of the present disclosure and by a method performed by the computer of the system or apparatus by for example reading out and executing the computer executable instructions from the storage medium to perform the functions of one or more of the above described embodiment s . The computer may comprise one or more of a central processing unit CPU micro processing unit MPU or other circuitry and may include a network of separate computers or separate computer processors. The computer executable instructions may be provided to the computer for example from a network or the storage medium. The storage medium may include for example one or more of a hard disk a random access memory RAM a read only memory ROM a storage of distributed computing systems an optical disk such as a compact disc CD digital versatile disc DVD or Blu ray Disc BD a flash memory device a memory card and the like.

While the present disclosure has been described with reference to exemplary embodiments it is to be understood that the disclosure is not limited to the disclosed exemplary embodiments. The scope of the following claims is to be accorded the broadest interpretation so as to encompass all such modifications and equivalent structures and functions.

This application claims the benefit of priority from Japanese Patent Application No. 2013 029949 filed Feb. 19 2013 which is hereby incorporated by reference herein in its entirety.

