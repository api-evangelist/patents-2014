---

title: Systems and methods for configuring and controlling variable pressure and variable displacement sensor operations for information handling systems
abstract: Systems and methods are disclosed that may be implemented to allow a user and/or a software entity to define particular variable pressure or variable pressure or displacement sensor (VPD) system configurations to achieve a desired system functionality as a function of varying key pressure or varying displacement applied to one or more sensors, such as VPD keys of a keyboard or other VPD sensors such as game controller or mouse buttons, etc. The disclosed systems and methods may be implemented using these defined VPD system configurations to control interaction between VPD subsystem hardware components and software application/s of interest that are executing on a host processing device of an information handling system.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09111005&OS=09111005&RS=09111005
owner: Dell Products LP
number: 09111005
owner_city: Round Rock
owner_country: US
publication_date: 20140313
---
This application relates to pressure sensitive sensors and more particularly to systems and methods for configuration and control of variable pressure and variable displacement sensors for information handling systems.

As the value and use of information continues to increase individuals and businesses seek additional ways to process and store information. One option available to users is information handling systems. An information handling system generally processes compiles stores and or communicates information or data for business personal or other purposes thereby allowing users to take advantage of the value of the information. Because technology and information handling needs and requirements vary between different users or applications information handling systems may also vary regarding what information is handled how the information is handled how much information is processed stored or communicated and how quickly and efficiently the information may be processed stored or communicated. The variations in information handling systems allow for information handling systems to be general or configured for a specific user or specific use such as financial transaction processing airline reservations enterprise data storage or global communications. In addition information handling systems may include a variety of hardware and software components that may be configured to process store and communicate information and may include one or more computer systems data storage systems and networking systems.

Many information handling systems use keyboards to obtain user input. Some prior keyboard solutions have provided pressure sensitive keys. The most common technique to provide pressure sensitive keys is to use variable resistance sensing techniques to provide an indication of the pressure applied by a user to a key. Variable capacitance sensing has also been utilized in some prior art products such as console gamepad controllers.

Computer games are examples of applications that are run on information handling systems in conjunction with gaming control centers such as the Alienware Command Center AWCC available from Dell Computer of Round Rock Tex. Such gaming control centers include separate user accessible applications that are often provided on an information handling system to monitor direct launching of game applications and to allow a user to associate specific system user defined system configurations and actions with a particular directly launched game. Once the user selects a game to create a new game mode a profile configurator is provided as a software component of a gaming control center that is responsible for saving the game configuration settings and actions that will be associated with the game application. Examples of specific user defined system configurations that may be saved and linked to a particular game include specific keyboard and mouse lighting settings audio output settings power management settings performance monitoring recording settings designated keyboard macros and or variable pressure key settings and or macros etc. Every time a particular game is directly launched by the user a component in the gaming control center recognizes that the game has been directly launched and responds by applying the specific user defined system configurations to the corresponding system components for as long as the game remains active and running. The gaming control center recognizes when the particular directly launched game is closed and responds by reverting to the default non game system configurations.

Systems and methods are disclosed herein that may be implemented to allow a user and or a software entity e.g. such as a gaming control center application or other hosted application executing above an operating system to define particular variable pressure or displacement sensor VPD system configurations to achieve a desired system functionality e.g. behavior as a function of varying key pressure or varying displacement applied to one or more sensors such as VPD keys of a keyboard or other VPD sensors such as game controller or mouse buttons etc. The disclosed systems and methods may be implemented using these defined VPD system configurations to control interaction between VPD subsystem components e.g. embedded non volatile VPD hardware layer and software application s of interest e.g. such as gaming applications that are executing on a host processing device of an information handling system. In one exemplary embodiment a host processing device may be configured to execute a software entity e.g. such as a gaming control center application or a hosted user application to use a VPD application programming interface API assigned to the software entity to interact with underlying VPD hardware subsystem components using a disclosed packet based VPD communication protocol.

In another exemplary embodiment a host processing device may be configured to execute a VPD protocol enabled application e.g. gaming application or other type of VPD compatible application together with a VPD API assigned to the user application to discover the presence of an underlying VPD protocol enabled hardware subsystem on the same information handling system e.g. through a search for assigned USB vendor identification and product identification using OS specific conventions. Upon discovery of the presence of a VPD hardware subsystem the processing device may then use its assigned VPD API to attach itself to components of the VPD hardware subsystem e.g. establish knowledge and communications with the VPD hardware subsystem so that it is capable of both sending configuration commands and requests for VPD based data and of receiving raw sensor data or status information through the VPD API using a packet based VPD communication protocol. The previously described steps of VPD hardware subsystem discovery and VPD hardware subsystem attachment may be implemented by a VPD protocol enabled application automatically or upon user command. In any case the disclosed systems and methods may be implemented to allow a VPD protocol enabled application e.g. such as a third party gaming application or other type of application to be pre configured for automatic discovery of and operation with a VPD hardware subsystem of an information handling system. Such a VPD hardware subsystem may in turn include VPD circuitry that is coupled to receive variable pressure or displacement sensor signals from VPD keys of a keyboard or other types of VPD sensors such as game controller buttons mouse buttons etc.

The disclosed systems and methods may be implemented in one exemplar embodiment by multiple processing devices to communicate with each other using a VPD protocol that embodies a set of commands and parameters that are passed by an API executing on a first host processing device to enabling embedded software or firmware running in a hardware layer of a VPD subsystem that is implemented by a separate processing device such as a VPD microcontroller. In such an embodiment the disclosed VPD protocol may be so implemented in the embedded non volatile software or firmware and may be provided as an integral component of the VPD hardware subsystem. Using this architecture and protocol hosted applications using the API may allow users to configure VPD sensors of a VPD enabled keyboard or other VPD button controls to interact with other applications in a more convenient and advantageous manner.

In one embodiment a VPD protocol may be implemented by one or more processing devices to offer flexible options for defining VPD system configurations to allow a user to interact with one or more hosted application s in various ways by controlling a manner in which the hosted applications react to detected VPD pressure or displacement levels. For example a user and or hosted application may be allowed to define particular variable pressure or displacement sensor VPD system configurations for hardware components of a VPD subsystem without requiring communication of this configuration information through an operating system OS layer and or through any processing entities e.g. such as device drivers that are executing within an operating system OS layer on the host system between the user or hosted application and the underlying VPD hardware subsystem components. In one exemplary embodiment a VPD protocol may be implemented to allow VPD system configuration information to be passed directly from a hosted application through a VPD application programming interface API to underlying VPD hardware components and or to allow pressure or displacement based scan or key codes to be passed directly from underlying VPD hardware components back to a hosted application through the VPD API. In one exemplary embodiment no OS drivers may be present and or involved in the VPD configuration process nor in the response of a VPD subsystem to particular pressure or displacement levels received from VPD sensors such as VPD keys.

In another exemplary embodiment a VPD protocol may be provided to allow a gaming control center and or other hosted application running within an application layer running on top of an OS layer to interact using the VPD protocol with underlying hardware component s of a VPD subsystem. Such underlying component s of a VPD hardware subsystem may include for example a hardware layer e.g. including one or more micro controllers or other processing devices embedded below the OS and that is coupled to receive analog output signals representative of the pressure or displacement applied to individual depressed VPD sensors and to in turn provide pressure or displacement based scan or key codes to an USB OS driver that correspond to a particular combination of the key identity and real time specific pressure or displacement applied to individual depressed analog sensors or keys. One or more optional middleware layer component s may also be provided that are configured to receive pressure or displacement based scan or key codes from the USB OS driver and provide modified VPD scan or key codes back to a hosted user application.

In the practice of the disclosed systems and methods a VPD protocol may be configured to allow a hosted application e.g. under control of a user to communicate particular defined VPD sensor configuration information e.g. variable pressure or displacement key settings to underlying VPD hardware subsystem components in order to specify desired or customized system functionality or behavior that occurs in response to output signals received from particular variable pressure or displacement sensor s or key s. Underlying VPD hardware layer components such as a VPD microcontroller may also be configured in one exemplary embodiment to utilize the disclosed VPD protocol to communicate individual VPD key pressure or displacement level information and other information back to one or more user applications.

In another exemplary embodiment multiple processing devices of an information handling system may be configured to communicate data and control information back and forth between one or more hosted applications and VPD hardware subsystem components with or without OS involvement or presence using a VPD protocol that includes a command repertoire which allows configuring of individual VPD enabled sensors e.g. such as keyboard keys and or buttons in any combination of multiple e.g. three modes of operation when these controls are activated by the user. The multiple processing devices may be further configured to implement a VPD protocol that includes auxiliary commands to request and receive the current VPD system configuration e.g. pressure based or displacement based behavior defined for individual VPD sensors and to request and receive the real time raw pressure or displacement sensing data generated as the user puts varying pressure or displacement on a selected VPD control.

In one respect disclosed herein is an information handling system including variable pressure or displacement VPD circuitry that includes a first processing device configured to receive a sensor output signal from at least one VPD sensor that includes raw sensor data that is representative of the real time pressure or displacement being applied to the VPD sensor the first processing device being configured to process the raw sensor date of the received VPD sensor output signal according to VPD configuration parameters to produce at least one VPD circuitry output signal that is based on an identity and a real time level of pressure or displacement being applied to the VPD sensor and a second processing device that is configured as a host processing device to execute at least one application to exchange information and data with the first processing device using bi directional packet based communications that are not made available to or reported to an operating system OS executing on the host processing device. The second processing device may be configured to execute the at least one application to use the packet based communications to communicate VPD commands to the first processing device that request the first processing device to take one or more reporting or processing actions and to use the packet based communications to communicate VPD configuration instructions to the first processing device to control the manner in which the first processing device processes the raw sensor date of the received VPD sensor output signal. The first processing device may be configured to use the packet based communications to communicate the raw sensor data of the VPD sensor output signal to the application executing on the second processing device and to use the packet based communications to communicate current VPD configuration status information to the application executing on the second processing device.

In another respect disclosed herein is a method of operating an information handling system including receiving a sensor output signal in a first processing device of variable pressure or displacement VPD circuitry from at least one VPD sensor that includes raw sensor data that is representative of the real time pressure or displacement being applied to the VPD sensor and using the first processing device to process the raw sensor date of the received VPD sensor output signal according to VPD configuration parameters to produce at least one VPD circuitry output signal that is based on an identity and a real time level of pressure or displacement being applied to the VPD sensor. The method may also include using a second processing device that is configured as a host processing device to execute at least one application to exchange information and data with the first processing device using bi directional packet based communications that are not made available to or reported to an operating system OS executing on the host processing device use the packet based communications to communicate VPD commands to the first processing device that request the first processing device to take one or more reporting or processing actions and use the packet based communications to communicate VPD configuration instructions to the first processing device to control the manner in which the first processing device processes the raw sensor date of the received VPD sensor output signal. The method may also include using the first processing device to use the packet based communications to communicate the raw sensor data of the VPD sensor output signal to the application executing on the second processing device and communicate current VPD configuration status information to the application executing on the second processing device.

Still referring to VPD sensors and digital on off sensors e.g. keys of a keyboard input device along with other optional input devices e.g. such as mouse and or touchpad are also coupled to ICH chip to enable the user to interact with the information handling system. In this exemplary embodiment digital sensors are illustrated as coupled to provide a digital output signal from optional momentary on digital sensors to optional digital e.g. legacy keyboard controller KC which may in turn provide scan or key code signals corresponding to individual depressed digital on off sensors to an appropriate device driver e.g. PS2 keyboard device driver executing on CPU . In this regard KC may poll all the momentary on digital sensors e.g. in a matrix of digital keys and broadcast a scan or key code output corresponding to any pressed digital on off sensor to the operating system OS of information handling system . It will be understood that in one embodiment KC may be implemented by EC rather than by a separate microcontroller. Alternatively no digital keys and no KC may be present.

In the embodiment of VPD sensors are also coupled as shown to provide analog output signal s representative of the pressure or displacement applied to individual depressed VPD keys of key area to VPD circuitry which may include for example a VPD controller as described further herein or other suitable VPD configured processing device. VPD circuitry may in turn produce VPD circuitry output signals e.g. as respective pressure or displacement based key codes or other suitable output signals and provide these key codes to applications shown in e.g. through an appropriate device driver e.g. USB Human Interface Device HID driver executing on CPU or in any other suitable manner. As will be described further herein each of these pressure or displacement based key codes correspond to a particular combination of the key identity and real time specific pressure or displacement applied to individual depressed analog keys or other type of VPD sensor s . As further shown in each of host processing device and VPD circuitry e.g. VPD MCU is configured to implement packet based VPD protocol as described further herein for bi directional communication of VPD information and data e.g. VPD configuration profile information and or VPD commands from applications to VPD circuitry VPD raw data from VPD circuitry to applications etc.

It will be understood that the particular configuration of is exemplary only and that an information handling system may be configured with fewer additional or alternative components than those illustrated in e.g. including a network interface card wired and or wireless . It will also be understood that in other embodiments one or more other types of input devices e.g. mouse game controller etc. may additionally or alternatively be provided with VPD sensor s that are coupled to provide VPD analog output signals to VPD circuitry that is representative of the pressure or displacement applied to one or more individual depressed VPD sensor s.

The disclosed systems and methods may be implemented using pressure sensitive sensors such as variable conductance variable resistance variable capacitance variable displacement etc. sensors. One example of pressure sensitive sensors that may be employed are rubber dome keys e.g. with conductive half spheres or half domes located on the underside of the rubber domes in combination with a printed circuit board PCB or flexible PCB underneath it such that the conductive sphere s surface area contact increases with pressure and thus increases the measurable capacitance of that contact in relationship with a nearby charged trace. Pressure sensitive sensors may alternatively be variable resistance keys that utilize a sensor material that changes impedance when touched e.g. by pressure of a user s hand or finger. The disclosed systems and methods may also be implemented using displacement sensitive sensors such as sensor including capacitive sensing circuitry resistive sensing circuitry optical sensing circuitry electrical field E field or magnetic field H field change detection circuitry etc. In this regard circuitry of a variable displacement sensor may be configured to detect and measure downward and or upward key travel of a depressable sensor such as a key switch component and to provide variable displacement signals throughout the entire downward and upward travel range of the depressable key switch component.

Further information on example types of variable pressure sensors e.g. keys and associated circuitry digital key sensors and associated circuitry and methods and circuitry for sensing and processing signals from the same may be found in U.S. patent application Ser. No. 12 316 703 filed Dec. 16 2008 U.S. Publication No. 2010 0148999A1 U.S. patent application Ser. No. 12 802 468 filed Jun. 8 2010 U.S. Publication No. 2010 0321301A1 U.S. patent application Ser. No. 12 930 125 filed Dec. 29 2010 U.S. Publication No. 2011 0102326A1 U.S. patent application Ser. No. 12 930 118 filed Dec. 29 2010 U.S. Publication No. 2011 0095877A1 and U.S. patent application Ser. No. 13 232 707 filed Sep. 14 2011 U.S. Publication No. 2013 0067126 and U.S. patent application Ser. No. 14 182 647 filed Feb. 18 2014 each of which is incorporated herein by reference in its entirety for all purposes. Further information on example types of variable displacement sensors e.g. keys and associated circuitry may be found in U.S. patent application Ser. No. 14 013 724 filed Aug. 29 2013 which is also incorporated herein by reference in its entirety for all purposes.

As further depicted in VPD circuitry may be coupled to VPD sensor s that may be part of for example a keyboard device body game controller mouse etc. The VPD sensor s represent sensors that are detected as being depressed by a variable amount or with a variable amount of pressure or displacement. When an VPD sensor is depressed an analog signal indicating the force or extent to which it is depressed is provided to VPD circuitry . VPD circuitry may be provided in one exemplary embodiment as an integrated part of a keyboard device body game controller mouse etc. However one or more components and or processing tasks of VPD circuitry may alternatively be integrated or otherwise implemented within a microcontroller that is operating as a keyboard controller and or as part of a host system to which the keyboard is connected if desired. One or more of the components of VPD circuitry may also be implemented with external circuitry as well. Thus it will be understood that the components and or processing tasks of VPD circuitry may be implemented by any alternative configuration of one or more processing devices e.g. controller microcontroller processor microprocessor ASIC FPGA CPU etc. of an information handling system or a peripheral component thereof and alone or together with other types of information handling system processing tasks.

In the embodiment of VPD circuitry includes a pressure or displacement sensing block that receives an analog signal representative of the pressure or displacement being applied to each of VPD sensors and a key code look up table e.g. stored in non volatile memory associated with or otherwise accessible by VPD circuitry that is utilized to select and output a pressure or displacement based key code corresponding to the particular real time pressure or displacement being applied to each of VPD sensors to external devices such as host components of an information handling system through communication path . It will be understood that the particular embodiments illustrated herein are exemplary only and that the components and function of VPD circuitry may be implemented using any one or more circuitry components suitable for receiving analog signals representative of key pressure or displacement from VPD sensor s and for selecting and providing in real time key code s corresponding to the key pressure or displacement applied to each of VPD sensors .

In addition external devices may optionally communicate control and or other configuration information to the VPD circuitry through communication interface . Examples of possible information handling system components may be found described in U.S. patent application Ser. No. 12 586 676 filed Sep. 25 2009 which is incorporated herein by reference in its entirety.

It is noted that communication path may take a variety of forms. For example communication path may be a wired communication path or a wireless communication path as desired. With respect to personal computer systems such as desktop computers and laptop computers communication path may be for example via a Bluetooth interface if a wireless interface is desired and or a USB universal serial bus interface if a wired interface is desired. However it is again noted that any desired communication interface may be utilized. It is further noted that VPD circuitry may be implemented as a microcontroller e.g. a Texas Instruments MSP430F55xx family of USB enabled 16 bit ultra low power microcontrollers such as the MSP430F5508 available from Texas Instruments of Dallas Tex. that runs firmware stored on a memory device associated with the microcontroller. Any other type of suitable pressure or displacement sensing digital output circuitry may be employed including for example circuitry that uses RC discharge time to measure sensor capacitance as described in U.S. Pat. No. 3 936 674 which is incorporated herein by reference in its entirety.

It is also noted that the user configuration information including VPD configuration profile information transmitted using packet based VPDP communications across OUT communications may be optionally stored in random access memory RAM or other volatile or non volatile memory NVM storage that is associated with pressure or displacement sensing circuitry either internally or externally . Thus configurable VPD sensor control parameters may be stored for example on a RAM or NVM device in a keyboard game controller host system e.g. on a hard drive or other device and may provide a wide variety of configurable parameters that may be adjusted by a user and or application using VPD protocol e.g. through a VPD API as described further herein. It will be understood that single and or multiple different user configuration files and or multiple game or application configuration files may be stored allowing a user to select the applicable or desired keyboard configuration file depending on the game or application being used by the user and or depending upon the particular user using the keyboard at the time e.g. in a manner as described in U.S. patent application Ser. No. 12 316 703 filed Dec. 26 2008 which is incorporated herein by reference in its entirety.

Each separate VPD protocol module that is associated with hosted applications with or without VPD APIs and with VPD circuitry may include a VPDP listing of VPD commands and parameters together with their meanings e.g. such as described and illustrated herein in relation to packet formats of in order to enable packet based IN and OUT communications as described further herein. In this regard a VPDP listing e.g. such as a look up table may be loaded by host processing device with VPD APIs e.g. from system storage . A similar stored VPDP listing may be accessed by VPD circuitry on a NVM associated or otherwise accessible by VPD circuitry . In this embodiment each of processing device of VPD circuitry and the application s and or APIs executing on host processing device have access to the same VPD listing information to enable the bi directional packet based communications described herein.

In a further embodiment each user application may further be optionally configured upon installation on information handling system for automatic or user directed discovery of an underlying VPD hardware subsystem e.g. that includes VPD circuitry that is present on the information handling system. Upon such discovery host processing device may be configured to execute each user application to enable communication using VPD protocol with discovered VPD hardware subsystem components that include VPD circuitry . Once this communication is established each user application may then be capable of bi directional communication with VPD circuitry of the second processing device using VPD protocol in a manner as described further herein.

As shown each of multiple applications may be coupled to bi directionally communicate with VPD circuitry of hardware layer via VPD APIs and VPD protocol that may be present in a middleware layer as shown. VPD protocol communication paths between each application and the processing device of VPD circuitry may be across any suitable type of communication interface path e.g. such as USB etc. As shown bi directional communication between each of application APIs and VPD circuitry may include OUT communications e.g. as packet based reports A and IN communications e.g. as packet based reports B.

For purposes of illustration only OUT communications path A and IN communications path B are shown in as extending through OS layer . However it will be understood that OUT communications path A and IN communications path B are not available or reported to OS layer but rather are direct communication paths extending between each separate application and the processing device of VPD circuitry .

In one exemplary embodiment one or more of APIs may include a custom USB interface IN endpoint that may be selectively used as an alternative to OS HID driver for receiving USB key codes from VPD sensor s . In this regard a given API may be configured as a USB interface capable of understanding customized key codes provided by VPD circuitry that are not understood by OS HID driver and or capable of generating unique key codes e.g. such as a macro sequence including a combination of key codes to provide to one or more hosted applications in response to receipt of given key codes or other sensor information provided directly to the given API from VPD circuitry . In one exemplary embodiment a given loaded hosted application may create its own a customized API that may in turn advantageously receive and understand unique key code or other sensor information from VPD circuitry and or that may react to received key code or other sensor information in a unique manner e.g. as specified by a third party developer of the given hosted application so as to create a unique user application behavior that is not possible with OS HID driver . Further information on such an embodiment may be found described in relation to herein.

Also shown present in is optional Windows or other OS in box USB HID driver that may be executed in OS layer by host processing device to receive VPD pressure or displacement based key codes A from VPD MCU and to in turn provide VPD key codes B as VPD keyboard events directly or indirectly to each of applications . In this regard it will be understood that additional middleware components e.g. such as a VPD macro selector component may be optionally provided between OS HID driver and each application to receive VPD key codes B from OS HID driver and to provide modified VPD key codes based thereon to applications e.g. which may include VPD enabled and non VPD enabled applications . One example of a VPD key processing system architecture including various application layer middleware layer OS layer and hardware layer components with which the disclosed systems and methods may be implemented is described in U.S. patent application Ser. No. 13 232 707 filed Sep. 14 2011 U.S. Publication No. 2013 0067126 which is incorporated herein by reference in its entirety for all purposes.

In one exemplary embodiment the commands and parameters of the illustrated VPD packet formats may be selected and inserted into individual packets based on configuration information entered by a user e.g. using a graphical user interface GUI associated with a given application that is displayed on display of system . For example a user may use such a GUI or other suitable I O interface to create user configuration profile for a given sensor by entering a desired number of pressure or displacement ranges as well as the starting and ending pressure or displacement values for each pressure or displacement range of the given sensor and the desired behavioral response for each such pressure range. A VPDP module associated with the application with a corresponding API when needed may then access a VPDP listing of VPD commands and parameters and select the appropriate commands and parameters to create one or more corresponding OUT VPDP protocol packets for communication to VPDP circuitry across OUT communications path A to create a corresponding user profile that is stored and utilized by VPD circuitry .

It will be understood that the particular illustrated packet formats are exemplary only and that different packet formats may be employed in other embodiments e.g. having greater or fewer number of bytes and or having different defined parameters or defined order of parameters . Moreover the particular illustrated selectable VPD profile configuration modes VPD commands and transmitted VPD raw data types of the packet formats illustrated are exemplary only it being understood that any other type s of profile configuration information commands and or raw data may be additionally or alternatively communicated across bi directional communication paths using one or more VPD protocol packet formats having other selected byte lengths and or VPD parameters.

In particular each of VPD protocol packet formats and include parameters that may be used to assign individual VPD sensors a specific corresponding VPD mode of operation e.g. behavior . In one exemplary embodiment this mode assignment may become persistent until another VPD configuration profile is assigned by transmitting another VPD protocol packet that corresponds to another mode of operation. In this example VPD protocol packet formats and correspond to the following three respective VPD modes Normal Mode Rapid Fire Mode and Dual Function Mode. Using the disclosed VPD protocol any VPD sensor may be individually assigned to any one of these available modes of this embodiment by transmitting a corresponding packet format across OUT communication path A to processing device of VPD circuitry . Moreover users and or applications may be allowed to reconfigure in real time the behavior associated with each VPD sensor as desired to achieve a personal gratifying experience with applications of interest by transmitting a different packet format across OUT communication path A that corresponds to a new operation mode for a given VPD sensor . It will be understood that the illustrated particular VPD modes corresponding to packet formats and are exemplary only and that fewer additional and or alternative VPD modes may be made available in other exemplary embodiments by providing other selectable VPD protocol packet formats.

Still referring to byte may contain an optional bitwise modifier field that may be selected to specify other behavior e.g. such as dual function mode described below that may be initiated by simultaneously pressing a modifier key e.g. such as one or more of Shift Ctrl Alt etc. keys or other type of sensor identified in byte e.g. by USB usage code from the HID Keyboard Page table together with the sensor identified in byte . Byte may be given value of 0 where no such sensor modifier option is desired. A sensor rate repetition rate e.g. repetition rate of the key code produced by VPD circuitry may be specified in byte for the pressure or displacement range specified in byte . In byte the next ascending pressure or displacement range integer may be identified for the sensor identified in byte and the selected starting and ending pressure or displacement levels for the range identified in byte may be provided in bytes to and so on in a manner similar to the previous range so as to repeat the packet pattern as represented by the dots in the packet bytes to . The eight byte packet format may repeat a variable number of times in similar manner until parameters for all pressure or displacement ranges corresponding to the number of ranges specified in byte have been entered. A similar VPD packet format may be repeated to assign rapid fire mode behavior to as many other sensors as desired by identifying each different sensor in byte after a corresponding 0x02 of the next byte .

As an example of rapid fire mode behavior that may be assigned by an application using packet format a given sensor e.g. key or button may be assigned a USB Usage key code 04 ASCII character A in byte and selected to repeat 10 times per second per rate specified in byte for pressure sensing range 1 of byte i.e. as by values in bytes and repeat at 20 times per second for pressure sensing range 2 i.e. as defined by values in bytes . Upon receipt of the information of a given rapid fire OUT report packet format communicated across communication path A from a given application the processing device of VPD circuitry is configured to respond by implementing the rapid fire behavior specified by packet format . For example in one exemplary embodiment all repeating USB key codes may be output from VPD circuitry using a standard keyboard HID interface to an OS HID stack executing on host processing device for further processing.

Still referring to dual function mode packet format of byte contains an optional bitwise modifier field that may be selected to specify other behavior that will be initiated by simultaneously pressing a specified modifier key e.g. such as one or more of Shift Ctrl Alt etc. keys or other type of sensor identified in byte e.g. by USB usage code from the HID Keyboard Page table together with the key or other type of identified in byte . In byte the next ascending pressure or displacement range integer may be identified for the sensor identified in byte and the selected starting and ending pressure or displacement levels for the range identified in byte may be provided in bytes to and so on in a manner similar to the previous range. As before the eight byte packet format may repeat a variable number of times in similar manner until parameters for all pressure or displacement ranges corresponding to the number of ranges specified in byte have been entered. A similar VPD packet format may be repeated to assign rapid fire mode behavior to as many other sensors as desired by identifying each different sensor in byte after a corresponding 0x03 of the next byte .

As an example of dual function mode behavior that may be assigned by an application using packet format a given sensor identified in byte may be assigned a USB Usage key code 04 ASCII A CNTRL ALT in bytes and for sensed pressure or displacement range 1 of byte i.e. defined by values in bytes and also assigned a USB Usage key code 29 ASCII Z ALT in bytes for sensed pressure of displacement range 2 of byte i.e. defined by values in byte and the following sequential byte not shown in . Thus when a user depresses the sensor identified by byte within the sensed pressure or displacement zone the processing device of VPD circuitry will output the combination CNTRL ALT A and when a user depresses the sensor identified by byte within the sensed pressure or displacement zone the processing device of VPD circuitry will output ALT Z. Once again in this mode all USB key codes may be output from VPD circuitry using a standard keyboard HID interface to an OS HID stack executing on host processing device for further processing.

In one exemplary embodiment an available VPD sensor may be alternately assigned a reserved USB usage key code or other type of sensor identifier in byte of OUT report packet format for the purpose of triggering particular user or user defined macros configured within a given application which may be for example a multi key sequence to be triggered upon particular sensor pressure level sensed. In such an exemplary embodiment a processing device of VPD circuitry may be configured to implement a vendor defined or custom HID interface that is only accessible to applications e.g. and in one embodiment not accessible to any OS executing on host processing device of an information handling system . In one particular implementation the assigned reserved USB Usage key code s may be output by this custom interface to one or more receiving applications which in turn launch the macro s. In another exemplary embodiment the assigned reserved USB Usage key code s may be output by this custom interface to a control center application that itself may look up any macros corresponding to the so transmitted reserved USB Usage key code s and launch the macro s to other applications e.g. via an API communication path from the control center application to a user application s .

Alternatively one or more of bytes may be used to specify a subset of one or more sensors for control by VPD circuitry and another different subset of one or more sensors for control by keyboard controller embedded controller BIOS.

It will be understood that the particular packet formats and modes of are exemplary only and that other packet configurations and modes may be alternatively employed and implemented using the disclosed systems and methods. For example packets of greater or lesser lengths and or packets that include different command and or parameter values in the various bytes of the packet formats may be employed as required or desired to fit the characteristics of a given VPD system implementation. Moreover it also possible that additional or alternative modes and or parameters may be communicated using the IN and OUT communications A and B described herein.

It will also be understood that one or more of the tasks functions or methodologies described herein e.g. including those described herein for components etc. may be implemented for example as software firmware or other computer program of instructions embodied in a non transitory tangible computer readable medium that is executed by a CPU controller microcontroller processor microprocessor FPGA ASIC or other suitable processing device or combination of such processing devices.

For purposes of this disclosure an information handling system may include any instrumentality or aggregate of instrumentalities operable to compute classify process transmit receive retrieve originate switch store display manifest detect record reproduce handle or utilize any form of information intelligence or data for business scientific control or other purposes. For example an information handling system may be a personal computer a server computer system a network storage device or any other suitable device and may vary in size shape performance functionality and price. The information handling system may include random access memory RAM one or more processing resources such as a central processing unit CPU or hardware or software control logic ROM and or other types of nonvolatile memory. Additional components of the information handling system may include one or more disk drives one or more network ports for communicating with external devices as well as various input and output I O devices such as a keyboard a mouse and a video display. The information handling system may also include one or more buses operable to transmit communications between the various hardware components.

While the invention may be adaptable to various modifications and alternative forms specific embodiments have been shown by way of example and described herein. However it should be understood that the invention is not intended to be limited to the particular forms disclosed. Rather the invention is to cover all modifications equivalents and alternatives falling within the spirit and scope of the invention as defined by the appended claims. Moreover the different aspects of the disclosed systems and methods may be utilized in various combinations and or independently. Thus the invention is not limited to only those combinations shown herein but rather may include other combinations.

